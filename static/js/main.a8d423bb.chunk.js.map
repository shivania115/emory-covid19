{"version":3,"sources":["components/AppBar.js","components/MapProvider.js","utils.js","components/useGeographies.js","components/Geographies.js","components/Geography.js","components/ComposableMap.js","components/Marker.js","components/Annotation.js","components/Notes.js","components/USMap.js","components/StateMap.js","components/CountyReport.js","components/MapState.js","components/AboutUs.js","components/MediaHub.js","components/DataSources.js","components/Privacy.js","components/Blog.js","components/Podcast.js","components/App.js","index.js"],"names":["AppBar","props","history","useHistory","Menu","borderless","inverted","fixed","style","backgroundImage","backgroundSize","fontSize","Container","width","Item","as","header","onClick","push","fontWeight","color","lineHeight","active","menu","content","name","position","Image","size","src","geoPath","d3Geo","projections","MapContext","createContext","MapProvider","height","offsetX","offsetY","projection","projectionConfig","restProps","center","cx","cy","rotate","rx","ry","rz","parallels","p1","p2","s","scale","projMemo","useMemo","scl","proj","translate","forEach","d","makeProjection","useCallback","value","path","Provider","getFeatures","geographies","parseGeographies","Array","isArray","feats","feature","objects","Object","keys","features","useGeographies","geography","useContext","useState","setGeographies","useEffect","url","window","fetch","then","res","ok","Error","statusText","json","catch","error","console","log","geos","map","i","rsmKey","svgPath","prepareFeatures","Geographies","children","className","length","memo","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onFocus","onBlur","isPressed","setPressed","isFocused","setFocus","tabIndex","evt","ComposableMap","Marker","coordinates","x","y","transform","Annotation","subject","connectorProps","dx","dy","curve","connectorPath","curvature","curveX","curveY","createConnectorPath","fill","stroke","Notes","state","paddingTop","Divider","Grid","paddingBottom","Row","columns","Column","href","Header","Subheader","hidden","left","paddingRight","Content","List","paddingLeft","right","data-size","data-text","data-url","data-show-count","target","rel","async","charSet","bottom","data-href","data-action","text","alert","numberWithCommas","toString","pattern","test","replace","colorPalette","MapLabels","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","geo","centroid","geoCentroid","cur","stateLabels","find","val","id","key","indexOf","textAnchor","alignmentBaseline","USMap","stateName","setStateName","fips","setFips","setTooltipContent","dataFltrd","setDataFltrd","dataStateFltrd","setDataStateFltrd","dataState","setDataState","data","setData","date","setDate","setStateLabels","colorScale","setColorScale","legendMax","setLegendMax","legendMin","setLegendMin","legendSplit","setLegendSplit","metric","setMetric","metricOptions","setMetricOptions","metricName","setMetricName","varMap","setVarMap","_","filter","variable","group","k","Population","black","cs","scaleQuantile","domain","range","scaleMap","each","max","min","toFixed","split","quantiles","substring","c","l","marginTop","minWidth","Breadcrumb","Section","padding","Dropdown","background","theme","top","borderTop","borderLeft","borderRight","borderBottom","borderRadius","minHeight","pointing","search","selection","options","onChange","e","splitpoint","strokeWidth","data-tip","stateFips","configMatched","configs","orientation","labels","fontFamily","sortKey","datum","fillOpacity","axisLabel","tickLabels","dependentAxis","label","tickCount","tickFormat","Math","round","Loader","inline","getMax","arr","prop","parseInt","getMaxRange","monthNames","BarChart","VictoryTheme","material","domainPadding","ylog","minDomain","containerComponent","responsive","title","ticks","axis","grid","horizontal","barRatio","parseFloat","var","countyFips","labelComponent","StateMap","useParams","config","setConfig","setCountyFips","countyName","setCountyName","barCountyName","setBarCountyName","dataTS","setDataTS","dataRD","setDataRD","caseRate","setCaseRate","percentChangeCases","setPercentChangeCases","mortality","setMortality","percentChangeMortality","setPercentChangeMortality","setPositive","pctPositive","setPctPositive","pctBedsOccupied","setPctBedsOccupied","setTime","index","setIndex","indexP","setIndexP","delayHandler","setDelayHandler","t","covidMetric","setCovidMetric","setCountyMap","countyOption","setCountyOption","countyMost","covidmortality7dayfig","jstime","percentChangeCase","percentBedsOccupied","positive","percentPositive","v","percent14dayDailyCases","caseRateMean","percent14dayDailyDeaths","mortalityMean","Date","getMonth","getDate","fips2county","match","takeRight","link","stateOptions","location","maxDomain","parent","marginleft","tickValues","toLocaleDateString","properties","COUNTYFP","setTimeout","clearTimeout","flyoutStyle","caserate7dayfig","centerOffset","ScatterChart","showLegend","cornerRadius","rescaleX","CountyReport","tooltipContent","cases","deaths","cfr","countyMetric","setCountyMetric","stateMetric","setStateMetric","countyCasesOutcome","setCountyCasesOutcome","countyDeathsOutcome","setCountyDeathsOutcome","stateCasesOutcome","setStateCasesOutcome","stateDeathsOutcome","setStateDeathsOutcome","nationCasesOutcome","setNationCasesOutcome","nationDeathsOutcome","setNationDeathsOutcome","countyCases","stateCases","nationCases","countyDeaths","stateDeaths","nationDeaths","textAlign","Table","celled","singleLine","HeaderCell","colSpan","toLocaleString","centered","marginLeft","xlog","striped","compact","basic","Body","includes","Cell","isNaN","colorPalette2","MapState","setStateFips","measureA","setMeasureA","measureB","setMeasureB","colorScaleA","setColorScaleA","colorScaleB","setColorScaleB","measureOptionsA","setMeasureOptionsA","measureOptionsB","setMeasureOptionsB","legendSplitA","setLegendSplitA","legendSplitB","setLegendSplitB","legendMaxA","setLegendMaxA","legendMaxB","setLegendMaxB","legendMinA","setLegendMinA","legendMinB","setLegendMinB","setName","coldata","splitA","maxA","minA","splitB","maxB","minB","fluid","labeled","AboutUs","row","bulleted","DataSources","rows","frameborder","allow","allowfullscreen","blogTitle","lineSpacing","podcastTitle","scrolling","App","to","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a8d423bb.chunk.js","sourcesContent":["import React from \"react\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport { Container, Menu, Image } from 'semantic-ui-react';\n\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function AppBar(props) {\n\n  const history = useHistory();\n\n  return (\n    <ErrorBoundary>\n      <Menu borderless inverted fixed='top'\n        style={{backgroundImage: 'url(\"/Emory_COVID_header_LightBlue.jpg\")',\n                backgroundSize: 'cover',\n                fontSize: \"14pt\"}}>\n        <Container style={{width: '1305px'}}>\n          <Menu.Item as='a' header onClick={() => history.push('/')}>\n            <span style={{fontWeight: 400, color: '#fff', lineHeight: 1.3}}>\n           COVID-19 Health Equity<br/>Interactive Dashboard\n           </span>\n          </Menu.Item>\n          <Menu.Item \n            active={props.menu==='countyReport'} \n            content='Home'\n            onClick={() => history.push('/')}\n            name='countyReport'/>\n\n          <Menu.Item \n            active={props.menu==='selectState'} \n            onClick={() => history.push('/_nation')}\n            name='selectState'>\n            Find State\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='mapState'} \n            onClick={() => history.push('/map-state')}\n            name='mapState'>\n            Map State\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='mediaHub'} \n            onClick={() => history.push('/media-hub')}\n            name='mediaHub'>\n            Media Hub\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='dataSources'} \n            onClick={() => history.push('/data-sources')}\n            name='dataSources'>\n            Data Sources &<br/>Interpretation\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='aboutUs'} \n            content='About'\n            onClick={() => history.push('/about-team')}\n            name='aboutUs'/>        \n\n          <Menu.Menu position='right'>\n            <Menu.Item as='a' header>\n              <Image size='small' src='/logo_white.png' />\n            </Menu.Item>\n          </Menu.Menu>\n        </Container>\n      </Menu>\n    </ErrorBoundary>\n  );\n}\n\n\n\n","\nimport React, {\n  createContext,\n  useMemo,\n  useCallback,\n} from \"react\"\nimport PropTypes from \"prop-types\"\nimport * as d3Geo from \"d3-geo\"\n\nconst { geoPath, ...projections } = d3Geo\n\nconst MapContext = createContext()\n\nconst makeProjection = ({\n  projectionConfig = {},\n  projection = \"geoEqualEarth\",\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0\n}) => {\n  const isFunc = typeof projection === \"function\"\n\n  if (isFunc) return projection\n\n  const scl = projectionConfig.scale || null;\n\n  let proj = projections[projection]().translate([width/2 + (offsetX)*scl/1000 ,\n                                              height/2 + (offsetY)*scl/1000]);\n\n  const supported = [\n    proj.center ? \"center\" : null,\n    proj.rotate ? \"rotate\" : null,\n    proj.scale ? \"scale\" : null,\n    proj.parallels ? \"parallels\" : null,\n  ]\n\n  supported.forEach(d => {\n    if (!d) return\n    proj = proj[d](projectionConfig[d] || proj[d]())\n  })\n\n  return proj\n}\n\nconst MapProvider = ({\n  width,\n  height,\n  offsetX,\n  offsetY,\n  projection,\n  projectionConfig,\n  ...restProps\n}) => {\n  const [cx, cy] = projectionConfig.center || []\n  const [rx, ry, rz] = projectionConfig.rotate || []\n  const [p1, p2] = projectionConfig.parallels || []\n  const s = projectionConfig.scale || null\n\n  const projMemo = useMemo(() => {\n    return makeProjection({\n      projectionConfig: {\n        center: (cx || cx === 0) || (cy || cy === 0) ? [cx, cy] : null,\n        rotate: (rx || rx === 0) || (ry || ry === 0) ? [rx, ry, rz] : null,\n        parallels: (p1 || p1 === 0) || (p2 || p2 === 0) ? [p1, p2] : null,\n        scale: s,\n      },\n      projection,\n      width,\n      height,\n      offsetX,\n      offsetY,\n    })\n  }, [ width, height, projection, cx, cy, rx, ry, rz, p1, p2, s, offsetX, offsetY ])\n\n  const proj = useCallback(projMemo, [projMemo])\n\n  const value = useMemo(() => {\n    return {\n      width,\n      height,\n      projection: proj,\n      path: geoPath().projection(proj),\n    }\n  }, [ width, height, proj ])\n\n  return (<MapContext.Provider value={value} {...restProps} />)\n}\n\nMapProvider.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  offsetX: PropTypes.number,\n  offsetY: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n}\n\nexport { MapProvider, MapContext }\n","\nimport { feature } from \"topojson-client\"\n\nexport function getCoords(w, h, t) {\n  const xOffset = (w * t.k - w) / 2\n  const yOffset = (h * t.k - h) / 2\n  return [w / 2 - (xOffset + t.x) / t.k, h / 2 - (yOffset + t.y) / t.k]\n}\n\nexport function fetchGeographies(url) {\n  return fetch(url)\n    .then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText)\n      }\n      return res.json()\n    }).catch(error => {\n      console.log(\"There was a problem when fetching the data: \", error)\n    })\n}\n\nexport function getFeatures(geographies, parseGeographies) {\n  if (Array.isArray(geographies)) return parseGeographies ? parseGeographies(geographies) : geographies\n  const feats = feature(\n    geographies,\n    geographies.objects[Object.keys(geographies.objects)[0]]\n  ).features\n  return parseGeographies ? parseGeographies(feats) : feats\n}\n\nexport function prepareFeatures(geographies, path) {\n  return geographies ? geographies.map((d, i) => {\n    return {\n      ...d,\n      rsmKey: `geo-${i}`,\n      svgPath: path(d),\n    }\n  }) : []\n}\n\nexport function createConnectorPath(dx = 30, dy = 30, curve = 0.5) {\n  const curvature = Array.isArray(curve) ? curve : [curve, curve]\n  const curveX = dx / 2 * curvature[0]\n  const curveY = dy / 2 * curvature[1]\n  return `M${0},${0} Q${-dx / 2 - curveX},${-dy / 2 + curveY} ${-dx},${-dy}`\n}\n\nexport function isString(geo) { return typeof geo === \"string\" }\n","\nimport { useMemo, useState, useEffect, useContext } from \"react\"\nimport { MapContext } from \"./MapProvider\"\n\nimport { fetchGeographies, getFeatures, prepareFeatures, isString } from \"../utils\"\n\nexport default function useGeographies({ geography, parseGeographies }) {\n  const { path } = useContext(MapContext)\n  const [geographies, setGeographies] = useState()\n\n  useEffect(() => {\n    if (typeof window === `undefined`) return\n\n    if (isString(geography)) {\n      fetchGeographies(geography).then(geos => {\n        if (geos) setGeographies(getFeatures(geos, parseGeographies))\n      })\n    } else {\n      setGeographies(getFeatures(geography, parseGeographies))\n    }\n  }, [geography, parseGeographies])\n\n  const output = useMemo(() => {\n    return prepareFeatures(geographies, path)\n  }, [geographies, path])\n\n  return { geographies: output }\n}\n","\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\nimport useGeographies from \"./useGeographies\"\n\nconst Geographies = ({\n  geography,\n  children,\n  parseGeographies,\n  className = \"\",\n  ...restProps\n}) => {\n  const { path, projection } = useContext(MapContext)\n  const { geographies } = useGeographies({ geography, parseGeographies })\n\n  return (\n    <g className={`rsm-geographies ${className}`} {...restProps}>\n      {\n        geographies && geographies.length > 0 &&\n        children({ geographies, path, projection })\n      }\n    </g>\n  )\n}\n\nGeographies.propTypes = {\n  geography: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  children: PropTypes.func,\n  parseGeographies: PropTypes.func,\n  className: PropTypes.string,\n}\n\nexport default Geographies\n","\nimport React, { useState, memo } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Geography = ({\n  geography,\n  onMouseEnter,\n  onMouseLeave,\n  onMouseDown,\n  onMouseUp,\n  onFocus,\n  onBlur,\n  style = {},\n  className = \"\",\n  ...restProps\n}) => {\n  const [isPressed, setPressed] = useState(false)\n  const [isFocused, setFocus] = useState(false)\n\n  function handleMouseEnter(evt) {\n    setFocus(true)\n    if (onMouseEnter) onMouseEnter(evt)\n  }\n\n  function handleMouseLeave(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onMouseLeave) onMouseLeave(evt)\n  }\n\n  function handleFocus(evt) {\n    setFocus(true)\n    if (onFocus) onFocus(evt)\n  }\n\n  function handleBlur(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onBlur) onBlur(evt)\n  }\n\n  function handleMouseDown(evt) {\n    setPressed(true)\n    if (onMouseDown) onMouseDown(evt)\n  }\n\n  function handleMouseUp(evt) {\n    setPressed(false)\n    if (onMouseUp) onMouseUp(evt)\n  }\n\n  return (\n    <path\n      tabIndex=\"0\"\n      className={`rsm-geography ${className}`}\n      d={geography.svgPath}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      style={style[isPressed || isFocused ? (isPressed ? \"pressed\" : \"hover\") : \"default\"]}\n      {...restProps}\n    />\n  )\n}\n\nGeography.propTypes = {\n  geography: PropTypes.object,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default memo(Geography)\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapProvider } from \"./MapProvider\"\n\nconst ComposableMap = ({\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0,\n  projection = \"geoEqualEarth\",\n  projectionConfig = {},\n  className = \"\",\n  ...restProps\n}) => {\n  return (\n    <MapProvider\n      width={width}\n      height={height}\n      offsetX={offsetX}\n      offsetY={offsetY}\n      projection={projection}\n      projectionConfig={projectionConfig}\n    >\n      <svg\n        width={width}\n        height={height}\n        className={`rsm-svg ${className}`}\n        {...restProps}\n      />\n    </MapProvider>\n  )\n}\n\nComposableMap.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default ComposableMap\n","\nimport React, { useContext, useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\n\nconst Marker = ({\n  coordinates,\n  children,\n  onMouseEnter,\n  onMouseLeave,\n  onMouseDown,\n  onMouseUp,\n  onFocus,\n  onBlur,\n  style = {},\n  className = \"\",\n  ...restProps\n}) => {\n  const { projection } = useContext(MapContext)\n  const [isPressed, setPressed] = useState(false)\n  const [isFocused, setFocus] = useState(false)\n\n  const [x, y] = projection(coordinates)\n\n  function handleMouseEnter(evt) {\n    setFocus(true)\n    if (onMouseEnter) onMouseEnter(evt)\n  }\n\n  function handleMouseLeave(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onMouseLeave) onMouseLeave(evt)\n  }\n\n  function handleFocus(evt) {\n    setFocus(true)\n    if (onFocus) onFocus(evt)\n  }\n\n  function handleBlur(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onBlur) onBlur(evt)\n  }\n\n  function handleMouseDown(evt) {\n    setPressed(true)\n    if (onMouseDown) onMouseDown(evt)\n  }\n\n  function handleMouseUp(evt) {\n    setPressed(false)\n    if (onMouseUp) onMouseUp(evt)\n  }\n\n  return (\n    <g\n      transform={`translate(${x}, ${y})`}\n      className={`rsm-marker ${className}`}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      style={style[isPressed || isFocused ? (isPressed ? \"pressed\" : \"hover\") : \"default\"]}\n      {...restProps}\n    >\n      {children}\n    </g>\n  )\n}\n\nMarker.propTypes = {\n  coordinates: PropTypes.array,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default Marker\n","\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\nimport { createConnectorPath } from \"../utils\"\n\nconst Annotation = ({\n  subject,\n  children,\n  connectorProps,\n  dx = 30,\n  dy = 30,\n  curve = 0,\n  className = \"\",\n  ...restProps\n}) => {\n  const { projection } = useContext(MapContext)\n  const [x, y] = projection(subject)\n  const connectorPath = createConnectorPath(dx, dy, curve)\n\n  return (\n    <g\n      transform={`translate(${x + dx}, ${y + dy})`}\n      className={`rsm-annotation ${className}`}\n      {...restProps}\n    >\n      <path d={connectorPath} fill=\"transparent\" stroke=\"#000\" {...connectorProps} />\n      {children}\n    </g>\n  )\n}\n\nAnnotation.propTypes = {\n  subject: PropTypes.array,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  dx: PropTypes.number,\n  dy: PropTypes.number,\n  curve: PropTypes.number,\n  connectorProps: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default Annotation\n","import React, {useState } from 'react'\nimport { Header, Grid, List, Divider, Image } from 'semantic-ui-react'\nimport ReactDOM from 'react-dom';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nfunction myFunction() {\n  alert('Link is copied to clipboard!');\n  \n}\n\nexport default function Notes(props){\n\n\n  const [state, setState] = useState(\"https://covid19.emory.edu/\");\n \n  return (\n\n  \t\n\n    <div style={{paddingTop: '2em', fontWeight: 300}}>\n    <Divider/>\n\n            <Grid style = {{paddingTop: 30, paddingBottom: 30}}>\n                <Grid.Row columns ={4}>\n                  <Grid.Column>\n                    <Image width='300' height='192' href = '' style = {{stroke:  \"#000000\"}} src='/HomeIcons/Emory_Icons_NationalReport_v1.jpg' /> \n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> National Report </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}><br/>Coming soon...</text>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/_nation' src='/HomeIcons/Emory_Icons_SelectState_v1.jpg' />            \n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Find State & County </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}> <br/>Click on icon to see how COVID-19 is impacting your state.</text>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/map-state' src='/HomeIcons/Emory_Icons_MapState_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Map State </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}> <br/>Click on icon to visualize state-wide outcomes and characteristics.</text>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/data-sources' src='/HomeIcons/Emory_Icons_DataSources_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Sources & Interpretation </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}> <br/>Click on icon for a complete list of measures' definitions and sources.</text>\n\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns ={4} style = {{paddingTop: 30}}>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/about-team' src='/HomeIcons/Emory_Icons_AboutUs_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> About This Dashboard </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}> <br/>Click on icon to learn about the goal of the dashboard and its team.</text>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub' src='/HomeIcons/Emory_Icons_MediaHub_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Media Hub </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}> <br/>Click on icon for the latest video, podcast, and blog on COVID-19.</text>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub/blog/Will_SARS-CoV-2_beat_the_Power_Five_Conferences' src='/HomeIcons/Emory_Icons_LatestBlog_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Latest Blog </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}> <br/>Can a team sport like football co-exist with COVID-19? Click to read.</text>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub/podcast/Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes' src='/HomeIcons/Emory_Icons_LatestVideo_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Latest Podcast </Header.Subheader>\n                    <text style = {{fontSize: \"14pt\"}}> <br/> Dr. Carlos Del Rio speaks on COVID-19 health equity and the next steps.</text>\n\n                  </Grid.Column>\n                </Grid.Row>\n            </Grid>\n    <Divider/>\n    <Grid style={{width :\"1305px\"}}>\n      <Grid.Row>\n        <Grid.Column style={{fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n          Early data about COVID-19 suggests that communities are affected very differently due to social determinants of health like population density, poverty, residential segregation, underlying chronic health conditions, and availability of medical services. \n          In order to predict how the epidemic will continue to unfold and prepare for the future, it is critical to understand differences in underlying risk factors. \n          There is no one-size-fits all approach to combat the epidemic, but accurate and meaningful data is a key component of a robust public health response that is informed by contextual factors and prioritizes health equity.\n          <br/><br/>\n          The COVID-19 Health Equity Dashboard (<a style ={{color: \"#397AB9\"}} href=\"COVID19.emory.edu\"> COVID19.emory.edu</a>) seeks to fill the gaps in county-level data about the virus and underlying social determinants of health. \n          Our goal is to facilitate easy comparisons of counties with respect to COVID-19 outcomes and social determinants. \n          We hope this becomes a valuable resource for and critical component of tailored public health responses to COVID-19 across the wide range of environments that Americans inhabit.\n\n        </Grid.Column>\n      </Grid.Row>\n      <Divider hidden/>\n      <Grid.Row columns={3} >\n        <Grid.Column style={{fontSize: \"14pt\"}}>          \n          <Image size='medium' src='/logo.png' />\n          &copy; 2020 Emory University. All rights reserved.\n          <br/>\n          <a style ={{color: \"#397AB9\"}} href=\"/privacy\"> Privacy Statement</a> \n\n        </Grid.Column>\n        <Grid.Column style={{ left: 0, fontSize: \"14pt\", paddingRight: 0, width: \"500px\"}}>          \n          <Header.Content style={{width: \"500px\", fontSize: \"14pt\"}}>\n            This <a style ={{color: \"#397AB9\"}} href=\"COVID19.emory.edu\"> COVID-19 Health Equity Dashboard </a> is created using\n          </Header.Content>\n            <List as='ol'>\n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://www.react-simple-maps.io/\">React Simple Maps</a> by <a style ={{color: \"#397AB9\"}} href=\"https://www.zcreativelabs.com/\">z creative labs</a></List.Item>\n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/open-source/victory/\">Victory</a> by <a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/\">Formidable</a></List.Item>\n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React\">Semantic UI React</a> by <a style ={{color: \"#397AB9\"}} href=\"https://github.com/levithomason\">@levithomason</a> and an amazing community of <a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React/graphs/contributors\">contributors</a></List.Item> \n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/facebook/create-react-app\">Create React App</a> by <a style ={{color: \"#397AB9\"}} href=\"https://about.fb.com/company-info/\">Facebook</a></List.Item> \n            </List>\n          \n\n        </Grid.Column>\n\n        <Grid.Column style={{paddingLeft: 0, width: 300}}>\n          <Grid>\n  \t        \t<Grid.Row style={{fontSize: \"14pt\", paddingBottom: 0, right: -240}}> \n  \t            \tShare This Dashboard \n  \t\t\t\t    </Grid.Row>\n  \t\t\t\t  <Grid.Row columns = {15} style ={{ paddingTop: 5}}>\n    \t\t\t\t  <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n    \t            \t<a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-size=\"large\" data-text=\"Check out the Emory COVID-19 Health Equity Interactive Dashboard! \" data-url=\"https://covid19.emory.edu/\" data-show-count=\"false\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"24px\" src='/Twitter_Logo_Blue.png' /> </a><script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script>\n    \t\t\t  \t</Grid.Column>\n    \t\t\t  \t<Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -309, bottom: -5}}>\n    \t            \t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fcovid19.emory.edu%2F&amp;src=sdkpreparse\" data-href=\"https://covid19.emory.edu/\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"14px\" src='/f_logo_RGB-Blue_512.png' /></a>\n    \t\t\t  \t</Grid.Column>\n    \t\t\t  \t<Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n    \t            \t<a href=\"https://web.whatsapp.com/send?text= Check out the Emory COVID-19 Health Equity Interactive Dashboard! https://covid19.emory.edu/\" data-action=\"share/whatsapp/share\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"22px\" src='/WhatsApp_Logo_1.png' /></a>\n    \t\t\t  \t</Grid.Column>\n    \t\t\t\t  <Grid.Column style ={{paddingLeft: 9, paddingRight: 0, paddingTop: 4, right: -300}}>\n    \t\t\t\t      <div>\n     \n                  <CopyToClipboard text={state}>\n                    <img onClick={()=>myFunction()} src='/copy_icon.png' style={{height: \"13px\", width: \"13px\" }}/>\n                  </CopyToClipboard>\n                  \n                  </div>    \t\t\t\t\t\t\t\t\n    \t\t\t\t  </Grid.Column>\n  \t\t\t  \t</Grid.Row>\n\t\t  \t  </Grid>\n\t\t  \t\n       \t  \n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n\n\n    </div>);\n}\n","import React, { useEffect, useState } from 'react'\nimport { Container, Grid, Dropdown, Breadcrumb, Header, List, Loader, Divider, Image } from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport { geoCentroid } from \"d3-geo\";\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport Marker from './Marker';\nimport Annotation from './Annotation';\nimport ReactTooltip from \"react-tooltip\";\nimport { VictoryChart, \n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  VictoryLegend,\n  VictoryLine,  \n  VictoryLabel, \n  VictoryScatter,\n} from 'victory';\nimport { useHistory } from \"react-router-dom\";\nimport Notes from './Notes';\nimport _ from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport configs from \"./state_config.json\";\nimport ReactDOM from 'react-dom';\n\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\n//const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\"\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\nconst colorHighlight = '#f2a900';\n\n\nfunction MapLabels(props){\n\n  const offsets = {\n    VT: [50, -8],\n    NH: [34, 2],\n    MA: [30, -1],\n    RI: [28, 2],\n    CT: [35, 10],\n    NJ: [34, 1],\n    DE: [33, 0],\n    MD: [47, 10],\n    DC: [49, 21],\n  };\n\n  return (\n    <svg>\n\n      {props.geographies.map(geo => {\n          const centroid = geoCentroid(geo);\n          const cur = props.stateLabels.find(s => s.val === geo.id);\n          return (\n            <g key={geo.rsmKey + \"-name\"}>\n              {cur &&\n                centroid[0] > -160 &&\n                centroid[0] < -67 &&\n                (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                  <Marker coordinates={centroid}>\n                    <text y=\"2\" fontSize={14} textAnchor=\"middle\" fill=\"#eee\">\n                      {cur.id}\n                    </text>\n                  </Marker>\n                ) : (\n                  <Annotation\n                    subject={centroid}\n                    dx={offsets[cur.id][0]}\n                    dy={offsets[cur.id][1]}\n                  >\n                    <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                      {cur.id}\n                    </text>\n                  </Annotation>\n                ))}\n            </g>\n          );\n        })}\n    </svg>\n    );\n}\n\n\nexport default function USMap(props) {\n\n  const [stateName, setStateName] = useState('Georgia');\n  const [fips, setFips] = useState('13');\n  const [tooltipContent, setTooltipContent] = useState('');\n  const history = useHistory();\n  const [dataFltrd, setDataFltrd] = useState();\n\n  const [dataStateFltrd, setDataStateFltrd] = useState();\n  const [dataState, setDataState] = useState();\n\n  const [data, setData] = useState();\n  const [date, setDate] = useState('');\n  const [stateLabels, setStateLabels] = useState();\n  const [colorScale, setColorScale] = useState();\n\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  const [metric, setMetric] = useState('mean7daycases');\n  const [metricOptions, setMetricOptions] = useState('mean7daycases');\n  const [metricName, setMetricName] = useState('Average Daily COVID-19 Cases');\n\n  const [varMap, setVarMap] = useState({});\n  const [delayHandler, setDelayHandler] = useState();\n\n\n  useEffect(()=>{\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMetricOptions(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.variable, text: d.name, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\" && d.group === \"outcomes\")));\n      });\n  }, []);\n\n\n\n\n  useEffect(() => {\n    if (metric) {\n    fetch('/data/data.json').then(res => res.json())\n      .then(x => {\n        \n        setData(x);\n        setDataFltrd(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (d.Population > 10000 && \n              d.black > 5 && \n              d.fips.length === 5 && \n              d['covidmortalityfig'] > 0)));\n      \n        const cs = scaleQuantile()\n        .domain(_.map(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[metric] >= 0 &&\n              d.fips.length === 5)),\n          d=> d[metric]))\n        .range(colorPalette);\n\n        let scaleMap = {}\n        _.each(x, d=>{\n          if(d[metric] >= 0){\n          scaleMap[d[metric]] = cs(d[metric])}});\n      \n        setColorScale(scaleMap);\n        var max = 0\n        var min = 100\n        var length = 0\n        _.each(x, d=> { \n          if (d[metric] > max && d.fips.length === 5) {\n            max = d[metric]\n          } else if (d.fips.length === 5 && d[metric] < min && d[metric] >= 0){\n            min = d[metric]\n          }\n        });\n\n        if (max > 999999) {\n          max = (max/1000000).toFixed(0) + \"M\";\n          setLegendMax(max);\n        }else if (max > 999) {\n          max = (max/1000).toFixed(0) + \"K\";\n          setLegendMax(max);\n        }else{\n          setLegendMax(max.toFixed(0));\n\n        }\n        setLegendMin(min.toFixed(0));\n\n        var split = scaleQuantile()\n        .domain(_.map(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[metric] >= 0 &&\n              d.fips.length === 5)),\n          d=> d[metric]))\n        .range(colorPalette);\n\n        setLegendSplit(split.quantiles());\n\n\n      });\n\n    fetch('/data/date.json').then(res => res.json())\n      .then(x => setDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n    \n    fetch('/data/allstates.json').then(res => res.json())\n      .then(x => setStateLabels(x));\n\n    fetch('/data/data.json').then(res => res.json())\n      .then(x => {\n        setDataState(x);\n        setDataStateFltrd(_.filter(_.map(x, (c, l) => {\n          c.fips = l\n          return c}),\n          c => (c.fips.length === 2)));\n      });\n    }\n\n  }, [metric])\n\n  if (data && dataFltrd && stateLabels && dataStateFltrd && dataState) {\n\n  return (\n      <div>\n\n        <AppBar menu='countyReport'/>\n        <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\"}}>\n            <Breadcrumb.Section active >United States</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n          </Breadcrumb>\n          <Divider hidden />\n          <Grid columns={16}>\n          <div style={{fontSize: \"14pt\", paddingTop: 10, paddingBottom: 30}}>\n            See Dashboard Guide (<a style ={{color: \"#397AB9\"}}href=\"Dashboard user guide.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"> PDF </a> / <a style ={{color: \"#397AB9\"}} href=\"https://youtu.be/PmI42rHnI6U\" target=\"_blank\" rel=\"noopener noreferrer\"> YouTube </a>)\n\n          </div>\n            <Grid.Row>\n              <Grid.Column width={9}>\n                <Header as='h2' style={{fontWeight: 400, fontSize: \"18pt\"}}>\n                  <Header.Content>\n                    COVID-19 is affecting every community differently.<br/>\n                    Some areas are much harder-hit than others.<br/>\n                    What is happening where you live?\n                    <Header.Subheader style={{fontWeight: 300}}></Header.Subheader>\n                  </Header.Content>\n                </Header>\n                \n\n                <Grid.Row columns={2} style={{width: 680, padding: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0}}>\n\n                      <Dropdown\n                        style={{background: '#fff', \n                                fontSize: \"14pt\",\n                                fontWeight: 400, \n                                theme: '#000000',\n                                width: '420px',\n                                top: '2px',\n                                left: '0px',\n                                text: \"Select\",\n                                borderTop: 'none',\n                                borderLeft: '0px solid #FFFFFF',\n                                borderRight: '0px', \n                                borderBottom: '0.5px solid #bdbfc1',\n                                borderRadius: 0,\n                                minHeight: '1.0em',\n                                paddingRight: 0,\n                                paddingBottom: '0.5em'}}\n                        text= {metricName}\n                        pointing = 'top'\n                        search \n                        selection\n                        options={metricOptions}\n                        \n                        onChange={(e, { value }) => {\n                          setMetric(value);\n                          setMetricName(varMap[value]['name']);\n                        }}\n\n                        \n                      />\n\n                <svg width=\"260\" height=\"80\">\n                  \n                  {_.map(legendSplit, (splitpoint, i) => {\n                    if(legendSplit[i] < 1){\n                      return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(1)}</text>                    \n                    }else if(legendSplit[i] > 999999){\n                      return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                    }else if(legendSplit[i] > 999){\n                      return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000).toFixed(0) + \"K\"}</text>                    \n                    }\n                    return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(0)}</text>                    \n                  })} \n                  <text x={50} y={35} style={{fontSize: '0.7em'}}>{legendMin}</text>\n                  <text x={170} y={35} style={{fontSize: '0.7em'}}>{legendMax}</text>\n\n\n                  {_.map(colorPalette, (color, i) => {\n                    return <rect key={i} x={50+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                  })} \n\n\n                  <text x={50} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                  <text x={50+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                  <rect x={195} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                  <text x={217} y={50} style={{fontSize: '0.7em'}}> None </text>\n                  <text x={217} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n\n                </svg>\n                </Grid.Row>\n\n\n                <ComposableMap \n                  projection=\"geoAlbersUsa\" \n                  data-tip=\"\"\n                  width={630} \n                  height={380}\n                  strokeWidth= {0.1}\n                  stroke= 'black'\n                  projectionConfig={{scale: 750}}\n                   >\n                  <Geographies geography={geoUrl}>\n                    {({ geographies }) => \n                      <svg>\n                        {geographies.map(geo => (\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            onMouseEnter={()=>{\n\n                              //console.log(geo); \n                              const stateFips = geo.id.substring(0,2);\n                              const configMatched = configs.find(s => s.fips === stateFips);\n\n                              setFips(stateFips);\n                              setStateName(configMatched.name);\n                              //setStateName(geo.id.substring(0,2));\n                              //setStateName(geo.properties.name); \n                              //setTooltipContent()                            \n                            \n                            }}\n\n\n\n                            onMouseLeave={()=>{\n                              setTooltipContent(\"\")\n                            }}\n                            onClick={()=>{\n                              history.push(\"/\"+geo.id.substring(0,2)+\"\");\n                            }}\n\n                            \n                            fill={fips===geo.id.substring(0,2)?colorHighlight:\n                            ((colorScale && data[geo.id] && (data[geo.id][metric]) > 0)?\n                                colorScale[data[geo.id][metric]]: \n                                (colorScale && data[geo.id] && data[geo.id][metric] === 0)?\n                                  '#e1dce2':'#FFFFFF')}\n                            \n                          />\n                        ))}\n                        <MapLabels geographies={geographies} stateLabels={stateLabels} />\n                      </svg>\n                    }\n                  </Geographies>\n                  \n\n                </ComposableMap>\n                \n                <Grid.Row style={{paddingTop: \"59px\", width: \"660px\"}}>\n                    <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                    <b><em>Daily Cases</em></b> is the average number of new positive cases for <br/> COVID-19 infection over the last seven days. <br/>\n                    <b><em>Daily Deaths</em></b> is the average number of new deaths due to confirmed <br/>or presumed COVID-19 infection over the last seven days. <br/>\n                    For a complete table of variable definition, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                    </text>\n                </Grid.Row>\n              </Grid.Column>\n              <Grid.Column width={7} style ={{paddingLeft: 0}}>\n                <Header as='h2' style={{fontWeight: 400}}>\n                  <Header.Content style={{width : 550, fontSize: \"18pt\"}}>\n                    A Snapshot of Health Disparities in <b>{stateName}</b>\n                    <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                      Counties with higher proportions of African American residents tend to have higher rates of death from COVID-19. \n                    </Header.Subheader>\n                    <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                      Click on the map to explore your state and county.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n                <Grid>\n                  <Grid.Row>\n                    <VictoryChart\n                      width={500}\n                      height={400}\n                      scale={{y: 'log'}}\n                      padding={{left: 65, right: 30, top: 50, bottom: 30}}>\n\n                      <VictoryLegend\n                        x={10} y={10}\n                        orientation=\"horizontal\"\n                        style={{labels:{ fontFamily: 'lato', size: \"14pt\"}}}\n                        colorScale={[\"#bdbfc1\", colorHighlight]}\n                        data ={[\n                          {name: ('Other counties in '+ 'US')}, {name: 'Counties in '+stateName}\n                          ]}\n                      />\n                      <VictoryScatter\n                        sortKey={(d) => d.fips.substring(0,2)===fips}\n                        style={{ data: { fontFamily: 'lato',\n                                  fill: ({datum}) => datum.fips.substring(0,2)===fips?\"#f2a900\":\"#bdbfc1\",\n                                 fillOpacity: ({datum}) => datum.fips.substring(0,2)===fips?1.0:0.5} }}\n                        data={dataFltrd}\n                        size={4}\n                        x='black'\n                        y='covidmortalityfig'\n                      />\n                      <VictoryAxis style={{fontSize: \"14pt\", axisLabel: {fontFamily: 'lato', marginTop: \"50px\"}, tickLabels: { fontFamily: 'lato'}}}/>\n                      <VictoryAxis dependentAxis \n                        label={'COVID-19 Deaths / 100k (log-scale)'} \n                        style={{ fontSize: \"14pt\", axisLabel: {padding: 40, fontFamily: 'lato'}, tickLabels: {fontFamily: 'lato'}}} \n                        tickCount={5}\n                        tickFormat={(y) => (Math.round(y*100)/100)}/>\n                    </VictoryChart>\n                  </Grid.Row>\n\n                  <Grid.Row style={{left: 250, top: -30}}>\n                    <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                      <b>% African American</b>\n                    </text>\n                  </Grid.Row>\n                  <Grid.Row style={{top: -30, paddingLeft: 0}}>\n                    <text style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 1, lineHeight: \"18pt\"}}>\n                      <b>Data last updated:</b> {date}, updated every weekday.<br/>\n                      The chart does not contain those counties with less than 10,000 population and less than 5% African American. <br/>\n                    \n                    </text>\n                  </Grid.Row>\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          \n\n          <Notes />\n        </Container>\n        <ReactTooltip > <font size=\"+2\"><b >{stateName}</b> </font> <br/> <b> Daily Cases</b>: {numberWithCommas(dataState[fips]['mean7daycases'].toFixed(0))} <br/> <b> Daily Deaths</b>: {numberWithCommas(dataState[fips]['mean7daydeaths'].toFixed(0))} <br/> <b>Click for county-level data.</b> </ReactTooltip>\n      </div>\n      );\n  } else {\n    return <Loader active inline='centered' />\n  }\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Dropdown, Grid, Breadcrumb, Header, Loader, Divider} from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport { VictoryChart, \n  VictoryContainer,\n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  VictoryLegend,\n  VictoryLine,\n  VictoryLabel,\n  VictoryArea,\n  VictoryTooltip,\n  VictoryVoronoiContainer\n} from 'victory';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport _ from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport fips2county from './fips2county.json'\nimport stateOptions from \"./stateOptions.json\";\n\n\n\nimport configs from \"./state_config.json\";\n\nfunction getMax(arr, prop) {\n    var max;\n    for (var i=0 ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction getMaxRange(arr, prop, range) {\n    var max;\n    for (var i=range ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\n\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\nconst countyColor = '#f2a900';\nconst stateColor = \"#778899\";\nconst nationColor = '#b1b3b3';\n\nconst monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\",\n  \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"\n];\n\nconst nationName = \"USA\";\n\n\n\nfunction BarChart(props) {\n  let colors = {\"USA\": nationColor, \n                  stateName: stateColor, \n                  \"County\": countyColor};\n  if (props.stateFips !== \"_nation\") {\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      width={190}\n      height={100}       \n      domainPadding={10}\n      scale={{y: props.ylog?'log':'linear'}}\n      minDomain={{y: props.ylog?1:0}}\n      padding={{left: 105, right: 30, top: 30, bottom: 20}}\n      containerComponent={<VictoryContainer responsive={false}/>}\n    >\n      <VictoryLabel text={props.title} x={100} y={10} textAnchor=\"middle\" style={{fontSize: \"16px\", fontFamily: 'lato'}}/>\n      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"16px\", fontFamily: 'lato'}}}  />\n      <VictoryAxis tickCount={3} dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", padding: 1, fontSize: \"12px\", fontFamily: 'lato'}}} />\n      <VictoryBar\n        horizontal\n        barRatio={0.8}\n        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(1))}\n        data={[{key: 'USA', 'value': props.data['_nation'][props.var] || 0},\n              {key: props.stateName, 'value': props.data[props.stateFips][props.var]>0?props.data[props.stateFips][props.var] : 0},\n              {key: \"County\", 'value': props.data[props.stateFips+props.countyFips][props.var] > 0? props.data[props.stateFips+props.countyFips][props.var]:  0}]}\n        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"14px\", fill: \"#000000\" }}/>}\n        style={{\n          data: {\n            fill: ({ datum }) => datum.key === \"County\"?countyColor:datum.key === props.stateName?stateColor:nationColor\n          }\n        }}\n        x=\"key\"\n        y=\"value\"\n      />\n    </VictoryChart>);\n  };\n\n  \n}\n\nexport default function StateMap(props) {\n\n  let {stateFips} = useParams();\n  const [config, setConfig] = useState();\n  const [stateName, setStateName] = useState('');\n  const [countyFips, setCountyFips] = useState('');\n  const [countyName, setCountyName] = useState('{County}');\n  const [barCountyName, setBarCountyName] = useState('{County}');\n  const history = useHistory();\n  const [data, setData] = useState();\n  const [dataTS, setDataTS] = useState();\n  const [dataRD, setDataRD] = useState();\n  const [colorScale, setColorScale] = useState();\n  const [tooltipContent, setTooltipContent] = useState('');\n\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  const [caseRate, setCaseRate] = useState();\n  const [percentChangeCases, setPercentChangeCases] = useState();\n\n  const [mortality, setMortality] = useState();\n  const [percentChangeMortality, setPercentChangeMortality] = useState();\n\n  const [dataHospTestTS, setDataHospTestTS] = useState();\n  const [positive, setPositive] = useState();\n  const [pctPositive, setPctPositive] = useState();\n  const [pctBedsOccupied, setPctBedsOccupied] = useState();\n  const [time, setTime] = useState();\n  const [index, setIndex] = useState();\n  const [indexP, setIndexP] = useState();\n\n\n  const [metric, setMetric] = useState('mean7daycases');\n  const [metricOptions, setMetricOptions] = useState('mean7daycases');\n  const [metricName, setMetricName] = useState('Average Daily COVID-19 Cases');\n\n  const [varMap, setVarMap] = useState({});\n  const [delayHandler, setDelayHandler] = useState();\n\n  const [covidMetric, setCovidMetric] = useState({t: 'n/a'});\n\n  const [countyMap, setCountyMap] = useState({});\n  const [countyOption, setCountyOption] = useState();\n\n\n  useEffect(()=>{\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMetricOptions(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.variable, text: d.name, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\" && d.group === \"outcomes\")));\n      });\n  }, []);\n\n  useEffect(()=>{\n    fetch('/data/rawdata/f2c.json').then(res => res.json())\n      .then(x => {\n        setCountyMap(x);\n        setCountyOption(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.value, text: d.text, group: d.state};\n        }), d => (d.group === stateFips && d.text !== \"Augusta-Richmond County consolidated government\" && d.text !== \"Wrangell city and borough\")));\n      });\n  }, []);\n\n\n  useEffect(()=>{\n    if (metric) {\n\n    \n    const configMatched = configs.find(s => s.fips === stateFips);\n\n    if (!configMatched){\n      history.push('/_nation');\n    }else{\n\n      setConfig(configMatched);\n\n      setStateName(configMatched.name);\n\n      fetch('/data/data.json').then(res => res.json())\n        .then(x => {\n          setData(x);\n\n          const cs = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] >= 0 &&\n                d.fips.length === 5)),\n            d=> d[metric]))\n          .range(colorPalette);\n\n          let scaleMap = {}\n          _.each(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] >= 0 &&\n                d.fips.length === 5))\n                , d=>{\n            scaleMap[d[metric]] = cs(d[metric])});\n\n          setColorScale(scaleMap);\n          var max = 0\n          var min = 100\n          _.each(x, d=> { \n            if (d[metric] > max && d.fips.length === 5) {\n              max = d[metric]\n            } else if (d.fips.length === 5 && d[metric] < min && d[metric] >= 0){\n              min = d[metric]\n            }\n          });\n\n          if (max > 999) {\n            max = (max/1000).toFixed(0) + \"K\";\n            setLegendMax(max);\n          }else{\n            setLegendMax(max.toFixed(0));\n\n          }\n          setLegendMin(min.toFixed(0));\n\n          var split = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] >= 0 &&\n                d.fips.length === 5)),\n            d=> d[metric]))\n          .range(colorPalette);\n\n          setLegendSplit(split.quantiles());\n        });\n      \n      fetch('/data/timeseries'+stateFips+'.json').then(res => res.json())\n        .then(x => {\n\n          let countyMost = '';\n          let covidmortality7dayfig = 0;\n          let caseRate = 0.1;\n          let mortality = 0;\n          let jstime = 0;\n          let percentChangeCase = 0;\n          let percentChangeMortality = 0;\n          let index = 0;\n          let indexP = 0;\n          let percentBedsOccupied = 0;\n\n          let positive = 0.1;\n          let percentPositive = 0;\n\n          _.each(x, (v, k)=>{\n\n            if (k.length===5 && v.length > 0 && v[v.length-1].covidmortality7dayfig > covidmortality7dayfig){\n              countyMost = k.substring(2, 5);\n              covidmortality7dayfig = v[v.length-1].covidmortality7dayfig;\n            }\n            if (k.length===2 && v.length > 0){\n              percentChangeCase = v[v.length-1].percent14dayDailyCases;\n              caseRate = v[v.length-1].caseRateMean;\n\n              percentChangeMortality = v[v.length-1].percent14dayDailyDeaths;\n              mortality = v[v.length-1].mortalityMean;\n\n              positive = v[v.length-1].positive;\n              percentPositive = v[v.length-1].percentPositive;\n\n              if(v[v.length-1].pctBedsOccupied === 0){\n                for (var i = v.length - 1; i >= 0; i--) {\n                  if (v[i].pctBedsOccupied === 0){\n\n                }else{\n                  percentBedsOccupied = v[i].pctBedsOccupied;\n                  i = 0;\n                }\n              }\n              \n\n            }\n\n              if(k.length===2 && v[v.length-1].pctBedsOccupied === 0){\n                for (var i = v.length - 1; i >= 0; i--) {\n                  if (i ===0 ){\n                    index = 1;\n                    jstime = v[v.length-1].t;\n                    percentBedsOccupied = v[v.length-1].pctBedsOccupied;\n                  }else if (v[i].pctBedsOccupied === 0){\n                  }else{\n                    index = v.length - i;\n                    jstime = v[i].t;\n                    percentBedsOccupied = v[i].pctBedsOccupied;\n                    i = 0;\n                  }\n                }\n              }\n\n              if(k.length===2 && v[v.length-1].percentPositive === 0){\n                for (var i = v.length - 1; i >= 0; i--) {\n                  if (i ===0 ){\n                    indexP = 1;\n                    jstime = v[v.length-1].t;\n                    percentPositive = v[v.length-1].percentPositive;\n                  }else if (v[i].percentPositive === 0){\n                  }else{\n                    indexP = v.length - i;\n                    jstime = v[i].t;\n                    percentPositive = v[i].percentPositive;\n                    i = 0;\n                  }\n                }\n              }\n            }\n\n          });\n          _.each(x, (v, k)=>{\n            \n          });\n\n\n\n          if (percentChangeCase.toFixed(0) > 0){\n            setPercentChangeCases(\"+\" + percentChangeCase.toFixed(0) + \"%\");\n          }else{\n            setPercentChangeCases(percentChangeCase.toFixed(0) + \"%\");\n          }\n          if (percentChangeMortality.toFixed(0) > 0){\n            setPercentChangeMortality(\"+\" + percentChangeMortality.toFixed(0) + \"%\");\n          }else{\n            setPercentChangeMortality(percentChangeMortality.toFixed(0) + \"%\");\n          }\n\n          setPctPositive(percentPositive.toFixed(0) + \"%\");\n          setIndexP(indexP);\n\n          setPctBedsOccupied(percentBedsOccupied.toFixed(0) + \"%\");\n          setTime(monthNames[new Date(jstime*1000).getMonth()] + \" \" +  new Date(jstime*1000).getDate());\n          setIndex(index);\n\n          setCaseRate(numberWithCommas(caseRate.toFixed(0)));\n          setMortality(numberWithCommas(mortality.toFixed(0)));\n\n          setPositive(numberWithCommas(positive.toFixed(0)))\n\n          setCountyFips(countyMost);\n\n          if(stateFips !== \"_nation\"){\n            setCountyName(fips2county[stateFips+countyMost]);\n            setBarCountyName((fips2county[stateFips+countyMost]).match(/\\S+/)[0]);\n\n          }\n          \n          \n\n          setDataTS(x);\n        });\n\n        fetch('/data/staticracedata'+stateFips+'.json').then(res => res.json())\n              .then(x => {\n                setDataRD(x);\n              });\n\n            }\n          }\n  }, [stateFips, metric]);\n\n  useEffect(() => {\n    if (dataTS && dataTS[stateFips]){\n      setCovidMetric(_.takeRight(dataTS[stateFips])[0]);\n    }\n  }, [dataTS]);\n\n\n  if (data && dataTS) {\n    console.log(dataTS[stateFips].length-15);\n\n  return (\n      <div>\n        <AppBar menu='countyReport'/>\n        <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n          {config &&\n          <div>\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/')}>United States</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>{stateName}</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n          </Breadcrumb>\n                <div style ={{paddingTop: 26, paddingBottom: 6}}>\n                  <text style={{paddingLeft: 0, fontFamily: \"lato\", fontSize: \"14pt\"}}>\n                    <b> Step 1.</b> Select your state.<b> &nbsp;&nbsp; Step 2. </b> Select your county. <br/><br/>\n                  </text>\n                </div>\n\n                      <Dropdown\n                        style={{background: '#fff', \n                                fontSize: \"14pt\",\n                                fontWeight: 400, \n                                theme: '#000000',\n                                width: '380px',\n                                left: '0px',\n                                text: \"Select\",\n                                borderTop: '0.5px solid #bdbfc1',\n                                borderLeft: '0.5px solid #bdbfc1',\n                                borderRight: '0.5px solid #bdbfc1', \n                                borderBottom: '0.5px solid #bdbfc1',\n                                borderRadius: 0,\n                                minHeight: '1.0em',\n                                paddingBottom: '0.5em'}}\n                        text= {\"Selected State: \" + stateName}\n                        search\n                        selection\n                        pointing = 'top'\n                        options={stateOptions}\n                        onChange={(e, { value }) => {\n                          window.location.href = \"/\" + value;\n\n                        }}\n\n                        \n                      />\n\n                    <Dropdown\n                        style={{background: '#fff', \n                                fontSize: \"14pt\",\n                                fontWeight: 400, \n                                theme: '#000000',\n                                width: '450px',\n                                left: '0px',\n                                text: \"Select\",\n                                borderTop: '0.5px solid #bdbfc1',\n                                borderLeft: '0.5px solid #bdbfc1',\n                                borderRight: '0.5px solid #bdbfc1', \n                                borderBottom: '0.5px solid #bdbfc1',\n                                borderRadius: 0,\n                                minHeight: '1.0em',\n                                paddingBottom: '0.5em'}}\n                        text= \"Select County/Census Area/Borough\"\n                        search\n                        selection\n                        pointing = 'top'\n                        options={countyOption}\n                        onChange={(e, { value }) => {\n                          if (value !== \"Select County/Census Area/Borough\") {\n                            window.location.href = \"/\"+stateFips + \"/\" + value+\"\";\n                          }\n                          \n\n                        }}\n\n                        \n                      />\n                      \n\n          {stateFips !== \"_nation\" && \n              <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 40, paddingBottom: 25}}> Covid-19 Outcomes in {stateName} </Divider>\n          }\n\n          {stateFips !== \"_nation\" && \n\n          <Grid columns={15}>\n\n          <Grid.Row columns={5} style={{width: 252, paddingRight: 0, paddingTop: '2em', paddingBottom: \"0\"}}>\n            <Grid.Column style = {{width:235}}> \n              <center style = {{ fontSize: \"16pt\", fontFamily: \"lato\", paddingBottom: 5}}> Daily Cases</center>\n\n              <div style = {{width: 235, background: \"#e5f2f7\"}}>\n                <VictoryChart \n                            minDomain={{ x: dataTS[stateFips][dataTS[stateFips].length-15].t}}\n                            maxDomain = {{y: getMaxRange(dataTS[stateFips], \"caseRateMean\", (dataTS[stateFips].length-15)).caseRateMean*1.05}}                            \n                            width={235}\n                            height={180}    \n                            parent= {{background: \"#ccdee8\"}}   \n                            padding={{marginleft: 0, right: -1, top: 150, bottom: -0.9}}\n                            containerComponent={<VictoryContainer responsive={false}/>}>\n                            \n                            <VictoryAxis\n                              tickValues={[\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3)*2 - 1].t,\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3) - 1].t,\n                                dataTS[stateFips][dataTS[stateFips].length-1].t]}                        \n                              style={{grid:{background: \"#ccdee8\"}, tickLabels: {background: \"#ccdee8\", fontSize: 10}}} \n                              tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                            \n                            <VictoryGroup \n                              colorScale={[stateColor]}\n                            >\n\n                            <VictoryLine data={dataTS[stateFips]? dataTS[stateFips] : dataTS[\"_\"]}\n                                x='t' y='caseRateMean'\n                                />\n\n                            </VictoryGroup>\n                            <VictoryArea\n                              style={{ data: {fill: \"#080808\" , fillOpacity: 0.1} }}\n                              data={dataTS[stateFips]? dataTS[stateFips] : dataTS[\"_\"]}\n                              x= 't' y = 'caseRateMean'\n\n                            />\n\n                            <VictoryLabel text= {caseRate} x={115} y={60} textAnchor=\"middle\" style={{fontSize: 50, fontFamily: 'lato'}}/>\n                            <VictoryLabel text= {percentChangeCases}  x={115} y={115} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'}}/>\n                            <VictoryLabel text= \"14-day\"  x={180} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato'}}/>\n                            <VictoryLabel text= \"change\"  x={180} y={120} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato'}}/>\n\n                            \n                </VictoryChart>\n              </div>\n            </Grid.Column>\n            <Grid.Column style = {{width:235}}> \n              <center style = {{ fontSize: \"16pt\", fontFamily: \"lato\", paddingBottom: 5}}> Daily Deaths</center>\n              <div style = {{width: 235, background: \"#e5f2f7\"}}>\n\n                <VictoryChart theme={VictoryTheme.material}\n                            minDomain={{ x: dataTS[stateFips][dataTS[stateFips].length-15].t }}\n                            maxDomain = {{y: getMax(dataTS[stateFips], \"mortalityMean\").mortalityMean + 0.8}}                            \n                            width={235}\n                            height={180}       \n                            padding={{left: 0, right: -1, top: 150, bottom: -0.9}}\n                            containerComponent={<VictoryContainer responsive={false}/>}>\n                            \n                            <VictoryAxis\n                              tickValues={[\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3)*2 - 1].t,\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3) - 1].t,\n                                dataTS[stateFips][dataTS[stateFips].length-1].t]}                        \n                              style={{tickLabels: {fontSize: 10}}} \n                              tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                            \n                            <VictoryGroup \n                              colorScale={[stateColor]}\n                            >\n\n                              <VictoryLine data={dataTS[stateFips]? dataTS[stateFips] : dataTS[\"_\"]}\n                                x='t' y='mortalityMean'\n                                />\n\n                            </VictoryGroup>\n\n                            <VictoryArea\n                              style={{ data: { fill: \"#080808\", fillOpacity: 0.1} }}\n                              data={dataTS[stateFips]? dataTS[stateFips] : dataTS[\"_\"]}\n                              x= 't' y = 'mortalityMean'\n\n                            />\n                            <VictoryLabel text= {mortality} x={115} y={60} textAnchor=\"middle\" style={{fontSize: 50, fontFamily: 'lato'}}/>\n                            <VictoryLabel text= {percentChangeMortality} x={115} y={115} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'}}/>\n                            <VictoryLabel text= \"14-day\"  x={180} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato'}}/>\n                            <VictoryLabel text= \"change\"  x={180} y={120} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato'}}/>\n\n                </VictoryChart>\n              </div>\n            </Grid.Column>\n            <Grid.Column style = {{width:235}}>\n              <center style = {{ fontSize: \"16pt\", fontFamily: \"lato\", paddingBottom: 5}}> Percent Occupied Beds</center>\n              <div style = {{width: 235, background: \"#e5f2f7\"}}>\n                <VictoryChart theme={VictoryTheme.material}\n                            minDomain={{ x: dataTS[stateFips][dataTS[stateFips].length-(index+15)].t }}\n                            maxDomain={{ x: dataTS[stateFips][dataTS[stateFips].length-index].t , y: getMax(dataTS[stateFips], \"pctBedsOccupied\").pctBedsOccupied*1.1}}\n                            width={235}\n                            height={180}       \n                            padding={{left: 0, right: -1, top: 150, bottom: -0.9}}\n                            containerComponent={<VictoryContainer responsive={false}/>}>\n                            \n                            <VictoryAxis\n                              tickValues={[\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3)*2 - index].t,\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3) - index].t,\n                                dataTS[stateFips][dataTS[stateFips].length - index].t]}                        \n                              style={{tickLabels: {fontSize: 10}}} \n                              tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                            \n                            <VictoryGroup \n                              colorScale={[stateColor]}\n                            >\n\n                              <VictoryLine data={dataTS[stateFips] ? dataTS[stateFips] : dataTS[\"_\"]}\n                                x='t' y='pctBedsOccupied'\n                                />\n\n                            </VictoryGroup>\n\n                            <VictoryArea\n                              style={{ data: { fill: \"#080808\", fillOpacity: 0.1} }}\n                              data={dataTS[stateFips]? dataTS[stateFips] : dataTS[\"_\"]}\n                              x= 't' y = 'pctBedsOccupied'\n\n                            />\n                            <VictoryLabel text= {pctBedsOccupied} x={115} y={60} textAnchor=\"middle\" style={{fontSize: 50, fontFamily: 'lato'}}/>\n\n                </VictoryChart>\n              </div>\n            </Grid.Column>\n            <Grid.Column style = {{width:235}}>\n              <center style = {{ fontSize: \"16pt\", fontFamily: \"lato\", paddingBottom: 5}}> Percent Tested Positive</center>\n              <div style = {{width: 235, background: \"#e5f2f7\"}}>\n                <VictoryChart theme={VictoryTheme.material}\n                            minDomain={{ x: dataTS[stateFips][dataTS[stateFips].length-(indexP + 15)].t }}\n                            maxDomain = {{x: dataTS[stateFips][dataTS[stateFips].length-indexP].t, y: getMax(dataTS[stateFips], \"positive\").positive*1.05}}\n                            width={235}\n                            height={180}       \n                            padding={{left: 0, right: -1, top: 150, bottom: -0.9}}\n                            containerComponent={<VictoryContainer responsive={false}/>}>\n\n                            \n                            <VictoryAxis\n                              tickValues={[\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3)*2 - 1].t,\n                                dataTS[stateFips][dataTS[stateFips].length - Math.round(dataTS[stateFips].length/3) - 1].t,\n                                dataTS[stateFips][dataTS[stateFips].length-1].t]}                        \n                              style={{tickLabels: {fontSize: 10}}} \n                              tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                            \n                            <VictoryGroup \n                              colorScale={[stateColor]}\n                            >\n\n                              <VictoryLine data={dataTS[stateFips]? dataTS[stateFips] : dataTS[\"_\"]}\n                                x='t' y='positive'\n                                />\n\n                            </VictoryGroup>\n\n                            <VictoryArea\n                              style={{ data: { fill: \"#080808\", fillOpacity: 0.1} }}\n                              data={dataTS[stateFips]? dataTS[stateFips] : dataTS[\"_\"]}\n                              x= 't' y = 'positive'\n\n                            />\n                            <VictoryLabel text= {pctPositive} x={115} y={60} textAnchor=\"middle\" style={{fontSize: 50, fontFamily: 'lato'}}/>\n\n                </VictoryChart>\n              </div>\n            </Grid.Column>\n            <Grid.Column style = {{width:235}}>\n              <center style = {{ fontSize: \"16pt\", fontFamily: \"lato\", paddingBottom: 5}}> Cases by Race</center>\n\n              <div style = {{width: 235, background: \"#e5f2f7\"}}>\n                <VictoryChart\n                            theme={VictoryTheme.material} \n                            width={235}\n                            height={180}        \n                            scale={{y: props.ylog?'log':'linear'}}\n                            minDomain={{y: props.ylog?1:0}}\n                            domainPadding={10}\n                            style={{labels:{ fontFamily: 'lato'}}}\n                            padding={{left: 65, right: dataRD[stateFips][1]['African American'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] > 6 ? 140:\n                                                          dataRD[stateFips][1]['African American'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] > 3 && dataRD[stateFips][1]['African American'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] < 4 ? 80:\n                                                            data[stateFips]['natives'] >= 1 && dataRD[stateFips][3]['American Natives'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] > 3 ? 100: 10, top: 20, bottom: -0.9}}\n                            containerComponent={<VictoryContainer style ={{fontFamily: 'lato'}} responsive={false}/>}\n                          >\n\n                            <VictoryAxis \n                                style={{axis: {stroke: \"transparent\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"11px\", fontFamily: 'lato'}}}\n\n                             />\n                            <VictoryAxis dependentAxis \n                              style ={{axis: {stroke: \"transparent\"}, grid: {stroke: \"transparent\"}, fontFamily: 'lato'}}\n                              tickValues = {\n                                  data[stateFips]['natives'] >= 1?\n\n                                  ([dataRD[stateFips][0]['All Races Combined'][0]['caseRate'], \n                                  dataRD[stateFips][1]['African American'][0]['caseRate'],\n                                  dataRD[stateFips][2]['White'][0]['caseRate'],\n                                  dataRD[stateFips][3]['American Natives'][0]['caseRate']])\n                                  :\n                                  ([\n                                  dataRD[stateFips][0]['All Races Combined'][0]['caseRate'],\n                                  dataRD[stateFips][1]['African American'][0]['caseRate'],\n                                  dataRD[stateFips][2]['White'][0]['caseRate']\n                                      \n                                        ])}\n\n                            />\n                            <VictoryBar\n                              horizontal\n                              barRatio={0.8}\n\n                              labels={({ datum }) => numberWithCommas((Math.round(datum.value*dataRD[stateFips][0]['All Races Combined'][0]['caseRate']))) !== 0?\n                                                      numberWithCommas((Math.round(datum.value*dataRD[stateFips][0]['All Races Combined'][0]['caseRate']))): \"Not Available\"}\n                              data={\n\n                                data[stateFips]['natives'] >= 1? \n                                [{key: \"White\", 'value': dataRD[stateFips][2]['White'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] || 0},\n                                {key: \"African \\n American\", 'value': dataRD[stateFips][1]['African American'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] || 0},\n                                {key: \"Native \\n American\", 'value': dataRD[stateFips][3]['American Natives'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] || 0},\n                                {key: \"All Races \\n Combined\", 'value': dataRD[stateFips][0]['All Races Combined'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] || 0}\n                                ]\n                                :[{key: \"White\", 'value': dataRD[stateFips][2]['White'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] || 0},\n                                {key: \"African \\n American\", 'value': dataRD[stateFips][1]['African American'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] || 0},\n                                {key: \"All Races \\n Combined\", 'value': dataRD[stateFips][0]['All Races Combined'][0]['caseRate']/dataRD[stateFips][0]['All Races Combined'][0]['caseRate'] || 0}\n                                ]}\n                              labelComponent={<VictoryLabel dx = {5} style={{fontSize: 14, fontFamily: 'lato', fill: ({datum}) => '#000000' }}/>}\n                              style={{\n                                data: {\n                                  fontFamily: 'lato',\n                                  fill: ({ datum }) => '#b2b3b3'\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                </VictoryChart>\n              </div>\n            </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row columns = {5} style={{paddingBottom: 0, paddingTop: 10, paddingLeft: 15, paddingRight: 0}}>\n              \n                <Grid.Column style={{padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <text style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Daily new COVID-19 cases <br/>\n                    (7-day rolling average) <br/><br/><br/><br/>\n                    <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target = \"_blank\" rel=\"noopener noreferrer\"> New York Times </a> <br/>\n                    </text>\n                </Grid.Column>\n                <Grid.Column style={{left: 3, padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <text style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Daily new COVID-19 deaths \n                    (7-day rolling average) <br/><br/><br/><br/>\n                    <i>Data source</i>:<a style ={{color: \"#397AB9\"}} href = \"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target = \"_blank\" rel=\"noopener noreferrer\"> New York Times </a> <br/>\n                    </text>\n                </Grid.Column>\n                <Grid.Column style={{left: 4, padding: 0, paddingLeft: 0, paddingRight: 10, paddingRight: 0, lineHeight: '16pt'}}>\n                  <text style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Percentage of inpatient\n                    beds occupied by COVID-19 patients. <br/><br/><br/>\n                    <i>Data source</i>:  <a style ={{color: \"#397AB9\"}} href = \"https://www.cdc.gov/nhsn/datastat/index.html\" target = \"_blank\" rel=\"noopener noreferrer\">CDC's NHSN </a><br/>\n                    </text>\n                </Grid.Column>\n                <Grid.Column style={{left: 9, padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <text style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Percentage of total tests for\n                    COVID-19 that resulted in a positive result. <br/><br/><br/>\n                    <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a> <br/>\n                    </text>\n                </Grid.Column>\n                <Grid.Column style={{left: 12, padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <text style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Distribution of cases per 100,000 persons among races that constitute more than 1% of {stateName}'s total population. <br/><br/>\n                    <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href=\"https://covidtracking.com/race\" target=\"_blank\" rel=\"noopener noreferrer\"> The COVID Racial Data Tracker </a> <br/> \n\n                    </text>\n                </Grid.Column>\n              \n            </Grid.Row>\n\n            <Grid.Row style={{paddingTop: 20, paddingBottom: 50, paddingLeft: 15}}>\n                    <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                      Percent Occupied Beds updated on 07/07/2020.\n                    </text>\n            </Grid.Row>\n\n          </Grid>\n        }\n        {stateFips !== \"_nation\" && \n          <span style={{color: '#73777B', fontSize: \"14pt\"}}>Last updated on {covidMetric.t==='n/a'?'N/A':(new Date(covidMetric.t*1000).toLocaleDateString())}</span>\n        }\n\n        {stateFips !== \"_nation\" && \n         <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 37, paddingBottom: 35}}> COVID-19 County Outcomes </Divider>\n          \n        }\n        {stateFips !== \"_nation\" && \n          <Grid columns={16}>\n            <Grid.Row>\n              <Grid.Column width={5}>\n\n                <Dropdown\n\n                        style={{background: '#fff', \n                                fontSize: \"19px\",\n                                fontWeight: 400, \n                                theme: '#000000',\n                                width: '410px',\n                                top: '0px',\n                                left: '0px',\n                                text: \"Select\",\n                                borderTop: 'none',\n                                borderLeft: '1px solid #FFFFFF',\n                                borderRight: 'none', \n                                borderBottom: '0.5px solid #bdbfc1',\n                                borderRadius: 0,\n                                minHeight: '1.0em',\n                                paddingBottom: '0.5em',\n                                paddingRight: 0}}\n                        text= {metricName}\n                        search\n                        pointing = 'top'\n                        options={metricOptions}\n                        onChange={(e, { value }) => {\n                          setMetric(value);\n                          setMetricName(varMap[value]['name']);\n                        }}\n\n                        \n                      />\n                \n                <svg width=\"400\" height=\"90\">\n                  \n                  {_.map(legendSplit, (splitpoint, i) => {\n                    if(legendSplit[i] < 1){\n                      return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(1)}</text>                    \n                    }else if(legendSplit[i] > 99999){\n                      return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                    }else if(legendSplit[i] > 999){\n                      return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000).toFixed(0) + \"K\"}</text>                    \n                    }\n                    return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(0)}</text>                    \n                  })} \n                  <text x={0} y={35} style={{fontSize: '0.7em'}}> {legendMin} </text>\n                  <text x={120} y={35} style={{fontSize: '0.7em'}}>{legendMax}</text>\n\n\n                  {_.map(colorPalette, (color, i) => {\n                    return <rect key={i} x={20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                  })} \n\n\n                  <text x={0} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                  <text x={20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                  <rect x={145} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                  <text x={167} y={50} style={{fontSize: '0.7em'}}> None </text>\n                  <text x={167} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n\n\n                  <text x={250} y={49} style={{fontSize: '0.7em'}}> Click on a county</text>\n                  <text x={250} y={59} style={{fontSize: '0.7em'}}> below for a detailed report. </text>\n\n\n                </svg>\n                <ComposableMap projection=\"geoAlbersUsa\" \n                  projectionConfig={{scale:`${config.scale*0.7}`}} \n                  width={400} \n                  height={500} \n                  strokeWidth = {0.1}\n                  stroke = 'black'\n                  data-tip=\"\"\n                  offsetX={config.offsetX}\n                  offsetY={config.offsetY}>\n                  <Geographies geography={config.url}>\n                    {({geographies}) => geographies.map(geo =>\n                      <Geography \n                        key={geo.rsmKey} \n                        geography={geo} \n                        onClick={()=>{\n                          history.push(\"/\" + stateFips + \"/\" +geo.properties.COUNTYFP);\n                        }}\n                        onMouseEnter={()=>{setDelayHandler(setTimeout(() => {\n                            setCountyFips(geo.properties.COUNTYFP);\n                            setCountyName(fips2county[stateFips + geo.properties.COUNTYFP]);\n                            setBarCountyName((fips2county[stateFips + geo.properties.COUNTYFP]).match(/\\S+/)[0]);\n\n                            \n                            // setTooltipContent('Click to see more county data');\n                          }, 300))\n                        }}\n                        onMouseLeave={()=>{\n                          clearTimeout(delayHandler);\n\n                          setTooltipContent(\"\")\n                        }}\n                        \n                        fill={countyFips===geo.properties.COUNTYFP?countyColor:\n                            ((colorScale && data[stateFips+geo.properties.COUNTYFP] && (data[stateFips+geo.properties.COUNTYFP][metric]) > 0)?\n                                colorScale[data[stateFips+geo.properties.COUNTYFP][metric]]: \n                                (colorScale && data[stateFips+geo.properties.COUNTYFP] && data[stateFips+geo.properties.COUNTYFP][metric] === 0)?\n                                  '#e1dce2':'#FFFFFF')}\n                        />\n                    )}\n                  </Geographies>\n                </ComposableMap>\n              </Grid.Column>\n              <Grid.Column width={6} style={{padding: 0, paddingLeft: 40}}>\n                <Header as='h2' style={{fontWeight: 400, width: 410}}>\n                  <Header.Content style={{fontSize: 20}}>\n                    Comparing <b>{countyName}</b>\n                    <Header.Subheader style={{fontWeight: 350, paddingTop: 15, width: 410, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                      The number of cases and deaths due to COVID-19 are dynamic. \n                      Cases are declining in many counties and rising in others. \n                      Trends in the case and death count in the past 14 days are being monitored to determine whether it is safe to reopen a county.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n                <Grid>\n                  <Grid.Row columns={1} style={{padding: 0, paddingTop: 19, paddingBottom: 0}}>\n                     <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 15, paddingBottom: 5, fontWeight: 400}}>Average Daily COVID-19 Cases /100,000 </text>\n\n                      <svg width = \"370\" height = \"40\">\n                          <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                          <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                          <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                          <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                          <rect x = {stateName.length > 10? 230: 180} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                          <text x = {stateName.length > 10? 245: 195} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text>\n                      </svg>\n\n                      <VictoryChart theme={VictoryTheme.material} minDomain={{ y: 0 }}\n                        width={330}\n                        height={160}       \n                        padding={{left: 50, right: 60, top: 10, bottom: 30}}\n                        containerComponent={<VictoryVoronoiContainer flyoutStyle={{fill: \"white\"}}/> }\n                        >\n                        \n                        <VictoryAxis\n                          tickValues={[\n                            dataTS[\"_nation\"][0].t,\n                            dataTS[\"_nation\"][30].t,\n                            dataTS[\"_nation\"][61].t,\n                            dataTS[\"_nation\"][91].t,\n                            dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]}                        \n                          style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: 14, fontFamily: 'lato'}}} \n                          tickFormat={(t)=> monthNames[new Date(t*1000).getMonth()] + \" \" +  new Date(t*1000).getDate()}/>\n                        <VictoryAxis dependentAxis tickCount={5}\n                         style={{ticks: {stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {fill: \"#000000\", fontSize: 14, padding: 1}}} \n                          tickFormat={(y) => (y<1000?y:(y/1000+'k'))}\n                          />\n                        <VictoryGroup \n                          colorScale={[nationColor, stateColor, countyColor]}\n                        >\n                          <VictoryLine data={dataTS[\"_nation\"]}\n                            x='t' y='caserate7dayfig'\n                            labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                            labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: 14}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                            style={{\n                              \n                              data: {strokeWidth: ({ active }) => active ? 3 : 2},\n                            }}\n                            />\n                          <VictoryLine data={stateFips !== \"_nation\"? dataTS[stateFips] : dataTS[\"_\"]}\n                            x='t' y='caserate7dayfig'\n                            labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                            labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: 14}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                            style={{\n                              fontFamily: 'lato',\n                              data: {strokeWidth: ({ active }) => active ? 3 : 2},\n                            }}\n                            />\n                          <VictoryLine data={dataTS[stateFips+countyFips] && (stateFips !== \"_nation\")?dataTS[stateFips+countyFips]:dataTS[\"99999\"]}\n                            x='t' y='caserate7dayfig'\n                            labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                            labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: 14}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                            style={{\n                              fontFamily: 'lato',\n                              data: {strokeWidth: ({ active }) => active ? 3 : 2},\n                            }}\n                            />\n                        </VictoryGroup>\n                      </VictoryChart>\n                    </Grid.Row>\n                  <Grid.Row columns={1} style={{padding: 0, paddingTop: 30, paddingBottom: 0}}>\n                      <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 15, paddingTop: 10, paddingBottom: 10, fontWeight: 400}}>Average Daily COVID-19 Deaths /100,000 </text>\n\n                      <svg width = \"370\" height = \"40\">\n                          <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                          <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                          <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                          <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                          <rect x = {stateName.length > 10? 230: 180} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                          <text x = {stateName.length > 10? 245: 195} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text>\n                      </svg>\n\n                      <VictoryChart theme={VictoryTheme.material} minDomain={{ y: 0 }}\n                        width={330}\n                        height={170}       \n                        padding={{left: 50, right: 60, top: 10, bottom: 30}}\n                        containerComponent={<VictoryVoronoiContainer/>}\n                        >\n                        <VictoryAxis\n                          tickValues={[\n                            dataTS[\"_nation\"][0].t,\n                            dataTS[\"_nation\"][30].t,\n                            dataTS[\"_nation\"][61].t,\n                            dataTS[\"_nation\"][91].t,\n                            dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]}    \n                          style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: 14, fontFamily: 'lato'}}} \n                          tickFormat={(t)=> monthNames[new Date(t*1000).getMonth()] + \" \" +  new Date(t*1000).getDate()}/>\n                        <VictoryAxis dependentAxis tickCount={5}\n                         style={{ticks: {stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {fill: \"#000000\", fontSize: 14, padding: 1}}} \n                          tickFormat={(y) => (y<1000?y:(y/1000+'k'))}\n                          />\n                        <VictoryGroup \n                          colorScale={[nationColor, stateColor, countyColor]}\n                        >\n                          <VictoryLine data={dataTS[\"_nation\"]}\n                            x='t' y='covidmortality7dayfig'\n                            labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                            labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: 14}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                            style={{\n                              fontFamily: 'lato',\n                              data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                            }}\n                            />\n                          <VictoryLine data={stateFips !== \"_nation\"? dataTS[stateFips] : dataTS[\"_\"]}\n                            x='t' y='covidmortality7dayfig'\n                            labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                            labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: 14}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                            style={{\n                              fontFamily: 'lato',\n                              data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                            }}\n                            />\n                          <VictoryLine data={dataTS[stateFips+countyFips] && (stateFips !== \"_nation\")?dataTS[stateFips+countyFips]:dataTS[\"99999\"]}\n                            x='t' y='covidmortality7dayfig'\n                            labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                            labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: 14}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                            style={{\n                              fontFamily: 'lato',\n                              data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                            }}\n                            />\n                        </VictoryGroup>\n                      </VictoryChart>\n                  </Grid.Row>\n                </Grid>\n              </Grid.Column>\n              <Grid.Column width={5} style={{padding: 0, paddingLeft: 0}}>\n                <Header as='h2' style={{width:410, paddingLeft: 0}}>\n                  <Header.Content style={{fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                    {barCountyName} Population Characteristics\n                    <Header.Subheader style={{fontWeight: 350, width: 390, fontSize: \"14pt\", lineHeight: \"16pt\", paddingTop: 17}}>\n                    Social, economic, health and environmental factors impact an individual’s risk of infection and COVID-19 severity. \n                    Counties with large groups of vulnerable people may be  disproportionately impacted by COVID-19.\n                    </Header.Subheader>\n                  </Header.Content>\n\n                </Header>\n                <Grid>\n                  <Grid.Row columns={2} style={{padding: 20, width: 410, paddingBottom: 20}}>                    \n                      <BarChart \n                        title=\"% African American\" \n                        var=\"black\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                      <BarChart \n                        title=\"% Hispanic or Latino\" \n                        var=\"hispanic\"  \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                  </Grid.Row>\n                  <Grid.Row columns={2} style={{padding: 20, width: 410, paddingBottom: 20}}>\n                      <BarChart \n                        title=\"% Native American\" \n                        var=\"natives\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />  \n                      <BarChart \n                        title=\"% Over 65 y/o\" \n                        var=\"age65over\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                  </Grid.Row>\n                  <Grid.Row columns={2} style={{padding: 20, width: 410, paddingBottom: 20}}>\n                      <BarChart \n                        title=\"% Obese\" \n                        var=\"obesity\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />  \n                      <BarChart \n                        title=\"% Diabetes\" \n                        var=\"diabetes\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} /> \n                  </Grid.Row>\n                  <Grid.Row columns={2} style={{padding: 20, width: 410, paddingBottom: 20}}>                    \n                      <BarChart \n                        title=\"% in Poverty\" \n                        var=\"poverty\"  \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                      <BarChart \n                        title=\"% Uninsured\" \n                        var=\"PCTUI\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                  </Grid.Row>\n                  <Grid.Row columns={2} style={{padding: 20, width: 410}}>                    \n                      <BarChart \n                        title=\"% in Group Quarters\" \n                        var=\"groupquater\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                      <BarChart \n                        title=\"% Male\" \n                        var=\"male\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                  </Grid.Row>\n                </Grid>\n              </Grid.Column>\n\n            </Grid.Row>  \n            <span style={{color: '#73777B', fontSize: \"14pt\", paddingBottom: 40}}>Last updated on {covidMetric.t==='n/a'?'N/A':(new Date(covidMetric.t*1000).toLocaleDateString())}</span>\n          \n          </Grid>\n          } \n          </div>\n        }\n        <Notes />\n      </Container>\n      <ReactTooltip><font size=\"+1\"> <b> {countyName} </b> </font> <br/> Click for a detailed report. </ReactTooltip>\n    </div>\n    );\n  } else{\n    return <Loader active inline='centered' />\n  }\n\n\n\n\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Grid, Breadcrumb, Header, Loader, Statistic, Table, Divider } from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport { VictoryChart, \n  VictoryContainer,\n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  VictoryLegend,\n  VictoryLine,\n  VictoryLabel, \n  VictoryScatter,\n  VictoryTooltip,\n  VictoryVoronoiContainer\n} from 'victory';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport fips2county from './fips2county.json'\nimport configs from \"./state_config.json\";\nimport _ from 'lodash';\n\nconst countyColor = '#f2a900';\nconst stateColor = \"#778899\";\nconst nationColor = '#b1b3b3';\n\nconst monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\",\n  \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"\n];\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\nfunction ScatterChart(props) {\n\n  return (\n    <VictoryChart\n      width={450}\n      height={350}\n      scale={{y: props.ylog?'log':'linear'}}\n      minDomain={{y: props.ylog?1:0}}\n      padding={{left: 80, right: 20, top: 50, bottom: 35}}>\n      {props.showLegend && <VictoryLegend\n        x={10} y={10}\n        orientation=\"horizontal\"\n        style={{labels:{ fontFamily: 'lato'}}}\n        colorScale={[stateColor, countyColor]}\n        data ={[\n          {name: ('Other counties in '+ props.stateName)}, {name: props.countyName}\n          ]}\n      />}\n      <VictoryScatter\n        data={_.filter(_.map(props.data, (d, k)=>{d.fips=k; return d;}), (d)=> (\n                 d.fips.length===5 &&\n                 d.fips.substring(0,2)===props.stateFips &&\n                 d[props.x] >= 0 && d[props.y] >= 0))}\n        sortKey={(d) => d.fips===(props.stateFips + props.countyFips)}\n        style={{ \n                 data: { fontFamily: 'lato', \n                 fill: ({datum}) => datum.fips===(props.stateFips + props.countyFips)?countyColor:stateColor,\n                 fillOpacity: ({datum}) => datum.fips===(props.stateFips + props.countyFips)?1.0:0.7} }}\n        size={4}\n        x={props.x}\n        y={props.y}\n        labels={({ datum }) => `${datum[props.y].toFixed(1)}`}\n        labelComponent={<VictoryTooltip style = {{fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 20, y: 30 }} cornerRadius={4} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n\n      />\n      <VictoryAxis \n        tickCount={4}\n                          style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {fontWeight: 300,stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n        tickFormat={(y) => (props.rescaleX?(Math.round(y/1000)+'k'):(Math.round(y*100)/100))} />\n\n      <VictoryAxis dependentAxis label={props.varMap[props.y]?props.varMap[props.y].name:props.y} \n                          style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, axisLabel: {padding: 40, fontFamily: 'lato', fontSize: \"14pt\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {fontWeight: 300,stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n        tickCount={5}\n        tickFormat={(y) => (Math.round(y*100)/100)} />\n    </VictoryChart>);\n\n}\n\nfunction BarChart(props) {\n  const colors = {\"USA\": nationColor, \n                  stateName: stateColor, \n                  countyName: countyColor};\n  if (props.stateFips !== \"_nation\") {\n\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      width={props.width || 460}\n      height={140}       \n      domainPadding={10}\n      scale={{y: props.ylog?'log':'linear'}}\n      minDomain={{y: props.ylog?1:0}}\n      padding={{left: 165, right: 50, top: 40, bottom: 50}}\n      containerComponent={<VictoryContainer responsive={false}/>}>\n      <VictoryLabel text={props.title} x={(props.width || 460)/2} y={30} textAnchor=\"middle\" style={{fontSize: \"19px\", fontFamily: 'lato'}}/>\n      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"14px\", fontFamily: 'lato'}}} />\n      <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"14px\", fontFamily: 'lato'}}} />\n      <VictoryBar\n        horizontal\n        barRatio={0.8}\n        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(1))}\n        data={[{key: 'USA', 'value': props.data['_nation'][props.var] || 0},\n              {key: props.stateName, 'value': props.data[props.stateFips][props.var] > 0? props.data[props.stateFips][props.var] : 0},\n              {key: props.countyName, 'value': props.data[props.stateFips+props.countyFips][props.var] > 0 ? props.data[props.stateFips+props.countyFips][props.var] : 0}]}\n        labelComponent={<VictoryLabel dx={5} style={{fontFamily: 'lato', fill: \"#000000\", fontSize: 14}}/>}\n        style={{\n          data: {\n            fill: ({ datum }) => datum.key === props.countyName?countyColor:datum.key === props.stateName?stateColor:nationColor\n          }\n        }}\n        x=\"key\"\n        y=\"value\"\n      />\n    </VictoryChart>);\n}\n\n\n\n\n}\n\nexport default function CountyReport() {\n\n  let { stateFips, countyFips } = useParams();\n  const [config, setConfig] = useState();\n  const [stateName, setStateName] = useState('');\n  const [countyName, setCountyName] = useState('');\n  const history = useHistory();\n  const [data, setData] = useState();\n  const [dataTS, setDataTS] = useState();\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [countyMetric, setCountyMetric] = useState({cases: 'N/A', deaths: 'N/A', \n                                                  caseRate: \"N/A\", mortality: \"N/A\", \n                                                  caseRateMean: \"N/A\", mortalityMean: \"N/A\",\n                                                  caserate7dayfig: \"N/A\", covidmortality7dayfig: \"N/A\",\n                                                  cfr:\"N/A\", t: 'n/a'});\n\n  const [stateMetric, setStateMetric] = useState({cases: 'N/A', deaths: 'N/A', \n                                                  caseRate: \"N/A\", mortality: \"N/A\", \n                                                  caseRateMean: \"N/A\", mortalityMean: \"N/A\",\n                                                  caserate7dayfig: \"N/A\", covidmortality7dayfig: \"N/A\",\n                                                  cfr:\"N/A\", t: 'n/a'});\n  const [varMap, setVarMap] = useState({});\n\n\n  const [countyCasesOutcome, setCountyCasesOutcome] = useState();\n  const [countyDeathsOutcome, setCountyDeathsOutcome] = useState();\n\n  const [stateCasesOutcome, setStateCasesOutcome] = useState();\n  const [stateDeathsOutcome, setStateDeathsOutcome] = useState();\n\n  const [nationCasesOutcome, setNationCasesOutcome] = useState();\n  const [nationDeathsOutcome, setNationDeathsOutcome] = useState();\n\n\n\n  useEffect(()=>{\n\n    const configMatched = configs.find(s => s.fips === stateFips);\n    if(!configMatched || !fips2county[stateFips+countyFips]){\n      history.push('/');\n    }else{\n      setConfig(configMatched);\n      setStateName(configMatched.name);\n      setCountyName(fips2county[stateFips+countyFips]);\n\n      fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n        .then(x => setVarMap(x));\n\n      fetch('/data/data.json').then(res => res.json())\n        .then(x => setData(x));\n      \n      fetch('/data/timeseries'+stateFips+'.json').then(res => res.json())\n        .then(x => {\n        let t = 0;\n        let countyCases = 0;\n        let stateCases = 0;\n        let nationCases = 0;\n\n        let countyDeaths = 0;\n        let stateDeaths = 0;\n        let nationDeaths = 0;\n        _.each(x, (v, k)=>{\n            if (k === stateFips + countyFips && v.length > 0 ){\n              countyCases = v[v.length-1].caserate7dayfig;\n              countyDeaths = v[v.length-1].covidmortality7dayfig;\n            }else if(k.length===2 && v.length > 0 && v[v.length-1].t > t){\n              stateCases = v[v.length-1].caserate7dayfig;\n              stateDeaths = v[v.length-1].covidmortality7dayfig;\n            }else if(k === \"_nation\" && v.length > 0 && v[v.length-1].t > t){\n              nationCases = v[v.length-1].caserate7dayfig;\n              nationDeaths = v[v.length-1].covidmortality7dayfig;\n            }\n\n          });\n\n          setCountyCasesOutcome(countyCases.toFixed(0));\n          setStateCasesOutcome(stateCases.toFixed(0));\n          setNationCasesOutcome(nationCases.toFixed(0));\n\n          setCountyDeathsOutcome(countyDeaths.toFixed(1));\n          setStateDeathsOutcome(stateDeaths.toFixed(1));\n          setNationDeathsOutcome(nationDeaths.toFixed(1));\n\n          setDataTS(x);\n        }\n      );\n    }\n  }, [stateFips]);\n\n  useEffect(() => {\n    if (dataTS && dataTS[stateFips+countyFips]){\n      setCountyMetric(_.takeRight(dataTS[stateFips+countyFips])[0]);\n    }\n  })\n\n  useEffect(() => {\n    if (dataTS && dataTS[stateFips]){\n      setStateMetric(_.takeRight(dataTS[stateFips])[0]);\n    }\n  })\n\n\n  if (data && dataTS && varMap) {\n\n  return (\n      <div>\n        <AppBar menu='countyReport'/>\n        <Container style={{marginTop: '8em', minWidth: '1260px', paddingRight: 0}}>\n          {config &&\n          <div>\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\"}}>\n            <Breadcrumb.Section style ={{color: \"#397AB9\"}} link onClick={() => history.push('/')}>United States</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section style ={{color: \"#397AB9\"}} link onClick={() => history.push('/'+stateFips)}>{stateName}</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>{countyName}</Breadcrumb.Section>\n          </Breadcrumb>\n          <div style={{fontWeight: 300, fontSize: \"24pt\", paddingTop: 30, paddingBottom: \"14pt\"}}>\n            <text>\n              <b>{countyName}, {stateName}</b>\n            </text>\n          </div>\n\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingBottom: 20}}> SUMMARY OF COVID-19 IN {countyName}, {stateName} </Divider>\n              <div>\n                <center style={{fontSize: \"14pt\", fontWeight: 400, textAlign: \"center\"}}> COVID-19 Cases in {countyName} </center >\n              </div>\n          <Grid style={{paddingTop: '2em', width: \"1260px\", paddingBottom: \"2em\"}}>\n            <Grid.Row style={{paddingLeft:20}}>\n              <Table celled fixed singleLine>\n                <Table.Header>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell colSpan='1' style={{width:150}}> </Table.HeaderCell>\n\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> TOTAL TO DATE</Table.HeaderCell>\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> TOTAL TO DATE PER 100,000</Table.HeaderCell>\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> DAILY AVERAGE</Table.HeaderCell>\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> DAILY AVERAGE PER 100,000</Table.HeaderCell>\n                  </Table.Row>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyName.match(/[^\\s]+/)} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.cases===null || countyMetric.cases < 0?'0':countyMetric.cases.toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.caseRate===null || countyMetric.caseRate < 0?'0':numberWithCommas(parseFloat(countyMetric.caseRate).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.caseRateMean===null || countyMetric.caseRateMean < 0?'0':numberWithCommas(parseFloat(countyMetric.caseRateMean).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.caserate7dayfig===null || countyMetric.caserate7dayfig < 0?'0':numberWithCommas(parseFloat(countyMetric.caserate7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n\n                  </Table.Row>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateName} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.cases===null || stateMetric.cases < 0?'0':stateMetric.cases.toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.caseRate===null || stateMetric.caseRate < 0?'0':numberWithCommas(parseFloat(stateMetric.caseRate).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.caseRateMean===null || stateMetric.caseRateMean < 0?'0':numberWithCommas(parseFloat(stateMetric.caseRateMean).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.caserate7dayfig===null || stateMetric.caserate7dayfig < 0?'0':numberWithCommas(parseFloat(stateMetric.caserate7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n\n                  </Table.Row>\n                </Table.Header>\n              </Table>\n            </Grid.Row>\n          </Grid>\n          <div>\n            <center style={{fontSize: \"14pt\", fontWeight: 400, textAlign: \"center\"}}> <br/>COVID-19 Deaths in {countyName} </center >\n          </div>  \n          <Grid style={{paddingTop: '2em', width: \"1260px\"}}>\n            <Grid.Row style={{paddingLeft:20}}>\n              <Table celled fixed singleLine>\n                <Table.Header>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell colSpan='1' style={{width:150}}> </Table.HeaderCell>\n\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> TOTAL TO DATE</Table.HeaderCell>\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> TOTAL TO DATE PER 100,000</Table.HeaderCell>\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> DAILY AVERAGE</Table.HeaderCell>\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> DAILY AVERAGE PER 100,000</Table.HeaderCell>\n                    <Table.HeaderCell colSpan='1' style={{width:200, fontSize: '14px'}}> CASE FATALITY RATIO</Table.HeaderCell>\n                  </Table.Row>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyName.match(/[^\\s]+/)} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.deaths===null || countyMetric.deaths < 0?'0':countyMetric.deaths.toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.mortality===null || countyMetric.mortality < 0?'0':numberWithCommas(parseFloat(countyMetric.mortality).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.mortalityMean===null || countyMetric.mortalityMean < 0?'0':numberWithCommas(parseFloat(countyMetric.mortalityMean).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {countyMetric.covidmortality7dayfig===null || countyMetric.covidmortality7dayfig < 0?'0':numberWithCommas(parseFloat(countyMetric.covidmortality7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> Deaths : Cases </Table.HeaderCell>\n\n                  </Table.Row>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateName} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.deaths===null || stateMetric.deaths < 0?'0':stateMetric.deaths.toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.mortality===null || stateMetric.mortality < 0?'0':numberWithCommas(parseFloat(stateMetric.mortality).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.mortalityMean===null || stateMetric.mortalityMean < 0?'0':numberWithCommas(parseFloat(stateMetric.mortalityMean).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.covidmortality7dayfig===null || stateMetric.covidmortality7dayfig < 0?'0':numberWithCommas(parseFloat(stateMetric.covidmortality7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateMetric.cfr===null || stateMetric.cfr < 0?'0':numberWithCommas(parseFloat(stateMetric.cfr).toFixed(2)).toLocaleString() + \"%\"} </Table.HeaderCell>\n\n                  </Table.Row>\n                </Table.Header>\n              </Table>\n            </Grid.Row>\n\n            <span style={{ color: '#73777B', paddingTop: 20, fontSize:\"14pt\"}}>Last updated on {countyMetric.t==='n/a'?'N/A':(new Date(countyMetric.t*1000).toLocaleDateString())}</span>\n\n          </Grid>\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 51, paddingBottom: 40}}>COVID-19 Outcomes </Divider>\n          <Grid columns={2} centered>\n            <Grid.Row>\n              <Grid.Column>\n                <div style = {{paddingBottom: 20}}>\n                  <text x={0} y={20} style={{fontSize: 20, fontWeight: 400}}>Average Daily COVID-19 Cases /100,000 </text>\n                </div>\n                      <svg width = \"370\" height = \"40\">\n                          <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                          <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                          <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                          <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                          <rect x = {stateName.length > 10? 230: 190} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                          <text x = {stateName.length > 10? 245: 205} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text>\n                      </svg>\n                <VictoryChart theme={VictoryTheme.material}\n                  width={550}\n                  height={300}       \n                  padding={{left: 50, right: 60, top: 0, bottom: 40}}\n                  containerComponent={<VictoryVoronoiContainer/>}\n                  \n                  >\n\n\n                  <VictoryAxis\n                    style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n\n                    tickFormat={(t)=> monthNames[new Date(t*1000).getMonth()] + \" \" +  new Date(t*1000).getDate()}\n                    tickValues={[\n                      dataTS[\"_nation\"][0].t,\n                      dataTS[\"_nation\"][30].t,\n                      dataTS[\"_nation\"][61].t,\n                      dataTS[\"_nation\"][91].t,\n                      dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]}/>\n                  <VictoryAxis dependentAxis tickCount={5}\n                    style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n\n                    tickFormat={(y) => (y<1000?y:(y/1000+'k'))}\n                    />\n                  <VictoryGroup \n                    colorScale={[nationColor, stateColor, countyColor]}\n                  >\n                    <VictoryLine data={dataTS[\"_nation\"]}\n                      x='t' y='caserate7dayfig'\n                      labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                      labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                      style={{\n                          data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                      }}\n                      />\n                    <VictoryLine data={dataTS[stateFips]}\n                      x='t' y='caserate7dayfig'\n                      labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                      labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                      style={{\n                          data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                      }}\n                      />\n                    <VictoryLine data={dataTS[stateFips+countyFips]?dataTS[stateFips+countyFips]:dataTS[\"99999\"]}\n                      x='t' y='caserate7dayfig'\n                      labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                      labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                      style={{\n                          data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                      }}\n\n                      />\n                  </VictoryGroup>\n                </VictoryChart>\n              </Grid.Column>\n              <Grid.Column >\n                <div style = {{paddingBottom: 20}}>\n                  <text x={0} y={20} style={{fontSize: 20, paddingBottom: 10, fontWeight: 400}}>Average Daily COVID-19 Deaths /100,000 </text>\n                </div>\n                      <svg width = \"370\" height = \"40\">\n                          <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                          <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                          <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                          <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                          <rect x = {stateName.length > 10? 230: 190} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                          <text x = {stateName.length > 10? 245: 205} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text>\n                      </svg>\n                <VictoryChart theme={VictoryTheme.material}\n                  width={550}\n                  height={300}       \n                  padding={{left: 50, right: 60, top: 0, bottom: 40}}\n                  containerComponent={<VictoryVoronoiContainer/>}\n                  \n                  >\n\n                  <VictoryAxis\n                    style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n                    tickFormat={(t)=> monthNames[new Date(t*1000).getMonth()] + \" \" +  new Date(t*1000).getDate()}\n                    tickValues={[\n                      dataTS[\"_nation\"][0].t,\n                      dataTS[\"_nation\"][30].t,\n                      dataTS[\"_nation\"][61].t,\n                      dataTS[\"_nation\"][91].t,\n                      dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]}/>\n                  <VictoryAxis dependentAxis tickCount={5}\n                    style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n                    tickFormat={(y) => (y<1000?y:(y/1000+'k'))}\n                    />\n                  <VictoryGroup \n                    colorScale={[nationColor, stateColor, countyColor]}\n                  >\n                    <VictoryLine data={dataTS[\"_nation\"]}\n                      x='t' y='covidmortality7dayfig'\n                      labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                      labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                      style={{\n                          data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                      }}\n                      />\n                    <VictoryLine data={dataTS[stateFips]}\n                      x='t' y='covidmortality7dayfig'\n                      labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                      labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                      style={{\n                          data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                      }}\n                      />\n                    <VictoryLine data={dataTS[stateFips+countyFips]?dataTS[stateFips+countyFips]:dataTS[\"99999\"]}\n                      x='t' y='covidmortality7dayfig'\n                      labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                      labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                      style={{\n                          data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                      }}\n                      />\n                  </VictoryGroup>\n                </VictoryChart>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row columns={2} style={{paddingBottom: 50}}>\n              <Grid.Column>\n                <Header as='h2' style={{fontWeight: 400, width: 540, paddingLeft: 55}}>\n                  <Header.Content style={{fontSize: \"14pt\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 540, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                      As of <b>{countyMetric.t==='n/a'?'N/A':(new Date(countyMetric.t*1000).toLocaleDateString())}</b>, the daily average of new COVID-19 cases<br/> \n                      in <b>{countyName}</b> numbered <b>{numberWithCommas(parseFloat(countyCasesOutcome))} case(s) per 100,000 residents</b>. In comparison, the daily average in {stateName} was <b>{numberWithCommas(parseFloat(stateCasesOutcome))}</b> case(s) per 100,000 and in the United States was <b>{numberWithCommas(parseFloat(nationCasesOutcome))}</b> case(s) per 100,000.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              </Grid.Column>\n              <Grid.Column>\n                <Header as='h2' style={{fontWeight: 400, width: 550, paddingLeft: 55}}>\n                  <Header.Content style={{fontSize: \"14pt\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 570, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                      As of <b>{countyMetric.t==='n/a'?'N/A':(new Date(countyMetric.t*1000).toLocaleDateString())}</b>, the daily average of new COVID-19 deaths<br/>\n                      in <b>{countyName}</b> numbered <b>{numberWithCommas(parseFloat(countyDeathsOutcome))} death(s) per 100,000 residents</b>. In comparison, the daily average in {stateName} was <b>{numberWithCommas(parseFloat(stateDeathsOutcome))}</b> death(s) per 100,000 and in the United States was <b>{numberWithCommas(parseFloat(nationDeathsOutcome))}</b> death(s) per 100,000.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <span style={{color: '#73777B', fontSize:\"14pt\"}}>Last updated on {countyMetric.t==='n/a'?'N/A':(new Date(countyMetric.t*1000).toLocaleDateString())}</span>\n\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 40, paddingBottom: 10}}>County Characteristics</Divider>\n\n          <center style = {{marginLeft: 250, paddingBottom: 20, width: 750}}>\n            <Header as='h2' style={{fontWeight: 400, width: 750}}>\n                  <Header.Content style={{fontSize: \"14pt\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 750, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                      Social, economic, health and environmental factors impact an individual’s risk of infection and COVID-19 severity. \n                      Counties with large groups of vulnerable people may be disproportionately impacted by COVID-19. The table below shows {countyName}, {stateName}, \n                      and national statistics regarding the proportion of individuals falling into various high risk categories.\n                      <br/> <br/>\n                      <b>Note:</b> These are not characteristics of COVID-19.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n\n          </center>\n          <Grid>\n            <Grid.Row columns={3}>                    \n              <Grid.Column>\n                <BarChart \n                  title=\"% African American\" \n                  var=\"black\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% Diabetes\" \n                  var=\"diabetes\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} /> \n                <BarChart \n                  title=\"% Over 65 y/o\" \n                  var=\"age65over\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                  \n              </Grid.Column>\n              <Grid.Column>\n                <BarChart \n                  title=\"% Hispanic or Latino\" \n                  var=\"hispanic\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% in Poverty\" \n                  var=\"poverty\" \n                  width={400}                 \n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% in Group Quarters\" \n                  var=\"groupquater\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                \n              </Grid.Column>\n\n\n              <Grid.Column>\n                <BarChart \n                  title=\"% Obese\" \n                  var=\"obesity\"\n                  width={400} \n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% Uninsured\" \n                  var=\"PCTUI\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% Male\" \n                  var=\"male\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                \n              </Grid.Column>\n            </Grid.Row>\n            <span style={{color: '#73777B', fontSize:\"14pt\"}}>Last updated on {countyMetric.t==='n/a'?'N/A':(new Date(countyMetric.t*1000).toLocaleDateString())}</span>\n          </Grid>\n\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 54, paddingBottom: 25}}> County Characteristics and Outcomes</Divider>\n          <Grid columns={3}>\n            <Grid.Row>\n              <Grid.Column>\n                <ScatterChart x=\"casesfig\" y=\"deathsfig\" \n                  showLegend={true}\n                  varMap={varMap}\n                  xlog={true} \n                  ylog={true} \n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"casesfig\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"caseratefig\" y=\"covidmortalityfig\" \n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"caseratefig\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME1\" y=\"covidmortalityfig\"\n                 varMap={varMap} \n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"RPL_THEME1\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME2\" y=\"covidmortalityfig\"\n                  showLegend={true}\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"RPL_THEME2\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME3\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"RPL_THEME3\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME4\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"RPL_THEME4\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <ScatterChart x=\"popden\" y=\"covidmortalityfig\"\n                  showLegend={true}\n                  xlog={true}\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"popden\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"hhincome\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  xlog={true}\n                  rescaleX={true}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"hhincome\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"black\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -8}}>\n                    <text style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"14pt\"}}>\n                      <b>{varMap[\"black\"].name}</b>\n                    </text>\n                  </Header.Content>\n              </Grid.Column>\n            </Grid.Row>\n            <span style={{color: '#73777B', fontSize:\"14pt\", paddingTop: \"30px\"}}>Last updated on {countyMetric.t==='n/a'?'N/A':(new Date(countyMetric.t*1000).toLocaleDateString())}</span>\n\n          </Grid>\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '20pt', paddingTop: 54, paddingBottom: 20}}>Data Table</Divider>\n          <Table striped compact basic='very' style={{fontSize: \"14pt\"}}>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>County Population Characteristics</Table.HeaderCell>\n                <Table.HeaderCell>{countyName}</Table.HeaderCell>\n                <Table.HeaderCell>{stateName}</Table.HeaderCell>\n                <Table.HeaderCell>United States</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                  {_.map(data[stateFips + countyFips],\n                    (v, k) => {\n                      var rmList = [\"casesfig\", \"deathsfig\", \"dailycases\", \"dailydeaths\", \"mean7daycases\", \"mean7daydeaths\", \"covidmortalityfig\"\n                        , \"caseratefig\", \"covidmortality7dayfig\", \"caserate7dayfig\", \"fips\"];\n                      if (!rmList.includes(k)) {\n                        return (\n                          <Table.Row key={k}>\n                            <Table.Cell>{varMap[k] ? varMap[k].name : k}</Table.Cell>\n                            <Table.Cell>{isNaN(v) ? v : varMap[k].name === \"Socioeconomic Vulnerability\" || \n                                                        varMap[k].name === \"Household Composition Vulnerability\" || \n                                                        varMap[k].name === \"Minority/Language Vulnerability\" || \n                                                        varMap[k].name === \"Housing/Transportaion Vulnerability\" ||\n                                                        varMap[k].name === \"% Native American\" || \n                                                        varMap[k].name === \"% in Group Quarters\" ? numberWithCommas(parseFloat(v).toFixed(1)): numberWithCommas(parseFloat(v).toFixed(0))}</Table.Cell>\n                            <Table.Cell>{isNaN(data[stateFips][k]) ? data[stateFips][k] : numberWithCommas(parseFloat(data[stateFips][k]).toFixed(0)) === \"NaN\" ? \"\" : \n                                                        varMap[k].name === \"% Native American\" || varMap[k].name === \"% in Group Quarters\" ? numberWithCommas(parseFloat(data[stateFips][k]).toFixed(1)) : numberWithCommas(parseFloat(data[stateFips][k]).toFixed(0))}</Table.Cell>\n                            <Table.Cell>{isNaN(data['_nation'][k]) ? data[stateFips][k] : numberWithCommas(parseFloat(data['_nation'][k]).toFixed(0)) === \"NaN\" ? \"\" : \n                                                        varMap[k].name === \"% Native American\" || varMap[k].name === \"% in Group Quarters\" ? numberWithCommas(parseFloat(data['_nation'][k]).toFixed(1)) : numberWithCommas(parseFloat(data['_nation'][k]).toFixed(0))}</Table.Cell>\n                          </Table.Row>\n                        )\n                      }\n                    })}\n                </Table.Body>\n          </Table>\n          <a style ={{color: \"#397AB9\", fontSize: \"14pt\", marginLeft: 12}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> Data Sources and Definitions</a>\n\n          <Divider hidden/>\n          <span style={{color: '#73777B', fontSize:\"14pt\"}}>Last updated on {countyMetric.t==='n/a'?'N/A':(new Date(countyMetric.t*1000).toLocaleDateString())}</span>\n\n          </div>\n        }\n        <Notes />\n      </Container>\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\n    </div>\n    );\n  } else{\n    return <Loader active inline='centered' />\n  }\n\n\n\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Dropdown, Header, Grid } from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport stateOptions from \"./stateOptions.json\";\nimport configs from \"./state_config.json\";\nimport _ from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\n\n\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\nconst colorPalette2 = [\n        \"#e1dce2\",\n        \"#71C7EC\",\n        \"#1EBBD7\",\n        \"#0B92BF\", \n        \"#0270A1\", \n        \"#024174\",  \n      ];\n\nexport default function MapState() {\n\n  const [stateFips, setStateFips] = useState();\n  const [measureA, setMeasureA] = useState();\n  const [measureB, setMeasureB] = useState();  \n  const [colorScaleA, setColorScaleA] = useState();\n  const [colorScaleB, setColorScaleB] = useState();\n  const [config, setConfig] = useState();\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [data, setData] = useState();\n  const [varMap, setVarMap] = useState({});\n  const [measureOptionsA, setMeasureOptionsA] = useState([]);\n  const [measureOptionsB, setMeasureOptionsB] = useState([]);\n\n  const [legendSplitA, setLegendSplitA] = useState([]);\n  const [legendSplitB, setLegendSplitB] = useState([]);\n\n  const [legendMaxA, setLegendMaxA] = useState([]);\n  const [legendMaxB, setLegendMaxB] = useState([]);\n\n  const [legendMinA, setLegendMinA] = useState([]);\n  const [legendMinB, setLegendMinB] = useState([]);\n\n  const [name, setName] = useState([]);\n  const [stateName, setStateName] = useState('');\n\n\n\n  useEffect(()=>{\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMeasureOptionsA(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.name, text: d.name, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\") && (d.group === \"outcomes\")));\n        setMeasureOptionsB(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.name, text: d.name, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\") && (d.group !== \"outcomes\")));\n\n      });\n  }, []);\n\n  useEffect(()=>{\n    \n    const configMatched = configs.find(s => s.fips === stateFips);\n    if (!configMatched){\n      setStateName(\"Select State\");\n    }else{\n\n      setConfig(configMatched);\n\n      setStateName(configMatched.name);\n    }\n\n\n    if (varMap && stateFips !== \"_nation\"){\n      fetch('/data/data.json').then(res => res.json())\n        .then(data => {\n          let coldata = {};\n          const dataFltrd = _.filter(_.map(data, (d, k)=>{d.fips=k; return d;}), (d)=> (\n                 d.fips.length===5 &&\n                 d.fips.substring(0,2)===stateFips));\n          _.each(dataFltrd, (d) => {\n            _.each(d, (v, k)=>{\n              if (varMap[k]){\n                if (!(varMap[k].name in coldata)){\n                  coldata[varMap[k].name] = {};\n                }\n                coldata[varMap[k].name][d.fips] = v; \n              }\n            });\n          });\n          setData(coldata);\n\n        });\n      setMeasureA(null);\n      setMeasureB(null);\n      setColorScaleA(null);\n      setColorScaleB(null);\n    } else if (varMap && stateFips === \"_nation\"){\n      fetch('/data/data.json').then(res => res.json())\n        .then(data => {\n          let coldata = {};\n          const dataFltrd = _.filter(_.map(data, (d, k)=>{d.fips=k; return d;}), (d)=> (\n                 d.fips.length===5 ));\n          _.each(dataFltrd, (d) => {\n            _.each(d, (v, k)=>{\n              if (varMap[k]){\n                if (!(varMap[k].name in coldata)){\n                  coldata[varMap[k].name] = {};\n                }\n                coldata[varMap[k].name][d.fips] = v; \n              }\n            });\n          });\n          setData(coldata);\n\n        });\n      setMeasureA(null);\n      setMeasureB(null);\n      setColorScaleA(null);\n      setColorScaleB(null);\n    }\n  }, [stateFips]);\n\n  useEffect(() => {\n\n    if (measureA && stateFips){\n      const cs = scaleQuantile()\n        .domain(_.map(data[measureA], d=>d))\n        .range(colorPalette);\n      let scaleMap = {}\n      _.each(data[measureA], d=>{\n        scaleMap[d] = cs(d)});\n      setColorScaleA(scaleMap);\n      \n      var splitA = scaleQuantile()\n        .domain(_.map(data[measureA], d=>d))\n        .range(colorPalette);\n\n      setLegendSplitA(splitA.quantiles());\n\n      var maxA = 0\n      var minA = 0\n      _.each(data[measureA],d=>{\n        if (d > maxA) {\n          maxA = d\n        }else if (d < minA && d >= 0){\n            minA = d\n        }\n      });\n\n      if (maxA > 999) {\n        setLegendMaxA((maxA/1000).toFixed(0) + \"K\");\n      }else{\n        setLegendMaxA(maxA.toFixed(0));\n      }\n      setLegendMinA(minA.toFixed(0));\n\n      setName(measureA);\n    } else if (stateFips === \"_nation\") {\n    fetch('/data/data.json').then(res => res.json())\n      .then(x => {\n        \n        setData(x);\n      \n        const cs = scaleQuantile()\n        .domain(_.map(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[measureA] >= 0 &&\n              d.fips.length === 5)),\n          d=> d[measureA]))\n        .range(colorPalette);\n\n        let scaleMap = {}\n        _.each(x, d=>{\n          if(d[measureA] >= 0){\n          scaleMap[d[measureA]] = cs(d[measureA])}});\n      \n        setColorScaleA(scaleMap);\n        var maxA = 0\n        var minA = 100\n        _.each(x, d=> { \n          if (d[measureA] > maxA && d.fips.length === 5) {\n            maxA = d[measureA]\n          } else if (d.fips.length === 5 && d[measureA] < minA && d[measureA] >= 0){\n            minA = d[measureA]\n          }\n        });\n\n        if (maxA > 999) {\n          maxA = (maxA/1000).toFixed(0) + \"K\";\n          setLegendMaxA(maxA);\n        }else{\n          setLegendMaxA(maxA.toFixed(0));\n\n        }\n        setLegendMinA(minA.toFixed(0));\n\n        var splitA = scaleQuantile()\n        .domain(_.map(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[measureA] >= 0 &&\n              d.fips.length === 5)),\n          d=> d[measureA]))\n        .range(colorPalette);\n\n        setLegendSplitA(splitA.quantiles());\n        })\n\n      };\n  }, [measureA]);\n\n  useEffect(() => {\n    if (measureB){\n      const cs = scaleQuantile()\n        .domain(_.map(data[measureB], d=>d))\n        .range(colorPalette2);\n      let scaleMap = {}\n      _.each(data[measureB], d=>{\n        scaleMap[d] = cs(d)});\n      setColorScaleB(scaleMap);\n\n      var splitB = scaleQuantile()\n        .domain(_.map(data[measureB], d=>d))\n        .range(colorPalette);\n\n      setLegendSplitB(splitB.quantiles());\n\n      var maxB = 0\n      var minB = 0\n      _.each(data[measureB],d=>{\n        if (d > maxB) {\n          maxB = d\n        }else if (d < minB && d >=0){\n          minB = d\n        }\n      });\n      if (maxB > 999999) {\n        setLegendMaxB((maxB/1000000).toFixed(0) + \"M\");\n      }else if (maxB > 999) {\n        setLegendMaxB((maxB/1000).toFixed(0) + \"K\");\n      }else{\n        setLegendMaxB(maxB.toFixed(0));\n\n      }\n      setLegendMinB(minB.toFixed(0));\n    }else if (stateFips === \"_nation\") {\n    fetch('/data/data.json').then(res => res.json())\n      .then(x => {\n        \n        setData(x);\n      \n        const cs = scaleQuantile()\n        .domain(_.map(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[measureB] >= 0 &&\n              d.fips.length === 5)),\n          d=> d[measureB]))\n        .range(colorPalette);\n\n        let scaleMap = {}\n        _.each(x, d=>{\n          if(d[measureB] >= 0){\n          scaleMap[d[measureB]] = cs(d[measureB])}});\n      \n        setColorScaleB(scaleMap);\n        var maxB = 0\n        var minB = 100\n        _.each(x, d=> { \n          if (d[measureB] > maxB && d.fips.length === 5) {\n            maxB = d[measureB]\n          } else if (d.fips.length === 5 && d[measureB] < minB && d[measureB] >= 0){\n            minB = d[measureB]\n          }\n        });\n\n        if (maxB > 999) {\n          maxB = (maxB/1000).toFixed(0) + \"K\";\n          setLegendMaxB(maxB);\n        }else{\n          setLegendMaxB(maxB.toFixed(0));\n\n        }\n        setLegendMinB(minB.toFixed(0));\n\n        var splitB = scaleQuantile()\n        .domain(_.map(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[measureB] >= 0 &&\n              d.fips.length === 5)),\n          d=> d[measureB]))\n        .range(colorPalette);\n\n        setLegendSplitB(splitB.quantiles());\n        })\n\n      };\n  }, [measureB]);  \n\n\n  console.log();\n  return (\n      <div>\n        <AppBar menu='mapState'/>\n        <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n          <Header as='h3'>\n            <Header.Content style={{paddingTop: 8, fontWeight: 400, fontSize: \"14pt\"}}>\n\n              Side-by-Side View of Counties in&nbsp;\n              <Dropdown\n                style={{background: '#fff', \n                        fontWeight: 400, \n                        fontSize: \"14pt\",\n                        width: '200px',\n                        borderTop: 'none',\n                        borderLeft: 'none',\n                        borderRight: 'none', \n                        borderBottom: '1px solid #bdbfc1',\n                        borderRadius: 0,\n                        minHeight: '2.2em',\n                        paddingBottom: '0.2em'}}\n                text= {stateName}\n                search\n                selection\n                options={stateOptions}\n                onChange={(e, { value }) => {\n                  setStateFips(value);\n                }}\n              />\n            </Header.Content>\n          </Header>\n\n          {config &&\n          <Grid columns={2} style={{paddingTop: '2em', minHeight: '400px'}}>\n            <Grid.Row>\n              <Grid.Column>\n                <Grid columns={2} centered>\n                  <Grid.Column>\n                  <svg width = \"500\" height=\"30\">\n                       <text x={0} y={15} style={{fontSize: '14pt'}}>COVID-19 Outcome Measure:  </text>\n                  </svg>\n                    <Dropdown\n                      style={{background: '#fff', \n                              fontWeight: 400, \n                              fontSize: \"14pt\",\n                              borderTop: 'none',\n                              borderLeft: 'none',\n                              borderRight: 'none', \n                              borderBottom: '1ox solid #bdbfc1',\n                              borderRadius: 0}}\n                      text= {measureA ? measureA:\"Select Measure\"}\n                      search\n                      selection\n                      value={measureA}\n                      options={measureOptionsA}\n                      onChange={(e, { value }) => {\n                        setMeasureA(value)\n                      }}\n                    />\n\n                    <svg width=\"450\" height=\"110\">\n                            \n                            {_.map(legendSplitA, (split, i) => {\n                              if (legendSplitA[0].toFixed(0) === legendSplitA[1].toFixed(0) && legendSplitA[1].toFixed(0) === legendSplitA[2].toFixed(0) && legendSplitA[2].toFixed(0) === legendSplitA[3].toFixed(0) && legendSplitA[3].toFixed(0) === legendSplitA[4].toFixed(0) ) {\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitA[i].toFixed(2) < 0? 0:legendSplitA[i].toFixed(2)} </text>\n                              }else if (legendSplitA[i].toFixed(0) < 1) {\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitA[i].toFixed(1) < 0? 0:legendSplitA[i].toFixed(1)} </text>\n                              }else if (legendSplitA[i] > 999) {\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {(legendSplitA[i]/1000).toFixed(0) < 0? 0:(legendSplitA[i]/1000).toFixed(0)}K </text>\n                              }\n                              return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitA[i].toFixed(0) < 0? 0:legendSplitA[i].toFixed(0)} </text>                    \n                            })}\n                            <text x={0} y={34} style={{fontSize: '1.0em'}}> {legendMinA} </text> \n                            <text x={240} y={34} style={{fontSize: '1.0em'}}> {legendMaxA} </text> \n\n\n                            {_.map(colorPalette, (color, i) => {\n                              return <rect key={i} x={40*i} y={40} width=\"40\" height=\"40\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                            })} \n\n\n                            <text x={0} y={99} style={{fontSize: '1.2em'}}> Low </text>\n                            <text x={40 * (colorPalette.length - 1)} y={99} style={{fontSize: '1.2em'}}> High </text> \n\n\n                            <rect x={280} y={40} width=\"40\" height=\"40\" style={{fill: '#FFFFFF', strokeWidth:0.1, stroke: '#000000'}}/>\n                            <text x={330} y={56} style={{fontSize: '1.2em'}}> None </text>\n                            <text x={330} y={76} style={{fontSize: '1.2em'}}> Reported </text>\n\n                    </svg>\n\n                  </Grid.Column>\n                </Grid>\n              </Grid.Column>\n              <Grid.Column>\n                <Grid columns={2} centered>\n                  <Grid.Column>\n\n                  <svg width = \"500\" height=\"30\">\n                      <text x={0} y={15} style={{fontSize: \"14pt\"}}>COVID-19 County Population Characteristics:  </text>\n                  </svg>\n\n                    <Dropdown\n                      style={{background: '#fff', \n                              fontWeight: 400, \n                              fontSize: \"14pt\",\n                              borderTop: 'none',\n                              borderLeft: 'none',\n                              borderRight: 'none', \n                              borderBottom: '1ox solid #bdbfc1',\n                              borderRadius: 0}}\n                      text= {measureB ? measureB:\"Select Characteristic\"}\n                      fluid\n                      labeled\n                      search\n                      selection\n                      value={measureB}\n                      options={measureOptionsB}\n                      onChange={(e, { value }) => {\n                        setMeasureB(value)\n                      }}\n                    />\n\n                    <svg width=\"450\" height=\"110\">\n                            \n                            {_.map(legendSplitB, (split, i) => {\n                              if (legendSplitB[0].toFixed(0) === legendSplitB[1].toFixed(0) && legendSplitB[1].toFixed(0) === legendSplitB[2].toFixed(0) && legendSplitB[2].toFixed(0) === legendSplitB[3].toFixed(0) && legendSplitB[3].toFixed(0) === legendSplitB[4].toFixed(0) ) {\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitB[i].toFixed(2) < 0? 0:legendSplitB[i].toFixed(2)} </text>\n                              }else if (legendSplitB[i].toFixed(0) < 1) {\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitB[i].toFixed(1)< 0? 0:legendSplitB[i].toFixed(1)} </text>\n                              }else if (legendSplitB[i] > 999999) {\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {(legendSplitB[i]/1000).toFixed(0)< 0? 0:(legendSplitB[i]/1000000).toFixed(0)}M </text>\n                              }else if (legendSplitB[i] > 999) {\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {(legendSplitB[i]/1000).toFixed(0)< 0? 0:(legendSplitB[i]/1000).toFixed(0)}K </text>\n                              }\n                              return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitB[i].toFixed(0)< 0? 0:legendSplitB[i].toFixed(0)} </text>                    \n                            })}   \n                            <text x={0} y={34} style={{fontSize: '1.0em'}}> {legendMinB} </text> \n                            <text x={240} y={34} style={{fontSize: '1.0em'}}> {legendMaxB} </text>\n\n\n                            {_.map(colorPalette2, (color, i) => {\n                              return <rect key={i} x={40*i} y={40} width=\"40\" height=\"40\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                            })} \n\n\n                            <text x={0} y={99} style={{fontSize: '1.2em'}}>Low</text>\n                            <text x={40 * (colorPalette2.length - 1)} y={99} style={{fontSize: '1.2em'}}>High</text> \n\n                            <rect x={280} y={40} width=\"40\" height=\"40\" style={{fill: '#FFFFFF', strokeWidth:0.1, stroke: '#000000'}}/>\n                            <text x={330} y={56} style={{fontSize: '1.2em'}}> None </text>\n                            <text x={330} y={76} style={{fontSize: '1.2em'}}> Reported </text>\n\n                    </svg>\n\n                  </Grid.Column>\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <ComposableMap projection=\"geoAlbersUsa\" \n                  projectionConfig={{scale:`${config.scale}`}} \n                  width={600} \n                  height={600} \n                  strokeWidth = {0.1}\n                  stroke = 'black'\n                  data-tip=\"\"\n                  offsetX={config.offsetX}\n                  offsetY={config.offsetY}>\n                  <Geographies geography={config.url}>\n                    {({geographies}) => geographies.map(geo => \n                      <Geography \n                        key={geo.rsmKey} \n                        geography={geo} \n                        onMouseEnter={()=>{\n                          if(measureA && colorScaleA){\n                            const cur = data[measureA][geo.properties.COUNTYFP];\n                            setTooltipContent(cur?(Math.round(cur*100)/100):'');\n                          }\n                        }}\n                        onMouseLeave={()=>{\n                          setTooltipContent(\"\")\n                        }}\n                        fill={(measureA && colorScaleA && stateFips === \"_nation\" && data[measureA][geo.id] > 0)? colorScaleA[data[measureA][geo.id]]: \n                                (measureA && colorScaleA && stateFips === \"_nation\" && data[measureA][geo.id] === 0)? '#e1dce2':\n                                (measureA && colorScaleA && data[measureA][stateFips+geo.properties.COUNTYFP])?\n                                colorScaleA[data[measureA][stateFips+geo.properties.COUNTYFP]] : \"#FFFFFF\"}\n                      />\n                    )}\n                  </Geographies>\n                </ComposableMap>\n              </Grid.Column>\n              <Grid.Column>\n                <ComposableMap projection=\"geoAlbersUsa\" \n                  projectionConfig={{scale:`${config.scale}`}} \n                  width={600} \n                  height={600} \n                  strokeWidth = {0.1}\n                  stroke = 'black'\n                  data-tip=\"\"\n                  offsetX={config.offsetX}\n                  offsetY={config.offsetY}>\n                  <Geographies geography={config.url}>\n                    {({geographies}) => geographies.map(geo => \n                      <Geography \n                        key={geo.rsmKey} \n                        geography={geo} \n                        onMouseEnter={()=>{\n                          if(measureB && colorScaleB){\n                            const cur = data[measureB][geo.properties.COUNTYFP];\n                            setTooltipContent(cur?(Math.round(cur*100)/100):'');\n                          }\n                        }}\n                        onMouseLeave={()=>{\n                          setTooltipContent(\"\")\n                        }}\n                        fill = {(measureB && colorScaleB && stateFips === \"_nation\" && data[measureB][geo.id] > 0)? colorScaleB[data[measureB][geo.id]]: \n                                (measureB && colorScaleB && stateFips === \"_nation\" && data[measureB][geo.id] === 0)? '#e1dce2':\n                                (measureB && colorScaleB && data[measureB][stateFips+geo.properties.COUNTYFP])?\n                                colorScaleB[data[measureB][stateFips+geo.properties.COUNTYFP]] : \"#FFFFFF\"}\n                      />\n                    )}\n                  </Geographies>\n                </ComposableMap>\n                <ReactTooltip>{tooltipContent}</ReactTooltip>\n              </Grid.Column>\n            </Grid.Row>  \n          </Grid>\n          }\n          <Notes />\n        </Container>\n\n      </div>\n    );\n\n}","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, List, Divider, Image, Header, Segment } from 'semantic-ui-react'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nfunction myFunction() {\n  alert('Link is copied to clipboard!');\n  \n}\n\nexport default function AboutUs(props){\n\n  return (\n    <div>\n      <AppBar menu='aboutUs'/>\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n\n        <Grid row = {1} style = {{marginLeft: -10, paddingTop: 30}}>\n            <Header style={{fontWeight: 400, fontSize: \"24pt\", paddingBottom: 0}}>\n                About This Dashboard\n\n                <Header.Subheader style={{color: \"#000000\", paddingTop: 13, lineHeight: \"24pt\", fontSize: \"14pt\"}}>Early data about COVID-19 suggests that communities are affected very differently \n                due to social determinants of health like population density, poverty, residential segregation, underlying chronic health conditions, and availability of medical services.\n                 In order to predict how the epidemic will continue to unfold and prepare for the future, it is critical to understand differences in underlying risk factors. \n                 There is no one-size-fits all approach to combat the epidemic, but accurate and meaningful data is a key component of a robust public health response that is \n                 informed by contextual factors and prioritizes health equity.\n                  <br/><br/>\n                  The COVID-19 Health Equity Dashboard (<a style ={{color: \"#397AB9\"}} href=\"COVID19.emory.edu\"> COVID19.emory.edu</a>) seeks to fill the gaps in county-level data about the virus and underlying social determinants of health. \n                  Our goal is for this Dashboard to facilitate easy comparisons of counties with respect to COVID-19 outcomes and social determinants. \n                  We hope this becomes a valuable resource for and critical component of tailored public health responses to COVID-19 across the wide range of environments that Americans inhabit.\n                </Header.Subheader>\n            </Header>\n\n            \n          </Grid>\n        <Grid columns={2}>\n          <Grid columns={2} style = {{width : 600, marginLeft: -10}}>\n\n            <Header as='h1' style={{fontWeight: 400, width: 600}}>\n              <Header.Content style = {{ fontSize: \"24pt\", paddingTop: 46, lineHeight: \"24pt\"}}>\n                Team\n                <Header.Subheader style={{color: \"#000000\", paddingTop: 17, paddingBottom: 0, lineHeight: \"24pt\", fontSize: \"14pt\"}}>We are an interdisciplinary group of researchers, clinicians, and students with expertise in epidemiology, social determinants of health, infectious disease, chronic disease, and computer science.</Header.Subheader>\n              </Header.Content>\n            </Header>\n            <Grid.Column>\n              <List bulleted style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Shivani A. Patel, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>K. M. Venkat Narayan, MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Carlos Del Rio, MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Robert F. Breiman, MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Mark Hutcheson, BS</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Yubin Park, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Daesung Choi, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Pooja Naik, B.Pharm</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Star Liu</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Leanna Ehrlich, BA</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Neil K. Mehta, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Vince Marconi, MD</List.Item>                \n              </List>\n            </Grid.Column>\n            <Grid.Column>\n\n              <List bulleted style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Michael Kramer, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Rob O'Reilly, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Sanjana Pampati, MPH</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Joyce Ho, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Shabatun Jamila Islam, MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Anurag Mehta, MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Aditi Nayak , MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Arshed Quyyumi , MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Yi-Ann Co, PhD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Samaah Sullivan, MD</List.Item>\n                <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Mohammed K. Ali, MD</List.Item>\n\n              </List>\n            </Grid.Column>\n          </Grid> \n\n          \n          <Grid columns={1} style = {{width : 600, marginLeft: 80}}>\n            <Header style={{fontWeight: 400, fontSize: \"24pt\", paddingTop: 27}}>\n                Funding\n              <Header.Content style = {{paddingTop: 13, lineHeight: \"24pt\", paddingBottom: 20, fontSize: \"14pt\"}}>\n                The COVID-19 Health Equity Dashboard was developed with funding from the Robert Wood Johnson Foundation and Emory University’s Woodruff Health Sciences Center. Development was also supported by the Georgia Center for Diabetes Translation Research.\n              </Header.Content>\n            </Header>\n            <br/>\n            <br/>\n            <Header style={{fontWeight: 400, fontSize: \"24pt\", paddingBottom: 0, paddingTop: 7}}>\n              Feedback\n              <Header.Content style = {{paddingTop: 9, lineHeight: \"24pt\", fontSize: \"14pt\"}}>\n                We strive to make this a user-friendly resource for policy makers, public health actors, the public, researchers, \n                and the media. Please share your feedback by mailing us at: \n                <a href=\"mailto:covid19dashboard@emory.edu\"> covid19dashboard@emory.edu</a>\n              </Header.Content>\n            </Header>\n          </Grid>\n\n        </Grid>\n\n\n        \n\n        <div style={{paddingTop: '2em', fontWeight: 300}}>\n    <Divider/>\n    <Grid>\n      <Divider hidden/>\n        <Grid.Row columns={3} >\n          <Grid.Column style={{fontSize: \"14pt\"}}>          \n            <Image size='medium' src='/logo.png' />\n            &copy; 2020 Emory University. All rights reserved.\n            <br/>\n            <a style ={{color: \"#397AB9\"}} href=\"/privacy\"> Privacy Statement</a> \n\n          </Grid.Column>\n          <Grid.Column style={{ left: 0, fontSize: \"14pt\", paddingRight: 0, width: \"500px\"}}>          \n            <Header.Content style={{width: \"500px\", fontSize: \"14pt\"}}>\n              This <a style ={{color: \"#397AB9\"}} href=\"COVID19.emory.edu\"> COVID-19 Health Equity Dashboard </a> is created using\n            </Header.Content>\n              <List as='ol'>\n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://www.react-simple-maps.io/\">React Simple Maps</a> by <a style ={{color: \"#397AB9\"}} href=\"https://www.zcreativelabs.com/\">z creative labs</a></List.Item>\n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/open-source/victory/\">Victory</a> by <a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/\">Formidable</a></List.Item>\n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React\">Semantic UI React</a> by <a style ={{color: \"#397AB9\"}} href=\"https://github.com/levithomason\">@levithomason</a> and an amazing community of <a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React/graphs/contributors\">contributors</a></List.Item> \n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/facebook/create-react-app\">Create React App</a> by <a style ={{color: \"#397AB9\"}} href=\"https://about.fb.com/company-info/\">Facebook</a></List.Item> \n              </List>\n            \n\n          </Grid.Column>\n\n          <Grid.Column style={{paddingLeft: 0, width: 300}}>\n            <Grid>\n                <Grid.Row style={{fontSize: \"14pt\", paddingBottom: 0, right: -240}}> \n                    Share This Dashboard \n                </Grid.Row>\n              <Grid.Row columns = {15} style ={{ paddingTop: 5}}>\n                <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n                      <a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-size=\"large\" data-text=\"Check out the Emory COVID-19 Health Equity Interactive Dashboard! \" data-url=\"https://covid19.emory.edu/\" data-show-count=\"false\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"24px\" src='/Twitter_Logo_Blue.png' /> </a><script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script>\n                </Grid.Column>\n                <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -309, bottom: -5}}>\n                      <a href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fcovid19.emory.edu%2F&amp;src=sdkpreparse\" data-href=\"https://covid19.emory.edu/\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"14px\" src='/f_logo_RGB-Blue_512.png' /></a>\n                </Grid.Column>\n                <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n                      <a href=\"https://web.whatsapp.com/send?text= Check out the Emory COVID-19 Health Equity Interactive Dashboard! https://covid19.emory.edu/\" data-action=\"share/whatsapp/share\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"22px\" src='/WhatsApp_Logo_1.png' /></a>\n                </Grid.Column>\n                <Grid.Column style ={{paddingLeft: 9, paddingRight: 0, paddingTop: 4, right: -300}}>\n                    <div>\n       \n                    <CopyToClipboard text=\"https://covid19.emory.edu/\">\n                      <img onClick={()=>myFunction()} src='/copy_icon.png' style={{height: \"13px\", width: \"13px\" }}/>\n                    </CopyToClipboard>\n                    \n                    </div>                    \n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          \n            \n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      </div>\n      </Container>\n    </div>);\n}\n","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Container, Grid, List, Divider, Image, Header, Table } from 'semantic-ui-react'\n\nexport default function DataSources(props){\n    const history = useHistory();\n\n\n  return (\n    <div>\n      <AppBar menu='mediaHub'/>\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n\n        <Header as='h2' style={{fontWeight: 400, paddingLeft: 0}}>\n          <Header.Content style = {{paddingTop: 20, fontSize: \"24pt\"}}>\n            Media Hub\n\n            <Header.Subheader style={{fontWeight: 300, fontSize: \"20pt\", paddingTop: 20}}>\n\n              Tune in for videos, podcasts, blogs, and more on COVID-19. \n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n\n      <Grid style={{paddingTop: 2}}>\n        <Grid.Row columns={3} style={{paddingBottom: 20}}> \n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 0}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='300' href = '/media-hub/podcast/Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes' src='/podcast images/CarlosdelRio.jpg' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content href = '/media-hub/podcast/Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes'>Podcast: Dr. Carlos Del Rio on COVID-19 Equity and Outcomes </Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: August 10, 2020 <br/><br/>\n                        Considering health equity and disparity, how will the pandemic progress? What is our current strategy? What can be and needs to be done to change the course of the pandemic? Listen to what Dr. Carlos Del Rio has to say. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n          \n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 0}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='236' href = '/media-hub/blog/Will_SARS-CoV-2_beat_the_Power_Five_Conferences' src='/blog images/power five/blog1cover.jpeg' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content href=\"/media-hub/blog/Will_SARS-CoV-2_beat_the_Power_Five_Conferences\">Blog: Will SARS-CoV-2 beat the Power Five Conferences? </Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Edited: August 19, 2020 <br/><br/>\n                        With almost half of all college football players being African American, resuming the football season might put African American athletes at an occupational risk due to COVID-19. Our data highlights greater severity of COVID-19 outcomes in counties where Power Five schools are located. With that said, can a team sport like football co-exist with COVID-19?\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/b9jvwt0dUPQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 and Population Density\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 30, 2020 <br/><br/>\n                        Because the virus SARS-COV-2 is transmitted through droplets, proximity to other individuals is one of the risk factors, so in places where it is harder to practice social distancing, like densely populated urban areas, we often see higher cases per capita. At the same time, there are some states where rural communities are actually the ones experiencing disproportionate infection rates, often because of local outbreaks and exacerbating underlying conditions. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/IEojaw9cND4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 and Poverty-related Issues\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 27, 2020 <br/><br/>\n                        Poverty, lack of health insurance, socioeconomic vulnerability, and housing insecurity may all contribute to higher risk of contracting COVID-19 and having severe outcomes. As the pandemic affects businesses and employment, the cycle of poverty may be reinforced by the progression of the pandemic and worsen unemployment, poverty, and related issues like insurance and housing.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop:70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/U-Aqx7vQocY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>        \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 in SW Native American Communities\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 14, 2020 <br/><br/>\n                        Native American communities, particularly in the Southwest, are hard-hit by COVID-19. Contributing factors may include high rates of poverty and chronic disease, lack of critical infrastructure like running water, isolation from health resources, crowded and multigenerational living conditions, and close-knit community support systems.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop:70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/0eFjhnDQe6g\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2' >\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 in African American Communities\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 9, 2020 <br/><br/>\n                        13% of the United States population is African American, but 23% of reported COVID-19 deaths have occurred in African Americans. In Georgia, African Americans represent 32% of the state’s population but 47% of COVID-19 deaths.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/2lWS3LGZUFU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2' style={{width:400, paddingLeft: 0}}>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 and Underlying Conditions\n                      <Header.Subheader style={{fontWeight: 300, width: 400, fontSize: \"14pt\"}}>\n                        Date Published: July 1, 2020 <br/> <br/>\n                        Underlying conditions like having obesity or diabetes, and being over age 65, may make individuals more likely to develop severe COVID-19 infection and be at a higher risk of hospitalization and death.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/PmI42rHnI6U\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2' style={{width:400, paddingLeft: 0}}>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      Dashboard Tutorial\n                      <Header.Subheader style={{fontWeight: 300, width: 400, fontSize: \"14pt\"}}>\n                        Date Published: June 5, 2020 <br/> <br/>\n                        Tutorial video walks you through the basics of the dashboard.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n\n        </Grid.Row>\n        <Notes />\n      </Grid>\n      </Container>\n    </div>);\n}\n","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, List, Divider, Image, Header, Table } from 'semantic-ui-react'\n\nexport default function DataSources(props){\n\n  return (\n    <div>\n      <AppBar menu='dataSources'/>\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n        <Header as='h1' style={{paddingTop: 16, fontWeight: 400, fontSize: \"24pt\"}}>\n\n          <Header.Content>\n            Data Sources and Interpretation\n          </Header.Content>\n        </Header>\n        <Table basic='very' style={{fontWeight: 400, fontSize: \"14pt\"}}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={3}>Measure</Table.HeaderCell>\n              <Table.HeaderCell width={5}>Data Source</Table.HeaderCell>\n              <Table.HeaderCell width={8}>How to Interpret</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Cases</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> The <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total COVID-19 Cases</i> is the number of people who have tested positive for COVID-19 in each county. This database includes case counts from \"both laboratory confirmed and probable cases using criteria that were developed by states and the federal government.\" </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Deaths</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> The <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total COVID-19 Deaths</i> is the number of people who have died of confirmed or presumed COVID-19 cases in each county. This database includes case counts from \"both laboratory confirmed and probable cases using criteria that were developed by states and the federal government.\" </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Cases</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Cases</i> is the average number of positive cases for COVID-19 infection per county in the United States over the last seven days.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Deaths</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Deaths</i> is the average number of deaths due to confirmed or presumed COVID-19 infection per county in the United States over the last seven days.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Cases per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total Cases per 100,000</i> helps us understand COVID-19 cases (people who have tested positive for COVID-19) by the population of the county per 100,000 people. <br/>\n\n                        If every county in the United States had 100,000 residents, this is how many would have COVID-19 in each county. This measurement adjusts for different counties’ populations to provide a standardized point of comparison of cases in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Deaths per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total Deaths per 100,000</i> helps us understand COVID-19 deaths by population of the county per 100,000 people. <br/>\n                          If every county in the United States had 100,000 residents, this is how many would have died in each county from COVID-19. This measurement adjusts for different counties’ populations to provide a standardized point of comparison of deaths in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Cases per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Cases per 100,000</i> helps us understand the average number of positive cases for COVID-19 infection over the last seven days by population of the county per 100,000 people. <br/>\n                  If every county in the United States had 100,000 residents, this is how many would have tested positive for COVID-19 over a recent 7-day period, in each county. This measurement adjusts for different counties’ populations to provide a standardized point of comparison of cases in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Deaths per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Deaths per 100,000</i> helps us understand the average number of deaths due to confirmed or presumed COVID-19 infection over the last seven days by population of the county per 100,000 people. \n                <br/>If every county in the United States had 100,000 residents, this is how many would have died from COVID-19 over a recent 7-day period, in each county. This measurement adjusts for different counties’ populations to provide a standardized point of comparison of deaths in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Percent Positive</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://covidtracking.com/about-data\" target=\"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Percent Positive</i> is the percentage of total tests for COVID-19 that resulted in a positive result.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Percent Occupied Beds</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC's<a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nhsn/datastat/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> National Healthcare Safety Network  </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Percent Occupied Beds</i> is the state representative estimates for percentage of inpatient beds cccupied by COVID-19 patients.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Cases per 100,000 Persons by Race</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> Derived from <a style ={{color: \"#397AB9\"}} href=\"https://covidtracking.com/race\" target=\"_blank\" rel=\"noopener noreferrer\"> The COVID Racial Data Tracker </a> and <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Cases per 100,000 persons by race</i> shows the distribution of COVID-19 infections across the race categories relative to the size of their population, among those with race information available.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% African American</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% African American</i> is the percentage of residents in each county who self-identify as having African American ancestry. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Hispanic or Latino</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Hispanic or Latino</i> is the percentage of residents in each county who self-identified as Hispanic or Latino to the American Community Survey (ACS). These data are from ACS 2014-2016 (5-Year Estimate). </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% American Natives </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% American Natives </i> is the percentage of residents in each county who self-identified as American Indian and Alaska Native alone to the American Community Survey (ACS). These data are from ACS 2014-2016 (5-Year Estimate). </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Minority</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Minority</i> is the percentage of residents in each county who self-identify as having ancestry other than non-Hispanic white. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% in Poverty</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% in Poverty</i> is the percentage of residents in each county whose household income falls at or below the poverty thresholds set by the U.S. Census Bureau. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Uninsured</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Uninsured</i> is the percentage of residents in each county who currently lack personal health insurance. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Diabetes</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>CDC's<a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/diabetes/data/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Division of Diabetes Translation </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Diabetes</i> is the percentage of residents in each county who currently have a medical diagnosis of Type 2 Diabetes, previously called Adult Onset Diabetes. These data are from 2016. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Obesity</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>CDC's <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/diabetes/data/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Division of Diabetes Translation </a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Obesity</i> is the percentage of residents in each county who have obesity, defined as having a Body Mass Index (weight in kilograms divided by the square of height in meters) above 30. These data are from 2016.  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% over 65 y/o</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% over 65 y/o</i> is the percentage of residents in each county who are older than 65 years. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% in Group Quarters</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% in Group Quarters</i> is the percentage of residents in each county who live in group living arrangements, such as nursing or assisted-living facilities. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Male</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Male</i> is the percentage of residents in each county who are male. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Socioeconomic Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC’s <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\">Social Vulnerability Index data 2018 database</a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Socioeconomic Vulnerability</i> is a composite measurement for each county that takes into account poverty, unemployment, per capita income, and not having a high school diploma; with the highest level of vulnerability assigned to tracts in the top 10% based on values for all of these measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Household Composition Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC’s <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\">Social Vulnerability Index data 2018 database</a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Household Composition Vulnerability</i> is a composite measurement for each county that takes into account population aged 65 and older, population aged 17 and younger, people with disabilities who do not live in an institutional setting, and single-parent households with child(ren) under age 18; with the highest level of vulnerability assigned to tracts in the top 10% based on values for all of these measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Minority/Language Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC’s <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Social Vulnerability Index data 2018 database</a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Minority/Language Vulnerability</i> is a composite measurement for each county that takes into account all people except the white non-Hispanic population and those who speak English “less than well,” with the highest level of vulnerability assigned to tracts in the top 10% based on values for the measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Housing/Transportation Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC's <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Social Vulnerability Index data 2018 database</a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Housing/Transportation Vulnerability</i> is a composite measurement for each county that takes into account living structures with 10 or more units, mobile homes, having more people than rooms in occupied housing, households with no vehicle available, and those living in institutionalized group quarters; with the highest level of vulnerability assigned to tracts in the top 10% based on values for all of these measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Population</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Population</i> is the total number of people who live in each county. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Population Density</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Population Density</i> is the total number of people who live in each county per square mile. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Household Income</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Mean Household Income</i> measures the average total income per household in each county. These data are from 2018.</Table.Cell>\n            </Table.Row>            \n          </Table.Body>\n        </Table>\n        <Notes />\n      </Container>\n    </div>);\n}\n","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, List, Divider, Image, Header, Segment } from 'semantic-ui-react'\n\nexport default function AboutUs(props){\n\n  return (\n    <div>\n    <AppBar/>\n      <Container style={{marginTop: 128, minWidth: '1260px'}}>\n        <Header style={{fontSize: \"24pt\", fontWeight: 400}}>\n          <Header.Content>\n            Privacy Policy\n            <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Website Privacy Statement\n            </Header.Subheader>\n            <Header style={{fontSize: \"14pt\", fontWeight: 400, paddingTop: 0}}>\n            Emory University’s COVID-19 Health Equity Dashboard (CHED) is committed to protecting your personal information and respecting your privacy. \n            In general, you can visit our website without telling us who you are or revealing information about yourself.  \n            CHED uses various methods to collect certain other kinds of information including cookies, referrers, IP addresses, and system information.\n            </Header>\n          </Header.Content>\n        </Header>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Cookies: </b> Cookies are small snippets of data passed from a website to your PC as you browse the Internet that can be transferred\n             back to the original site or domain with future requests from your browser. Cookies can be used in a variety of ways, including \n             ways that have privacy implications, such as tracking your previous activities at a particular site. Most browsers allow you \n             to choose not to accept cookies. Choosing to accept cookies, however, enables some online services to work more efficiently \n             or makes the use of services more convenient.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Referrers: </b> A referrer is the information passed along by a browser that references the Internet URL you linked from. \n            Our Internet server automatically gathers this information. CHED uses this information for site statistical analysis. \n            CHED will not use this information to attempt to identify your personal information.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>IP Addresses: </b> Your computer uses IP addresses every time you connect to the Internet. \n            Computers on the network use your IP address to identify your computer so that data, such as the webpages you request, \n            can be sent to you. Our server automatically gathers them. CHED uses this information for site statistical analysis. \n            CHED will not use your IP address to attempt to identify your personal information.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>System Information: </b> System information includes time, type of browser being used, the operating system or platform, and CPU speed. \n            Your browser sends this information automatically when you are connected to a website. This information is used by CHED to \n            identify broad demographic statistics and may be used to provide information appropriate for your computer system. CHED will \n            not use this information to attempt to identify your personal information.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Security: </b> While no system can provide guaranteed security, we take reasonable efforts to keep information \n            you provide to us secure, including encryption technology and physical security at the location of the server where \n            information is stored.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Links to Other Sites: </b> The CHED website includes hyperlinks to sites maintained or controlled by others. \n            Any links to external websites is provided as a courtesy and are not an endorsement by CHED of the content or views of \n            the linked website or web page. CHED is not responsible for and does not routinely screen, approve, review, or endorse \n            the contents or use of any of the products or services that may be offered at at any other website. We advise you to \n            review the individual privacy policies of the respective sites.\n          </Header.Content>\n        </Header>\n\n        <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Website Disclaimer\n        </Header.Subheader>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n            CHED provides information as a service to users. This website does not constitute a legal contract between CHED and the user. \n            Content is subject to change without notice and CHED makes no guarantees, warranties, or representations, express or limited, \n            on the website’s operation, information, content, and materials.\n        </Header>\n\n        <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Liability\n        </Header.Subheader>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n            CHED is not liable for damages of any kind arising from the use of or reliance on any content, goods, or services available on \n            or through this website or any hyperlinked site or resource.\n        </Header>\n\n        <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Contact Us\n        </Header.Subheader>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n            <a href=\"mailto:covid19dashboard@emory.edu\"> covid19dashboard@emory.edu</a>\n        </Header>\n\n        <Notes />\n\n      </Container>\n    </div>);\n}\n","import AppBar from './AppBar';\nimport Notes from './Notes';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react'\n\nimport { Container, Grid, List, Divider, Image, Breadcrumb, Header, Segment } from 'semantic-ui-react'\n\nexport default function AboutUs(props){\n  const history = useHistory();\n  let {blogTitle} = useParams();\n\n  return (\n    <div>\n    <AppBar/>\n    {blogTitle == \"Will_SARS-CoV-2_beat_the_Power_Five_Conferences\"&&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Blog</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                Will SARS-CoV-2 beat the Power Five Conferences?\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n                  Playing college football during the COVID-19 pandemic may unduly increase risk of infection, especially for African American student-athletes, our data suggest.\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                       <Image width='600' height='350' href = '/media-hub/blog/Will_SARS-CoV-2_beat_the_Power_Five_Conferences' src='/blog images/power five/blog1cover.jpeg' />            \n\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Pooja Naik, edited on Aug. 19, 2020  &nbsp;&nbsp; |  &nbsp;&nbsp; 4-minute read\n\n                      <br/>\n                      Contributors: Leanna Ehrlich, Aditya Rao, Alka Rao, Star Liu, K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n\n\n                      College football season is approaching, but the COVID-19 pandemic still looms large in the United States. \n                      The ability for colleges to pursue a 2020-2021 football season remains unclear, as it seems impossible to \n                      maintain student-athlete safety during practices and games. While some of the Power Five conferences like\n                      the Big Ten and Pac-12 have switched to conference-only games, other conferences are pushing their season\n                      to start late, at the end of September, or waiting until Spring 2021 to play any games. The unavoidable\n                      fact remains that there is no way to maintain physical distancing between players during practices and\n                      games. In the absence of a vaccine, physical distancing is the only way to prevent community spread, \n                      and this necessity clashes with the reality of college football. \n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      According to <a style ={{color: \"#397AB9\"}} href=\"http://www.ncaa.org/about/resources/research/ncaa-demographics-database\" target=\"_blank\" rel=\"noopener noreferrer\"> NCAA Demographics Database</a>, almost half of all college football players in the United States \n                      are African Americans. Meanwhile, African Americans only make up 13% of the US population as per <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\"> American Community Survey </a>\n                      by the U.S. Census Bureau. <a style ={{color: \"#397AB9\"}} href=\"https://doi.org/10.1111/pai.13271\" target=\"_blank\" rel=\"noopener noreferrer\"> Research from Italy and Germany</a> has highlighted the heightened \n                      risk of infection posed by playing college football, a strenuous exercise makes athletes more likely to inhale \n                      virus particles to the lower areas of their lungs - putting athletes such as football players at a higher risk \n                      of infection as they share close airspace on playing fields. Therefore, playing college football is an occupational \n                      risk for COVID-19 that disproportionately falls on African American young men. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      The college football scenario mirrors the disparate impact of the pandemic across American communities, \n                      <a style ={{color: \"#397AB9\"}} href=\"https://www.thedailybeast.com/coronavirus-is-hitting-black-and-hispanic-americans-way-harder-cdc-data-shows?ref=scroll\" target=\"_blank\" rel=\"noopener noreferrer\"> with significantly higher rates of infection and death seen in many marginalized populations</a>\n                      , including \n                      African Americans. Mortality rate in African Americans continue to rise and is \n                      <a style ={{color: \"#397AB9\"}} href=\"https://covidtracking.com/race\" target=\"_blank\" rel=\"noopener noreferrer\"> 2.5 times as high as White Americans’ mortality rates. </a>\n                      As communities of color grapple with higher infection rates caused by a wide \n                      range of factors, including higher participation in essential occupations and higher levels of underlying \n                      chronic disease, poverty, and constrained access to healthcare, it is important to give special consideration \n                      to the health of African American student athletes and occupational risk posed by college football season.\n\n                      <br/>\n                      <br/>\n\n                </Header>\n\n                                <center>      <Image width='800' height='500' src='/blog images/power five/Figure 1.png' /> </center>\n                                <p style = {{marginLeft: 0, fontSize: \"14pt\", fontWeight: 300, lineHeight: \"16pt\", lineSpacing: 0}}> Figure 1: COVID-19 outcomes in all the 62 counties where conferences are located versus other counties. Data sources from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a>  </p>\n                \n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n                      <br/>\n\n                      In order to make an informed decision about how the college football season can proceed, it is important \n                      to understand the status of COVID-19 outbreaks in the counties where the Power Five schools are located \n                      and to account for interstate travel. To find out how these counties are affected by COVID-19, we used \n                      data compiled through \n                      <a style ={{color: \"#397AB9\"}} href=\"http://covid19.emory.edu/\" target=\"_blank\" rel=\"noopener noreferrer\"> The COVID-19 Health Equity Dashboard </a>\n                      to compare the COVID-19 infections and deaths \n                      in these counties with the rest of the counties in the country (Figure 1), adjusted for population. The \n                      analysis was then repeated to investigate how per capita infections and deaths compared across counties \n                      in each of the Power Five Conferences (Figure 2).\n\n                      <br/>\n                      <br/>\n\n                </Header>\n\n                                <center>      <Image width='800' height='500' src='/blog images/power five/Figure 2.png' /> </center>\n                                <p style = {{marginLeft: 0, fontSize: \"14pt\", fontWeight: 300, lineHeight: \"16pt\", lineSpacing: 0}}> Figure 2: COVID-19 outcomes among counties where schools in each of the Power Five Conferences are located and counties where none are located. Data sources from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a></p>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <br/>\n\n                      We found that COVID-19 infection and mortality rates in the total population were much higher in counties \n                      with the Power Five Schools compared to those without. We performed a statistical test (Welch t-test) to \n                      assess whether the mean difference between COVID-19 per capita infections and deaths were due to the huge \n                      difference in the number of counties with and without D1 football teams.  \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Our data as of August 16, 2020 suggests that counties with the Power Five schools are more affected \n                      by COVID-19. These counties have 19% higher COVID-19 cases per capita \n                      and 12% higher COVID-19 deaths per capita than the rest of the country. Notably, the Atlantic Coast Conference \n                      (ACC) and Southeastern Conference (SEC) schools are located in the counties most affected by COVID-19. Respectively, \n                      these counties have approximately 25% and 63% more COVID-19 cases per capita than counties without the Power Five schools. \n                      The Welch t-test demonstrates that these differences are indeed statistically significant. This raises \n                      the question of whether it would be safe to bring student-athletes back to counties that are already \n                      hard-hit by COVID-19.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Even if the ACC and SEC decide to play conference-only games, there is still a high risk of infection for \n                      everyone playing within the conference due to lack of social distancing and high infection rates in these \n                      counties. Nevertheless, economic implications are large; for example, a “no-go” decision from any of the \n                      three remaining powerhouse conferences could cost the city of Atlanta $100 million in expected revenue from \n                      hosting games in the first week of conference play. However, it is reckless to risk the lives of athletes to \n                      ensure the college sports’ revenue streams. With athlete scholarships tied to team membership, conferences \n                      and schools must find a balance between supporting educational opportunities for student athletes while not \n                      unduly exposing student athletes to additional risk of COVID-19 infection. And, the outcome of these decisions \n                      will have a significant impact on students of color, who make up a large share of student athletes.\n\n\n                </Header>\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n    </div>);\n}\n","import AppBar from './AppBar';\nimport Notes from './Notes';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\n\nimport { Container, Grid, List, Divider, Image, Breadcrumb, Header, Segment } from 'semantic-ui-react'\n\n\nexport default function AboutUs(props){\n  const history = useHistory();\n  let {podcastTitle} = useParams();\n\n  return (\n    <div>\n    <AppBar/>\n    {podcastTitle == \"Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes\"&&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                Dr. Carlos Del Rio on COVID-19 Equity and Outcomes\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                  <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/Dr--Carlos-Del-Rio-on-COVID-19-Equity-and-Outcomes-ehuljb\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlick on Aug. 10, 2020\n\n                      <br/>\n                      Contributors: Pooja Naik, K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n                      <b>Transcript</b>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna: [00:00:00]</b> Welcome to the first. Health Equity and outcomes COVID-19 Podcast. \n                      On this episode we talked to Dr. Carlos Del Rio, a distinguished professor of medicine in \n                      the division of infectious diseases at Emory University School of Medicine and Executive \n                      Associate Dean for Emory at Grady Hospital. He is also Professor of Global Health in the \n                      Department of Global Health and a Professor of Epidemiology at the Rollins School of Public Health.\n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:00:26]</b> It's just been so hard to see how how disproportionate impact this epidemic \n                      has had in minority populations. We're not shocked we're not surprised because health equity in \n                      Health inequalities are...you know part of everyday everyday life right. The reality is is is \n                      it's been just a just really start to see how different the risk is to individuals how different \n                      the disease is how different the mortality is and you know there was an article in New York Times \n                      that really dug deep into this and I think it really highlighted for many of us how these differences \n                      are are really very real. You know how how much more at risk somebody who is Hispanic or African-American \n                      is compared to somebody who is white. Just to give you an idea you know we're seeing you know about about \n                      73 cases per 10000 people population in Latinos we're seeing twenty three cases per 10000 population of \n                      whites. Furthermore the disease in whites is primarily among older individuals and the disease in in in \n                      blacks and Latino population is really among all age groups including people in the ages of 40 50 so younger \n                      people. So what we're also seeing in our country is that the mortality of people with COVID is much younger \n                      than many other places in the world. And that's because of the disparity.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:01:57]</b> So I think if COVID tells us something is that we need to really \n                      at the root address and and and eradicate and really begin to take seriously the racial disparities \n                      that have existed for such a long time.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna: [00:02:12]</b> I'm really curious like what you see as I guess the future of the \n                      pandemic response taking into account these inequities.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:02:20]</b> Well you know I think what we need to realize is that we have multiple \n                      pandemics in this country. We have several pandemics and each community has to have a different approach. \n                      And we need to think about how do we involve the community. How do we really have a true community response. \n                      How do we truly have a community participation. How do we make sure the community that we work with community \n                      in addressing the pandemic because this is not going to be solved from from the top down. This is going to be \n                      solved with community participation. So as we look at for example vaccine studies my biggest fear is that we're \n                      not going to be involving the community as much as we should because we really need the community to be front \n                      and center in the response. I mean we have you know among the African-American population there's been mistrust \n                      from just keep you down. Right. So. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna: [00:03:12]</b> Yes.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:03:12]</b> So you know you're gonna go in there with a vaccine. \n                      It's gonna be difficult so we have to work with community to educate them and to make them understand why this is important.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:03:21]</b> And I think that one thing that to me is is very significant is how \n                      you know a place like like Grady has which has responded to African-American populations and has done \n                      this for a long time. What we've seen here is we haven't seen a higher higher impact of the epidemic. \n                      I mean we have seen a higher mortality among minorities. Right. The the the outcomes have been the same. \n                      And I think that's because we are we are. This is our population we're comfortable treating them. And \n                      therefore we've done a good job with them.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna: [00:03:57]</b> Absolutely. Do you see there being a reality in the near future where we're \n                      testing catches up to cases either because cases are going down hopefully or because testing is significantly ramped up.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:04:08]</b> They are. But you don't can't you can't ramp it up much more. \n                      The problem is you know the U.S. already is consuming 55 percent of the testing capacity of the world. \n                      So imagine if we all of a sudden consume even more. Wouldn't that be an inequity for the rest of the world. \n                      And it's just because we're not doing a good job controlling our epidemic that we need more and more testing. \n                      I mean the problem is you know we need a national strategy. And here's what would happen in our national strategy. \n                      You know the testing capacity up in Boston cannot be moved to Atlanta but if you had a national coordinator \n                      the testing capacity in Atlanta. So you would say oh Atlanta has too little testing capacity but Boston has \n                      too much. We'll take the swabs from Atlanta and ship them to Boston and get them run in Boston right.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna: [00:04:48]</b> Yeah.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:04:48]</b> But but that wouldn't require a national strategy which the president \n                      from day one said it's gonna be a state strategy. And I think having a state strategy has been one of the \n                      biggest problems in our country because by having a state strategy we essentially have 50 strategies and \n                      we don't have any way to actually you know consolidate and synergize and help each other out.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna: [00:05:11]</b> Do you think right now is the biggest change that could be made in the US \n                      either within population health or in the medical system or public health system to change the course of the pandemic? \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Carlos del Rio: [00:05:21]</b> We need rapid turn around in testing and we need quick very efficient \n                      and well done contact tracing. We're not doing contact tracing the way it's supposed to be done where we're \n                      essentially are wasting what would be the benefits of contact tracing by not doing it the right way.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna: [00:05:38]</b> Well this has been such an interesting conversation. Thank you for joining \n                      the podcast today and sharing your experience and perspective with us.\n\n\n\n\n                </Header>\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n    </div>);\n}\n","// React\nimport React from \"react\";\n// Components & Hooks\nimport USMap from \"./USMap\";\nimport StateMap from \"./StateMap\";\nimport CountyReport from \"./CountyReport\";\nimport MapYourState from \"./MapState\";\nimport AboutUs from \"./AboutUs\";\nimport MediaHub from \"./MediaHub\";\nimport DataSources from \"./DataSources\";\nimport Privacy from \"./Privacy\";\nimport Blog from \"./Blog\";\nimport Podcast from \"./Podcast\";\nimport NationalReport from \"./NationalReport\";\nimport 'semantic-ui-css/semantic.min.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n\nApp.propTypes = {};\nexport default function App() {\n\n  return (\n      <Router>\n        <Switch>\n          <Route path='/map-state'>\n            <MapYourState />\n          </Route>\n          <Route path='/media-hub/blog/:blogTitle'>\n            <Blog />\n          </Route>\n          <Route path='/media-hub/podcast/:podcastTitle'>\n            <Podcast />\n          </Route>\n          <Route path='/media-hub'>\n            <MediaHub />\n          </Route>\n          <Route path='/about-team'>\n            <AboutUs />\n          </Route>\n          <Route path='/privacy'>\n            <Privacy />\n          </Route>\n          <Route path='/data-sources'>\n            <DataSources />\n          </Route>       \n          <Route path='/:stateFips/:countyFips'>\n            <CountyReport />\n          </Route>  \n          <Route path='/:stateFips'>\n            <StateMap />\n          </Route>\n          <Route path='/'>\n            <USMap />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to='/'/>\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n\n","import 'react-app-polyfill/ie9';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}