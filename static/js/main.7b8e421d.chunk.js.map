{"version":3,"sources":["components/AppBar.js","components/MapProvider.js","utils.js","components/Geographies.js","components/useGeographies.js","components/Geography.js","components/ComposableMap.js","components/Notes.js","stitch/app.js","stitch/mongodb.js","components/HEProvider.js","stitch/authentication.js","components/StitchAuth.js","components/USMap.js","components/StateMap.js","components/CountyReport.js","components/MapState.js","components/AboutUs.js","components/MediaHub.js","components/DataSources.js","components/Privacy.js","components/Blog.js","components/Podcast.js","components/Marker.js","components/Annotation.js","components/VaccineFAQ.js","components/USVaccineTracker.js","components/USVaccineTrackerPilot.js","components/VaccineMap.js","components/GDPH/AppBar.js","components/GDPH/MapProvider.js","components/GDPH/Geographies.js","components/GDPH/useGeographies.js","components/GDPH/Geography.js","components/GDPH/ComposableMap.js","components/GDPH/Notes.js","components/GDPH/StateMap.js","components/GDPH/CountyReport.js","components/GDPH/AboutUs.js","components/GDPH/DataSources.js","components/NationalReportPilot.js","components/App.js","index.js"],"names":["AppBar","props","history","useHistory","Menu","borderless","inverted","fixed","style","backgroundImage","backgroundSize","fontSize","Container","width","Item","as","header","onClick","push","fontWeight","color","lineHeight","active","menu","content","name","position","Image","size","src","geoPath","d3Geo","projections","MapContext","createContext","MapProvider","height","offsetX","offsetY","projection","projectionConfig","restProps","center","cx","cy","rotate","rx","ry","rz","parallels","p1","p2","s","scale","projMemo","useMemo","scl","proj","translate","forEach","d","makeProjection","useCallback","value","path","Provider","fetchGeographies","url","fetch","then","res","ok","Error","statusText","json","catch","error","console","log","getFeatures","geographies","parseGeographies","Array","isArray","feats","feature","objects","Object","keys","features","prepareFeatures","map","i","rsmKey","svgPath","isString","geo","Geographies","geography","children","className","useContext","useState","setGeographies","useEffect","window","geos","useGeographies","length","memo","onMouseEnter","onMouseLeave","onMouseDown","onMouseUp","onFocus","onBlur","isPressed","setPressed","isFocused","setFocus","tabIndex","evt","ComposableMap","Notes","state","paddingTop","Divider","Grid","paddingBottom","Row","columns","Column","href","stroke","Header","Subheader","Content","hidden","left","paddingRight","List","paddingLeft","right","data-size","data-text","data-url","data-show-count","target","rel","async","charSet","bottom","data-href","data-action","text","alert","app","Stitch","hasAppClient","getAppClient","initializeAppClient","mongoClient","getServiceClient","RemoteMongoClient","factory","CHED_series","db","collection","CHED_static","HEContext","React","HEProvider","selectedTable","selectedVariable","selectedCounty","fetchedData","pageState","setPageState","handlePageStateChange","doc","pageInfo","actions","loginAnonymous","credential","AnonymousCredential","auth","loginWithCredential","getCurrentUser","isLoggedIn","user","logoutCurrentUser","logoutUserWithId","id","StitchAuthContext","useStitchAuth","context","StitchAuthProvider","currentUser","authState","setAuthState","handleAnonymousLogin","a","loggedInUser","handleLogout","authInfo","getMax","arr","prop","max","parseInt","getMaxRange","range","numberWithCommas","x","toString","pattern","test","replace","colorPalette","LatestOnThisDashboard","USMap","setTooltipContent","date","setDate","nationalDemogDate","setNationalDemogDate","data","setData","allTS","setAllTS","raceData","setRaceData","nationalDemog","setNationalDemog","stateName","setStateName","fips","setFips","stateFips","setStateFips","colorScale","setColorScale","legendMax","setLegendMax","legendMin","setLegendMin","legendSplit","setLegendSplit","varMap","setVarMap","metric","setMetric","metricOptions","setMetricOptions","metricName","setMetricName","_","filter","key","variable","def","definition","group","substring","cs","scaleQuantile","domain","k","scaleMap","each","min","toFixed","quantiles","marginTop","minWidth","overflow","overflowY","overflowX","Breadcrumb","Section","padding","Dropdown","background","theme","top","borderTop","borderLeft","borderRight","borderBottom","borderRadius","minHeight","pointing","search","selection","options","onChange","e","splitpoint","y","fill","strokeWidth","data-tip","stateFip","configMatched","configs","find","Accordion","defaultActiveIndex","panels","title","fontFamily","icon","textAlign","minDomain","t","maxDomain","caseRateMean","marginLeft","containerComponent","responsive","tickValues","Math","round","grid","tickLabels","tickFormat","Date","toLocaleDateString","fillOpacity","dailyCases","textAnchor","percent14dayDailyCases","VictoryTheme","material","mortalityMean","dailyMortality","percent14dayDailyDeaths","domainPadding","ylog","ticks","axis","labels","dependentAxis","horizontal","barRatio","datum","parseFloat","labelComponent","dx","barWidth","Loader","inline","CaseChart","playCount","setPlayCount","sfps","cfps","countyFips","var","tickFormatter","labelFormatter","animationBool","setAnimationBool","margin","dataKey","tick","allowDuplicatedCategory","type","dot","isAnimationActive","onAnimationEnd","animationDuration","animationBegin","formatter","Button","floated","BarChart","tickCount","TopChart","params","sFips","recentIndex","xVar","yVar","resize","parent","marginleft","rate","percentChange","StateMap","useParams","hospDate","setHospDate","dataTS","setDataTS","dataStateTS","setStateTS","config","setConfig","setCountyFips","countyName","setCountyName","barCountyName","setBarCountyName","caseRate","setCaseRate","percentChangeCases","setPercentChangeCases","mortality","setMortality","percentChangeMortality","setPercentChangeMortality","pctPositive","setPctPositive","hospDaily","setHospDaily","percentChangeHospDaily","setPercentChangeHospDaily","indexP","setIndexP","countyOption","setCountyOption","selectedTrend","setSelectedTrend","trendline","setTrendline","trendOptions","trendName","delayHandler","setDelayHandler","caseTicks","setCaseTicks","newDict","percentChangeCase","hospD","percentPositive","staticQ","all","toArray","tag","racedataAll","stateSeriesQ","full_fips","promState","stateSeriesDict","cases","percent7dayhospDaily","getMonth","padStart","getDate","getFullYear","seriesDict","countyMost","covidmortality7dayfig","seriesQ","$or","prom","v","fips2county","match","fetchData","link","stateOptions","location","rows","racedatadate","properties","COUNTYFP","setTimeout","clearTimeout","lineColor","monthNames","ScatterChart","showLegend","orientation","sortKey","centerOffset","cornerRadius","flyoutStyle","rescaleX","label","axisLabel","CountyReport","tooltipContent","countyCasesOutcome","setCountyCasesOutcome","countyDeathsOutcome","setCountyDeathsOutcome","stateCasesOutcome","setStateCasesOutcome","stateDeathsOutcome","setStateDeathsOutcome","nationCasesOutcome","setNationCasesOutcome","nationDeathsOutcome","setNationDeathsOutcome","countyCases","stateCases","nationCases","countyDeaths","stateDeaths","nationDeaths","caserate7dayfig","Table","celled","singleLine","textalign","colSpan","font","HeaderCell","casesfig","toLocaleString","caseratefig","mean7daycases","deathsfig","covidmortalityfig","mean7daydeaths","cfr","centered","Number","Popup","trigger","basic","positivePer100K","xlog","striped","compact","Body","includes","Cell","isNaN","geoUrl","colorPalette2","MapState","measureA","setMeasureA","measureB","setMeasureB","colorScaleA","setColorScaleA","colorScaleB","setColorScaleB","oriData","setOriginalData","measureOptionsA","setMeasureOptionsA","measureOptionsB","setMeasureOptionsB","legendSplitA","setLegendSplitA","legendSplitB","setLegendSplitB","legendMaxA","setLegendMaxA","legendMaxB","setLegendMaxB","legendMinA","setLegendMinA","legendMinB","setLegendMinB","setName","mainQ","coldata","dataFltrd","scaleMapA","splitA","maxA","minA","scaleMapB","splitB","maxB","minB","split","fluid","labeled","cur","AboutUs","row","overFlow","bulleted","MediaHub","frameBorder","allow","allowFullScreen","DataSources","blogTitle","border","borderCollapse","rowSpan","colspan","rowspan","lineSpacing","podcastTitle","frameborder","scrolling","Marker","coordinates","transform","Annotation","subject","connectorProps","dy","curve","connectorPath","curvature","curveX","curveY","createConnectorPath","createRef","VaccinesFAQ","setActiveCharacter","activeIndex","setActiveIndex","onEnter","styled","exclusive","Title","index","indexOf","item","Icon","marginBottom","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","pieChartRace","nameList","StickyExampleAdjacentContext","contextRef","activeItem","actionItem","setActiveItem","Ref","innerRef","Rail","attached","Sticky","offset","secondary","vertical","activeCharacter","dataState","renderActiveShape","RADIAN","PI","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","COLORRace","renderCustomizedLabelFV","radius","ex","ey","dominantBaseline","pctAdmDose2","renderCustomizedLabelPop","percentPop","Race","onPieEnter","setState","dataTot","chart","this","ref","activeShape","paddingAngle","pop","labelLine","entry","PureComponent","jsfiddleUrl","forwardRef","USVaccineTracker","setShowState","setClicked","setStateLabels","vaccineDate","setVaccineDate","VaxSeries","setVaxSeries","vaccineData","setVaccineData","hoverName","setHoverName","usAbbrev","setUSabbrev","setStateMapName","stateMapFips","setStateMapFips","setColorScaleState","setLegendMaxState","setLegendMinState","setLegendSplitState","vaxVarMap","setVaxVarMap","fully","setFully","pctVacPopDisp","setPctVacPopDisp","finalStr","setFinalStr","selectedName","setSelectedName","vaccineList","labelTickFmt","caseTickFmt","listW","count","joinedStr","join","indexStr","useRef","zIndex","Progress","progress","centroid","geoCentroid","allStates","val","alignmentBaseline","overFlowX","class","ComparisonTable","abbrev","RaceBarChart","hoverBar","setHoverBar","valueAccessor","attribute","undefined","white","demogData","black","hispanic","asian","american_natives","NHPI","VaccineData","multiOther","CustomTooltip","colIndex","borderStyle","borderColor","cursor","barSize","stackId","TabExampleBasic","panes","menuItem","render","Tab","Pane","stateVaccineData","setStateVaccineData","previousIndexStr","oldLeft","paddingleft","VaccineMap","configURL","countyTooltipContent","setCountyTooltipContent","countyList","setCountyList","countySelected","setCountySelected","countyClicked","setCountyClicked","zipList","setZipList","zipSelected","setZipSelected","siteData","setSiteData","countyData","setCountyData","mapColor","setMapColor","headers","address","Address","county","County","zipcode","Zipcode2","Longitude","Latitude","err","sortBy","uniq","promStatic","varData","slice","scaler","cb_2015_georgia_county_20m","geometries","GEOID","NAME","CardGroup","o","obj","Card","meta","description","open","strokeLinecap","strokeLinejoin","opacity","r","z-index","placeholder","multiple","clearable","Group","place","MinVal","MaxVal","Legend","casesColor","mortalityColor","colorPalette1","sectionStyle2","sTate","setsTate","SvgMap","ChartGraph","varGraphPair","countyname","takeRight","data2","month","day","alignment","constrainToVisibleArea","DiscrpMap","DiscrpChart","countyFips1","countyName1","thresh_chara","scale1","offsetX1","offsetY2","data-for","default","outline","pressed","setCountyFipscvi","setCountyNamecvi","setTooltipContentcvi","dataUs","countyFipscvi","colortopic","dateCur","todaydate","year","data_index","ez","setCountyFipsth1","dataCha","countyFipsth1","setCountyFipsth2","countyFipsth2","setCountyFipsth3","countyFipsth3","setCountyFipsth4","countyFipsth4","setCountyFipsth5","countyFipsth5","setCountyFipsth6","countyFipsth6","setCountyFipsth7","countyFipsth7","countyFipssi","setCountyFipssi","countyFipsubr","setCountyFipsubr","countyFipsblack","setCountyFipsblack","countyFipshis","setCountyFipshis","countyFipspov","setCountyFipspov","countyFipsdia","setCountyFipsdia","countyFipsa65","setCountyFipsa65","countyNamesi","setCountyNamesi","countyNameubr","setCountyNameubr","countyNameblack","setCountyNameblack","countyNamehis","setCountyNamehis","countyNamepov","setCountyNamepov","countyNamedia","setCountyNamedia","countyNamea65","setCountyNamea65","characterRef","setDataUs","setIndexData","setDataCha","setColortopic","setDateCur","colorUbr","setColorUbr","colors","tooltipContentccvi","data_cases","setDataCG","data_deaths","setDataDG","datades_cases","setDatadesCG","datades_deaths","setDatadesDG","setLegendMaxGraph","legendSplit1","metricOptions1","dropdownopt","dicto","m","imageSrc","isCentered","parallaxOffset","column","divided","stackable","Label","current","gutter","symbol","backgroundColor","renderActiveOnly","sectionStyle1","numm","cate","var_num","pad","keyv","co","var1","configsCounty","dataCur","setDataCur","zipCode","setZipCode","dataZip","setDataZip","setDataMapOut","setLegendMaxD","setLegendMinD","setLegendSplitD","setColorScaleD","casescum","deathscum","casescumR","deathscumR","casesdailymean14","deathsdailymean14","casesdailymean14R","deathsdailymean14R","covidMetric","setCovidMetric","covidMetricLast","setCovidMetricLast","covidMetricGa","setCovidMetricGa","setCovidMetric14","varNameMap","configscounty","countyfips","csD","flowing","hoverable","casescum14day","casescum14dayR","category14day","change14day","deathscum14day","deathscum14dayR","align","cfrcompare","casesdaily","casesdailymean7","deathsdaily","deathsdailymean7","ZCTA5CE10","event","standalone","labelRadius","padAngle","ChartSection","chartNo","setChartNo","dailyDeaths","mean7dayCases","barName","setBarName","lineName","setLineName","disabled","setDisabled","headerTime","setHeaderTime","CaseChartStatic","barColor","CaseChartAll","DeathChartAll","CaseChart90","CaseChart14","highlightIndex","animationEasing","wrapperStyle","Transition","visible","animation","duration","Message","start","end","visible1","setVisible1","visible2","setVisible2","visible3","setVisible3","visible4","setVisible4","visible5","setVisible5","setHighlightIndex","onAnimationStart","wait","totalCase","setTotalCase","sum","allowDataOverflow","renderCustomizedLabelCases","percentCases","NationalReport","setTopTen","states50","setStates50","setDataTopCases","setDataTopMortality","nationalBarChart","setNationalBarChart","setMean7dayCases","setMortalityMean","setDailyCases","setDailyDeaths","ccvi","setColorccvi","legendMaxccvi","setLegendMaxccvi","legendMinccvi","setLegendMinccvi","legendSplitccvi","setLegendSplitccvi","resSeg","setColorResSeg","legendMaxResSeg","setLegendMaxResSeg","legendMinResSeg","setLegendMinResSeg","legendSplitResSeg","setLegendSplitResSeg","setColorBlack","legendMaxBlack","setLegendMaxBlack","legendMinBlack","setLegendMinBlack","legendSplitBlack","setLegendSplitBlack","poverty","setColorPoverty","legendMaxPoverty","setLegendMaxPoverty","legendMinPoverty","setLegendMinPoverty","legendSplitPoverty","setLegendSplitPoverty","Comorb","setColorComorb","legendMaxComorb","setLegendMaxComorb","legendMinComorb","setLegendMinComorb","legendSplitComorb","setLegendSplitComorb","setCaseYTicks","urbrur","setDataUrb","region","deaths","caseRateMA","mortalityMA","testQ","promTs","percentChangeC","percentChangeM","cRateMean","dailyC","dailyD","mMean","fetchTimeSeries","cs_poverty","scaleMap_poverty","max_poverty","min_poverty","tempDict","cs_black","scaleMap_black","max_black","min_black","csii","scaleMapii","maxii","minii","demog_descriptives","App","AppUI","component","GDPHStateMap","USVaccineTrackerPilot","to","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.7b8e421d.chunk.js","sourcesContent":["import React from \"react\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport { Container, Menu, Image } from 'semantic-ui-react';\n\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function AppBar(props) {\n\n  const history = useHistory();\n\n  return (\n    <ErrorBoundary>\n      <Menu borderless inverted fixed='top'\n        style={{backgroundImage: 'url(\"/Emory_COVID_header_LightBlue.jpg\")',\n                backgroundSize: 'cover',\n                fontSize: \"14pt\"}}>\n        <Container style={{width: '1305px'}}>\n          <Menu.Item as='a' header onClick={() => history.push('/')}>\n            <span style={{fontWeight: 400, color: '#fff', lineHeight: 1.3}}>\n           COVID-19 Health Equity<br/>Interactive Dashboard\n           </span>\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='countyReport'} \n            content='Home'\n            onClick={() => history.push('/')}\n            name='countyReport'/>\n\n          <Menu.Item \n            active={props.menu==='vaccineTracker'} \n            onClick={() => history.push('/Vaccine-Tracker')}\n            name='vaccineTracker'>\n            Vaccination Tracker\n          </Menu.Item>\n          \n          <Menu.Item \n            active={props.menu==='selectState'} \n            onClick={() => history.push('/_nation')}\n            name='selectState'>\n            Find State\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='mapState'} \n            onClick={() => history.push('/map-state')}\n            name='mapState'>\n            Map State\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='mediaHub'} \n            onClick={() => history.push('/media-hub')}\n            name='mediaHub'>\n            Media Hub\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='dataSources'} \n            onClick={() => history.push('/data-sources')}\n            name='dataSources'>\n            Data Sources &<br/>Interpretation\n          </Menu.Item>\n\n          <Menu.Item \n            active={props.menu==='aboutUs'} \n            content='About'\n            onClick={() => history.push('/about-team')}\n            name='aboutUs'/>        \n\n          <Menu.Menu position='right'>\n            <Menu.Item as='a' header>\n              <Image size='small' src='/logo_white.png' />\n            </Menu.Item>\n          </Menu.Menu>\n        </Container>\n      </Menu>\n    </ErrorBoundary>\n  );\n}\n\n\n\n","\nimport React, {\n  createContext,\n  useMemo,\n  useCallback,\n} from \"react\"\nimport PropTypes from \"prop-types\"\nimport * as d3Geo from \"d3-geo\"\n\nconst { geoPath, ...projections } = d3Geo\n\nconst MapContext = createContext()\n\nconst makeProjection = ({\n  projectionConfig = {},\n  projection = \"geoEqualEarth\",\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0\n}) => {\n  const isFunc = typeof projection === \"function\"\n\n  if (isFunc) return projection\n\n  const scl = projectionConfig.scale || null;\n\n  let proj = projections[projection]().translate([width/2 + (offsetX)*scl/1000 ,\n                                              height/2 + (offsetY)*scl/1000]);\n\n  const supported = [\n    proj.center ? \"center\" : null,\n    proj.rotate ? \"rotate\" : null,\n    proj.scale ? \"scale\" : null,\n    proj.parallels ? \"parallels\" : null,\n  ]\n\n  supported.forEach(d => {\n    if (!d) return\n    proj = proj[d](projectionConfig[d] || proj[d]())\n  })\n\n  return proj\n}\n\nconst MapProvider = ({\n  width,\n  height,\n  offsetX,\n  offsetY,\n  projection,\n  projectionConfig,\n  ...restProps\n}) => {\n  const [cx, cy] = projectionConfig.center || []\n  const [rx, ry, rz] = projectionConfig.rotate || []\n  const [p1, p2] = projectionConfig.parallels || []\n  const s = projectionConfig.scale || null\n\n  const projMemo = useMemo(() => {\n    return makeProjection({\n      projectionConfig: {\n        center: (cx || cx === 0) || (cy || cy === 0) ? [cx, cy] : null,\n        rotate: (rx || rx === 0) || (ry || ry === 0) ? [rx, ry, rz] : null,\n        parallels: (p1 || p1 === 0) || (p2 || p2 === 0) ? [p1, p2] : null,\n        scale: s,\n      },\n      projection,\n      width,\n      height,\n      offsetX,\n      offsetY,\n    })\n  }, [ width, height, projection, cx, cy, rx, ry, rz, p1, p2, s, offsetX, offsetY ])\n\n  const proj = useCallback(projMemo, [projMemo])\n\n  const value = useMemo(() => {\n    return {\n      width,\n      height,\n      projection: proj,\n      path: geoPath().projection(proj),\n    }\n  }, [ width, height, proj ])\n\n  return (<MapContext.Provider value={value} {...restProps} />)\n}\n\nMapProvider.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  offsetX: PropTypes.number,\n  offsetY: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n}\n\nexport { MapProvider, MapContext }\n","\nimport { feature } from \"topojson-client\"\n\nexport function getCoords(w, h, t) {\n  const xOffset = (w * t.k - w) / 2\n  const yOffset = (h * t.k - h) / 2\n  return [w / 2 - (xOffset + t.x) / t.k, h / 2 - (yOffset + t.y) / t.k]\n}\n\nexport function fetchGeographies(url) {\n  return fetch(url)\n    .then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText)\n      }\n      return res.json()\n    }).catch(error => {\n      console.log(\"There was a problem when fetching the data: \", error)\n    })\n}\n\nexport function getFeatures(geographies, parseGeographies) {\n  if (Array.isArray(geographies)) return parseGeographies ? parseGeographies(geographies) : geographies\n  const feats = feature(\n    geographies,\n    geographies.objects[Object.keys(geographies.objects)[0]]\n  ).features\n  return parseGeographies ? parseGeographies(feats) : feats\n}\n\nexport function prepareFeatures(geographies, path) {\n  return geographies ? geographies.map((d, i) => {\n    return {\n      ...d,\n      rsmKey: `geo-${i}`,\n      svgPath: path(d),\n    }\n  }) : []\n}\n\nexport function createConnectorPath(dx = 30, dy = 30, curve = 0.5) {\n  const curvature = Array.isArray(curve) ? curve : [curve, curve]\n  const curveX = dx / 2 * curvature[0]\n  const curveY = dy / 2 * curvature[1]\n  return `M${0},${0} Q${-dx / 2 - curveX},${-dy / 2 + curveY} ${-dx},${-dy}`\n}\n\nexport function isString(geo) { return typeof geo === \"string\" }\n","\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\nimport useGeographies from \"./useGeographies\"\n\nconst Geographies = ({\n  geography,\n  children,\n  parseGeographies,\n  className = \"\",\n  ...restProps\n}) => {\n  const { path, projection } = useContext(MapContext)\n  const { geographies } = useGeographies({ geography, parseGeographies })\n\n  return (\n    <g className={`rsm-geographies ${className}`} {...restProps}>\n      {\n        geographies && geographies.length > 0 &&\n        children({ geographies, path, projection })\n      }\n    </g>\n  )\n}\n\nGeographies.propTypes = {\n  geography: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  children: PropTypes.func,\n  parseGeographies: PropTypes.func,\n  className: PropTypes.string,\n}\n\nexport default Geographies\n","\nimport { useMemo, useState, useEffect, useContext } from \"react\"\nimport { MapContext } from \"./MapProvider\"\n\nimport { fetchGeographies, getFeatures, prepareFeatures, isString } from \"../utils\"\n\nexport default function useGeographies({ geography, parseGeographies }) {\n  const { path } = useContext(MapContext)\n  const [geographies, setGeographies] = useState()\n\n  useEffect(() => {\n    if (typeof window === `undefined`) return\n\n    if (isString(geography)) {\n      fetchGeographies(geography).then(geos => {\n        if (geos) setGeographies(getFeatures(geos, parseGeographies))\n      })\n    } else {\n      setGeographies(getFeatures(geography, parseGeographies))\n    }\n  }, [geography, parseGeographies])\n\n  const output = useMemo(() => {\n    return prepareFeatures(geographies, path)\n  }, [geographies, path])\n\n  return { geographies: output }\n}\n","\nimport React, { useState, memo } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Geography = ({\n  geography,\n  onMouseEnter,\n  onMouseLeave,\n  onMouseDown,\n  onMouseUp,\n  onFocus,\n  onBlur,\n  style = {},\n  className = \"\",\n  ...restProps\n}) => {\n  const [isPressed, setPressed] = useState(false)\n  const [isFocused, setFocus] = useState(false)\n\n  function handleMouseEnter(evt) {\n    setFocus(true)\n    if (onMouseEnter) onMouseEnter(evt)\n  }\n\n  function handleMouseLeave(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onMouseLeave) onMouseLeave(evt)\n  }\n\n  function handleFocus(evt) {\n    setFocus(true)\n    if (onFocus) onFocus(evt)\n  }\n\n  function handleBlur(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onBlur) onBlur(evt)\n  }\n\n  function handleMouseDown(evt) {\n    setPressed(true)\n    if (onMouseDown) onMouseDown(evt)\n  }\n\n  function handleMouseUp(evt) {\n    setPressed(false)\n    if (onMouseUp) onMouseUp(evt)\n  }\n\n  return (\n    <path\n      tabIndex=\"0\"\n      className={`rsm-geography ${className}`}\n      d={geography.svgPath}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      style={style[isPressed || isFocused ? (isPressed ? \"pressed\" : \"hover\") : \"default\"]}\n      {...restProps}\n    />\n  )\n}\n\nGeography.propTypes = {\n  geography: PropTypes.object,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default memo(Geography)\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapProvider } from \"./MapProvider\"\n\nconst ComposableMap = ({\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0,\n  projection = \"geoEqualEarth\",\n  projectionConfig = {},\n  className = \"\",\n  ...restProps\n}) => {\n  return (\n    <MapProvider\n      width={width}\n      height={height}\n      offsetX={offsetX}\n      offsetY={offsetY}\n      projection={projection}\n      projectionConfig={projectionConfig}\n    >\n      <svg\n        width={width}\n        height={height}\n        className={`rsm-svg ${className}`}\n        {...restProps}\n      />\n    </MapProvider>\n  )\n}\n\nComposableMap.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default ComposableMap\n","import React, {useState } from 'react'\nimport { Header, Grid, List, Divider, Image } from 'semantic-ui-react'\n// import ReactDOM from 'react-dom';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nfunction myFunction() {\n  alert('Link is copied to clipboard!');\n  \n}\n\nexport default function Notes(props){\n\n\n  const [state] = useState(\"https://covid19.emory.edu\");\n \n  return (\n\n  \t\n\n    <div style={{paddingTop: '2em', fontWeight: 300}}>\n      <Divider/>\n\n            <Grid style = {{paddingTop: 30, paddingBottom: 30}}>\n                <Grid.Row columns ={4}>\n                  {/* <Grid.Column>\n                    <Image width='300' height='192' href = '' style = {{stroke:  \"#000000\"}} src='/HomeIcons/Emory_Icons_NationalReport_v1.jpg' /> \n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> National Report </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}><br/>Coming soon...</Header.Content>\n\n                  </Grid.Column> */}\n\n                  <Grid.Column>\n                    <Image width='300' height='192' href = '/Vaccine-Tracker' style = {{stroke:  \"#000000\"}} src='/HomeIcons/Emory_Icons_NationalReport_v1.jpg' /> \n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Vaccination Tracker </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}><br/>Click on icon for latest information on COVID-19 vaccination. </Header.Content>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/_nation' src='/HomeIcons/Emory_Icons_SelectState_v1.jpg' />            \n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Find State & County </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/>Click on icon to see how COVID-19 is impacting your state.</Header.Content>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/map-state' src='/HomeIcons/Emory_Icons_MapState_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Map State </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/>Click on icon to visualize state-wide outcomes and characteristics.</Header.Content>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/data-sources' src='/HomeIcons/Emory_Icons_DataSources_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Sources & Interpretation </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/>Click on icon for a complete list of measures' definitions and sources.</Header.Content>\n\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns ={4} style = {{paddingTop: 30}}>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/about-team' src='/HomeIcons/Emory_Icons_AboutUs_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> About This Dashboard </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/>Click on icon to learn about the goal of the dashboard and its team.</Header.Content>\n\n                  </Grid.Column>\n                  <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub' src='/HomeIcons/Emory_Icons_MediaHub_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Media Hub </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/>Click on icon for the latest video, podcast, and blog on COVID-19.</Header.Content>\n\n                  </Grid.Column>\n                  \n\n                  {true && <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub/blog/maskmandate' src='/HomeIcons/Emory_Icons_LatestBlog_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Latest Blog </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/>State-wide mask mandate in the early stages resulting in lower case rates during ...</Header.Content>\n\n                  </Grid.Column>}\n\n                  {false && <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub/podcast/Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances' src='/HomeIcons/Emory_Icons_LatestVideo_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Latest Podcast </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/> Dr. Vincent Marconi talks about the state of research around baricitinib, a JAK-STAT inhibitor that reduces ...</Header.Content>\n\n                  </Grid.Column>}\n\n                  {true && <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub/podcast/Katie_Kirkpatrick_on_economic_responses' src='/HomeIcons/Emory_Icons_LatestVideo_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Latest Podcast </Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/> Katie Kirkpatrick discusses the ramifications of COVID-19 in the business community...</Header.Content>\n\n                  </Grid.Column>}\n\n                  {false && <Grid.Column>\n                    <Image width='300' height='236' href = '/media-hub/podcast/Allison_Chamberlain_on_public_health_education_pandemic' src='/HomeIcons/Emory_Icons_LatestVideo_v1.jpg' />\n                    <Header.Subheader style = {{fontSize: \"20pt\", paddingTop: 10, fontWeight: 400}}> Latest Podcast 2</Header.Subheader>\n                    <Header.Content style = {{fontSize: \"14pt\"}}> <br/> Dr. Allison Chamberlain talks about blending public health academia and practice, how public health educ... </Header.Content>\n\n                  </Grid.Column>}\n\n                  \n                </Grid.Row>\n            </Grid>\n    <Divider/>\n    <Grid style={{width :\"1305px\"}}>\n      <Grid.Row>\n        <Grid.Column style={{fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n          Early data about COVID-19 suggests that communities are affected very differently due to social determinants of health like population density, poverty, residential segregation, underlying chronic health conditions, and availability of medical services. \n          In order to predict how the epidemic will continue to unfold and prepare for the future, it is critical to understand differences in underlying risk factors. \n          There is no one-size-fits all approach to combat the epidemic, but accurate and meaningful data is a key component of a robust public health response that is informed by contextual factors and prioritizes health equity.\n          <br/><br/>\n          The COVID-19 Health Equity Dashboard (<a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu\"> COVID19.emory.edu</a>) seeks to fill the gaps in county-level data about the virus and underlying social determinants of health. \n          Our goal is to facilitate easy comparisons of counties with respect to COVID-19 outcomes and social determinants. \n          We hope this becomes a valuable resource for and critical component of tailored public health responses to COVID-19 across the wide range of environments that Americans inhabit.\n\n        </Grid.Column>\n      </Grid.Row>\n      <Divider hidden/>\n      <Grid.Row columns={3} >\n        <Grid.Column style={{fontSize: \"14pt\"}}>          \n          <Image size='medium' src='/logo.png' />\n          &copy; 2020 Emory University. All rights reserved.\n          <br/>\n          <a style ={{color: \"#397AB9\"}} href=\"/privacy\"> Privacy Statement</a> \n\n        </Grid.Column>\n        <Grid.Column style={{ left: 0, fontSize: \"14pt\", paddingRight: 0, width: \"500px\"}}>          \n          <Header.Content style={{width: \"500px\", fontSize: \"14pt\"}}>\n            This <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu\"> COVID-19 Health Equity Dashboard </a> is created using\n          </Header.Content>\n            <List as='ol'>\n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://www.react-simple-maps.io/\">React Simple Maps</a> by <a style ={{color: \"#397AB9\"}} href=\"https://www.zcreativelabs.com/\">z creative labs</a></List.Item>\n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/open-source/victory/\">Victory</a> by <a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/\">Formidable</a></List.Item>\n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React\">Semantic UI React</a> by <a style ={{color: \"#397AB9\"}} href=\"https://github.com/levithomason\">@levithomason</a> and an amazing community of <a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React/graphs/contributors\">contributors</a></List.Item> \n              <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/facebook/create-react-app\">Create React App</a> by <a style ={{color: \"#397AB9\"}} href=\"https://about.fb.com/company-info/\">Facebook</a></List.Item> \n            </List>\n          \n\n        </Grid.Column>\n\n        <Grid.Column style={{paddingLeft: 0, width: 300}}>\n          <Grid>\n  \t        \t<Grid.Row style={{fontSize: \"14pt\", paddingBottom: 0, right: -240}}> \n  \t            \tShare This Dashboard \n  \t\t\t\t    </Grid.Row>\n  \t\t\t\t  <Grid.Row columns = {15} style ={{ paddingTop: 5}}>\n    \t\t\t\t  <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n    \t            \t<a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-size=\"large\" data-text=\"Check out the Emory COVID-19 Health Equity Interactive Dashboard! \" data-url=\"https://covid19.emory.edu/\" data-show-count=\"false\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"24px\" src='/Twitter_Logo_Blue.png' /> </a><script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script>\n    \t\t\t  \t</Grid.Column>\n    \t\t\t  \t<Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -309, bottom: -5}}>\n    \t            \t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fcovid19.emory.edu%2F&amp;src=sdkpreparse\" data-href=\"https://covid19.emory.edu/\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"14px\" src='/f_logo_RGB-Blue_512.png' /></a>\n    \t\t\t  \t</Grid.Column>\n    \t\t\t  \t<Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n    \t            \t<a href=\"https://web.whatsapp.com/send?text= Check out the Emory COVID-19 Health Equity Interactive Dashboard! https://covid19.emory.edu/\" data-action=\"share/whatsapp/share\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"22px\" src='/WhatsApp_Logo_1.png' /></a>\n    \t\t\t  \t</Grid.Column>\n    \t\t\t\t  <Grid.Column style ={{paddingLeft: 9, paddingRight: 0, paddingTop: 4, right: -300}}>\n    \t\t\t\t      <div>\n     \n                  <CopyToClipboard text={state}>\n                    <img onClick={()=>myFunction()} src='/copy_icon.png' style={{height: \"13px\", width: \"13px\" }}/>\n                  </CopyToClipboard>\n                  \n                  </div>    \t\t\t\t\t\t\t\t\n    \t\t\t\t  </Grid.Column>\n  \t\t\t  \t</Grid.Row>\n\t\t  \t  </Grid>\n\t\t  \t\n       \t  \n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n\n\n    </div>);\n}\n","import { Stitch } from \"mongodb-stitch-browser-sdk\";\n\n// TODO: Add your Stitch app's App ID\nconst APP_ID = \"test-owzgf\";\n\n// TODO: Initialize the app client\nconst app = Stitch.hasAppClient(APP_ID)\n  ? Stitch.getAppClient(APP_ID)\n  : Stitch.initializeAppClient(APP_ID);\n\nexport { app };\n","import { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app\";\n\n// TODO: Initialize a MongoDB Service Client\n\nconst mongoClient = app.getServiceClient(\n  RemoteMongoClient.factory,\n  \"mongodb-atlas\"\n);\nconst DB_NAME = 'healthequity';\nconst CHED_series = mongoClient.db(DB_NAME).collection(\"CHED_series\");\nconst CHED_static = mongoClient.db(DB_NAME).collection(\"CHED_static\");\n\n\nexport { CHED_static, CHED_series};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst HEContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useHE() {\n  const context = React.useContext(HEContext);\n  if (!context) {\n    throw new Error(`useHE must be used within a GADMProvider`);\n  }\n  return context;\n}\n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function HEProvider(props) {\n\n  const [pageState, setPageState] = React.useState({\n    selectedTable: {},\n    selectedVariable: {},\n    selectedCounty: {},\n    fetchedData:[],\n  });\n\n  const handlePageStateChange = (doc) => {\n    setPageState({...pageState, ...doc});\n  };\n\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const pageInfo = React.useMemo(\n    () => {\n      const { selectedTable, selectedVariable, selectedCounty, fetchedData } = pageState;\n      const value = {\n        selectedTable,\n        selectedVariable,\n        selectedCounty,\n        fetchedData,\n        actions: { handlePageStateChange },\n      };\n      return value;\n    },\n    [pageState],\n  );\n  return (\n    <HEContext.Provider value={pageInfo}>\n      {props.children}\n    </HEContext.Provider>\n  );\n}\nHEProvider.propTypes = {\n  children: PropTypes.element,\n};","import { \n  AnonymousCredential\n} from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app.js\";\n\nexport function loginAnonymous() {\n  // Allow users to log in anonymously\n  const credential = new AnonymousCredential();\n  return app.auth.loginWithCredential(credential);\n}\n\nexport function hasLoggedInUser() {\n  // Check if there is currently a logged in user\n  return app.auth.isLoggedIn;\n}\n\nexport function getCurrentUser() {\n  // Return the user object of the currently logged in user\n  return app.auth.isLoggedIn? app.auth.user : null;\n}\n\nexport function logoutCurrentUser() {\n  // Logout the currently logged in user\n  const user = getCurrentUser();\n  return app.auth.logoutUserWithId(user.id);\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  hasLoggedInUser,\n  logoutCurrentUser,\n  getCurrentUser,\n  loginAnonymous,\n\n} from \"./../stitch/authentication\";\n\n\n// Create a React Context that lets us expose and access auth state\n// without passing props through many levels of the component tree\nconst StitchAuthContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useStitchAuth() {\n  const context = React.useContext(StitchAuthContext);\n  if (!context) {\n    throw new Error(`useStitchAuth must be used within a StitchAuthProvider`);\n  }\n  return context;\n}\n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function StitchAuthProvider(props) {\n\n  const [authState, setAuthState] = React.useState({\n    isLoggedIn: hasLoggedInUser(),\n    currentUser: getCurrentUser(),\n  });\n\n  // Authentication Actions\n  const handleAnonymousLogin = async () => {\n    const { isLoggedIn } = authState;\n    if (!isLoggedIn) {\n      const loggedInUser = await loginAnonymous();\n      setAuthState({\n        ...authState,\n        isLoggedIn: true,\n        currentUser: loggedInUser,\n      });\n    }\n  };\n  // Authentication Actions\n  const handleLogout = async () => {\n    const { isLoggedIn } = authState;\n    if (isLoggedIn) {\n      await logoutCurrentUser();\n      setAuthState({\n        ...authState,\n        isLoggedIn: false,\n        currentUser: null,\n      });\n    } else {\n      console.log(`can't handleLogout when no user is logged in`);\n    }\n  };\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const authInfo = React.useMemo(\n    () => {\n      const { isLoggedIn, currentUser} = authState;\n      const value = {\n        isLoggedIn,\n        currentUser,\n        actions: { \n                  handleAnonymousLogin, handleLogout,\n                },\n      };\n      return value;\n    },\n    [authState.isLoggedIn],\n  );\n  return (\n    <StitchAuthContext.Provider value={authInfo}>\n      {props.children}\n    </StitchAuthContext.Provider>\n  );\n}\nStitchAuthProvider.propTypes = {\n  children: PropTypes.element,\n};\n","import React, { useEffect, useState } from 'react'\nimport { Container, Grid, Dropdown, Breadcrumb, Header, Loader, Divider, Image, Accordion, Icon} from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport { geoCentroid } from \"d3-geo\";\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport ReactTooltip from \"react-tooltip\";\nimport { VictoryChart, \n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  // VictoryLegend,\n  VictoryLine,  \n  VictoryLabel, \n  VictoryArea,\n  VictoryContainer\n} from 'victory';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport _ from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport configs from \"./state_config.json\";\nimport stateOptions from \"./stateOptions.json\";\n\nimport ReactDOM from 'react-dom';\nimport { CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {HEProvider, useHE} from './HEProvider';\nimport {useStitchAuth} from \"./StitchAuth\";\n\nfunction isJson(str) {\n  try {\n      JSON.parse(str);\n  } catch (e) {\n      return false;\n  }\n  return true;\n}\n// function getKeyByValue(object, value) {\n//   return Object.keys(object).find(key => object[key] === value);\n// }\n\nfunction getMax(arr, prop) {\n    var max;\n    for (var i=0 ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction getMaxRange(arr, prop, range) {\n    var max;\n    for (var i=range ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\n//const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\"\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\nconst colorHighlight = '#f2a900';\nconst stateColor = \"#778899\";\n\n// function LatestOnThisDashboard(){\n//   return(\n//     <Grid>\n//                 <Grid.Column style={{width: 110, fontSize: \"16pt\", lineHeight: \"18pt\"}}>\n\n//                   <b>The Latest on this Dashboard</b>\n                  \n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 20}}>\n                  \n//                 </Grid.Column>\n\n//                 {/* <Grid.Column style={{width: 190}}>\n//                   <Image width = {175} height = {95} src='/HomeIcons/Emory_Icons_NationalReport_v1.jpg' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b> National Report <br/> </b>\n\n//                   The National Report tab takes you to a detailed overview of the impact of COVID-19 in the U.S.. \n//                   How has the pandemic been trending? What are the most hard hit counties? \n//                   Who are the most vulnerable communities...\n//                   <a href = \"/national-report/pilot\">for more</a>. \n                  \n//                 </Grid.Column> */}\n\n//                 {/* <Grid.Column style={{width: 190}}>\n//                   <Image width = {175} height = {95} href = \"/Georgia\" src='/LatestOnThisDashboard/GADash.png' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b> Georgia COVID-19 Health Equity Dashboard<br/> </b>\n\n//                   The Georgia COVID-19 Health Equity dashboard is a tool to dynamically track and compare the burden of cases and deaths across counties in Georgia.\n//                   <br/>\n//                   <a href = \"/Georgia\">Click to Access</a>. \n                  \n//                 </Grid.Column> */}\n\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {175} height = {95} href = \"/Vaccine-Tracker\" src='/HomeIcons/Emory_Icons_NationalReport_v1.jpg' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b> COVID-19 Vaccination Tracker <br/> </b>\n\n//                   The COVID-19 Vaccionation Tracker tab takes you to an overview of current vaccination status in the U.S. and in each state. \n//                   Check out some FAQs about COVID-19 Vaccines...\n//                   <a href = \"/Vaccine-Tracker\">for more</a>. \n                  \n//                 </Grid.Column>\n\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/blog/maskmandate\" src='/blog images/maskmandate/Mask Mandate blog.png' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>Statewide Mask Mandates in the United States<br/></b>\n\n//                   Implementing state-wide mask mandate in the early stages of the pandemic may have been a clever move for US states resulting in lower case rates during the third wave of the pandemic compared to ...\n//                   <a href = \"/media-hub/blog/maskmandate\">for more</a>. \n//                 </Grid.Column>  \n\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/podcast/Katie_Kirkpatrick_on_economic_responses\" src='/podcast images/Katie Kirkpatrick.jpeg' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>“You can't have good public health, but not have equity and economic growth”: A conversation with Katie Kirkpatrick about economic responses to the COVID-19 pandemic.<br/></b>\n\n//                   Katie Kirkpatrick discusses the ramifications of COVID-19 in the business community...  \n//                   <a href = \"/media-hub/podcast/Katie_Kirkpatrick_on_economic_responses\">for more</a>. \n//                 </Grid.Column>        \n\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/podcast/Allison_Chamberlain_on_public_health_education_pandemic\" src='/podcast images/Allison Chamberlain.png' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>“A teaching opportunity for many years to come”: Dr. Allison Chamberlain on public health education in the time of the COVID-19 pandemic <br/></b>\n\n//                   Dr. Allison Chamberlain talks about blending public health academia and practice, \n//                   how public health educ... \n//                   <a href = \"/media-hub/podcast/Allison_Chamberlain_on_public_health_education_pandemic\">for more</a>. \n//                 </Grid.Column>\n\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/podcast/Robert_Breiman_on_COVID-19_vaccine_development_and_distribution\" src='/podcast images/Robert Breiman.png' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>“Information equity is a critical part of the whole picture”: Dr. Robert Breiman on COVID-19 vaccine development and distribution <br/></b>\n\n//                   Dr. Robert Breiman talks about where different SARS-CoV-2 vaccines are in development \n//                   and clinical trials...\n//                   <a href = \"/media-hub/podcast/Robert_Breiman_on_COVID-19_vaccine_development_and_distribution\">for more</a>. \n//                 </Grid.Column>\n\n\n\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/podcast/Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances\" src='/podcast images/Vincent Macroni.png' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>Innovations in Covid-19 Treatment: Dr. Vincent Marconi on Anti-Viral and Anti-Inflammatory Advances Against Covid-19 Infection <br/></b>\n\n//                   Dr. Vincent Marconi talks about the state of research around baricitinib, a JAK-STAT inhibitor \n//                   that reduces...\n//                   <a href = \"/media-hub/podcast/Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances\">for more</a>. \n//                 </Grid.Column>\n\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/podcast/Dr._Nneka_Sederstrom_on_Racism_and_Ethics\" src='/podcast images/Dr. Nneka Sederstrom.jpg' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>\"We Have to Be Better\": Dr. Nneka Sederstrom on Racism and Ethics During Covid-19 <br/></b>\n\n//                   Dr. Nneka Sederstrom discusses how Covid-19 has brought issues of structural racism in \n//                   medicine to the forefront of clinical ethics and pandemic... \n//                   <a href = \"/media-hub/podcast/Dr._Nneka_Sederstrom_on_Racism_and_Ethics\">for more</a>. \n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/podcast/Dr.Judy_Monroe_on_Lesson_Learned_&_CDC\" src='/podcast images/JudyMonroe.jpg' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>\"You've Got to Have Trust\": Dr. Judy Monroe on Lessons Learned About Pandemic Preparedness <br/></b>\n\n//                   In a podcast, Dr. Monroe tells us about the lessons she learned about leadership and community partnerships during \n//                   pandemics based on her experience as...\n//                   <a href = \"/media-hub/podcast/Dr.Judy_Monroe_on_Lesson_Learned_&_CDC\">for more</a>. \n//                 </Grid.Column>\n//                 {/* <Grid.Column style={{width: 190}}>\n//                   <Image width = {165} height = {95} href = \"/media-hub/podcast/Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes\" src='/podcast images/CarlosdelRio.jpg' />\n//                 </Grid.Column>\n//                 <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n//                   <b>Dr. Carlos Del Rio on COVID-19 Equity and Outcomes<br/></b>\n\n//                   Considering health equity and disparity, how will the pandemic progress? What is our current strategy? \n//                   What can be and needs to be done to change the course of the pandemic? <br/>\n//                   <a href = \"/media-hub/podcast/Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes\">for more</a>. \n//                 </Grid.Column> */}\n//               </Grid>\n//   )\n// }\n\nfunction LatestOnThisDashboard(){\n  return(\n    <Grid>\n                <Grid.Column style={{width: 110, fontSize: \"16pt\", lineHeight: \"18pt\"}}>\n\n                  <b>The Latest on this Dashboard</b>\n                  \n                </Grid.Column>\n                <Grid.Column style={{width: 20}}>\n                  \n                </Grid.Column>\n\n                {/* <Grid.Column style={{width: 190}}>\n                  <Image width = {175} height = {95} src='/HomeIcons/Emory_Icons_NationalReport_v1.jpg' />\n                </Grid.Column>\n                <Grid.Column style={{width: 320, fontSize: \"8pt\"}}>\n                  <b> National Report <br/> </b>\n\n                  The National Report tab takes you to a detailed overview of the impact of COVID-19 in the U.S.. \n                  How has the pandemic been trending? What are the most hard hit counties? \n                  Who are the most vulnerable communities...\n                  <a href = \"/national-report/pilot\">for more</a>. \n                  \n                </Grid.Column> */}\n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {175} height = {95} href = \"/Georgia\" src='/LatestOnThisDashboard/GADash.png' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b> Georgia COVID-19 Health Equity Dashboard<br/> </b>\n\n                  The Georgia COVID-19 Health Equity dashboard is a tool to dynamically track and compare the burden of cases and deaths across counties in Georgia.\n                  \n                  <a href = \"/Georgia\"> Click to Access</a>. \n                  \n                </Grid.Column>\n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {175} height = {95} href = \"/Vaccine-Tracker\" src='/HomeIcons/Emory_Icons_NationalReport_v1.jpg' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b> COVID-19 Vaccination Tracker <br/> </b>\n\n                  The COVID-19 Vaccionation Tracker tab takes you to an overview of current vaccination status in the U.S. and in each state. \n                  For FAQs on COVID-19 Vaccines...\n                  <a href = \"/Vaccine-Tracker\">click to access</a>. \n                  \n                </Grid.Column>\n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {165} height = {95} href = \"/media-hub/blog/maskmandate\" src='/blog images/maskmandate/Mask Mandate blog.png' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b>Statewide Mask Mandates in the United States<br/></b>\n\n                  State-wide mask mandate in the early stages of the pandemic may have been clever for US states, lowering case rates during the third wave of the pandemic compared to...\n                  <a href = \"/media-hub/blog/maskmandate\">for more</a>. \n                </Grid.Column>  \n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {165} height = {95} href = \"/media-hub/podcast/Katie_Kirkpatrick_on_economic_responses\" src='/podcast images/Katie Kirkpatrick.jpeg' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b>“You can't have good public health, but not have equity and economic growth”<br/></b>\n\n                  Katie Kirkpatrick discusses the economic responses to COVID-19 & ramifications in the business community...  \n                  <a href = \"/media-hub/podcast/Katie_Kirkpatrick_on_economic_responses\">for more</a>. \n                </Grid.Column>        \n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {165} height = {95} href = \"/media-hub/podcast/Allison_Chamberlain_on_public_health_education_pandemic\" src='/podcast images/Allison Chamberlain.png' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b>“A teaching opportunity for many years to come”<br/></b>\n\n                  Dr. Allison Chamberlain talks about public health education in the time of the COVID-19 pandemic, blending public health... \n                   \n                  <a href = \"/media-hub/podcast/Allison_Chamberlain_on_public_health_education_pandemic\">for more</a>. \n                </Grid.Column>\n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {165} height = {95} href = \"/media-hub/podcast/Robert_Breiman_on_COVID-19_vaccine_development_and_distribution\" src='/podcast images/Robert Breiman.png' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b>“Information equity is a critical part of the whole picture”<br/></b>\n\n                  Dr. Robert Breiman talks about SARS-CoV-2 vaccine development, distribution, and clinical trials...\n                  <a href = \"/media-hub/podcast/Robert_Breiman_on_COVID-19_vaccine_development_and_distribution\">for more</a>. \n                </Grid.Column>\n\n\n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {165} height = {95} href = \"/media-hub/podcast/Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances\" src='/podcast images/Vincent Macroni.png' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b>Innovations in Covid-19 Treatment: Dr. Vincent Marconi on Anti-Viral and Anti-Inflammatory Advances Against COVID-19 <br/></b>\n\n                  Dr. Vincent Marconi talks about the state of research around baricitinib...\n                  <a href = \"/media-hub/podcast/Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances\">for more</a>. \n                </Grid.Column>\n\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {165} height = {95} href = \"/media-hub/podcast/Dr._Nneka_Sederstrom_on_Racism_and_Ethics\" src='/podcast images/Dr. Nneka Sederstrom.jpg' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b>\"We Have to Be Better\": Dr. Nneka Sederstrom on Racism and Ethics During Covid-19 <br/></b>\n\n                  Dr. Nneka Sederstrom discusses how Covid-19 has brought issues of structural racism in \n                  medicine to the forefront of clinical ethics and pandemic... \n                  <a href = \"/media-hub/podcast/Dr._Nneka_Sederstrom_on_Racism_and_Ethics\">for more</a>. \n                </Grid.Column>\n                <Grid.Column style={{width: 190}}>\n                  <Image width = {165} height = {95} href = \"/media-hub/podcast/Dr.Judy_Monroe_on_Lesson_Learned_&_CDC\" src='/podcast images/JudyMonroe.jpg' />\n                </Grid.Column>\n                <Grid.Column style={{width: 250, fontSize: \"8pt\"}}>\n                  <b>\"You've Got to Have Trust\": Dr. Judy Monroe on Lessons Learned About Pandemic Preparedness <br/></b>\n\n                  In a podcast, Dr. Monroe tells us about the lessons she learned about leadership and community partnerships during \n                  pandemics based on her experience as...\n                  <a href = \"/media-hub/podcast/Dr.Judy_Monroe_on_Lesson_Learned_&_CDC\">for more</a>. \n                </Grid.Column>\n                \n              </Grid>\n  )\n}\n\n\nexport default function USMap(props) {\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();  \n\n  const history = useHistory();\n  const [tooltipContent, setTooltipContent] = useState('');\n  \n  const [date, setDate] = useState('');\n  const [nationalDemogDate, setNationalDemogDate] = useState('');\n\n  const [data, setData] = useState();\n  const [allTS, setAllTS] = useState();\n  const [raceData, setRaceData] = useState();\n  const [nationalDemog, setNationalDemog] = useState();\n\n  // const [stateName, setStateName] = useState('Georgia');\n  // const [fips, setFips] = useState('13');\n  const [stateName, setStateName] = useState('The United States');\n  const [fips, setFips] = useState('_nation');\n  const [stateFips, setStateFips] = useState();\n  \n  const [colorScale, setColorScale] = useState();\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  const [varMap, setVarMap] = useState({});\n  const [metric, setMetric] = useState('casesfig');\n  const [metricOptions, setMetricOptions] = useState('casesfig');\n  const [metricName, setMetricName] = useState('Total COVID-19 Cases');\n\n  // const [metric, setMetric] = useState('caserate7dayfig');\n  // const [metricOptions, setMetricOptions] = useState('caserate7dayfig');\n  // const [metricName, setMetricName] = useState('Average Daily COVID-19 Cases per 100K');\n\n  const [delayHandler, setDelayHandler] = useState();\n\n    let newDict = {};\n    let fltrdArray = [];\n    let stateArray = [];\n    let colorArray = [];\n    let scaleMap = {};\n    var max = 0;\n    var min = 100;\n  useEffect(()=>{\n    \n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMetricOptions(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.variable, text: d.name, def: d.definition, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\" && d.group === \"outcomes\")));\n      });\n\n    fetch('/data/date.json').then(res => res.json())\n      .then(x => setDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n\n    fetch('/data/nationalDemogdate.json').then(res => res.json())\n      .then(x => setNationalDemogDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n\n    fetch('/data/nationalDemogdata.json').then(res => res.json())\n        .then(x => setNationalDemog(x));\n\n    fetch('/data/racedataAll.json').then(res => res.json())\n      .then(x => \n        setRaceData(x));\n    \n    fetch('/data/timeseriesAll.json').then(res => res.json())\n        .then(x => setAllTS(x));\n\n    // local\n    fetch('/data/data.json').then(res => res.json())\n      .then(x => {\n\n          setData(x);       \n      \n          const cs = scaleQuantile()\n        .domain(_.map(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[metric] > 0 &&\n              d.fips.length === 5)),\n          d=> d[metric]))\n        .range(colorPalette);\n\n        let scaleMap = {}\n        _.each(x, d=>{\n          if(d[metric] >= 0){\n          scaleMap[d[metric]] = cs(d[metric])}});\n      \n        setColorScale(scaleMap);\n        var max = 0\n        var min = 100\n        _.each(x, d=> { \n          if (d[metric] > max && d.fips.length === 5) {\n            max = d[metric]\n          } else if (d.fips.length === 5 && d[metric] < min && d[metric] >= 0){\n            min = d[metric]\n          }\n        });\n\n        if (max > 999999) {\n          max = (max/1000000).toFixed(0) + \"M\";\n          setLegendMax(max);\n        }else if (max > 999) {\n          max = (max/1000).toFixed(0) + \"K\";\n          setLegendMax(max);\n        }else{\n          setLegendMax(max.toFixed(0));\n\n        }\n        setLegendMin(min.toFixed(0));\n        setLegendSplit(cs.quantiles());\n          \n          \n        });\n\n      \n        \n      //mongo\n        // if (isLoggedIn === true){\n        //   const fetchData = async() => {\n              // const mainQ = {all: \"all\"};\n              // const promStatic = await CHED_static.find(mainQ,{projection:{}}).toArray();\n              // promStatic.forEach( i => {\n              //   if(i.tag === \"nationalrawfull\"){ //nationalraw\n              //     newDict = JSON.parse(JSON.stringify(i.data));\n\n              //     const cs = scaleQuantile()\n              //     .domain(_.map(_.filter(newDict, \n              //       d => (\n              //           d[metric] > 0 &&\n              //           d.fips.length === 5)),\n              //       d=> d[metric]))\n              //     .range(colorPalette);\n        \n              //     let scaleMap = {}\n              //     _.each(newDict, d=>{\n              //       if(d[metric] > 0){\n              //       scaleMap[d[metric]] = cs(d[metric])}});\n              \n              //     setColorScale(scaleMap);\n              //     setLegendSplit(cs.quantiles());\n                  \n              //     //find the largest value and set as legend max\n              //     _.each(newDict, d=> { \n              //       if (d[metric] > max && d.fips.length === 5) {\n              //         max = d[metric]\n              //       } else if (d.fips.length === 5 && d[metric] < min && d[metric] >= 0){\n              //         min = d[metric]\n              //       }\n              //     });\n              \n              //     if (max > 999999) {\n              //       max = (max/1000000).toFixed(0) + \"M\";\n              //       setLegendMax(max);\n              //     }else if (max > 999) {\n              //       max = (max/1000).toFixed(0) + \"K\";\n              //       setLegendMax(max);\n              //     }else{\n              //       setLegendMax(max.toFixed(0));\n              \n              //     }\n              //     setLegendMin(min.toFixed(0));\n              //     setData(newDict);\n\n              //   }else if(i.tag === \"racedataAll\"){ //race data\n              //     setRaceData(i.racedataAll);       \n              //   }else if(i.tag === \"date\"){\n              //     setDate(i.date.substring(5,7) + \"/\" + i.date.substring(8,10) + \"/\" + i.date.substring(0,4));\n              //   }else if(i.tag === \"nationalDemog\"){\n              //     setNationalDemog(i.nationalDemog);\n              //   }\n              // });\n\n              //all states' time series data in one single document\n        //       let tempDict = {};\n        //       const seriesQ = { $or: [ { state: \"_n\" } , { tag: \"stateonly\" } ] };\n        //       const promSeries = await CHED_series.find(seriesQ,{projection:{}}).toArray();\n        //       tempDict = promSeries[0].timeseriesAll;\n        //       tempDict[\"_nation\"] = promSeries[1].timeseries_nation;\n        //       setAllTS(tempDict);\n\n        //       //if timeseriesAll exceeds 16MB (max size for a single document on MongoDB), \n        //       //use the following code and comment out the above\n\n        //       // const seriesQ = { $or: [ { state: \"_n\" } , { stateonly: \"true\" } ] };\n        //       // const promSeries = await CHED_series.find(seriesQ,{projection:{}}).toArray();\n        //       // promSeries.forEach( i => {\n        //       //   if(i.state === \"_n\"){\n        //       //     tempDict[\"_nation\"] = i[\"timeseries_nation\"];\n        //       //   }\n        //       //   tempDict[i.state] = i[\"timeseries\" + i.state];\n        //       // });\n        //       // setAllTS(tempDict);\n        //     };\n          \n        //   fetchData();\n        //   } else {\n        //   handleAnonymousLogin();\n        // }\n        //local\n      },[metric]);\n      //mongo\n    // },[isLoggedIn]);\n\n    //mongo\n  // useEffect(() =>{\n  //     const cs = scaleQuantile()\n  //     .domain(_.map(_.filter(data, \n  //       d => (\n  //           d[metric] > 0 &&\n  //           d.fips.length === 5)),\n  //       d=> d[metric]))\n  //     .range(colorPalette);\n\n  //     let scaleMap = {}\n  //     _.each(data, d=>{\n  //       if(d[metric] > 0){\n  //       scaleMap[d[metric]] = cs(d[metric])}});\n\n  //     setColorScale(scaleMap);\n  //     setLegendSplit(cs.quantiles());\n      \n  //     //find the largest value and set as legend max\n  //     _.each(data, d=> { \n  //       if (d[metric] > max && d.fips.length === 5) {\n  //         max = d[metric]\n  //       } else if (d.fips.length === 5 && d[metric] < min && d[metric] >= 0){\n  //         min = d[metric]\n  //       }\n  //     });\n\n  //     if (max > 999999) {\n  //       max = (max/1000000).toFixed(0) + \"M\";\n  //       setLegendMax(max);\n  //     }else if (max > 999) {\n  //       max = (max/1000).toFixed(0) + \"K\";\n  //       setLegendMax(max);\n  //     }else{\n  //       setLegendMax(max.toFixed(0));\n\n  //     }\n  //     setLegendMin(min.toFixed(0));\n\n  // }, [metric]);\n\n  if (data && allTS && metric && raceData) {\n    // console.log(isJson(JSON.stringify(data)));\n  return (\n    <HEProvider>\n      <div>\n        <AppBar menu='countyReport'/>\n        <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n        <Grid style={{height:130, overflow: \"hidden\"}}>\n          <div style = {{ paddingBottom: 8}}>\n          </div>\n          \n          <div style={{height:130, overflowY:\"hidden\", overflowX: \"auto\"}}>\n            <div style={{width: \"260%\"}}>\n              <LatestOnThisDashboard/>\n            </div>\n          </div>\n        </Grid>\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\"}}>\n            <Breadcrumb.Section active >United States</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n          </Breadcrumb>\n          <Divider hidden />\n        <Grid columns={9} style = {{ width: \"100%\", height: \"100%\", overflow: \"hidden\" }}>\n          <div style={{fontSize: \"14pt\", paddingTop: 10, paddingBottom: 30}}>\n            See Dashboard Guide (<a style ={{color: \"#397AB9\"}} href=\"Dashboard user guide.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"> PDF </a> / <a style ={{color: \"#397AB9\"}} href=\"https://youtu.be/PmI42rHnI6U\" target=\"_blank\" rel=\"noopener noreferrer\"> YouTube </a>)\n\n          </div>\n\n            \n            <Grid.Row style = {{ width: \"100%\", height: \"100%\" }}>\n              <Grid.Column width={9} style = {{ width: \"100%\", height: \"100%\" }}>\n                <Header as='h2' style={{fontWeight: 400, fontSize: \"18pt\"}}>\n                  <Header.Content>\n                    COVID-19 is affecting every community differently.<br/>\n                    Some areas are much harder-hit than others.<br/>\n                    What is happening where you live?\n                    <Header.Subheader style={{fontWeight: 300}}></Header.Subheader>\n                  </Header.Content>\n                </Header>\n                \n                <Grid.Row columns={2} style={{width: 680, padding: 0, paddingTop: 0, paddingRight: 0, paddingBottom: 0}}>\n\n                      <Dropdown\n                        style={{background: '#fff', \n                                fontSize: \"14pt\",\n                                fontWeight: 400, \n                                theme: '#000000',\n                                width: '420px',\n                                top: '2px',\n                                left: '0px',\n                                text: \"Select\",\n                                borderTop: 'none',\n                                borderLeft: '0px solid #FFFFFF',\n                                borderRight: '0px', \n                                borderBottom: '0.5px solid #bdbfc1',\n                                borderRadius: 0,\n                                minHeight: '1.0em',\n                                paddingRight: 0,\n                                paddingBottom: '0.5em'}}\n                        text= {metricName}\n                        pointing = 'top'\n                        search \n                        selection\n                        options={metricOptions}\n                        \n                        onChange={(e, { value }) => {\n                          setMetric(value);\n                          setMetricName(varMap[value]['name']);\n                        }}\n                      />                  \n\n                <svg width=\"260\" height=\"80\">\n                  \n                  {_.map(legendSplit, (splitpoint, i) => {\n                    if(legendSplit[i] < 1){\n                      return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(1)}</text>                    \n                    }else if(legendSplit[i] > 999999){\n                      return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                    }else if(legendSplit[i] > 999){\n                      return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000).toFixed(0) + \"K\"}</text>                    \n                    }\n                    return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(0)}</text>                    \n                  })} \n                  <text x={50} y={35} style={{fontSize: '0.7em'}}>{legendMin}</text>\n                  <text x={170} y={35} style={{fontSize: '0.7em'}}>{legendMax}</text>\n\n\n                  {_.map(colorPalette, (color, i) => {\n                    return <rect key={i} x={50+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                  })} \n\n\n                  <text x={50} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                  <text x={50+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                  <rect x={195} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                  <text x={217} y={50} style={{fontSize: '0.7em'}}> None </text>\n                  <text x={217} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n\n                </svg>\n                </Grid.Row>\n\n\n                <ComposableMap \n                  projection=\"geoAlbersUsa\" \n                  data-tip=\"\"\n                  width={630} \n                  height={380}\n                  strokeWidth= {0.1}\n                  stroke= 'black'\n                  projectionConfig={{scale: 750}}\n\n\n                   >\n                  <Geographies geography={geoUrl}>\n                    {({ geographies }) => \n                      <svg>\n                        {setStateFips(fips)}\n                        {geographies.map(geo => (\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            onMouseEnter={()=>{\n\n                              const stateFip = geo.id.substring(0,2);\n                              const configMatched = configs.find(s => s.fips === stateFip);\n\n                              setFips(geo.id.substring(0,2));\n                              setStateFips(geo.id.substring(0,2));\n                              setStateName(configMatched.name);        \n                            \n                            }}\n                            \n                            onMouseLeave={()=>{\n                              setTooltipContent(\"\");\n                              setFips(\"_nation\");\n                              setStateFips(\"_nation\");\n                              setStateName(\"The United States\");   \n                            }}\n\n                            onClick={()=>{\n                              history.push(\"/\"+geo.id.substring(0,2)+\"\");\n                            }}\n\n                            \n                            fill={fips===geo.id.substring(0,2)?colorHighlight:\n                            ((colorScale && data[geo.id] && (data[geo.id][metric]) > 0)?\n                                colorScale[data[geo.id][metric]]: \n                                '#FFFFFF')}\n                            \n                          />\n                        ))}\n                      </svg>\n                    }\n                  </Geographies>\n                  \n\n                </ComposableMap>\n                <Grid>\n                <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 73, lineHeight: \"18pt\"}}>\n                  <b>Data as of:</b> {date}, updated every weekday.\n                </Header.Content>\n                <Grid.Row>\n                  \n                  {stateFips && <Accordion style = {{paddingTop: 0, paddingLeft: 10}}defaultActiveIndex={1} panels={[\n                    {\n                        key: 'acquire-dog',\n                        title: {\n                            content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                            icon: 'dropdown',\n                        },\n                        content: {\n                            content: (\n                                  <Header.Content style={{width: 660, fontWeight: 300, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                                  <b><em> {varMap[metric].name} </em></b> {varMap[metric].definition} <br/>\n                                  For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                  </Header.Content>\n                            ),\n                          },\n                      }\n                  ]\n\n                  } /> }\n                </Grid.Row>\n                </Grid>\n              </Grid.Column>\n              <Grid.Column width={7} style ={{paddingLeft: 0}}>\n                <Header as='h2' style={{fontWeight: 400}}>\n                  <Header.Content style={{width : 550, fontSize: \"18pt\", textAlign: \"center\"}}>\n                    Current Cases and Deaths in {stateName}\n                    {/* <Dropdown\n                      style={{background: '#fff', \n                              fontSize: \"24px\",\n                              fontWeight: 400, \n                              theme: '#000000',\n                              width: '230px',\n                              top: '0px',\n                              left: '0px',\n                              text: \"Select\",\n                              borderTop: 'none',\n                              borderLeft: 'none',\n                              borderRight: 'none', \n                              borderBottom: '0.5px solid #bdbfc1',\n                              borderRadius: 0,\n                              minHeight: '1.0em',\n                              paddingBottom: '0.5em'}}\n                      text= {stateName}\n                      search\n                      pointing = 'top'\n                      options={stateOptions}\n                      onChange={(e, { value}) => {\n                        \n                        setStateFips(value);\n                        setFips(value);\n                        const configMatched = configs.find(s => s.fips === value);\n                        setStateName(configMatched.name);           \n                        // setStateName(st[stateFips + value]);\n                        \n                                \n                      }}\n                    />     */}\n                    \n                  </Header.Content>\n                </Header>\n                <Grid>\n                  <Grid.Row columns = {2}>\n                    <Grid.Column> \n\n                      <div>\n                      { stateFips &&\n                        <VictoryChart \n                                    minDomain={{ x: stateFips? allTS[stateFips][allTS[stateFips].length-15].t : allTS[\"13\"][allTS[\"13\"][\"13\"].length-15].t}}\n                                    maxDomain = {{y: !stateFips ? getMaxRange(allTS[\"13\"], \"caseRateMean\", (allTS[\"13\"].length-15)).caseRateMean : getMaxRange(allTS[stateFips], \"caseRateMean\", (allTS[stateFips].length-15)).caseRateMean*1.45}}                            \n                                    width={235}\n                                    height={180}\n                                    padding={{marginLeft: 0, right: -1, top: 150, bottom: -0.9}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryAxis\n                                      tickValues={stateFips ? \n                                        [\n                                        allTS[stateFips][allTS[stateFips].length - Math.round(allTS[stateFips].length/3)*2 - 1].t,\n                                        allTS[stateFips][allTS[stateFips].length - Math.round(allTS[stateFips].length/3) - 1].t,\n                                        allTS[stateFips][allTS[stateFips].length-1].t]\n                                        :\n                                      [\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3)*2 - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3) - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length-1].t]}                         \n                                      style={{grid:{background: \"#ccdee8\"}, tickLabels: {fontSize: 10}}} \n                                      tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                    <VictoryLine data={stateFips && allTS[stateFips] ? allTS[stateFips] : allTS[\"13\"]}\n                                        x='t' y='caseRateMean'\n                                        />\n\n                                    </VictoryGroup>\n                                    <VictoryArea\n                                      style={{ data: {fill: \"#00BFFF\" , fillOpacity: 0.1} }}\n                                      data={stateFips && allTS[stateFips]? allTS[stateFips] : allTS[\"13\"]}\n                                      x= 't' y = 'caseRateMean'\n\n                                    />\n\n                                    <VictoryLabel text= {stateFips ? numberWithCommas((allTS[stateFips][allTS[stateFips].length - 1].dailyCases).toFixed(0)) : numberWithCommas((allTS[\"13\"][allTS[\"13\"].length - 1].dailyCases).toFixed(0))} x={80} y={80} textAnchor=\"middle\" style={{fontSize: 40, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateFips ? \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0) + \"%\": \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? ((allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0)).substring(1) + \"%\": \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0).substring(1) + \"%\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? ((allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0)).substring(1) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) + \"%\"} x={stateFips === \"_nation\" ? 202 : 182} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateFips ? \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"↑\": \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"↓\": \"\"\n                                                         : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"↑\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"↓\": \"\"} \n                                                        \n\n                                                        x={stateFips === \"_nation\" ? 165 : 145} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'\n\n                                                        , fill: stateFips ? \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"#32CD32\": \"\"\n                                                         : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"#32CD32\": \"\"\n\n                                                      }}/>\n\n                                    <VictoryLabel text= {\"14-day\"}  x={stateFips === \"_nation\" ? 200 : 180} y={100} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"change\"}  x={stateFips === \"_nation\" ? 200 : 180} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"Daily Cases\"}  x={120} y={20} textAnchor=\"middle\" style={{fontSize: \"19px\", fontFamily: 'lato', fill: \"#004071\"}}/>\n\n                                    \n                        </VictoryChart>}\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column> \n                      <div>\n                      { stateFips && \n                        <VictoryChart theme={VictoryTheme.material}\n                                    minDomain={{ x: stateFips? allTS[stateFips][allTS[stateFips].length-15].t: allTS[\"13\"][allTS[\"13\"].length-15].t, y: 0}}\n                                    maxDomain = {{y: stateFips? getMax(allTS[stateFips], \"mortalityMean\").mortalityMean * 1.1: getMax(allTS[\"13\"], \"mortalityMean\").mortalityMean*1.5}}                            \n                                    width={235}\n                                    height={180}       \n                                    padding={{left: 0, right: -1, top: 150, bottom: -0.9}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryAxis\n                                      tickValues={stateFips ? \n                                        [\n                                        allTS[stateFips][allTS[stateFips].length - Math.round(allTS[stateFips].length/3)*2 - 1].t,\n                                        allTS[stateFips][allTS[stateFips].length - Math.round(allTS[stateFips].length/3) - 1].t,\n                                        allTS[stateFips][allTS[stateFips].length-1].t]\n                                        :\n                                      [\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3)*2 - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3) - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length-1].t]}                        \n                                      style={{tickLabels: {fontSize: 10}}} \n                                      tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                      <VictoryLine data={stateFips && allTS[stateFips] ? allTS[stateFips] : allTS[\"13\"]}\n                                        x='t' y='mortalityMean'\n                                        />\n\n                                    </VictoryGroup>\n\n                                    <VictoryArea\n                                      style={{ data: { fill: \"#00BFFF\", stroke: \"#00BFFF\", fillOpacity: 0.1} }}\n                                      data={stateFips && allTS[stateFips]? allTS[stateFips] : allTS[\"13\"]}\n                                      x= 't' y = 'mortalityMean'\n\n                                    />\n\n                                    \n                                    <VictoryLabel text= {stateFips ? numberWithCommas((allTS[stateFips][allTS[stateFips].length - 1].dailyMortality).toFixed(0)) : numberWithCommas((allTS[\"13\"][allTS[\"13\"].length - 1].dailyMortality).toFixed(0))} x={80} y={80} textAnchor=\"middle\" style={{fontSize: 40, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateFips ? \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0) + \"%\": \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? ((allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0)).substring(1) + \"%\": \n                                                        \"0%\"\n                                                         : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) < 0? ((allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)).substring(1) + \"%\": \n                                                         \"0%\"} x={stateFips === \"_nation\" ? 202 :182} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato', fill: \"#004071\"}}/>\n\n                                    <VictoryLabel text= {stateFips ? \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"↑\": \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? \"↓\": \"\"\n                                                         : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"↑\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)< 0?\"↓\": \"\"} \n\n                                                        x={stateFips === \"_nation\" ? 166 :146} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'\n\n                                                        , fill: stateFips ? \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[stateFips][allTS[stateFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? \"#32CD32\": \"\"\n                                                         : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)< 0?\"#32CD32\": \"\"}}/>\n\n                                    <VictoryLabel text= {\"14-day\"}  x={stateFips === \"_nation\" ? 200 : 180} y={100} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"change\"}  x={stateFips === \"_nation\" ? 200 : 180} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"Daily Deaths\"}  x={120} y={20} textAnchor=\"middle\" style={{fontSize: \"19px\", fontFamily: 'lato', fill: \"#004071\"}}/>\n\n                        </VictoryChart>}\n                      </div>\n                    \n                    </Grid.Column>\n                      <Header.Content style={{fontWeight: 300, paddingLeft: 15,fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                        *14-day change trends use 7-day averages.\n                      </Header.Content>\n                  </Grid.Row>\n\n                  <Header as='h2' style={{fontWeight: 400}}>\n                    <Header.Content style={{width : 550, fontSize: \"18pt\", textAlign: \"center\"}}>\n                      Disparities in COVID-19 Mortality <b>{fips !== \"_nation\" ? stateName : \"Nation\"}</b>\n                      \n                    </Header.Content>\n                  </Header>\n\n                  {stateFips && stateFips === \"_nation\" && <div style = {{marginTop: 24}}>\n                          <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 170, fontWeight: 400}}> Deaths by Race & Ethnicity</Header.Content>\n                  </div>}\n\n                  {stateFips && fips === \"_nation\" && <div style={{paddingLeft: \"6em\", paddingRight: \"2em\"}}>\n\n                    <VictoryChart\n                              theme={VictoryTheme.material}\n                              width={400}\n                              height={160}\n                              domainPadding={20}\n                              minDomain={{y: props.ylog?1:0}}\n                              padding={{left: 150, right: 35, top: 12, bottom: 1}}\n                              style = {{fontSize: \"14pt\"}}\n                              containerComponent={<VictoryContainer responsive={false}/>}\n                            >\n                              <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"16px\", fill: '#000000', fontFamily: 'lato'}}} />\n                              <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                              <VictoryBar\n                                horizontal\n                                barRatio={0.45}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                  {key: nationalDemog['race'][0]['American Native'][0]['demogLabel'], 'value': nationalDemog['race'][0]['American Native'][0]['deathrate']},\n                                  {key: nationalDemog['race'][0]['Asian'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Asian'][0]['deathrate']},\n                                  {key: nationalDemog['race'][0]['Hispanic'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Hispanic'][0]['deathrate']},\n                                  {key: nationalDemog['race'][0]['African American'][0]['demogLabel'], 'value': nationalDemog['race'][0]['African American'][0]['deathrate']},\n                                  {key: nationalDemog['race'][0]['White'][0]['demogLabel'], 'value': nationalDemog['race'][0]['White'][0]['deathrate']},\n                                  \n                                    \n\n\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                style={{\n                                  data: {\n                                    fill: \"#004071\"\n                                  }\n                                }}\n                                x=\"key\"\n                                y=\"value\"\n                              />\n                            </VictoryChart>\n                            <Header.Content style = {{width: 420}}>\n                                <Header.Content id=\"region\" style={{ fontWeight: 300, paddingLeft: 100, paddingTop: 8, paddingBottom:28, fontSize: \"19px\", lineHeight: \"18pt\"}}>\n                                  <b>Deaths per 100K residents</b>\n                                </Header.Content>\n                            </Header.Content>\n                  </div>}\n                  \n                  {fips !== \"_nation\" && !raceData[fips][\"Non-Hispanic African American\"] && !!raceData[fips][\"White Alone\"] && stateFips !== \"38\" &&\n                  <Grid.Row columns = {2} style = {{height: 298, paddingBottom: 287}}>\n                    <Grid.Column > \n                      {!raceData[fips][\"Non-Hispanic African American\"]  && stateFips !== \"02\"  && \n                        <div style = {{marginTop: 10}}>\n                          <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 55, fontWeight: 400}}> Deaths by Race</Header.Content>\n                        </div>\n                      }\n                      {stateFips && !raceData[fips][\"Non-Hispanic African American\"] && stateFips !== \"38\"  && stateFips !== \"02\" &&\n                        <VictoryChart\n                                      theme = {VictoryTheme.material}\n                                      width = {250}\n                                      height = {40 * (( !!raceData[fips][\"Asian Alone\"] && raceData[fips][\"Asian Alone\"][0]['deathrateRace'] >= 0 && raceData[fips][\"Asian Alone\"][0][\"deaths\"] > 30 && raceData[fips][\"Asian Alone\"][0][\"percentPop\"] >= 1 ? 1: 0) + \n                                      (!!raceData[fips][\"American Natives Alone\"] && raceData[fips][\"American Natives Alone\"][0]['deathrateRace'] >= 0 && raceData[fips][\"American Natives Alone\"][0]['deaths'] > 30 && raceData[fips][\"American Natives Alone\"][0][\"percentPop\"] >= 1 ? 1 : 0) + \n                                      (!!raceData[fips][\"African American Alone\"] && raceData[fips][\"African American Alone\"][0]['deathrateRace'] >= 0 && raceData[fips][\"African American Alone\"][0]['deaths'] > 30 && raceData[fips][\"African American Alone\"][0][\"percentPop\"] >= 1 ? 1 : 0) + \n                                      (!!raceData[fips][\"White Alone\"] && raceData[fips][\"White Alone\"][0]['deathrateRace'] >= 0 && raceData[fips][\"White Alone\"][0]['deaths'] > 30 && raceData[fips][\"White Alone\"][0][\"percentPop\"] >= 1 ?1:0))}\n                                      domainPadding={20}\n                                      minDomain={{y: props.ylog?1:0}}\n                                      padding={{left: 80, right: 35, top: 12, bottom: 1}}\n                                      style = {{fontSize: \"14pt\"}}\n                                      containerComponent={<VictoryContainer responsive={false}/>}\n                                    >\n\n                                      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"16px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                      <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                      <VictoryGroup>\n                                      \n                                      \n\n                                      {\"American Natives Alone\" in raceData[fips] && raceData[fips][\"American Natives Alone\"][0]['deathrateRace'] >= 0 && raceData[fips][\"American Natives Alone\"][0]['deaths'] > 30 && raceData[fips][\"American Natives Alone\"][0][\"percentPop\"] >= 1 &&\n                                        <VictoryBar\n                                          barWidth= {10}\n                                          horizontal\n                                          labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                          data={[\n\n                                                 {key: \"American\\n Natives\", 'value': raceData[fips][\"American Natives Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[fips][\"American Natives Alone\"][0]['deathrateRace'])}\n\n                                          ]}\n                                          labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                          style={{\n                                            data: {\n                                              fill: \"#004071\"\n                                            }\n                                          }}\n                                          x=\"key\"\n                                          y=\"value\"\n                                        />\n                                      }\n\n                                      {\"Asian Alone\" in raceData[fips] && raceData[fips][\"Asian Alone\"][0]['deathrateRace'] >= 0 && raceData[fips][\"Asian Alone\"][0][\"deaths\"] > 30 && raceData[fips][\"Asian Alone\"][0][\"percentPop\"] >= 1 && \n                                        <VictoryBar\n                                          barWidth= {10}\n                                          horizontal\n                                          barRatio={0.7}\n                                          labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                          data={[\n\n                                                 {key: \"Asian\", 'value': raceData[fips][\"Asian Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[fips][\"Asian Alone\"][0]['deathrateRace'])}\n\n                                          ]}\n                                          labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                          style={{\n                                            data: {\n                                              fill: \"#004071\"\n                                            }\n                                          }}\n                                          x=\"key\"\n                                          y=\"value\"\n                                        />\n                                      }\n\n                                      {\"African American Alone\" in raceData[fips] && raceData[fips][\"African American Alone\"][0]['deathrateRace'] >= 0  && raceData[fips][\"African American Alone\"][0]['deaths'] > 30 && raceData[fips][\"African American Alone\"][0][\"percentPop\"] >= 1 && \n                                        <VictoryBar\n                                          barWidth= {10}\n                                          horizontal\n                                          labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                          data={[\n\n                                                 {key: \"African\\n American\", 'value': raceData[fips][\"African American Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[fips][\"African American Alone\"][0]['deathrateRace'])}\n\n                                          ]}\n                                          labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                          style={{\n                                            data: {\n                                              fill: \"#004071\"\n                                            }\n                                          }}\n                                          x=\"key\"\n                                          y=\"value\"\n                                        />\n                                      }\n\n                                      {\"White Alone\" in raceData[fips] && raceData[fips][\"White Alone\"][0]['deathrateRace'] >= 0  && raceData[fips][\"White Alone\"][0]['deaths'] > 30 && raceData[fips][\"White Alone\"][0][\"percentPop\"] >= 1 && \n                                        <VictoryBar\n                                          barWidth= {10}\n                                          horizontal\n                                          barRatio={0.7}\n                                          labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                          data={[\n\n                                                 {key: \"White\", 'value': raceData[fips][\"White Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[fips][\"White Alone\"][0]['deathrateRace'])}\n\n                                          ]}\n                                          labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                          style={{\n                                            data: {\n                                              fill: \"#004071\"\n                                            }\n                                          }}\n                                          x=\"key\"\n                                          y=\"value\"\n                                        />\n                                      }\n\n                                      \n                                      </VictoryGroup>\n                        </VictoryChart>\n                      }\n                      {!raceData[fips][\"Non-Hispanic African American\"] && stateFips !== \"38\" && stateFips !== \"02\" &&\n                        <div style = {{marginTop: 10, textAlign: \"center\"}}>\n                          <Header.Content x={15} y={20} style={{fontSize: '14pt', paddingLeft: 15, fontWeight: 400}}> Deaths per 100K <br/> residents</Header.Content>\n                        </div>\n                      }\n\n                      {stateFips === \"02\" &&\n                        <div style = {{marginTop: 10}}>\n                          <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 55, fontWeight: 400}}> Deaths by Race</text>\n\n                           <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 0, fontWeight: 400}}> <br/> <br/> <br/> \n                           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                           &nbsp;&nbsp;None Reported</text>\n                        </div>\n                      }\n\n                    </Grid.Column>\n                    <Grid.Column> \n                      {!!raceData[fips][\"White Alone\"] && stateFips !== \"38\" &&\n                        <div style = {{marginTop: 10}}>\n                          <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 55, fontWeight: 400}}> Deaths by Ethnicity</Header.Content>\n                          {!(stateFips && !!raceData[fips][\"White Alone\"] && fips !== \"38\" && !(raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[fips][\"Hispanic\"] && !raceData[fips][\"Non Hispanic\"] && !raceData[fips][\"Non-Hispanic African American\"] && !raceData[fips][\"Non-Hispanic American Natives\"] && !raceData[fips][\"Non-Hispanic Asian\"] && !raceData[fips][\"Non-Hispanic White\"] ) ))\n                              && \n                            <center> <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 0, fontWeight: 400}}> <br/> <br/> None Reported</Header.Content> </center>\n\n                        }\n                        </div>\n                      }\n                      {stateFips && !!raceData[fips][\"White Alone\"] && fips !== \"38\" && !(raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[fips][\"Hispanic\"] && !raceData[fips][\"Non Hispanic\"] && !raceData[fips][\"Non-Hispanic African American\"] && !raceData[fips][\"Non-Hispanic American Natives\"] && !raceData[fips][\"Non-Hispanic Asian\"] && !raceData[fips][\"Non-Hispanic White\"] ) ) && \n                        <VictoryChart\n                                      theme = {VictoryTheme.material}\n                                      width = {250}\n                                      height = {!!raceData[fips][\"Hispanic\"] && !!raceData[fips][\"Non Hispanic\"] ?  81 : 3 * (!!raceData[fips][\"Hispanic\"] + !!raceData[fips][\"Non Hispanic\"] + !!raceData[fips][\"Non-Hispanic African American\"] + !!raceData[fips][\"Non-Hispanic American Natives\"] + !!raceData[fips][\"Non-Hispanic Asian\"] + !!raceData[fips][\"Non-Hispanic White\"] )}\n                                      domainPadding={20}\n                                      minDomain={{y: props.ylog?1:0}}\n                                      padding={{left: 110, right: 35, top: !!raceData[fips][\"Hispanic\"] && !!raceData[fips][\"Non Hispanic\"] ? 13 : 10, bottom: 1}}\n                                      style = {{fontSize: \"14pt\"}}\n                                      containerComponent={<VictoryContainer responsive={false}/>}\n                                    >\n\n                                      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"16px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                      <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                      \n                                        <VictoryGroup>\n                                          \n                                        {!!raceData[fips][\"Non-Hispanic American Natives\"] && raceData[fips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[fips][\"Non-Hispanic American Natives\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic American Natives\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"American\\n Natives\", 'value': raceData[fips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        {!!raceData[fips][\"Non-Hispanic Asian\"] && raceData[fips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[fips][\"Non-Hispanic Asian\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic Asian\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"Asian\", 'value': raceData[fips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n\n                                        {!!raceData[fips][\"Non Hispanic\"] && !!raceData[fips][\"White Alone\"] && raceData[fips][\"Non Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[fips][\"Non Hispanic\"][0]['deaths'] > 30 && raceData[fips][\"Non Hispanic\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            barRatio={0.1}\n                                            horizontal\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"Non Hispanic\", 'value': raceData[fips][\"Non Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non Hispanic\"][0]['deathrateEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        {(!!raceData[fips][\"Hispanic\"] || (!!raceData[fips][\"Hispanic\"] && !!raceData[fips][\"White Alone\"] && raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[fips][\"Hispanic\"][0]['deaths'] > 30 && raceData[fips][\"Hispanic\"][0][\"percentPop\"] >= 1))&&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            barRatio={0.1}\n                                            horizontal\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"Hispanic\", 'value': raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        {!!raceData[fips][\"Non-Hispanic African American\"] && raceData[fips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[fips][\"Non-Hispanic African American\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic African American\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"African\\n American\", 'value': raceData[fips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        {!!raceData[fips][\"Non-Hispanic White\"] && raceData[fips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[fips][\"Non-Hispanic White\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic White\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"White\", 'value': raceData[fips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n                                        \n                                        </VictoryGroup>\n                                \n\n                        </VictoryChart>\n                      }\n                      {fips !== \"_nation\" && !!raceData[fips][\"White Alone\"] && fips !== \"38\" && !(raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[fips][\"Hispanic\"] && !raceData[fips][\"Non Hispanic\"] && !raceData[fips][\"Non-Hispanic African American\"] && !raceData[fips][\"Non-Hispanic American Natives\"] && !raceData[fips][\"Non-Hispanic Asian\"] && !raceData[fips][\"Non-Hispanic White\"] ) ) && \n                        <div style = {{marginTop: 10, textAlign: \"center\", width: 300}}>\n                          <Header.Content style={{fontSize: '14pt', paddingLeft: 35, fontWeight: 400}}> Deaths per 100K <br/> &nbsp;&nbsp;&nbsp;&nbsp;residents</Header.Content>\n                        </div>\n                      }\n\n                      \n                    </Grid.Column>\n                  </Grid.Row>\n                  }\n\n                  {fips !== \"_nation\" && (!!raceData[fips][\"Non-Hispanic African American\"] || !!raceData[fips][\"Non-Hispanic White\"] ) && fips !== \"38\" &&\n                  <Grid.Row columns = {1}>\n                    <Grid.Column style = {{ marginLeft : 20, paddingBottom: (13+ 30 * (!raceData[fips][\"Hispanic\"] + !raceData[fips][\"Non Hispanic\"] + !raceData[fips][\"Non-Hispanic African American\"] + !raceData[fips][\"Non-Hispanic American Natives\"] + !raceData[fips][\"Non-Hispanic Asian\"] + !raceData[fips][\"Non-Hispanic White\"] ))}}> \n                      {stateFips && !raceData[fips][\"White Alone\"] &&\n                        <div style = {{marginTop:10}}>\n                          <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 150, fontWeight: 400}}> Deaths by Race & Ethnicity</Header.Content>\n                        </div>\n                      }\n                      {stateFips && !raceData[fips][\"White Alone\"] && stateFips !== \"38\" &&\n                      <div style={{paddingLeft: \"0em\", paddingRight: \"0em\", width: 550}}>\n                        <VictoryChart\n                                      theme = {VictoryTheme.material}\n                                      width = {400}\n                                      height = {32 * (!!raceData[fips][\"Hispanic\"] + !!raceData[fips][\"Non Hispanic\"] + !!raceData[fips][\"Non-Hispanic African American\"] + !!raceData[fips][\"Non-Hispanic American Natives\"] + !!raceData[fips][\"Non-Hispanic Asian\"] + !!raceData[fips][\"Non-Hispanic White\"] )}\n                                      domainPadding={20}\n                                      minDomain={{y: props.ylog?1:0}}\n                                      padding={{left: 200, right: 35, top: !!raceData[fips][\"Hispanic\"] && !!raceData[fips][\"Non Hispanic\"] ? 12 : 10, bottom: 1}}\n                                      style = {{fontSize: \"14pt\"}}\n                                      containerComponent={<VictoryContainer responsive={false}/>}\n                                    >\n\n                                      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"16px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                      <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                      \n                                        <VictoryGroup>\n\n                                        {!!raceData[fips][\"Non-Hispanic American Natives\"] && raceData[fips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[fips][\"Non-Hispanic American Natives\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic American Natives\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"American Natives\", 'value': raceData[fips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        {!!raceData[fips][\"Non-Hispanic Asian\"] && raceData[fips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[fips][\"Non-Hispanic Asian\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic Asian\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"Asian\", 'value': raceData[fips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        \n\n                                        {!!raceData[fips][\"Non Hispanic\"] && !!raceData[fips][\"White Alone\"] && raceData[fips][\"Non Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[fips][\"Non Hispanic\"][0]['deaths'] > 30 && raceData[fips][\"Non Hispanic\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            barRatio={0.1}\n                                            horizontal\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"Non Hispanic\", 'value': raceData[fips][\"Non Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non Hispanic\"][0]['deathrateEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n                                        \n                                        {(!!raceData[fips][\"Hispanic\"] || (!!raceData[fips][\"Hispanic\"] && !!raceData[fips][\"White Alone\"] && raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[fips][\"Hispanic\"][0]['deaths'] > 30 && raceData[fips][\"Hispanic\"][0][\"percentPop\"] >= 1 ))&&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            barRatio={0.1}\n                                            horizontal\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"Hispanic\", 'value': raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[fips][\"Hispanic\"][0]['deathrateEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        {!!raceData[fips][\"Non-Hispanic African American\"] && raceData[fips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[fips][\"Non-Hispanic African American\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic African American\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"African American\", 'value': raceData[fips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n\n                                        {!!raceData[fips][\"Non-Hispanic White\"] && raceData[fips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[fips][\"Non-Hispanic White\"][0]['deaths'] > 30 && raceData[fips][\"Non-Hispanic White\"][0][\"percentPop\"] >= 1 &&\n                                          <VictoryBar\n                                            barWidth= {10}\n                                            horizontal\n                                            barRatio={0.7}\n                                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                            data={[\n\n                                                   {key: \"White\", 'value': raceData[fips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[fips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'])}\n\n                                            ]}\n                                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                            style={{\n                                              data: {\n                                                fill: \"#004071\"\n                                              }\n                                            }}\n                                            x=\"key\"\n                                            y=\"value\"\n                                          />\n                                        }\n                                        \n\n                                        \n                                        \n\n                                        \n                                        </VictoryGroup>\n                                \n\n                        </VictoryChart>\n                        </div>\n                      }\n                      {stateFips && !raceData[fips][\"White Alone\"] &&\n                        <div style = {{marginTop: 10, width: 400, paddingBottom: 3}}>\n                          <Header.Content style={{fontSize: '19px', marginLeft: 150, fontWeight: 400}}> Deaths per 100K residents<br/> \n                          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                          \n                          \n                          </Header.Content>\n                        </div>\n                      }\n\n                    </Grid.Column>\n                  </Grid.Row>}\n\n                  {stateFips === \"38\" &&\n\n                    <Grid.Row columns = {1}>\n                    <Grid.Column style = {{ marginLeft : 110, paddingBottom: 123}}> \n                      {stateFips === \"38\" &&\n                        <div style = {{marginTop: 50}}>\n                          <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 15, fontWeight: 400}}> Deaths per capita by Race & Ethnicity <br/> <br/> <br/> <br/> </text>\n                          <text style={{fontSize: '14pt', paddingLeft: 100, fontWeight: 400}}> None Reported</text>\n                        </div>\n                      }\n                      \n                    </Grid.Column>\n                  </Grid.Row>\n\n\n                  }\n\n                  {stateFips && stateFips === \"_nation\" && <Grid.Row style= {{paddingTop: 22, paddingBottom: 53}}> \n                    <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\"}}>\n                      The United States reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {nationalDemog['race'][0]['Unknown'][0]['availableDeaths'] + \"%\"} of deaths in the nation.\n                      <br/>\n                      <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covid.cdc.gov/covid-data-tracker/#demographics\" target = \"_blank\" rel=\"noopener noreferrer\"> The CDC </a>\n                      <br/><b>Deaths by Race & Ethnicity data as of:</b> {nationalDemogDate}.<br/>\n                    \n                    </Header.Content>\n                  </Grid.Row>}\n\n                  {stateFips && fips !== \"_nation\" && <Grid.Row style={{top: fips === \"38\"? -30 : stateFips && !raceData[fips][\"White Alone\"] ? -40 : -30, paddingLeft: 0}}>\n                  \n\n                  \n\n                  {fips === \"38\" &&\n                    <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\"}}>\n                      {stateName} is not reporting deaths by race or ethnicity.\n                      <br/>\n                      <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                      <br/><b>Deaths by Race & Ethnicity data as of:</b> 03/07/2021.<br/>\n                    \n                    </Header.Content>}\n\n                  {stateFips !== \"38\" && !raceData[fips][\"Non-Hispanic African American\"] && !!raceData[fips][\"White Alone\"] && (!raceData[fips][\"Non Hispanic\"] && !raceData[fips][\"Non-Hispanic American Natives\"] && !raceData[fips][\"Non-Hispanic Asian\"] && !raceData[fips][\"Non-Hispanic White\"] )\n                              && \n                    <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\"}}>\n                      {stateName} reports deaths by race. The chart shows race groups that constitutes at least 1% of the state population and have 30 or more deaths. Race data are known for {raceData[fips][\"Race Missing\"][0][\"percentRaceDeaths\"] + \"%\"} of deaths in {stateName}.\n                      <br/>\n                      <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                      <br/><b>Deaths by Race & Ethnicity data as of:</b> 03/07/2021.<br/>\n                    \n                    </Header.Content>}\n\n                  {stateFips !== \"38\"  && !!raceData[fips][\"White Alone\"] && !!raceData[fips][\"White Alone\"] && !(!raceData[fips][\"Hispanic\"] && !raceData[fips][\"Non Hispanic\"] && !raceData[fips][\"Non-Hispanic African American\"] && !raceData[fips][\"Non-Hispanic American Natives\"] && !raceData[fips][\"Non-Hispanic Asian\"] && !raceData[fips][\"Non-Hispanic White\"] )\n                              && \n                    <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\"}}>\n                      {stateName} reports deaths by race and ethnicity separately. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race data are known for {raceData[fips][\"Race Missing\"][0][\"percentRaceDeaths\"] + \"%\"} of deaths while ethnicity data are known for {raceData[fips][\"Ethnicity Missing\"][0][\"percentEthnicityDeaths\"] + \"%\"} of deaths in {stateName}.\n                      <br/>\n                      <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                      <br/><b>Deaths by Race & Ethnicity data as of:</b> 03/07/2021.<br/>\n                    \n                    </Header.Content>}\n\n                  {stateFips !== \"38\"  && (!!raceData[fips][\"Non-Hispanic African American\"] || !!raceData[fips][\"Non-Hispanic White\"] ) && \n                    <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\"}}>\n                      {stateName} reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {raceData[fips][\"Race & Ethnicity Missing\"][0][\"percentRaceEthnicityDeaths\"] + \"%\"} of deaths in {stateName}.\n                      <br/>\n                      <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                      <br/><b>Deaths by Race & Ethnicity data as of:</b> 03/07/2021.<br/>\n                    \n                    </Header.Content>}\n\n                    {!raceData[fips][\"Non-Hispanic African American\"]  && stateFips !== \"02\"  && \n                        <div style = {{marginTop: 10}}>\n                        </div>\n                      }\n\n                  </Grid.Row>}\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          \n\n          <Notes />\n        </Container>\n        <ReactTooltip> <font size=\"+2\"><b >{stateName}</b> </font> <br/>  <b>Click for county-level data.</b> </ReactTooltip>\n      </div>\n    </HEProvider>\n      );\n  } else {\n    return <Loader active inline='centered' />\n  }\n}","import React, { useEffect, useState, PureComponent} from 'react'\nimport { Container, Dropdown, Grid, Breadcrumb, Header, Loader, Divider, Accordion, Icon, Transition, Button} from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport { VictoryChart, \n  VictoryContainer,\n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  VictoryLine,\n  VictoryLabel,\n  VictoryArea,\n  VictoryTooltip,\n  VictoryVoronoiContainer,\n} from 'victory';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport _, { toArray } from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport fips2county from './fips2county.json'\nimport stateOptions from \"./stateOptions.json\";\nimport configs from \"./state_config.json\";\nimport racedatadate from \"./Pre-Processed Data/racedatadate.json\";\n\nimport { var_option_mapping, CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {HEProvider, useHE} from './HEProvider';\nimport {useStitchAuth} from \"./StitchAuth\";\nimport {LineChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, LabelList, ReferenceArea, ReferenceLine} from \"recharts\";\n\n\n\nfunction getMax(arr, prop) {\n  var max = 0;\n  for (var i=0 ; i<arr.length ; i++) {\n      if (max === 0 || parseInt(arr[i][prop]) > parseInt(max))\n          max = arr[i][prop];\n  }\n  return max;\n}\n\nfunction getMaxRange(arr, prop, range) {\n  var max = 0;\n  for (var i=range ; i<arr.length ; i++) {\n      if (max === 0 || parseInt(arr[i][prop]) > parseInt(max)){\n          max = arr[i][prop];\n      }\n  }\n  return max;\n}\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\n\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\nconst countyColor = '#f2a900';\nconst stateColor = \"#778899\";\nconst nationColor = '#b1b3b3';\n\nconst monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\",\n  \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"\n];\n\n\n\n\nfunction CaseChart(props){\n  const [playCount, setPlayCount] = useState(0);\n  const data = props.data;\n  const sfps = props.stateFips;\n  const cfps = props.countyFips;\n  const ticks = props.ticks;\n  const variable = props.var;\n  const tickFormatter = props.tickFormatter;\n  const labelFormatter = props.labelFormatter;\n  const [animationBool, setAnimationBool] = useState(true);\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n  useEffect(() =>{\n    setAnimationBool(true);\n  },[playCount])\n\n  return(\n    <div style={{paddingTop: 5, paddingBottom: 70, width: 780}}>\n      <LineChart width={720} height={180} data = {data} margin={{right: 20}}>\n        {/* <CartesianGrid stroke='#f5f5f5'/> */}\n        <XAxis dataKey=\"t\" ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter} allowDuplicatedCategory={false}/>\n        <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n        <Line data={data[\"_nation\"]} name=\"Nation\" type='monotone' dataKey={variable} dot={false} \n              isAnimationActive={animationBool} \n              onAnimationEnd={()=>setAnimationBool(false)} \n              animationDuration={5500} \n              animationBegin={500} \n              stroke={nationColor} strokeWidth=\"2\" />\n        <Line data={data[sfps]} name=\"State\" type='monotone' dataKey={variable} dot={false} \n              isAnimationActive={animationBool} \n              onAnimationEnd={()=>setAnimationBool(false)}\n              animationDuration={5500} \n              animationBegin={500} \n              stroke={stateColor} strokeWidth=\"2\" />\n        <Line data={data[sfps+cfps]} name=\"County\" type='monotone' dataKey={variable} dot={false} \n              isAnimationActive={animationBool} \n              onAnimationEnd={()=>setAnimationBool(false)}\n              animationDuration={5500} \n              animationBegin={500} \n              stroke={countyColor} strokeWidth=\"2\" />\n        {/* <ReferenceLine x={data[\"_nation\"][275].t} stroke=\"red\" label=\"2021\" /> */}\n\n\n        \n        <Tooltip labelFormatter={labelFormatter} formatter={variable === \"covidmortality7dayfig\" ? (value) => numberWithCommas(value.toFixed(1)): (value) => numberWithCommas(value.toFixed(0))} active={true}/>\n      </LineChart>\n      {/* <LineChart width={500} height={300}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"t\" type=\"category\" allowDuplicatedCategory={false} />\n        <YAxis dataKey={variable} />\n        <Tooltip />\n        <Legend />\n        \n        <Line dataKey={variable} data={data[\"_nation\"]} name = \"nation\" />\n        <Line dataKey={variable} data={data[sfps]} name = \"nation1\"/>\n        <Line dataKey={variable} data={data[sfps+cfps]} name = \"nation2\"/>\n      </LineChart> */}\n      <Button content='Play' icon='play' floated=\"right\" onClick={() => {setPlayCount(playCount+1); }}/>\n    </div>\n  );\n}\n\nfunction BarChart(props) {\n  \n  if (props.stateFips !== \"_nation\") {\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      width={190}\n      height={115}       \n      domainPadding={10}\n      scale={{y: props.ylog?'log':'linear'}}\n      minDomain={{y: props.ylog?1:0}}\n      padding={{left: 95, right: 30, top: 30, bottom: 20}}\n      containerComponent={<VictoryContainer responsive={false}/>}\n    >\n      {props.title !== \"Community Vulnerability Index\" && props.title !== \"Any Condition\" && <VictoryLabel text={props.title} x={100} y={10} textAnchor=\"middle\" style={{fontSize: \"16px\", fontFamily: 'lato'}}/> }\n      {props.title === \"Community Vulnerability Index\" && <VictoryLabel text=\"COVID-19 Community\" x={100} y={7} textAnchor=\"middle\" style={{fontSize: \"16px\", fontFamily: 'lato'}}/> }\n      {props.title === \"Community Vulnerability Index\" && <VictoryLabel text=\"Vulnerability Index\" x={100} y={22} textAnchor=\"middle\" style={{fontSize: \"16px\", fontFamily: 'lato'}}/> }\n      {props.title === \"Any Condition\" && <VictoryLabel text=\"Prevalence of Any\" x={100} y={7} textAnchor=\"middle\" style={{fontSize: \"16px\", fontFamily: 'lato'}}/> }\n      {props.title === \"Any Condition\" && <VictoryLabel text=\"Condition / 100K\" x={100} y={22} textAnchor=\"middle\" style={{fontSize: \"16px\", fontFamily: 'lato'}}/> }\n      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"16px\", fontFamily: 'lato'}}}  />\n      <VictoryAxis tickCount={3} dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", padding: 1, fontSize: \"12px\", fontFamily: 'lato'}}} />\n      <VictoryBar\n        horizontal\n        barRatio={0.8}\n        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(1))}\n        data={[{key: 'USA', 'value': props.data['_nation'][props.var] || 0},\n              {key: props.stateName, 'value': props.data[props.stateFips][props.var]>0?props.data[props.stateFips][props.var] : 0},\n              {key: \"County\", 'value': props.data[props.stateFips+props.countyFips][props.var] > 0? props.data[props.stateFips+props.countyFips][props.var]:  0}]}\n        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"14px\", fill: \"#000000\" }}/>}\n        style={{\n          data: {\n            fill: ({ datum }) => datum.key === \"County\"?countyColor:datum.key === props.stateName?stateColor:nationColor\n          }\n        }}\n        x=\"key\"\n        y=\"value\"\n      />\n    </VictoryChart>);\n  }else{\n    return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      width={190}\n      height={100}       \n      domainPadding={10}\n      scale={{y: props.ylog?'log':'linear'}}\n      minDomain={{y: props.ylog?1:0}}\n      padding={{left: 105, right: 30, top: 30, bottom: 20}}\n      containerComponent={<VictoryContainer responsive={false}/>}\n    >\n      <VictoryLabel text={props.title} x={100} y={10} textAnchor=\"middle\" style={{fontSize: \"16px\", fontFamily: 'lato'}}/>\n      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"16px\", fontFamily: 'lato'}}}  />\n      <VictoryAxis tickCount={3} dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", padding: 1, fontSize: \"12px\", fontFamily: 'lato'}}} />\n      <VictoryBar\n        horizontal\n        barRatio={0.8}\n        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(1))}\n        data={[{key: 'USA', 'value':  [1]}]}\n        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"14px\", fill: \"#000000\" }}/>}\n        style={{\n          data: {\n            fill: ({ datum }) => datum.key === \"County\"?countyColor:datum.key === props.stateName?stateColor:nationColor\n          }\n        }}\n        x=\"key\"\n        y=\"value\"\n      />\n    </VictoryChart>);\n\n  };\n\n  \n}\n\nfunction TopChart(params) {\n\n  return(\n      <VictoryChart \n        minDomain={{ x: params.sFips !== \"_nation\"? params.data[(params.data.length - params.recentIndex)-15][params.xVar] : 0}}\n        maxDomain = {{x: params.sFips !== \"_nation\"? params.data[params.data.length - params.recentIndex - 1][params.xVar] : 0 , y: params.sFips !== \"_nation\"? getMaxRange(params.data, params.yVar, (params.data.length - params.recentIndex) -15)*params.resize: 0}}                            \n        width={235}\n        height={180}    \n        parent= {{background: \"#ccdee8\"}}   \n        padding={{marginleft: 0, right: -1, top: 150, bottom: -0.9}}\n        containerComponent={<VictoryContainer responsive={false}/>}>\n        \n        <VictoryAxis\n          tickValues={params.sFips !== \"_nation\"? [\n            params.data[params.data.length - Math.round(params.data.length/3)*2 - 1][params.xVar],\n            params.data[params.data.length - Math.round(params.data.length/3) - 1][params.xVar],\n            params.data[params.data.length - params.recentIndex -1][params.xVar]] \n            : \n            [0]\n          }                        \n          style={{grid:{background: \"#ccdee8\"}, tickLabels: {background: \"#ccdee8\", fontSize: 10}}} \n          tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n        \n        <VictoryGroup \n          colorScale={[stateColor]}\n        >\n\n        <VictoryLine data={params.data && params.sFips !== \"_nation\"? params.data : [0,0,0]}\n            x={params.xVar} y= {params.yVar}\n            />\n\n        </VictoryGroup>\n        <VictoryArea\n          style={{ data: {fill: \"#080808\" , fillOpacity: 0.1} }}\n          data={params.data && params.sFips !== \"_nation\"? params.data : [0,0,0]}\n          x= {params.xVar} y = {params.yVar}\n\n        />\n\n        <VictoryLabel text= {params.sFips === \"_nation\" ? 0 : params.rate} x={115} y={60} textAnchor=\"middle\" style={{fontSize: 50, fontFamily: 'lato'}}/>\n        <VictoryLabel text= {params.sFips === \"_nation\" ? \"\" : params.percentChange}  x={115} y={115} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'}}/>\n        <VictoryLabel text= {params.sFips === \"_nation\" ? \"\" : params.yVar === \"hospDaily\" ? \"7-day\" : \"14-day\"}  x={180} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato'}}/>\n        <VictoryLabel text= {params.sFips === \"_nation\" ? \"\" : \"change\"}  x={180} y={120} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato'}}/>\n\n    </VictoryChart>\n  )\n}\n\nexport default function StateMap(props) {\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();  \n\n  \n  const history = useHistory();\n  let {stateFips} = useParams();\n  const [tooltipContent, setTooltipContent] = useState('');\n\n  const [hospDate, setHospDate] = useState();\n  const [date, setDate] = useState();\n  const [data, setData] = useState();\n  const [dataTS, setDataTS] = useState();\n  const [dataStateTS, setStateTS] = useState();\n  const [raceData, setRaceData] = useState();\n\n  const [config, setConfig] = useState();\n  const [stateName, setStateName] = useState('');\n  const [countyFips, setCountyFips] = useState('');\n  const [countyName, setCountyName] = useState('');\n  const [barCountyName, setBarCountyName] = useState('');\n  \n  const [colorScale, setColorScale] = useState();\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  const [caseRate, setCaseRate] = useState();\n  const [percentChangeCases, setPercentChangeCases] = useState();\n  const [mortality, setMortality] = useState();\n  const [percentChangeMortality, setPercentChangeMortality] = useState();\n  const [pctPositive, setPctPositive] = useState();\n  // const [totalCases, setTotalCases] = useState();\n  const [hospDaily, setHospDaily] = useState();\n  const [percentChangeHospDaily, setPercentChangeHospDaily] = useState();\n  const [index, setIndex] = useState();\n  const [indexP, setIndexP] = useState(0);\n\n\n  // const [varMap, setVarMap] = useState({});\n  // const [metric, setMetric] = useState('caserate7dayfig');\n  // const [metricOptions, setMetricOptions] = useState('caserate7dayfig');\n  // const [metricName, setMetricName] = useState('Average Daily COVID-19 Cases per 100K');\n\n  const [varMap, setVarMap] = useState({});\n  const [metric, setMetric] = useState('casesfig');\n  const [metricOptions, setMetricOptions] = useState('casesfig');\n  const [metricName, setMetricName] = useState('Total COVID-19 Cases');\n\n\n  const [covidMetric, setCovidMetric] = useState({t: 'n/a'});\n  const [countyOption, setCountyOption] = useState();\n  const [selectedTrend, setSelectedTrend] = useState(\"\");\n  \n\n  const [trendline, setTrendline] = useState('caserate7dayfig');\n  const trendOptions = [\n    {\n      key: 'caserate7dayfig',\n      text: 'Average Daily COVID-19 Cases / 100K',\n      value: 'caserate7dayfig',\n    },\n    {\n      key: 'covidmortality7dayfig',\n      text: 'Average Daily COVID-19 Deaths / 100K',\n      value: 'covidmortality7dayfig',\n    },\n  ]\n  const trendName = \n    {\n      'caserate7dayfig': 'Average Daily COVID-19 Cases / 100K',\n      'covidmortality7dayfig': 'Average Daily COVID-19 Deaths / 100K'\n\n    }\n  \n  // console.log(\"stateFips \", stateFips);\n\n\n  const [delayHandler, setDelayHandler] = useState();\n\n  const [caseTicks, setCaseTicks] = useState([]);\n\n  useEffect(() => {\n    if (dataTS && stateFips !== \"_nation\"){\n      setCaseTicks([\n          dataTS[\"_nation\"][0].t,\n          dataTS[\"_nation\"][30].t,\n          dataTS[\"_nation\"][61].t,\n          dataTS[\"_nation\"][91].t,\n          dataTS[\"_nation\"][122].t,\n          dataTS[\"_nation\"][153].t,\n          dataTS[\"_nation\"][183].t,\n          dataTS[\"_nation\"][214].t,\n          dataTS[\"_nation\"][244].t,\n          dataTS[\"_nation\"][275].t,\n          dataTS[\"_nation\"][306].t,\n          dataTS[\"_nation\"][334].t,\n\n          dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]);\n          //console.log(\"dataTS\", dataTS[\"_nation\"][0].t);\n    }\n  }, [dataTS]);\n\n  const labelTickFmt = (tick) => { \n    return (\n      // <text>// </ text>\n        /* {tick} */\n        // monthNames[new Date(tick*1000).getMonth()] + \" \" +  new Date(tick*1000).getDate()\n        new Date(tick*1000).getFullYear() + \"/\" + (new Date(tick*1000).getMonth()+1) + \"/\" +  new Date(tick*1000).getDate()\n      \n      );\n  };\n\n  const caseTickFmt = (tick) => { \n    return (\n      // <text>// </ text>\n        /* {tick} */\n        // monthNames[new Date(tick*1000).getMonth()] + \" \" +  new Date(tick*1000).getDate()\n        (new Date(tick*1000).getMonth()+1) + \"/\" +  new Date(tick*1000).getDate()\n      \n      );\n  };\n\n  //variable list & fips code to county name \n  useEffect(()=>{\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMetricOptions(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.variable, text: d.name, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\" && d.group === \"outcomes\")));\n      });\n\n    fetch('/data/rawdata/f2c.json').then(res => res.json())\n      .then(x => {\n        setCountyOption(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.value, text: d.text, group: d.state};\n        }), d => (d.group === stateFips && d.text !== \"Augusta-Richmond County consolidated government\" && d.text !== \"Wrangell city and borough\" && d.text !== \"Zavalla city\")));\n      });\n\n    \n\n  }, []);\n\n     //local fetch\n\n  // useEffect(()=>{\n  //   fetch('/data/racedataAll.json').then(res => res.json())\n  //     .then(x => {\n  //       setRaceData(x);\n  //       // setTemp(x[stateFips]);\n  //     });\n  //   fetch('/data/timeseriesAll.json').then(res => res.json())\n  //     .then(x => {\n  //       let caseRate = 0;\n  //         let mortality = 0;\n  //         let percentChangeCase = 0;\n  //         let percentChangeMortality = 0;\n  //         let index = 0;\n  //         let indexP = 0;\n  //         let hospD = 0;\n  //         let totCases = 0;\n  //         let percentChangeHospDaily = 0;\n  //         let percentPositive = 0;\n  //       setStateTS(x[stateFips]);\n  //       if(stateFips === \"_nation\"){\n  //                         caseRate = 0;\n  //                         mortality = 0;\n  //                         totCases = 0;\n  //                         hospD = 0;\n  //                       }else{\n  //                         //case rate\n  //                         caseRate = x[stateFips][x[stateFips].length-1].dailyCases;\n  //                         percentChangeCase = x[stateFips][x[stateFips].length-1].percent14dayDailyCases;\n                          \n  //                         //mortality rate\n  //                         mortality = x[stateFips][x[stateFips].length-1].dailyMortality;\n  //                         percentChangeMortality = x[stateFips][x[stateFips].length-1].percent14dayDailyDeaths;\n        \n  //                         //hospitalization rate\n  //                         percentChangeHospDaily = x[stateFips][x[stateFips].length-1].percent7dayhospDaily;\n  //                         hospD = x[stateFips][x[stateFips].length-1].hospDaily;\n        \n  //                         //testing positive rate\n  //                         percentPositive = x[stateFips][x[stateFips].length-1].percentPositive;\n        \n  //                         totCases = x[stateFips][x[stateFips].length-1].cases;\n        \n  //                       }\n\n  //       //manipulate string\n  //           if (percentChangeCase.toFixed(0) > 0){\n  //             setPercentChangeCases(\"+\" + percentChangeCase.toFixed(0) + \"%\");\n  //           }else if(percentChangeCase.toFixed(0).substring(1) === \"0\"){\n  //             setPercentChangeCases(percentChangeCase.toFixed(0).substring(1) + \"%\");\n  //           }else{\n  //             setPercentChangeCases(percentChangeCase.toFixed(0) + \"%\");\n  //           }\n\n  //           if (percentChangeMortality.toFixed(0) > 0){\n  //             setPercentChangeMortality(\"+\" + percentChangeMortality.toFixed(0) + \"%\");\n  //           }else if(percentChangeMortality.toFixed(0).substring(1) === \"0\"){\n  //             setPercentChangeMortality(percentChangeMortality.toFixed(0).substring(1) + \"%\");\n  //           }else{\n  //             setPercentChangeMortality(percentChangeMortality.toFixed(0) + \"%\");\n  //           }\n\n  //           if (percentChangeHospDaily.toFixed(0) > 0){\n  //             setPercentChangeHospDaily(\"+\" + percentChangeHospDaily.toFixed(0) + \"%\");\n  //           }else if(percentChangeHospDaily.toFixed(0).substring(1) === \"0\"){\n  //             setPercentChangeHospDaily(percentChangeHospDaily.toFixed(0).substring(1) + \"%\");\n  //           }else{\n  //             setPercentChangeHospDaily(percentChangeHospDaily.toFixed(0) + \"%\");\n  //           }\n\n  //           //set values\n  //           setPctPositive(percentPositive.toFixed(0) + \"%\");\n  //           // setIndexP(indexP);\n  //           // setIndex(index);\n  //           setCaseRate(numberWithCommas(caseRate.toFixed(0)));\n  //           setMortality(numberWithCommas(mortality.toFixed(0)));\n  //           // setTotalCases(numberWithCommas(totCases.toFixed(0)));\n  //           setHospDaily(numberWithCommas(hospD.toFixed(0)));\n  //     });\n\n  // }, [stateFips]);\n\n  // useEffect(()=>{\n  //   if (metric) {\n  //   const configMatched = configs.find(s => s.fips === stateFips);\n\n  //     if (!configMatched){\n  //       history.push('/_nation');\n  //     }else{\n\n  //       setConfig(configMatched);\n\n  //       setStateName(configMatched.name);\n  //       fetch('/data/date.json').then(res => res.json())\n  //        .then(x => setDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n\n  //       fetch('/data/data.json').then(res => res.json())\n  //         .then(x => {\n  //           setData(x);\n\n  //           const cs = scaleQuantile()\n  //           .domain(_.map(_.filter(_.map(x, (d, k) => {\n  //             d.fips = k\n  //             return d}), \n  //             d => (\n  //                 d[metric] > 0 &&\n  //                 d.fips.length === 5)),\n  //             d=> d[metric]))\n  //           .range(colorPalette);\n\n  //           let scaleMap = {}\n  //           _.each(_.filter(_.map(x, (d, k) => {\n  //             d.fips = k\n  //             return d}), \n  //             d => (\n  //                 d[metric] > 0 &&\n  //                 d.fips.length === 5))\n  //                 , d=>{\n  //             scaleMap[d[metric]] = cs(d[metric])});\n\n  //           setColorScale(scaleMap);\n  //           var max = 0\n  //           var min = 100\n  //           _.each(x, d=> { \n  //             if (d[metric] > max && d.fips.length === 5) {\n  //               max = d[metric]\n  //             } else if (d.fips.length === 5 && d[metric] < min && d[metric] > 0){\n  //               min = d[metric]\n  //             }\n  //           });\n\n  //           if (max > 999) {\n  //             max = (max/1000).toFixed(0) + \"K\";\n  //             setLegendMax(max);\n  //           }else{\n  //             setLegendMax(max.toFixed(0));\n\n  //           }\n  //           setLegendMin(min.toFixed(0));\n\n  //           var split = scaleQuantile()\n  //           .domain(_.map(_.filter(_.map(x, (d, k) => {\n  //             d.fips = k\n  //             return d}), \n  //             d => (\n  //                 d[metric] > 0 &&\n  //                 d.fips.length === 5)),\n  //             d=> d[metric]))\n  //           .range(colorPalette);\n\n  //           setLegendSplit(split.quantiles());\n  //         });\n        \n  //       fetch('/data/timeseries'+stateFips+'.json').then(res => res.json())\n  //         .then(x => {\n\n  //           let countyMost = '';\n  //           let covidmortality7dayfig = 0;\n            \n\n  //           _.each(x, (v, k)=>{\n\n  //             if (k.length===5 && v.length > 0 && v[v.length-1].covidmortality7dayfig > covidmortality7dayfig){\n  //               countyMost = k.substring(2, 5);\n  //               covidmortality7dayfig = v[v.length-1].covidmortality7dayfig;\n  //             }\n              \n  //             setCountyFips(countyMost);\n\n  //             if(stateFips !== \"_nation\"){\n  //               setCountyName(fips2county[stateFips+countyMost]);\n  //               // setBarCountyName((fips2county[stateFips+countyMost]).match(/\\S+/)[0]);\n\n  //            }\n            \n            \n\n            \n  //           });\n  //         setDataTS(x);\n  //      });\n      \n  //   }\n  //  }\n  \n\n  \n  // }, [metric]);\n  // console.log(\"config \", config);\n\n  // mongo\n  useEffect(()=>{\n    if (metric) {\n      const configMatched = configs.find(s => s.fips === stateFips);\n      // console.log(\"configMatched\", configMatched);\n      if (!configMatched){\n        history.push('/_nation');\n      }else{\n        if (isLoggedIn === true){\n          let newDict = {};\n          let caseRate = 0;\n          let mortality = 0;\n          let percentChangeCase = 0;\n          let percentChangeMortality = 0;\n          let hospD = 0;\n          let totCases = 0;\n          let percentChangeHospDaily = 0;\n          let percentPositive = 0;    \n          let indexP = 0;\n          let hospDate = 0;\n          let str = \"\";\n          setConfig(configMatched);\n          setStateName(configMatched.name);\n          const fetchData = async() => { \n            if(stateFips !== \"_nation\"){\n              //all static data\n              const staticQ = {all: \"all\"};\n              const promStatic = await CHED_static.find(staticQ,{projection:{}}).toArray();\n\n              promStatic.forEach(i=> {\n                if(i.tag === \"nationalrawfull\"){ //nationalraw\n                  newDict = i.data;\n                  setData(newDict); \n                }else if(i.tag === \"racedataAll\"){ //race data\n                  setRaceData(i.racedataAll);       \n                }else if(i.tag === \"date\"){\n                  setDate(i.date.substring(5,7) + \"/\" + i.date.substring(8,10) + \"/\" + i.date.substring(0,4));\n                }\n              });\n                    \n          \n              const stateSeriesQ = {full_fips: stateFips};\n              const promState = await CHED_series.find(stateSeriesQ,{projection:{}}).toArray();\n              let stateSeriesDict = promState[0][\"timeseries\" + stateFips];\n              setStateTS(stateSeriesDict);\n\n                if(stateFips === \"_nation\"){\n                  caseRate = 0;\n                  mortality = 0;\n                  totCases = 0;\n                  hospD = 0;\n                }else{\n                  //case rate\n                  caseRate = stateSeriesDict[stateSeriesDict.length-1].dailyCases;\n                  percentChangeCase = stateSeriesDict[stateSeriesDict.length-1].percent14dayDailyCases;\n                  \n                  //mortality rate\n                  mortality = stateSeriesDict[stateSeriesDict.length-1].dailyMortality;\n                  percentChangeMortality = stateSeriesDict[stateSeriesDict.length-1].percent14dayDailyDeaths;\n\n                  // //hospitalization rate\n                  // percentChangeHospDaily = stateSeriesDict[stateSeriesDict.length-1].percent7dayhospDaily;\n                  // hospD = stateSeriesDict[stateSeriesDict.length-1].hospDaily;\n\n                  // //testing positive rate\n                  // percentPositive = stateSeriesDict[stateSeriesDict.length-1].percentPositive;\n\n                  totCases = stateSeriesDict[stateSeriesDict.length-1].cases;\n\n                  \n                      \n                     \n        \n                    \n                    if(stateSeriesDict[stateSeriesDict.length-1].hospDaily === 0){\n                      for (var i = stateSeriesDict.length - 1; i >= 0; i--) {\n                        if (i ===0 ){\n                          indexP = 1;\n                          hospD = stateSeriesDict[stateSeriesDict.length-1].hospDaily;\n                          percentChangeHospDaily = stateSeriesDict[stateSeriesDict.length-1].percent7dayhospDaily;\n                        }else if (stateSeriesDict[i].hospDaily === 0){\n                        }else{\n                          indexP = stateSeriesDict.length - i;\n                          hospD = stateSeriesDict[i].hospDaily;\n                          percentChangeHospDaily = stateSeriesDict[i].percent7dayhospDaily;\n                          hospDate = stateSeriesDict[i-1].t;\n                          i = 0;\n                        }\n                      }\n                    }\n\n                    if(stateSeriesDict[stateSeriesDict.length-1].percentPositive === 0){\n                      for (var i = stateSeriesDict.length - 1; i >= 0; i--) {\n                        if (i ===0 ){\n                          indexP = 1;\n                          percentPositive = stateSeriesDict[stateSeriesDict.length-1].percentPositive;\n\n                        }else if (stateSeriesDict[i].percentPositive === 0){\n                        }else{\n                          indexP = stateSeriesDict.length - i;\n                          percentPositive = stateSeriesDict[i].percentPositive;\n\n                          i = 0;\n                        }\n                      }\n                    }\n                    \n        \n                  \n\n                }\n              }\n            \n            \n            setHospDate((\"\" + ((new Date(hospDate*1000).getMonth() + 1).toString().padStart(2, \"0\")) + \"/\" + new Date(hospDate*1000).getDate().toString().padStart(2, \"0\") + \"/\" + new Date(hospDate*1000).getFullYear().toString()));\n            //manipulate string\n            if (percentChangeCase.toFixed(0) > 0){\n              setPercentChangeCases(\"+\" + percentChangeCase.toFixed(0) + \"%\");\n            }else if(percentChangeCase.toFixed(0).substring(1) === \"0\"){\n              setPercentChangeCases(percentChangeCase.toFixed(0).substring(1) + \"%\");\n            }else{\n              setPercentChangeCases(percentChangeCase.toFixed(0) + \"%\");\n            }\n\n            if (percentChangeMortality.toFixed(0) > 0){\n              setPercentChangeMortality(\"+\" + percentChangeMortality.toFixed(0) + \"%\");\n            }else if(percentChangeMortality.toFixed(0).substring(1) === \"0\"){\n              setPercentChangeMortality(percentChangeMortality.toFixed(0).substring(1) + \"%\");\n            }else{\n              setPercentChangeMortality(percentChangeMortality.toFixed(0) + \"%\");\n            }\n\n            if (percentChangeHospDaily.toFixed(0) > 0){\n              setPercentChangeHospDaily(\"+\" + percentChangeHospDaily.toFixed(0) + \"%\");\n            }else if(percentChangeHospDaily.toFixed(0).substring(1) === \"0\"){\n              setPercentChangeHospDaily(percentChangeHospDaily.toFixed(0).substring(1) + \"%\");\n            }else{\n              setPercentChangeHospDaily(percentChangeHospDaily.toFixed(0) + \"%\");\n            }\n\n            //set values\n            setPctPositive(percentPositive.toFixed(0) + \"%\");\n            setIndexP(indexP);\n            // console.log(indexP);\n            // setIndex(index);\n            setCaseRate(numberWithCommas(caseRate.toFixed(0)));\n            setMortality(numberWithCommas(mortality.toFixed(0)));\n            // setTotalCases(numberWithCommas(totCases.toFixed(0)));\n            setHospDaily(numberWithCommas(hospD.toFixed(0)));\n\n              \n\n            let seriesDict = {};\n            let countyMost = '';\n            let covidmortality7dayfig = 0;\n            if( stateFips !== \"_nation\"){\n              //Timeseries data\n              const seriesQ = { $or: [ { state: \"_n\" } , { state: stateFips } ] }\n              const prom = await CHED_series.find(seriesQ, {projection: {}}).toArray();\n              _.map(prom, i=> {\n                seriesDict[i[Object.keys(i)[4]]] = i[Object.keys(i)[5]];\n                return seriesDict;\n              });\n              _.each(seriesDict, (v, k)=>{\n\n                if (k.length===5 && v.length > 0 && v[v.length-1].covidmortality7dayfig > covidmortality7dayfig){\n                  countyMost = k.substring(2, 5);\n                  covidmortality7dayfig = v[v.length-1].covidmortality7dayfig;\n                }\n              });\n            }\n            setCountyFips(countyMost);\n            if(stateFips !== \"_nation\"){\n              setCountyName(fips2county[stateFips+countyMost]);\n              setBarCountyName((fips2county[stateFips+countyMost]).match(/\\S+/)[0]);\n            }\n            \n            setDataTS(seriesDict);\n          };\n          fetchData();\n        \n          \n        } else {\n          handleAnonymousLogin();\n        }\n      }\n    }\n  },[isLoggedIn]);\n\n\n  useEffect(() => {\n    if(stateFips !== \"_nation\"){\n      let scaleMap = {};\n      var max = 0;\n      var min = 100;\n      const cs = scaleQuantile()\n      .domain(_.map(_.filter(data, \n        d => (\n            d[metric] > 0 &&\n            d.fips.length === 5)),\n        d=> d[metric]))\n      .range(colorPalette);\n\n      _.each(data, d=>{\n        if(d[metric] > 0){\n        scaleMap[d[metric]] = cs(d[metric])}});\n      setColorScale(scaleMap);\n      setLegendSplit(cs.quantiles());\n\n      //find the largest value and set as legend max\n      _.each(data, d=> { \n        if (d[metric] > max && d.fips.length === 5) {\n          max = d[metric]\n        } else if (d.fips.length === 5 && d[metric] < min && d[metric] >= 0){\n          min = d[metric]\n        }\n      });\n\n      if (max > 999999) {\n        max = (max/1000000).toFixed(0) + \"M\";\n        setLegendMax(max);\n      }else if (max > 999) {\n        max = (max/1000).toFixed(0) + \"K\";\n        setLegendMax(max);\n      }else{\n        setLegendMax(max.toFixed(0));\n      }\n      setLegendMin(min.toFixed(0));\n    }\n\n  }, [metric, data]);\n\n\n  if (stateFips === \"_nation\" || (data && metric && trendOptions && trendline)) {\n  // if (stateFips === \"_nation\" || (data && metric && trendOptions && trendline && dataTS)) {\n    // console.log(hospDate);\n\n  return (\n    <HEProvider>\n      <div>\n        <AppBar menu='countyReport'/>\n          <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n\n            {config &&\n            <div>\n              <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\"}}>\n                <Breadcrumb.Section link onClick={() => history.push('/')}>United States</Breadcrumb.Section>\n                <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n                <Breadcrumb.Section active>{stateFips === \"_nation\" ? \"The United States\" :stateName}</Breadcrumb.Section>\n                <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n              </Breadcrumb>\n              {stateFips === \"_nation\"? \n                <div style ={{paddingTop: 26, paddingBottom: 6}}>\n                  <Header.Content style={{paddingLeft: 0, fontFamily: \"lato\", fontSize: \"14pt\"}}>\n\n                    <p style= {{fontSize: \"20pt\"}}>Select your state and then select your county.</p>\n                    <b> Step 1.</b> Select your state.\n                  </Header.Content>\n                </div> \n                :\n                <div style ={{paddingTop: 26, paddingBottom: 6}}>\n                  <Header.Content style={{paddingLeft: 0, fontFamily: \"lato\", fontSize: \"14pt\"}}>\n\n                    <p style= {{fontSize: \"20pt\"}}>Select your state and then select your county.</p>\n                    <b> Step 1.</b> Select your state.<b> \n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    Step 2. </b> Select your county. <br/><br/>\n                  </Header.Content>\n                </div>\n              }\n\n              <Dropdown\n                style={{background: '#fff', \n                        fontSize: \"19px\",\n                        fontWeight: 400, \n                        theme: '#000000',\n                        width: '380px',\n                        left: '0px',\n                        text: \"Select\",\n                        borderTop: '0.5px solid #bdbfc1',\n                        borderLeft: '0.5px solid #bdbfc1',\n                        borderRight: '0.5px solid #bdbfc1', \n                        borderBottom: '0.5px solid #bdbfc1',\n                        borderRadius: 0,\n                        minHeight: '1.0em',\n                        paddingBottom: '0.5em'}}\n                text= {\"Selected State: \" + (stateFips === \"_nation\" ? \"The United States\": stateName)}\n                search\n                selection\n                pointing = 'top'\n                options={stateOptions}\n                onChange={(e, { value }) => {\n                  window.location.href = \"/\" + value;\n\n                }}\n\n              />\n\n              {stateFips !== \"_nation\" && \n              <Dropdown\n                  style={{background: '#fff', \n                          fontSize: \"19px\",\n                          fontWeight: 400, \n                          theme: '#000000',\n                          width: '450px',\n                          left: '0px',\n                          text: \"Select\",\n                          borderTop: '0.5px solid #bdbfc1',\n                          borderLeft: '0.5px solid #bdbfc1',\n                          borderRight: '0.5px solid #bdbfc1', \n                          borderBottom: '0.5px solid #bdbfc1',\n                          borderRadius: 0,\n                          minHeight: '1.0em',\n                          paddingBottom: '0.5em'}}\n                  text= \"Select County/Census Area/Borough\"\n                  search\n                  selection\n                  pointing = 'top'\n                  options={countyOption}\n                  onChange={(e, { value }) => {\n                    if (value !== \"Select County/Census Area/Borough\") {\n                      window.location.href = \"/\"+stateFips + \"/\" + value+\"\";\n                    }\n                    \n                  }}\n                  \n              />}\n                        \n            <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 40, paddingBottom: 25}}> Covid-19 Outcomes in {stateName} </Divider>\n            \n            { \n\n            <Grid columns={15}>\n              <Grid.Row columns={5} style={{width: 252, paddingRight: 0, paddingTop: '2em', paddingBottom: \"0\"}}>\n                <Grid.Column style = {{width:235}}> \n                  <center style = {{ fontSize: \"22px\", fontFamily: \"lato\", paddingBottom: 5}}> Daily Cases</center>\n                  \n                  \n                  <div style = {{width: 235, background: \"#e5f2f7\"}}>\n\n                  {stateFips === \"_nation\" && \n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"caseRateMean\"\n                      rate = {caseRate}\n                      percentChange = {percentChangeCases}\n                      resize= {1.2}\n                      recentIndex = {0}\n\n                    />}\n                  {stateFips && dataStateTS && stateFips !== \"_nation\" && \n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"caseRateMean\"\n                      rate = {caseRate}\n                      percentChange = {percentChangeCases}\n                      resize= {1.2}\n                      recentIndex = {0}\n                    />}\n                    \n                  </div>\n                  \n                </Grid.Column>\n                <Grid.Column style = {{width:235}}> \n                  <center style = {{ fontSize: \"22px\", fontFamily: \"lato\", paddingBottom: 5}}> Daily Deaths</center>\n                  <div style = {{width: 235, background: \"#e5f2f7\"}}>\n\n                  {stateFips === \"_nation\" && \n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"caseRateMean\"\n                      rate = {caseRate}\n                      percentChange = {percentChangeCases}\n                      resize= {1.2}\n                      recentIndex = {0}\n                    />}\n                  {stateFips && dataStateTS && stateFips !== \"_nation\" && \n\n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"mortalityMean\"\n                      rate = {mortality}\n                      percentChange = {percentChangeMortality}\n                      resize= {3}\n                      recentIndex = {0}\n                    />\n                  }\n\n                  </div>\n                  \n                </Grid.Column>\n\n                <Grid.Column style = {{width:235}}> \n                  <center style = {{ fontSize: \"22px\", fontFamily: \"lato\", paddingBottom: 5}}> Daily Hospitalizations</center>\n\n                  <div style = {{width: 235, background: \"#e5f2f7\"}}>\n\n                  {stateFips === \"_nation\" && \n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"caseRateMean\"\n                      rate = {caseRate}\n                      percentChange = {percentChangeCases}\n                      resize= {1.2}\n                      recentIndex = {0}\n                    />}\n                  {stateFips && dataStateTS && stateFips !== \"_nation\" && \n\n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"hospDaily\"\n                      rate = {hospDaily}\n                      percentChange = {percentChangeHospDaily}\n                      resize= {1.5}\n                      recentIndex = {indexP}\n                    />\n                  }\n\n                    \n                  </div>\n                  \n                </Grid.Column>\n              \n                <Grid.Column style = {{width:235}}>\n                  <center style = {{ fontSize: \"22px\", fontFamily: \"lato\", paddingBottom: 5}}> Percent Tested Positive</center>\n                  \n                  <div style = {{width: 235, background: \"#e5f2f7\"}}>\n\n                  {stateFips === \"_nation\" && \n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"caseRateMean\"\n                      rate = {caseRate}\n                      percentChange = {percentChangeCases}\n                      resize= {1.2}\n                      recentIndex = {indexP}\n                    />}\n                  {stateFips && dataStateTS && stateFips !== \"_nation\" && \n                    <VictoryChart theme={VictoryTheme.material}\n                                                  \n                      minDomain={{ x: stateFips !== \"_nation\" ? dataStateTS[dataStateTS.length- indexP - 15].t : 0 }}\n                      maxDomain={{ x: stateFips !== \"_nation\" ? dataStateTS[dataStateTS.length- indexP - 1].t : 0 , y: stateFips !== \"_nation\" ? getMaxRange(dataStateTS, \"percentPositive\", dataStateTS.length-indexP -15)*1.2 : 0 }}\n                      width={235}\n                      height={180}       \n                      padding={{left: 0, right: -1, top: 150, bottom: -0.9}}\n                      containerComponent={<VictoryContainer responsive={false}/>}>\n\n                      \n                      <VictoryAxis\n                        tickValues={stateFips !== \"_nation\" ? [\n                          dataStateTS[dataStateTS.length - Math.round(dataStateTS.length/3)*2 - 1].t,\n                          dataStateTS[dataStateTS.length - Math.round(dataStateTS.length/3) - 1].t,\n                          dataStateTS[dataStateTS.length-1].t]\n                        :\n                        [0]}                        \n                        style={{tickLabels: {fontSize: 10}}} \n                        tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}\n                      />\n                      \n                      <VictoryGroup colorScale={[stateColor]}>\n\n                        <VictoryLine data={dataStateTS && stateFips !== \"_nation\"? dataStateTS : [0,0,0]}\n                          x='t' y='percentPositive'\n                        />\n\n                      </VictoryGroup>\n\n                      <VictoryArea\n                        style={{ data: { fill: \"#080808\", fillOpacity: 0.1} }}\n                        data={dataStateTS && stateFips !== \"_nation\"? dataStateTS : [0,0,0]}\n                        x= 't' y = 'percentPositive'\n\n                      />\n                      <VictoryLabel text= {stateFips === \"_nation\" ? 0 :pctPositive} x={115} y={60} textAnchor=\"middle\" style={{fontSize: 50, fontFamily: 'lato'}}/>\n                    </VictoryChart>\n                  }\n                  </div>\n                  \n                </Grid.Column>\n\n                {stateFips === \"_nation\" && \n                  <center style = {{ fontSize: \"15pt\", fontFamily: \"lato\", paddingBottom: 5, paddingLeft: 8, width: 250}}> Deaths by Race & Ethnicity</center>\n\n\n                  }\n                {stateFips && dataStateTS && stateFips !== \"_nation\" && \n                <Grid.Column rows = {2} style = {{width:235}}>\n\n                    {stateFips === \"_nation\" && \n                    <TopChart\n                      data = {dataStateTS} \n                      sFips = {stateFips}\n                      xVar = \"t\" \n                      yVar = \"caseRateMean\"\n                      rate = {caseRate}\n                      percentChange = {percentChangeCases}\n                      resize= {1.2}\n                    />}\n\n                  \n                  {stateFips !== \"_nation\" && stateFips !== \"72\" &&\n                  <center style = {{ fontSize: \"15pt\", fontFamily: \"lato\", paddingBottom: 5, width: 238}}> \n                    Deaths by {(!!raceData[stateFips][\"White Alone\"] ||\n                    !!raceData[stateFips][\"Asian Alone\"] ||\n                    !!raceData[stateFips][\"African American Alone\"] ||\n                    !!raceData[stateFips][\"American Natives Alone\"]\n                    && !raceData[stateFips][\"Hispanic\"]? \"Race\" : \"Race & Ethnicity\")}</center>\n                  }\n                  {stateFips === \"38\" &&\n                  <div style = {{background: \"#e5f2f7\", paddingBottom: 61}}> <center style = {{ fontSize: \"16pt\", fontFamily: \"lato\", paddingBottom: 5}}> <br/> <br/> <br/> <br/> None Reported <br/>  <br/> </center></div>\n                  }\n\n                  {stateFips === \"02\" &&\n                  <div style = {{background: \"#e5f2f7\", paddingBottom: 13, width: 235}}> <center style = {{ fontSize: \"16pt\", fontFamily: \"lato\", paddingBottom: 5}}> <br/> <br/> <br/>None Reported <br/>  <br/> </center></div>\n                  }\n                  \n                  <div style = {{width: 235, background: \"#e5f2f7\"}}>\n                    <Grid.Row>\n                      {stateFips !== \"_nation\" && !raceData[stateFips][\"Non-Hispanic African American\"] && stateFips !== \"38\" && stateFips !== \"02\" && \n                      <VictoryChart\n                        theme = {VictoryTheme.material}\n                        width = {235}\n                        height = {(!!raceData[stateFips][\"African American Alone\"] + !!raceData[stateFips][\"American Natives Alone\"] + !!raceData[stateFips][\"Asian Alone\"] + !!raceData[stateFips][\"White Alone\"] ) === 2? 88 : 112}\n                        domainPadding={20}\n                        minDomain={{y: props.ylog?1:0}}\n                        padding={{left: 90, right: 35, top: 0, bottom: -2}}\n                        style = {{fontSize: \"14pt\"}}\n                        containerComponent={<VictoryContainer responsive={false}/>}\n                      >\n\n                        <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"16px\", fill: '#000000', fontFamily: 'lato'}}} />\n                        <VictoryAxis dependentAxis style={{ticks:{stroke: \"#e5f2f7\"}, axis: {stroke: \"#000000\"},grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                        <VictoryGroup>\n\n                          {\"Asian Alone\" in raceData[stateFips] && raceData[stateFips][\"Asian Alone\"][0]['deathrateRace'] >= 0 && raceData[stateFips][\"Asian Alone\"][0]['deaths'] > 30 && raceData[stateFips][\"Asian Alone\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              barRatio={0.7}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"Asian\", 'value': raceData[stateFips][\"Asian Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateFips][\"Asian Alone\"][0]['deathrateRace'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n                          {\"American Natives Alone\" in raceData[stateFips] && raceData[stateFips][\"American Natives Alone\"][0]['deathrateRace'] >= 0 && raceData[stateFips][\"American Natives Alone\"][0]['deaths'] > 30 && raceData[stateFips][\"American Natives Alone\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"American\\n Natives\", 'value': raceData[stateFips][\"American Natives Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateFips][\"American Natives Alone\"][0]['deathrateRace'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n\n                          {\"African American Alone\" in raceData[stateFips] && raceData[stateFips][\"African American Alone\"][0]['deathrateRace'] >= 0 && raceData[stateFips][\"African American Alone\"][0]['deaths'] > 30 && raceData[stateFips][\"African American Alone\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"African\\n American\", 'value': raceData[stateFips][\"African American Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateFips][\"African American Alone\"][0]['deathrateRace'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n                          {\"White Alone\" in raceData[stateFips] && raceData[stateFips][\"White Alone\"][0]['deathrateRace'] >= 0 && raceData[stateFips][\"White Alone\"][0]['deaths'] > 30 && raceData[stateFips][\"White Alone\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              barRatio={0.7}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"White\", 'value': raceData[stateFips][\"White Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateFips][\"White Alone\"][0]['deathrateRace'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n                        </VictoryGroup>\n                      </VictoryChart>}\n                    </Grid.Row>\n                    {stateFips !== \"_nation\" && !raceData[stateFips][\"Non-Hispanic African American\"] && stateFips !== \"38\" &&\n                      <div style={{lineHeight: \"4px\", background: \"#FFFFFF\"}}>\n                        &nbsp;&nbsp;\n                      </div>\n                    }\n                    <Grid.Row> \n                      {stateFips !== \"_nation\"  && stateFips !== \"38\" && !(stateFips !== \"_nation\" && stateFips !== \"38\" && !((!raceData[stateFips][\"Hispanic\"] || raceData[stateFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0) && (!raceData[stateFips][\"Non Hispanic\"] || raceData[stateFips][\"Non Hispanic\"][0]['deathrateEthnicity'] < 0) && \n                      !raceData[stateFips][\"Non-Hispanic African American\"] && !raceData[stateFips][\"Non-Hispanic American Natives\"] && \n                      !raceData[stateFips][\"Non-Hispanic Asian\"] && !raceData[stateFips][\"Non-Hispanic White\"])) && \n                        <center style= {{height: 64}}> <text style={{fontSize: '14pt', lineHeight: \"14pt\"}}> <br/>Ethnicity Not Reported</text> </center>\n                      }\n\n                      { stateFips !== \"38\" && (stateFips !== \"_nation\" && stateFips !== \"38\" && !((!raceData[stateFips][\"Hispanic\"] || raceData[stateFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0) && (!raceData[stateFips][\"Non Hispanic\"] || raceData[stateFips][\"Non Hispanic\"][0]['deathrateEthnicity'] < 0) && \n                      !raceData[stateFips][\"Non-Hispanic African American\"] && !raceData[stateFips][\"Non-Hispanic American Natives\"] && \n                      !raceData[stateFips][\"Non-Hispanic Asian\"] && !raceData[stateFips][\"Non-Hispanic White\"]))  &&\n                      \n                      <VictoryChart\n                        theme = {VictoryTheme.material}\n                        width = {235}\n                        height = {(!!raceData[stateFips][\"African American Alone\"] + !!raceData[stateFips][\"American Natives Alone\"] + !!raceData[stateFips][\"Asian Alone\"] + !!raceData[stateFips][\"White Alone\"] ) === 2? 88 : stateFips !== \"_nation\" && !raceData[stateFips][\"Non-Hispanic African American\"] && stateFips !== \"38\" ? 64: 180}\n                        domainPadding={20}\n                        minDomain={{y: props.ylog?1:0}}\n                        padding={{left: 90, right: 35, top: 0, bottom: -2}}\n                        style = {{fontSize: \"14pt\"}}\n                        containerComponent={<VictoryContainer responsive={false}/>}\n                      >\n\n                        <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"16px\", fill: '#000000', fontFamily: 'lato'}}} />\n                        <VictoryAxis dependentAxis style={{ticks:{stroke: \"#e5f2f7\"}, axis: {stroke: \"#000000\"},grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                        \n                        <VictoryGroup>\n\n                          {!!raceData[stateFips][\"Hispanic\"]  && raceData[stateFips][\"Hispanic\"][0]['deathrateEthnicity'] >= 0 && raceData[stateFips][\"Hispanic\"][0]['deaths'] > 30 && raceData[stateFips][\"Hispanic\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              barRatio={0.1}\n                              horizontal\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"Hispanic\", 'value': raceData[stateFips][\"Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateFips][\"Hispanic\"][0]['deathrateEthnicity'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n                          {!!raceData[stateFips][\"Non Hispanic\"] && raceData[stateFips][\"Non Hispanic\"][0]['deathrateEthnicity'] >= 0 && raceData[stateFips][\"Non Hispanic\"][0]['deaths'] > 30 && raceData[stateFips][\"Non Hispanic\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              barRatio={0.1}\n                              horizontal\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"Non\\n Hispanic\", 'value': raceData[stateFips][\"Non Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateFips][\"Non Hispanic\"][0]['deathrateEthnicity'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n                          \n                        \n                          {!!raceData[stateFips][\"Non-Hispanic African American\"] && raceData[stateFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateFips][\"Non-Hispanic African American\"][0]['deaths'] > 30 && raceData[stateFips][\"Non-Hispanic African American\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              barRatio={0.7}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"African\\n American\", 'value': raceData[stateFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n                          {!!raceData[stateFips][\"Non-Hispanic American Natives\"] && raceData[stateFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateFips][\"Non-Hispanic American Natives\"][0]['deaths'] > 30 && raceData[stateFips][\"Non-Hispanic American Natives\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              barRatio={0.7}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"American\\n Natives\", 'value': raceData[stateFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n                          {!!raceData[stateFips][\"Non-Hispanic Asian\"] && raceData[stateFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateFips][\"Non-Hispanic Asian\"][0]['deaths'] > 30 && raceData[stateFips][\"Non-Hispanic Asian\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              barRatio={0.7}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"Asian\", 'value': raceData[stateFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600 }}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n                          {!!raceData[stateFips][\"Non-Hispanic White\"] && raceData[stateFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateFips][\"Non-Hispanic White\"][0]['deaths'] > 30 && raceData[stateFips][\"Non-Hispanic White\"][0]['percentPop'] >= 1 &&\n                            <VictoryBar\n                              barWidth= {10}\n                              horizontal\n                              barRatio={0.7}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n\n                                    {key: \"White\", 'value': raceData[stateFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'])}\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\", fontWeight: 600}}/>}\n                              style={{\n                                data: {\n                                  fill: \"#487f84\"\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          }\n\n                          \n                        </VictoryGroup>\n                      </VictoryChart>}\n                    </Grid.Row>\n                  </div>\n                </Grid.Column>\n                }\n              </Grid.Row>\n\n              <Grid.Row columns = {5} style={{paddingBottom: 0, paddingTop: 10, paddingLeft: 15, paddingRight: 0}}>\n                \n                <Grid.Column style={{padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <Header.Content style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Daily new COVID-19 cases <br/>\n                    <br/><br/><br/>\n                    <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target = \"_blank\" rel=\"noopener noreferrer\"> New York Times </a> <br/>\n                  </Header.Content>\n                </Grid.Column>\n                <Grid.Column style={{left: 3, padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <Header.Content style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Daily new COVID-19 deaths <br/>\n                    <br/><br/><br/>\n                    <i>Data source</i>:<a style ={{color: \"#397AB9\"}} href = \"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target = \"_blank\" rel=\"noopener noreferrer\"> New York Times </a> <br/>\n                  </Header.Content>\n                </Grid.Column>\n                <Grid.Column style={{left: 4, padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <Header.Content style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    New daily COVID-19 Hospitalization <br/>\n                    <br/><br/>\n                    <i>Data source</i>: U.S. Department of Health & Human Services, <a style ={{color: \"#397AB9\"}} href = \"https://beta.healthdata.gov/Health/COVID-19-Community-Profile-Report/gqxm-d9w9\" target = \"_blank\" rel=\"noopener noreferrer\">Community Profile Report </a> <br/>\n                  </Header.Content>\n                </Grid.Column>\n                <Grid.Column style={{left: 9, padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <Header.Content style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Percentage of total tests for\n                    COVID-19 that resulted in a positive result. <br/><br/>\n                    <i>Data source</i>: U.S. Department of Health & Human Services, <a style ={{color: \"#397AB9\"}} href = \"https://beta.healthdata.gov/Health/COVID-19-Community-Profile-Report/gqxm-d9w9\" target = \"_blank\" rel=\"noopener noreferrer\">Community Profile Report </a> <br/>\n                  </Header.Content>\n                </Grid.Column>\n                <Grid.Column style={{left: 12, padding: 0, paddingLeft: 0, paddingRight: 10, lineHeight: '16pt'}}>\n                  <Header.Content style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                    Distribution of deaths per 100K persons. \n                    <br/><br/><br/>\n                    <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href=\"https://covidtracking.com/race\" target=\"_blank\" rel=\"noopener noreferrer\"> The COVID Racial Data Tracker </a> <br/> \n\n                  </Header.Content>\n                </Grid.Column>\n              </Grid.Row>\n\n              <Accordion defaultActiveIndex={1} panels={[\n              {\n                  key: 'acquire-dog',\n                  title: {\n                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                      icon: 'dropdown',\n                  },\n                  content: {\n                      content: (\n                        <div>\n                          {stateFips !== \"_nation\" && stateFips === \"38\" &&\n                          <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n                                  <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                                    Cases and deaths data as of: {date}.\n                                    <br/>\n                                    Hospitalization data as of: {hospDate}.\n                                    <br/>\n                                    {stateName} is not reporting deaths by race or ethnicity.\n                                    <br/>\n                                    Race data as of: {racedatadate.date.substring(5,7) + \"/\" + racedatadate.date.substring(8,10) + \"/\" + racedatadate.date.substring(0,4)}. \n                                    \n                                  </text>\n                          </Grid.Row>\n                          }\n                                  \n                          {stateFips !== \"_nation\" && stateFips !== \"38\" &&\n                          <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n                                  <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                                    Cases and deaths data as of: {date}.\n                                    <br/>\n                                    Hospitalization data as of: {hospDate}.\n                                    <br/>\n                                    {stateName} reports distribution of deaths across non-Hispanic race categories, with {!!raceData[stateFips][\"Race Missing\"]? raceData[stateFips][\"Race Missing\"][0][\"percentRaceDeaths\"] + \"%\":!!raceData[stateFips][\"Ethnicity Missing\"]? raceData[stateFips][\"Ethnicity Missing\"][0][\"percentEthnicityDeaths\"] + \"%\" : !!raceData[stateFips][\"Race & Ethnicity Missing\"]? raceData[stateFips][\"Race & Ethnicity Missing\"][0][\"percentRaceEthnicityDeaths\"] + \"%\": \"na%\"} of deaths of known {!!raceData[stateFips][\"Race Missing\"]? \"race\" :!!raceData[stateFips][\"Ethnicity Missing\"]? \"ethnicity\" : !!raceData[stateFips][\"Race & Ethnicity Missing\"]? \"race & ethnicity\": \"race & ethnicity\"}. Here we only show race categories that constitute at least 1% of the state population and have 30 or more deaths.\n                                    <br/>\n                                    Race data as of: {racedatadate.date.substring(5,7) + \"/\" + racedatadate.date.substring(8,10) + \"/\" + racedatadate.date.substring(0,4)}. \n                                    \n                                  </text>\n                          </Grid.Row>\n                          }\n\n                          { false && \n                            <span style={{color: '#73777B', fontSize: \"14pt\"}}>Cases and deaths data as of: {date}</span>\n                          }\n                        </div>\n                      ),\n                    },\n                }\n            ]\n\n            } />\n            </Grid>\n          }\n          \n            { \n            <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 37, paddingBottom: 35}}> COVID-19 County Outcomes </Divider>\n            }\n          \n            <Grid>\n              <Grid.Row style = {{width: 1260}}>\n                <Grid.Column style = {{width: 450}}>\n                  <Dropdown\n\n                    style={{background: '#fff', \n                            fontSize: \"19px\",\n                            fontWeight: 400, \n                            theme: '#000000',\n                            width: '440px',\n                            top: '0px',\n                            left: '0px',\n                            text: \"Select\",\n                            borderTop: '0.5px solid #bdbfc1',\n                            borderLeft: '0.5px solid #bdbfc1',\n                            borderRight: '0.5px solid #bdbfc1', \n                            borderBottom: '0.5px solid #bdbfc1',\n                            borderRadius: 0,\n                            minHeight: '1.0em',\n                            paddingBottom: '0.5em',\n                            paddingRight: 0}}\n                    text= { stateFips !== \"_nation\" ? metricName : \"Select Metric\"}\n                    search\n                    selection\n                    pointing = 'top'\n                    options={stateFips !== \"_nation\" ? metricOptions : \"\"}\n                    onChange={(e, { value }) => {\n                      setMetric(value);\n                      setMetricName(varMap[value]['name']);\n                    }}\n                  />\n\n\n                  <br/> <br/> \n                  <Dropdown\n                    style={{background: '#fff', \n                            fontSize: \"19px\",\n                            fontWeight: 400, \n                            theme: '#000000',\n                            width: '440px',\n                            top: '0px',\n                            left: '0px',\n                            text: \"Select\",\n                            borderTop: '0.5px solid #bdbfc1',\n                            borderLeft: '0.5px solid #bdbfc1',\n                            borderRight: '0.5px solid #bdbfc1', \n                            borderBottom: '0.5px solid #bdbfc1',\n                            borderRadius: 0,\n                            minHeight: '1.0em',\n                            paddingBottom: '0.5em'}}\n                    text= { countyName !== \"\" ? countyName : \"Select County/Census Area/Borough\"}\n                    search\n                    selection\n                    pointing = 'top'\n                    options={countyOption}\n                    onChange={(e, { value }) => {\n                      setCountyFips(value);\n                      setCountyName(fips2county[stateFips + value]);\n                      setBarCountyName((fips2county[stateFips + value]).match(/\\S+/)[0]);\n                              \n                    }}\n                  />\n                  \n                  {dataTS && legendSplit && \n                  <svg width=\"420\" height=\"90\">\n                    \n                    {_.map(legendSplit, (splitpoint, i) => {\n                      if(legendSplit[i] < 1){\n                        return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(1)}</text>                    \n                      }else if(legendSplit[i] > 99999){\n                        return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                      }else if(legendSplit[i] > 999){\n                        return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000).toFixed(0) + \"K\"}</text>                    \n                      }\n                      return <text key = {i} x={20 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(0)}</text>                    \n                    })} \n                    <text x={0} y={35} style={{fontSize: '0.7em'}}> {legendMin} </text>\n                    <text x={120} y={35} style={{fontSize: '0.7em'}}>{legendMax}</text>\n\n\n                    {_.map(colorPalette, (color, i) => {\n                      return <rect key={i} x={20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                    })} \n\n\n                    <text x={0} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                    <text x={20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                    <rect x={145} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                    <text x={167} y={50} style={{fontSize: '0.7em'}}> None </text>\n                    <text x={167} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n\n\n                    <text x={250} y={49} style={{fontSize: '1em'}}> Click on a county</text>\n                    <text x={250} y={65} style={{fontSize: '1em'}}> below for a detailed report. </text>\n\n\n                  </svg>}\n                  <ComposableMap projection=\"geoAlbersUsa\" \n                    projectionConfig={{scale:`${config.scale*0.7}`}} \n                    width={400} \n                    height={500} \n                    strokeWidth = {0.1}\n                    stroke = 'black'\n                    data-tip=\"\"\n                    offsetX={config.offsetX}\n                    offsetY={config.offsetY}>\n                    <Geographies geography={config.url}>\n                      {({geographies}) => geographies.map(geo =>\n                        <Geography \n                          key={geo.rsmKey} \n                          geography={geo}  \n                          onClick={()=>{\n                            if(stateFips !== \"_nation\"){\n                              history.push(\"/\" + stateFips + \"/\" +geo.properties.COUNTYFP);\n                            }\n                          }}\n                          onMouseEnter={()=>{setDelayHandler(setTimeout(() => {\n                            if(stateFips !== \"_nation\"){\n                                setCountyFips(geo.properties.COUNTYFP);\n                                setCountyName(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                setBarCountyName((fips2county[stateFips + geo.properties.COUNTYFP]).match(/\\S+/)[0]);\n                              }\n                            }, 300))\n                            \n                          }}\n                          onMouseLeave={()=>{\n                            if(stateFips !== \"_nation\"){\n                              clearTimeout(delayHandler);\n\n                              setTooltipContent(\"\")\n                            }\n                          }}\n                          \n                          fill={(stateFips === \"_nation\" || stateFips === \"72\")? \"#FFFFFF\" :countyFips===geo.properties.COUNTYFP?countyColor:\n                              ((colorScale && data[stateFips+geo.properties.COUNTYFP] && (data[stateFips+geo.properties.COUNTYFP][metric]) > 0)?\n                                  colorScale[data[stateFips+geo.properties.COUNTYFP][metric]]: \n                                  (colorScale && data[stateFips+geo.properties.COUNTYFP] && data[stateFips+geo.properties.COUNTYFP][metric] === 0)?\n                                    '#e1dce2':'#FFFFFF')}\n                          />\n                      )}\n                    </Geographies>\n                  </ComposableMap>\n                  <Grid>\n                    <Grid.Row>\n                      <Accordion defaultActiveIndex={1} panels={[\n                      {\n                          key: 'acquire-dog',\n                          title: {\n                              content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                              icon: 'dropdown',\n                          },\n                          content: {\n                              content: (\n                                <div>\n                                {stateFips !== \"_nation\" && <Grid.Row style={{width: \"420px\"}}>\n                                    <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                                    <b><em> {varMap[metric].name} </em></b> {varMap[metric].definition} <br/>\n                                    For a complete table of variable definition, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                    <br/><br/>\n                                    Data as of: {date}\n                                    </text>\n\n\n                                </Grid.Row>}\n                                </div>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n                    </Grid.Row>\n                  </Grid>\n                </Grid.Column>\n                <Grid.Column style={{padding: 0, paddingLeft: 40, width: 810}}>\n\n                \n\n\n                  <Header as='h2' style={{fontWeight: 400, width: 800}}>\n                    <Header.Content style={{fontSize: \"22px\"}}>\n                      <b>{stateFips === \"_nation\" || stateFips === \"72\"? \"Comparing \":countyName ? \"Comparing \" + countyName: \"Loading...\"}</b>\n                      <Header.Subheader style={{fontWeight: 350, paddingTop: 15, width: 800, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                        The number of cases and deaths due to COVID-19 are dynamic. \n                        Cases are declining in many counties and rising in others. \n                        Trends in the case and death count in the past 14 days are being monitored to \n                        determine whether it is safe to reopen a county.\n                        <br/>\n                        <br/>\n                        {/* <p style={{color: \"#024174\", fontWeight: 500}}> Click and drag or zoom on the graphs below.</p> */}\n                      </Header.Subheader>\n                    </Header.Content>\n                  </Header>\n                  <Grid>\n                    {stateFips !== \"_nation\" && \n                    <Grid.Row columns={1} style={{padding: 0, paddingTop: 10, paddingBottom: 0, width: 800}}>\n                      <Grid.Column>\n                        {/* <Header.Content x={0} y={20} style={{fontSize: '14pt', width: 400, paddingLeft: 15, paddingBottom: 5, fontWeight: 400}}>Average Daily COVID-19 Cases /100K </Header.Content> */}\n                        <Dropdown\n                          style={{background: '#fff', \n                                  fontSize: \"19px\",\n                                  fontWeight: 400, \n                                  theme: '#000000',\n                                  width: '450px',\n                                  top: '0px',\n                                  left: '15px',\n                                  text: \"Select\",\n                                  borderTop: '0.5px solid #bdbfc1',\n                                  borderLeft: '0.5px solid #bdbfc1',\n                                  borderRight: '0.5px solid #bdbfc1', \n                                  borderBottom: '0.5px solid #bdbfc1',\n                                  borderRadius: 0,\n                                  minHeight: '1.0em',\n                                  paddingBottom: '0.5em',\n                                  paddingLeft: '1em'}}\n                          text= { selectedTrend? selectedTrend : \"Average Daily COVID-19 Cases / 100K\"}\n                          pointing = 'top'\n                          search\n                          selection\n                          options={trendOptions}\n                          onChange={(e, { value}) => {\n                            setTrendline(value);\n                            setSelectedTrend(trendName[value]);\n                            \n                                    \n                          }}\n                        />\n                        <div style = {{paddingTop: 10}}>\n                          <svg width = \"500\" height = \"40\">\n                              <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                              <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                              <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                              <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateFips === \"_nation\" || stateFips === \"72\"? \"\":stateName} </text>\n                              <rect x = {stateName.length > 10? 230: 180} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                              <text x = {stateName.length > 10? 245: 195} y = {20} style = {{ fontSize: \"12pt\"}}> {stateFips === \"_nation\" || stateFips === \"72\"? \"\": countyName ? countyName: \"Loading...\"}</text>\n                          </svg>\n                        </div>\n                        <div style = {{width: 1000, height: 180}}>\n                          {dataTS && <CaseChart data={dataTS} lineColor={[colorPalette[1]]} stateFips = {stateFips} countyFips = {countyFips}\n                                ticks={caseTicks} tickFormatter={caseTickFmt} labelFormatter = {labelTickFmt} var = {trendline}/>\n                          }  \n                        </div>\n                                                \n                      </Grid.Column>\n                        \n                    </Grid.Row>}\n\n                  </Grid>\n\n                  <Header as='h2' style={{width:800, paddingBottom: 10}}>\n                    <Header.Content style={{fontSize: \"22px\", marginTop: 6}}>\n                      {stateFips === \"_nation\" || stateFips === \"72\"? \"\":countyName} Population Characteristics\n                      <Header.Subheader style={{fontWeight: 350, width: 800, fontSize: \"14pt\", lineHeight: \"16pt\", paddingTop: 18}}>\n                      Social, economic, health and environmental factors impact an individual’s risk of infection and COVID-19 severity. \n                      Counties with large groups of vulnerable people may be  disproportionately impacted by COVID-19.\n                      </Header.Subheader>\n                    </Header.Content>\n\n                  </Header>\n                  <Grid>\n                    <Grid.Row>\n                      <BarChart \n                        title=\"% African American\" \n                        var=\"black\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                      <BarChart \n                        title=\"% Hispanic or Latino\" \n                        var=\"hispanic\"  \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                      <BarChart \n                        title=\"% Native American\" \n                        var=\"natives\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />  \n                      <BarChart \n                        title=\"Community Vulnerability Index\" \n                        var=\"ccvi\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                    </Grid.Row>\n                    <Grid.Row style = {{paddingTop: 15}}>\n                      <BarChart \n                        title=\"Any Condition\" \n                        var=\"anycondition\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />  \n                      {/* <BarChart \n                        title=\"% Diabetes\" \n                        var=\"diabetes\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />  */}\n                      <BarChart \n                        title=\"% in Poverty\" \n                        var=\"poverty\"  \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                      <BarChart \n                        title=\"% Uninsured\" \n                        var=\"PCTUI\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                      <BarChart \n                        title=\"% in Group Quarters\" \n                        var=\"groupquater\" \n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        countyName={barCountyName}\n                        stateName={stateName}\n                        data={data} />\n                        {/* <BarChart \n                          title=\"% Male\" \n                          var=\"male\" \n                          stateFips={stateFips}\n                          countyFips={countyFips}\n                          countyName={barCountyName}\n                          stateName={stateName}\n                          data={data} /> */}\n                    </Grid.Row>\n                    <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n                      <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                      *The state and national level measure of any chronic condition prevalence (per 100K) is computed with the average of all the counties and states.\n                      <br/>\n                      *The national level measures of COVID-19 Community Vulnerability Index and Residential Segregation Index are computed with the average of all the states.\n\n\n                      </text>\n                    </Grid.Row>\n                  </Grid>\n\n                  \n                </Grid.Column>\n                <Grid.Row>\n                  \n                </Grid.Row>\n\n              </Grid.Row>            \n            </Grid>\n            \n            </div>\n          }\n          <Notes />\n        </Container>\n      {stateFips !== \"_nation\" && <ReactTooltip> <font size=\"+1\"> <b> {countyName} </b> </font> <br/> Click for a detailed report. </ReactTooltip>}\n    </div>\n  </HEProvider>\n    );\n  } else{\n    return <Loader active inline='centered' />\n  }\n\n\n\n\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Grid, Dropdown, Breadcrumb, Header, Loader, Popup, Accordion, Table, Divider } from 'semantic-ui-react'\nimport AppBar from './AppBar';\n// import Geographies from './Geographies';\n// import Geography from './Geography';\n// import ComposableMap from './ComposableMap';\nimport { VictoryChart, \n  VictoryContainer,\n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  VictoryLegend,\n  VictoryLine,\n  VictoryLabel, \n  VictoryScatter,\n  VictoryTooltip,\n  VictoryVoronoiContainer\n} from 'victory';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport fips2county from './fips2county.json'\nimport configs from \"./state_config.json\";\nimport _ from 'lodash';\n\nimport { var_option_mapping, CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {HEProvider, useHE} from './HEProvider';\nimport {useStitchAuth} from \"./StitchAuth\";\n\nconst countyColor = '#f2a900';\nconst stateColor = \"#778899\";\nconst nationColor = '#b1b3b3';\n\nconst monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\",\n  \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"\n];\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\nfunction ScatterChart(props) {\n\n  return (\n    <VictoryChart\n      width={450}\n      height={350}\n      scale={{y: props.ylog?'log':'linear'}}\n      minDomain={{y: props.ylog?1:0}}\n      padding={{left: 80, right: 20, top: 50, bottom: 35}}>\n      {props.showLegend && <VictoryLegend\n        x={10} y={10}\n        orientation=\"horizontal\"\n        style={{labels:{ fontFamily: 'lato'}}}\n        colorScale={[stateColor, countyColor]}\n        data ={[\n          {name: ('Other counties in '+ props.stateName)}, {name: props.countyName}\n          ]}\n      />}\n      <VictoryScatter\n        data={_.filter(_.map(props.data, (d, k)=>{d.fips=k; return d;}), (d)=> (\n                 d.fips.length===5 &&\n                 d.fips.substring(0,2)===props.stateFips &&\n                 d[props.x] >= 0 && d[props.y] >= 0))}\n        sortKey={(d) => d.fips===(props.stateFips + props.countyFips)}\n        style={{ \n                 data: { fontFamily: 'lato', \n                 fill: ({datum}) => datum.fips===(props.stateFips + props.countyFips)?countyColor:stateColor,\n                 fillOpacity: ({datum}) => datum.fips===(props.stateFips + props.countyFips)?1.0:0.7} }}\n        size={4}\n        x={props.x}\n        y={props.y}\n        labels={({ datum }) => `${datum[props.y].toFixed(1)}`}\n        labelComponent={<VictoryTooltip style = {{fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 20, y: 30 }} cornerRadius={4} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n\n      />\n      <VictoryAxis \n        tickCount={4}\n                          style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {fontWeight: 300,stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n        tickFormat={(y) => (props.rescaleX?(Math.round(y/1000)+'k'):(Math.round(y*100)/100))} />\n\n      <VictoryAxis dependentAxis label={props.varMap[props.y]?props.varMap[props.y].name:props.y} \n                          style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, axisLabel: {padding: 60, fontFamily: 'lato', fontSize: \"19px\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {fontWeight: 300,stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n        tickCount={5}\n        tickFormat={(y) => (Math.round(y*100)/100)} />\n    </VictoryChart>);\n\n}\n\nfunction BarChart(props) {\n  const colors = {\"USA\": nationColor, \n                  stateName: stateColor, \n                  countyName: countyColor};\n  if (props.stateFips !== \"_nation\") {\n\n  return (\n    <VictoryChart\n      theme={VictoryTheme.material}\n      width={props.width || 460}\n      height={140}       \n      domainPadding={10}\n      scale={{y: props.ylog?'log':'linear'}}\n      minDomain={{y: props.ylog?1:0}}\n      padding={{left: 165, right: 50, top: 40, bottom: 50}}\n      containerComponent={<VictoryContainer responsive={false}/>}>\n      <VictoryLabel text={props.title} x={(props.width || 460)/2} y={30} textAnchor=\"middle\" style={{fontSize: \"19px\", fontFamily: 'lato'}}/>\n      <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"14px\", fontFamily: 'lato'}}} />\n      <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"14px\", fontFamily: 'lato'}}} />\n      <VictoryBar\n        horizontal\n        barRatio={0.8}\n        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(1))}\n        data={[{key: 'USA', 'value': props.data['_nation'][props.var] || 0},\n              {key: props.stateName, 'value': props.data[props.stateFips][props.var] > 0? props.data[props.stateFips][props.var] : 0},\n              {key: props.countyName, 'value': props.data[props.stateFips+props.countyFips][props.var] > 0 ? props.data[props.stateFips+props.countyFips][props.var] : 0}]}\n        labelComponent={<VictoryLabel dx={5} style={{fontFamily: 'lato', fill: \"#000000\", fontSize: \"19px\"}}/>}\n        style={{\n          data: {\n            fill: ({ datum }) => datum.key === props.countyName?countyColor:datum.key === props.stateName?stateColor:nationColor\n          }\n        }}\n        x=\"key\"\n        y=\"value\"\n      />\n    </VictoryChart>);\n  }\n\n\n\n\n}\n\nexport default function CountyReport() {\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();  \n\n  let { stateFips, countyFips } = useParams();\n  const [config, setConfig] = useState();\n  const [stateName, setStateName] = useState('');\n  const [countyName, setCountyName] = useState('');\n  const history = useHistory();\n\n  const [date, setDate] = useState();\n  // const [countyPosDate, setCountyPosDate] = useState();\n  const [data, setData] = useState();\n  const [dataTS, setDataTS] = useState();\n  const [tooltipContent, setTooltipContent] = useState('');\n  // const [countyMetric, setCountyMetric] = useState({cases: 'N/A', deaths: 'N/A', \n  //                                                 caseRate: \"N/A\", mortality: \"N/A\", \n  //                                                 caseRateMean: \"N/A\", mortalityMean: \"N/A\",\n  //                                                 caserate7dayfig: \"N/A\", covidmortality7dayfig: \"N/A\",\n  //                                                 cfr:\"N/A\", t: 'n/a'});\n  const [countyMetric, setCountyMetric] = useState();\n\n  // const [stateMetric, setStateMetric] = useState({cases: 'N/A', deaths: 'N/A', \n  //                                                 caseRate: \"N/A\", mortality: \"N/A\", \n  //                                                 caseRateMean: \"N/A\", mortalityMean: \"N/A\",\n  //                                                 caserate7dayfig: \"N/A\", covidmortality7dayfig: \"N/A\",\n  //                                                 cfr:\"N/A\", t: 'n/a'});\n\n  const [stateMetric, setStateMetric] = useState();                                                \n  const [varMap, setVarMap] = useState({});\n  const [countyOption, setCountyOption] = useState();\n\n\n  const [countyCasesOutcome, setCountyCasesOutcome] = useState();\n  const [countyDeathsOutcome, setCountyDeathsOutcome] = useState();\n\n  const [stateCasesOutcome, setStateCasesOutcome] = useState();\n  const [stateDeathsOutcome, setStateDeathsOutcome] = useState();\n\n  const [nationCasesOutcome, setNationCasesOutcome] = useState();\n  const [nationDeathsOutcome, setNationDeathsOutcome] = useState();\n\n\n\n  // useEffect(()=>{\n\n    // const configMatched = configs.find(s => s.fips === stateFips);\n    // if(!configMatched || !fips2county[stateFips+countyFips]){\n    //   history.push('/');\n    // }else{\n    //   setConfig(configMatched);\n    //   setStateName(configMatched.name);\n    //   setCountyName(fips2county[stateFips+countyFips]);\n\n    //   fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n    //     .then(x => setVarMap(x));\n\n      // local\n\n      // fetch('/data/data.json').then(res => res.json())\n      //   .then(x => setData(x));\n      \n      // fetch('/data/timeseries'+stateFips+'.json').then(res => res.json())\n      //   .then(x => {\n      //   let t = 0;\n      //   let countyCases = 0;\n      //   let stateCases = 0;\n      //   let nationCases = 0;\n\n      //   let countyDeaths = 0;\n      //   let stateDeaths = 0;\n      //   let nationDeaths = 0;\n      //   _.each(x, (v, k)=>{\n      //       if (k === stateFips + countyFips && v.length > 0 ){\n      //         countyCases = v[v.length-1].caserate7dayfig;\n      //         countyDeaths = v[v.length-1].covidmortality7dayfig;\n      //       }else if(k.length===2 && v.length > 0 && v[v.length-1].t > t){\n      //         stateCases = v[v.length-1].caserate7dayfig;\n      //         stateDeaths = v[v.length-1].covidmortality7dayfig;\n      //       }else if(k === \"_nation\" && v.length > 0 && v[v.length-1].t > t){\n      //         nationCases = v[v.length-1].caserate7dayfig;\n      //         nationDeaths = v[v.length-1].covidmortality7dayfig;\n      //       }\n\n      //     });\n\n      //     setCountyCasesOutcome(countyCases.toFixed(0));\n      //     setStateCasesOutcome(stateCases.toFixed(0));\n      //     setNationCasesOutcome(nationCases.toFixed(0));\n\n      //     setCountyDeathsOutcome(countyDeaths.toFixed(1));\n      //     setStateDeathsOutcome(stateDeaths.toFixed(1));\n      //     setNationDeathsOutcome(nationDeaths.toFixed(1));\n\n      //     setDataTS(x);\n      //   }\n      // );\n    // }\n  // }, []);\n\n  // useEffect(() => {\n  //   fetch('/data/date.json').then(res => res.json())\n  //     .then(x => setDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n\n\n  // });\n\n  // mongo\n  useEffect(()=>{\n    const configMatched = configs.find(s => s.fips === stateFips);\n    if(!configMatched || !fips2county[stateFips+countyFips]){\n      history.push('/');\n    }else{\n      setConfig(configMatched);\n      setStateName(configMatched.name);\n      setCountyName(fips2county[stateFips+countyFips]);\n      fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n        .then(x => setVarMap(x));\n      fetch('/data/rawdata/f2c.json').then(res => res.json())\n        .then(x => {\n          setCountyOption(_.filter(_.map(x, d=> {\n            return {key: d.id, value: d.value, text: d.text, group: d.state};\n          }), d => (d.group === stateFips && d.text !== \"Augusta-Richmond County consolidated government\" && d.text !== \"Wrangell city and borough\" && d.text !== \"Zavalla city\")));\n        });\n    \n      if (isLoggedIn === true){\n        let newDict = {};\n        let caseRate = 0;\n        let mortality = 0;\n        let percentChangeCase = 0;\n        let percentChangeMortality = 0;\n        let hospD = 0;\n        let totCases = 0;\n        let percentChangeHospDaily = 0;\n        let percentPositive = 0;    \n\n        const fetchData = async() => { \n          //all static data\n          const staticQ = { $or: [ {tag: \"date\"}, {tag: \"nationalrawfull\"}] };\n          \n          const promStatic = await CHED_static.find(staticQ,{projection:{}}).toArray();\n\n          promStatic.forEach( i => {\n            if(i.tag === \"nationalrawfull\"){ //race data\n              setData(i.data);       \n            }else if(i.tag === \"date\"){\n              setDate(i.date.substring(5,7) + \"/\" + i.date.substring(8,10) + \"/\" + i.date.substring(0,4));\n            }\n          });\n          // setData(promStatic[0].data);\n\n          let seriesDict = {};\n          let covidmortality7dayfig = 0;\n          let t = 0;\n          let countyCases = 0;\n          let stateCases = 0;\n          let nationCases = 0;\n\n          let countyDeaths = 0;\n          let stateDeaths = 0;\n          let nationDeaths = 0;\n          let countyposDate = 0;\n          if( stateFips !== \"_nation\"){\n            //Timeseries data\n            const seriesQ = { $or: [ { state: \"_n\" } , { full_fips: stateFips } , {full_fips: \"\" + stateFips + countyFips}] }\n            const prom = await CHED_series.find(seriesQ, {projection: {}}).toArray();\n            _.map(prom, i=> {\n              seriesDict[i[Object.keys(i)[4]]] = i[Object.keys(i)[5]];\n              return seriesDict;\n            });\n            _.each(seriesDict, (v, k)=>{\n              if (k === stateFips + countyFips && v.length > 0 ){\n                countyCases = v[v.length-1].caserate7dayfig;\n                countyDeaths = v[v.length-1].covidmortality7dayfig;\n              }else if(k.length===2 && v.length > 0 && v[v.length-1].t > t){\n                stateCases = v[v.length-1].caserate7dayfig;\n                stateDeaths = v[v.length-1].covidmortality7dayfig;\n              }else if(k === \"_nation\" && v.length > 0 && v[v.length-1].t > t){\n                nationCases = v[v.length-1].caserate7dayfig;\n                nationDeaths = v[v.length-1].covidmortality7dayfig;\n              }\n              // countyposDate = v[v.length-1].t;\n\n            });\n            // setCountyPosDate(\"0\" + (new Date(countyposDate*1000).toLocaleDateString()).substring(0,2) + (new Date(countyposDate*1000).toLocaleDateString()).substring(2));\n\n            setCountyCasesOutcome(countyCases.toFixed(0));\n            setStateCasesOutcome(stateCases.toFixed(0));\n            setNationCasesOutcome(nationCases.toFixed(0));\n\n            setCountyDeathsOutcome(countyDeaths.toFixed(1));\n            setStateDeathsOutcome(stateDeaths.toFixed(1));\n            setNationDeathsOutcome(nationDeaths.toFixed(1));\n\n            setDataTS(seriesDict);\n          }\n          \n          \n        };\n        fetchData();\n    \n      } else {\n        handleAnonymousLogin();\n      }\n    }\n  },[isLoggedIn]);\n\n\n  if (data && varMap && dataTS) {\n    console.log(342 + ((dataTS[\"_nation\"].length - 344)/4).toFixed(0) - 1);\n  return (\n    <HEProvider> \n      <div>\n        <AppBar menu='countyReport'/>\n        <Container style={{marginTop: '8em', minWidth: '1260px', paddingRight: 0}}>\n          {config &&\n          <div>\n          <Breadcrumb style={{fontSize: \"19px\", paddingTop: \"19px\"}}>\n            <Breadcrumb.Section style ={{color: \"#397AB9\"}} link onClick={() => history.push('/')}>United States</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"19px\"}}/>\n            <Breadcrumb.Section style ={{color: \"#397AB9\"}} link onClick={() => history.push('/'+stateFips)}>{stateName}</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"19px\"}}/>\n            <Breadcrumb.Section active>{countyName}</Breadcrumb.Section>\n          </Breadcrumb>\n          <div style={{fontWeight: 300, fontSize: \"24pt\", paddingTop: 30, paddingBottom: \"19px\"}}>\n            <Dropdown\n                  style={{background: '#fff', \n                          fontSize: \"19px\",\n                          fontWeight: 400, \n                          theme: '#000000',\n                          width: '450px',\n                          left: '0px',\n                          text: \"Select\",\n                          borderTop: '0.5px solid #bdbfc1',\n                          borderLeft: '0.5px solid #bdbfc1',\n                          borderRight: '0.5px solid #bdbfc1', \n                          borderBottom: '0.5px solid #bdbfc1',\n                          borderRadius: 0,\n                          minHeight: '1.0em',\n                          paddingBottom: '0.5em'}}\n                  text= \"Select County/Census Area/Borough\"\n                  search\n                  selection\n                  pointing = 'top'\n                  options={countyOption}\n                  onChange={(e, { value }) => {\n                    if (value !== \"Select County/Census Area/Borough\") {\n                      window.location.href = \"/\"+stateFips + \"/\" + value+\"\";\n                    }\n                    \n                  }}\n                  \n              />\n            <Header.Content style = {{paddingTop: 45}}>\n              <b>{countyName}, {stateName}</b>\n            </Header.Content>\n          </div>\n\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingBottom: 20}}> SUMMARY OF COVID-19 IN {countyName}, {stateName} </Divider>\n              <div>\n                <center style={{fontSize: \"19px\", fontWeight: 400, textAlign: \"center\"}}> COVID-19 Cases in {countyName} </center >\n              </div>\n          <Grid style={{paddingTop: '2em', width: \"1260px\", paddingBottom: \"2em\"}}>\n            <Grid.Row style={{paddingLeft:20}}>\n\n              <Table celled fixed singleLine>\n                <Table.Header>\n\n                  <tr textalign = \"center\" colSpan = \"5\" style = {{backgroundImage : 'url(/Emory_COVID_header_LightBlue.jpg)'}}>\n                      <td colSpan='1' style={{width:220}}> </td>\n                      <td colSpan='1' style={{width:200, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> TOTAL TO DATE</td>\n                      <td colSpan='1' style={{width:200, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> TOTAL TO DATE PER 100K</td>\n                      <td colSpan='1' style={{width:200, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> DAILY AVERAGE</td>\n                      <td colSpan='1' style={{width:200, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> DAILY AVERAGE PER 100K</td>\n                  </tr>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateFips == \"02\"? countyName : countyName.match(/[^\\s]+/)} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].casesfig=== \"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].casesfig < 0?'0':data[\"\" + stateFips + countyFips].casesfig.toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].caseratefig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].caseratefig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips + countyFips].caseratefig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].mean7daycases===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].mean7daycases < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips + countyFips].mean7daycases).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].caserate7dayfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].caserate7dayfig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips + countyFips].caserate7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n\n                  </Table.Row>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateName} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].casesfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].casesfig < 0?'0':data[\"\" + stateFips].casesfig.toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].caseratefig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].caseratefig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips].caseratefig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].mean7daycases===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].mean7daycases < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips].mean7daycases).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].caserate7dayfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].caserate7dayfig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips].caserate7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n\n                  </Table.Row>\n                </Table.Header>\n              </Table>\n            </Grid.Row>\n          </Grid>\n          <div>\n            <center style={{fontSize: \"19px\", fontWeight: 400, textAlign: \"center\"}}> <br/>COVID-19 Deaths in {countyName} </center >\n          </div>  \n          <Grid style={{paddingTop: '2em', width: \"1260px\"}}>\n            <Grid.Row style={{paddingLeft:20}}>\n              <Table celled fixed singleLine>\n                <Table.Header>\n                  <tr textalign = 'center' colSpan = \"5\" style = {{backgroundImage : 'url(/Emory_COVID_header_LightBlue.jpg)'}}>\n                    <td colSpan='1' style={{width:220}}> </td>\n                    <td colSpan='1' style={{width:186, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> TOTAL TO DATE</td>\n                    <td colSpan='1' style={{width:186, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> TOTAL TO DATE PER 100K</td>\n                    <td colSpan='1' style={{width:186, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> DAILY AVERAGE</td>\n                    <td colSpan='1' style={{width:186, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> DAILY AVERAGE PER 100K</td>\n                    <td colSpan='1' style={{width:186, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> CASE FATALITY RATIO</td>\n                  </tr>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateFips == \"02\"? countyName :countyName.match(/[^\\s]+/)} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].deathsfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].deathsfig < 0?'0':data[\"\" + stateFips + countyFips].deathsfig.toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].covidmortalityfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].covidmortalityfig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips + countyFips].covidmortalityfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].mean7daydeaths===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].mean7daydeaths < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips + countyFips].mean7daydeaths).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].covidmortality7dayfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].covidmortality7dayfig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips + countyFips].covidmortality7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell> \n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips + countyFips].cfr===\"N/A\"? \"Loading...\" : data[\"\" + stateFips + countyFips].cfr < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips + countyFips].cfr).toFixed(2)).toLocaleString() + \"%\"} </Table.HeaderCell>\n\n                  </Table.Row>\n                  <Table.Row textAlign = 'center'>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {stateName} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].deathsfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].deathsfig < 0?'0':data[\"\" + stateFips].deathsfig.toLocaleString()} </Table.HeaderCell> \n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].covidmortalityfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].covidmortalityfig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips].covidmortalityfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].mean7daydeaths===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].mean7daydeaths < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips].mean7daydeaths).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].covidmortality7dayfig===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].covidmortality7dayfig < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips].covidmortality7dayfig).toFixed(0)).toLocaleString()} </Table.HeaderCell>\n                    <Table.HeaderCell style={{fontSize: '24px'}}> {data[\"\" + stateFips].cfr===\"N/A\"? \"Loading...\" : data[\"\" + stateFips].cfr < 0?'0':numberWithCommas(parseFloat(data[\"\" + stateFips].cfr).toFixed(2)).toLocaleString() + \"%\"} </Table.HeaderCell>\n\n                  </Table.Row>\n                </Table.Header>\n              </Table>\n            </Grid.Row>\n\n            <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n              <text style={{fontWeight: 300, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n              <b>Data as of: </b>{date}\n              </text>\n\n            </Grid.Row>\n          </Grid>\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 51, paddingBottom: 40}}>COVID-19 Outcomes </Divider>\n          <Grid centered>\n            <Grid.Row columns={2}>\n              <Grid.Column>\n                <div style = {{paddingBottom: 20}}>\n                  <Header.Content x={0} y={20} style={{fontSize: 20, paddingBottom: 10, fontWeight: 400}}>Average Daily COVID-19 Cases / 100K </Header.Content>\n                </div>\n                      <svg width = \"370\" height = \"40\">\n                          <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                          <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                          <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                          <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                          <rect x = {stateName.length > 10? 230: 190} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                          <text x = {stateName.length > 10? 245: 205} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text>\n                      </svg>\n                <div style = {{height: 300}}>\n                  { dataTS && <VictoryChart theme={VictoryTheme.material}\n                    width={550}\n                    height={300}       \n                    padding={{left: 50, right: 60, top: 10, bottom: 40}}\n                    containerComponent={<VictoryVoronoiContainer/>}\n                    \n                    >\n\n\n                    <VictoryAxis\n                      style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n\n                      tickFormat={(t)=> monthNames[new Date(t*1000).getMonth()] + \" \" +  new Date(t*1000).getDate()}\n                      tickValues={[\n                        // dataTS[\"_nation\"][30].t,\n                        // dataTS[\"_nation\"][91].t,\n                        // dataTS[\"_nation\"][153].t,\n                        // dataTS[\"_nation\"][214].t,\n                        // dataTS[\"_nation\"][275].t,\n\n                        \n\n                        dataTS[\"_nation\"][0].t,\n                        dataTS[\"_nation\"][61].t,\n                        dataTS[\"_nation\"][122].t,\n                        dataTS[\"_nation\"][183].t,\n                        dataTS[\"_nation\"][244].t,\n                        dataTS[\"_nation\"][306].t,\n                        dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]}/>\n                    <VictoryAxis dependentAxis tickCount={5}\n                      style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n\n                      tickFormat={(y) => (y<1000?y:(y/1000+'k'))}\n                      />\n                    <VictoryGroup \n                      colorScale={[nationColor, stateColor, countyColor]}\n                    >\n                      <VictoryLine data={dataTS[\"_nation\"]}\n                        x='t' y='caserate7dayfig'\n                        labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                        labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                        style={{\n                            data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                        }}\n                        />\n                      <VictoryLine data={dataTS[stateFips]}\n                        x='t' y='caserate7dayfig'\n                        labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                        labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                        style={{\n                            data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                        }}\n                        />\n                      <VictoryLine data={dataTS[stateFips+countyFips]?dataTS[stateFips+countyFips]:dataTS[\"99999\"]}\n                        x='t' y='caserate7dayfig'\n                        labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.caserate7dayfig.toFixed(1)}`}\n                        labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                        style={{\n                            data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                        }}\n\n                        />\n                    </VictoryGroup>\n                  </VictoryChart>}\n                </div>\n              </Grid.Column>\n              <Grid.Column >\n                <div style = {{paddingBottom: 20}}>\n                  <Header.Content x={0} y={20} style={{fontSize: 20, paddingBottom: 10, fontWeight: 400}}>Average Daily COVID-19 Deaths / 100K </Header.Content>\n                </div>\n                  <svg width = \"370\" height = \"40\">\n                      <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                      <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                      <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                      <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                      <rect x = {stateName.length > 10? 230: 190} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                      <text x = {stateName.length > 10? 245: 205} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text>\n                  </svg>\n                  <div style = {{height: 300}}>\n                    { dataTS && <VictoryChart theme={VictoryTheme.material}\n                      width={550}\n                      height={300}       \n                      padding={{left: 50, right: 60, top: 10, bottom: 40}}\n                      containerComponent={<VictoryVoronoiContainer/>}\n                      \n                      >\n\n                      <VictoryAxis\n                        style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n                        tickFormat={(t)=> monthNames[new Date(t*1000).getMonth()] + \" \" +  new Date(t*1000).getDate()}\n                        tickValues={[\n                          // dataTS[\"_nation\"][30].t,\n                          // dataTS[\"_nation\"][91].t,\n                          // dataTS[\"_nation\"][153].t,\n                          // dataTS[\"_nation\"][214].t,\n                          // dataTS[\"_nation\"][275].t,\n                          dataTS[\"_nation\"][0].t,\n                          dataTS[\"_nation\"][61].t,\n                          dataTS[\"_nation\"][122].t,\n                          dataTS[\"_nation\"][183].t,\n                          dataTS[\"_nation\"][244].t,\n                          dataTS[\"_nation\"][306 ].t,\n\n                          dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]}/>\n                      <VictoryAxis dependentAxis tickCount={5}\n                        style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n                        tickFormat={(y) => (y<1000?y:(y/1000+'k'))}\n                        />\n                      <VictoryGroup \n                        colorScale={[nationColor, stateColor, countyColor]}\n                      >\n                        <VictoryLine data={dataTS[\"_nation\"]}\n                          x='t' y='covidmortality7dayfig'\n                          labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                          labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                          style={{\n                              data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                          }}\n                          />\n                        <VictoryLine data={dataTS[stateFips]}\n                          x='t' y='covidmortality7dayfig'\n                          labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                          labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                          style={{\n                              data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                          }}\n                          />\n                        <VictoryLine data={dataTS[stateFips+countyFips]?dataTS[stateFips+countyFips]:dataTS[\"99999\"]}\n                          x='t' y='covidmortality7dayfig'\n                          labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.covidmortality7dayfig.toFixed(1)}`}\n                          labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                          style={{\n                              data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                          }}\n                          />\n                      </VictoryGroup>\n                    </VictoryChart>}\n                  </div>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row columns={2} style={{paddingBottom: 50}}>\n              <Grid.Column>\n                <Header as='h2' style={{fontWeight: 400, width: 540, paddingLeft: 55, paddingTop: 20}}>\n                  <Header.Content style={{fontSize: \"19px\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 540, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n                      As of <b>{date}</b>, the daily average of new COVID-19 cases<br/> \n                      in <b>{countyName}</b> numbered <b>{numberWithCommas(parseFloat(countyCasesOutcome))} case(s) per 100K residents</b>. In comparison, the daily average in {stateName} was <b>{numberWithCommas(parseFloat(stateCasesOutcome))}</b> case(s) per 100K and in the United States was <b>{numberWithCommas(parseFloat(nationCasesOutcome))}</b> case(s) per 100K.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              </Grid.Column>\n              <Grid.Column>\n                <Header as='h2' style={{fontWeight: 400, width: 550, paddingLeft: 55, paddingTop: 20}}>\n                  <Header.Content style={{fontSize: \"19px\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 570, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n                      As of <b>{date}</b>, the daily average of new COVID-19 deaths<br/>\n                      in <b>{countyName}</b> numbered <b>{numberWithCommas(parseFloat(countyDeathsOutcome))} death(s) per 100K residents</b>. In comparison, the daily average in {stateName} was <b>{numberWithCommas(parseFloat(stateDeathsOutcome))}</b> death(s) per 100K and in the United States was <b>{numberWithCommas(parseFloat(nationDeathsOutcome))}</b> death(s) per 100K.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n            <text style={{fontWeight: 300, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n            <b>Data as of: </b>{date}\n            </text>\n\n          </Grid.Row>\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 40, paddingBottom: 10}}>County COVID-19 Test Positivity</Divider>\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          <Grid>\n            <Grid.Row columns={2} style = {{paddingTop: 51}}>\n              <Grid.Column>\n                <div style = {{paddingBottom: 20}}>\n                  <Header.Content x={0} y={20} style={{fontSize: 20, paddingBottom: 10, fontWeight: 400}}> Percent Tested COVID-19 Positive </Header.Content>\n                </div>\n                      <svg width = \"370\" height = \"40\">\n                          <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                          <text x = {35} y = {20} style = {{ fontSize: \"12pt\"}}> USA</text>\n                          <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                          <text x = {102} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                          <rect x = {stateName.length > 10? 230: 190} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                          <text x = {stateName.length > 10? 245: 205} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text>\n\n                          {/* <rect x = {77} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                          <text x = {92} y = {20} style = {{ fontSize: \"12pt\"}}> {stateName} </text>\n                          <rect x = {stateName.length > 10? 220: 180} y = {12} width = \"12\" height = \"2\" style = {{fill: countyColor, strokeWidth:1, stroke: countyColor}}/>\n                          <text x = {stateName.length > 10? 235: 195} y = {20} style = {{ fontSize: \"12pt\"}}> {countyName}</text> */}\n                      </svg>\n                <div style = {{height: 240}}>\n                  { dataTS && <VictoryChart theme={VictoryTheme.material}\n                    minDomain={{ x: dataTS[\"_nation\"][342].t }}\n                    maxDomain={{ x: dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t}}\n                    width={550}\n                    height={200}       \n                    padding={{left: 50, right: 30, top: 10, bottom: 40}}\n                    containerComponent={<VictoryVoronoiContainer/>}\n                    \n                    >\n\n\n                    <VictoryAxis \n                      \n                      style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n\n                      tickFormat={(t)=> monthNames[new Date(t*1000).getMonth()] + \" \" +  new Date(t*1000).getDate()}\n                      tickValues={[\n                        \n                        dataTS[\"_nation\"][342].t,\n\n                        dataTS[\"_nation\"][Number(342) + Number(((dataTS[\"_nation\"].length - 344)/4).toFixed(0))].t,\n                        dataTS[\"_nation\"][Number(342) + Number(((dataTS[\"_nation\"].length - 344)/2).toFixed(0))].t,\n                        dataTS[\"_nation\"][Number(342) + Number(((dataTS[\"_nation\"].length - 344)*3/4).toFixed(0))].t,\n\n                        dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]}/>\n                    <VictoryAxis dependentAxis tickCount={5} \n                      style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\", fill: \"#000000\"}, tickLabels: {stroke: \"#000000\", fill: \"#000000\", fontSize: \"19px\", fontFamily: 'lato'}}} \n\n                      tickFormat={(y) => (y<1000?y:(y/1000+'k'))}\n                      />\n                    <VictoryGroup \n                      colorScale={[nationColor, stateColor, countyColor]}\n                    >\n                      <VictoryLine data={dataTS[\"_nation\"]}\n                        x='t' y='percentPositive'\n                        labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.percentPositive.toFixed(0)}%`}\n                        labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                        style={{\n                            data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                        }}\n                        />\n                      <VictoryLine data={dataTS[stateFips]}\n                        minDomain={{ x: dataTS[\"_nation\"][342].t }}\n                        maxDomain={{ x: dataTS[\"_nation\"][dataTS[\"_nation\"].length-2].t}}\n                        x='t' y='percentPositive'\n                        labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.percentPositive.toFixed(0)}%`}\n                        labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                        style={{\n                            data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                        }}\n                        />\n                      <VictoryLine data={dataTS[stateFips+countyFips]?dataTS[stateFips+countyFips]:dataTS[\"99999\"]}\n                        minDomain={{ x: dataTS[\"_nation\"][342].t }}\n                        maxDomain={{ x: dataTS[\"_nation\"][dataTS[\"_nation\"].length-2].t}}\n                        x='t' y='percentPositive'\n                        labels={({ datum }) => `${monthNames[new Date(datum.t*1000).getMonth()] + \" \" +  new Date(datum.t*1000).getDate()}: ${datum.percentPositive.toFixed(0)}%`}\n                        labelComponent={<VictoryTooltip style={{fontWeight: 400, fontFamily: 'lato', fontSize: \"19px\"}} centerOffset={{ x: 50, y: 30 }} flyoutStyle={{ fillOpacity: 0, stroke: \"#FFFFFF\", strokeWidth: 0 }}/>}\n                        style={{\n                            data: { strokeWidth: ({ active }) => active ? 3 : 2},\n                        }}\n\n                        />\n                    </VictoryGroup>\n                  </VictoryChart>}\n                </div>\n              </Grid.Column>\n              <Grid.Column style = {{paddingLeft: 60}}>\n                <div style = {{paddingBottom: 20}}>\n                  <Header.Content x={0} y={20} style={{fontSize: 20, paddingBottom: 10, fontWeight: 400}}> COVID-19 Test Positivity</Header.Content>\n                </div>\n                <Table celled fixed style = {{width: 350}}>\n                          <Table.Header>\n\n                            <tr textalign = \"center\" colSpan = \"5\" style = {{backgroundImage : 'url(/Emory_COVID_header_LightBlue.jpg)'}}>\n                                <td colSpan='1' style={{width:100}}> </td>\n                                <td colSpan='1' style={{width:220, height: 70,fontSize: '19px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> <Popup\n                                  trigger={<p>Percent Tested Positive</p>\n                                  }\n                                  content={!dataTS ? \"\" : \"Percentage of total tests for COVID-19 that resulted in a positive result as of \" + \n                                  \"0\" + (new Date(dataTS[stateFips][dataTS[stateFips].length-2].t*1000).toLocaleDateString()).substring(0,2) + (new Date(dataTS[stateFips][dataTS[stateFips].length-2].t*1000).toLocaleDateString()).substring(2)\n                                  }\n                                  basic /> </td>\n                                <td colSpan='1' style={{width:220, height: 70, fontSize: '19px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> <Popup\n                                  trigger={<p>Number of positive tests per 100K </p>\n                                  }\n                                  content={!dataTS ? \"\" : \"Positive COVID-19 tests per 100K as of \" + \n                                  \"0\" + (new Date(dataTS[stateFips][dataTS[stateFips].length-2].t*1000).toLocaleDateString()).substring(0,2) + (new Date(dataTS[stateFips][dataTS[stateFips].length-2].t*1000).toLocaleDateString()).substring(2)\n                                  }\n                                  basic /></td>\n                            </tr>\n\n                            \n                            <Table.Row textAlign = 'center' style = {{height: 70}}>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {\"County\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {dataTS ? (dataTS[stateFips + countyFips][dataTS[stateFips + countyFips].length - 2].percentPositive).toFixed(0)  + \"%\" : \"Loading...\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {dataTS ? (dataTS[stateFips + countyFips][dataTS[stateFips + countyFips].length - 2].positivePer100K).toFixed(0) : \"Loading...\"} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center' style = {{height: 70}}>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {stateName} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {dataTS ? (dataTS[stateFips][dataTS[stateFips].length - 2].percentPositive).toFixed(0) + \"%\" : \"Loading...\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {dataTS ? (dataTS[stateFips][dataTS[stateFips].length - 2].positivePer100K).toFixed(0) : \"Loading...\"} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center' style = {{height: 70}}>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> The U.S. </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {dataTS ? (dataTS[\"_nation\"][dataTS[\"_nation\"].length - 2].percentPositive).toFixed(0) + \"%\" : \"Loading...\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {dataTS ? (dataTS[\"_nation\"][dataTS[\"_nation\"].length - 2].positivePer100K).toFixed(0) : \"Loading...\"} </Table.HeaderCell>\n\n                            </Table.Row>\n                            \n                          </Table.Header>\n                        </Table>\n\n              </Grid.Column>\n            </Grid.Row>\n            {/* <Grid.Row columns={2} style={{paddingBottom: 50}}>\n              <Grid.Column>\n                <Header as='h2' style={{fontWeight: 400, width: 540, paddingLeft: 55, paddingTop: 20}}>\n                  <Header.Content style={{fontSize: \"19px\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 540, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n                      As of <b>{date}</b>, the daily average of new COVID-19 cases<br/> \n                      in <b>{countyName}</b> numbered <b>{numberWithCommas(parseFloat(countyCasesOutcome))} case(s) per 100K residents</b>. In comparison, the daily average in {stateName} was <b>{numberWithCommas(parseFloat(stateCasesOutcome))}</b> case(s) per 100K and in the United States was <b>{numberWithCommas(parseFloat(nationCasesOutcome))}</b> case(s) per 100K.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              </Grid.Column>\n              <Grid.Column>\n                <Header as='h2' style={{fontWeight: 400, width: 550, paddingLeft: 55, paddingTop: 20}}>\n                  <Header.Content style={{fontSize: \"19px\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 570, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n                      As of <b>{date}</b>, the daily average of new COVID-19 deaths<br/>\n                      in <b>{countyName}</b> numbered <b>{numberWithCommas(parseFloat(countyDeathsOutcome))} death(s) per 100K residents</b>. In comparison, the daily average in {stateName} was <b>{numberWithCommas(parseFloat(stateDeathsOutcome))}</b> death(s) per 100K and in the United States was <b>{numberWithCommas(parseFloat(nationDeathsOutcome))}</b> death(s) per 100K.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              </Grid.Column>\n            </Grid.Row> */}\n            <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n              <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n              <i>Data source</i>: U.S. Department of Health & Human Services, <a style ={{color: \"#397AB9\"}} href = \"https://beta.healthdata.gov/Health/COVID-19-Community-Profile-Report/gqxm-d9w9\" target = \"_blank\" rel=\"noopener noreferrer\"> Community Profile Report</a>. <br/>\n              <b>Data as of: </b>\n                {!dataTS? \"\" : (new Date(dataTS[stateFips][dataTS[stateFips].length-1].t*1000).getMonth() + 1).toString().padStart(2, \"0\") + \"/\" + (new Date(dataTS[stateFips][dataTS[stateFips].length-1].t*1000).getDate()).toString().padStart(2, \"0\") + \"/\" +  (new Date(dataTS[stateFips][dataTS[stateFips].length-1].t*1000).getFullYear()).toString()}\n              </text>\n              \n\n            </Grid.Row>\n            {false && <Accordion defaultActiveIndex={1} panels={[\n              {\n                  key: 'acquire-dog',\n                  title: {\n                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                      icon: 'dropdown',\n                  },\n                  content: {\n                      content: (\n                        <div>\n                          <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n                                  <text style={{fontWeight: 300, fontSize: \"14pt\", lineHeight: \"16pt\"}}>\n                                    {/* County positivity Data as of {date}. */}\n                                    {/* <br/> */}\n                                    <i>Data source</i>: U.S. Department of Health & Human Services, <a style ={{color: \"#397AB9\"}} href = \"https://beta.healthdata.gov/Health/COVID-19-Community-Profile-Report/gqxm-d9w9\" target = \"_blank\" rel=\"noopener noreferrer\"> Community Profile Report </a> <br/>\n                                    \n                                  </text>\n                          </Grid.Row>\n                                  \n                        </div>\n                      ),\n                    },\n                }\n            ]\n\n            } />}\n          </Grid>\n\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 40, paddingBottom: 10}}>County Characteristics</Divider>\n\n          <center style = {{marginLeft: 250, paddingBottom: 20, width: 750}}>\n            <Header as='h2' style={{fontWeight: 400, width: 750}}>\n                  <Header.Content style={{fontSize: \"19px\"}}>\n                    <Header.Subheader style={{color: '#000000', fontWeight: 300, width: 750, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n                      Social, economic, health and environmental factors impact an individual’s risk of infection and COVID-19 severity. \n                      Counties with large groups of vulnerable people may be disproportionately impacted by COVID-19. The table below shows {countyName}, {stateName}, \n                      and national statistics regarding the proportion of individuals falling into various high risk categories.\n                      <br/> <br/>\n                      <b>Note:</b> These are not characteristics of COVID-19.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n\n          </center>\n          <Grid>\n            <Grid.Row columns={3}>                    \n              <Grid.Column>\n                <BarChart \n                  title=\"% African American\" \n                  var=\"black\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"Community Vulnerability Index\" \n                  var=\"ccvi\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} /> \n                <BarChart \n                  title=\"% Over 65 y/o\" \n                  var=\"age65over\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                  \n              </Grid.Column>\n              <Grid.Column>\n                <BarChart \n                  title=\"% Hispanic or Latino\" \n                  var=\"hispanic\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% in Poverty\" \n                  var=\"poverty\" \n                  width={400}                 \n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% in Group Quarters\" \n                  var=\"groupquater\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                \n              </Grid.Column>\n\n\n              <Grid.Column>\n                <BarChart \n                  title=\"Any Condition\" \n                  var=\"anycondition\"\n                  width={400} \n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% Uninsured\" \n                  var=\"PCTUI\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                <BarChart \n                  title=\"% Male\" \n                  var=\"male\" \n                  width={400}\n                  stateFips={stateFips}\n                  countyFips={countyFips}\n                  countyName={countyName}\n                  stateName={stateName}\n                  data={data} />\n                \n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n              <text style={{fontWeight: 300, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n              *The state and national level measure of any chronic condition prevalence is computed with the average of all the counties and states.\n              <br/>\n              *The national level measures of COVID-19 Community Vulnerability Index and Residential Segregation Index are computed with the average of all the states.\n              <br/>\n              <b>Data as of: </b>{date}\n              </text>\n\n            </Grid.Row>\n          </Grid>\n\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '22pt', paddingTop: 54, paddingBottom: 25}}> County Characteristics and Outcomes</Divider>\n          <Grid columns={3}>\n            <Grid.Row>\n              <Grid.Column>\n                <ScatterChart x=\"casesfig\" y=\"deathsfig\" \n                  showLegend={true}\n                  varMap={varMap}\n                  xlog={true} \n                  ylog={true} \n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"casesfig\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"caseratefig\" y=\"covidmortalityfig\" \n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"caseratefig\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME1\" y=\"covidmortalityfig\"\n                 varMap={varMap} \n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"RPL_THEME1\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME2\" y=\"covidmortalityfig\"\n                  showLegend={true}\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"RPL_THEME2\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME3\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"RPL_THEME3\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"RPL_THEME4\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"RPL_THEME4\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <ScatterChart x=\"popden\" y=\"covidmortalityfig\"\n                  showLegend={true}\n                  xlog={true}\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"popden\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"hhincome\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  xlog={true}\n                  rescaleX={true}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"hhincome\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n              <Grid.Column>\n                <ScatterChart x=\"black\" y=\"covidmortalityfig\"\n                  varMap={varMap}\n                  stateName={stateName}\n                  countyName={countyName}\n                  countyFips={countyFips} \n                  stateFips={stateFips}\n                  data={data} />\n                  <Header.Content style={{marginLeft:\"40%\", marginTop: -35}}>\n                    <Header.Content style={{fontWeight: 300, left: 50, paddingBottom:50, fontSize: \"10pt\", lineHeight: \"19px\"}}>\n                      <b>{varMap[\"black\"].name}</b>\n                    </Header.Content>\n                  </Header.Content>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n              <text style={{fontWeight: 300, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n              <b>Data as of: </b>{date}\n              </text>\n\n            </Grid.Row>\n\n          </Grid>\n          <Divider horizontal style={{fontWeight: 400, color: 'black', fontSize: '20pt', paddingTop: 54, paddingBottom: 20}}>Data Table</Divider>\n          <Table striped compact basic='very' style={{fontSize: \"19px\"}}>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>County Population Characteristics</Table.HeaderCell>\n                <Table.HeaderCell>{countyName}</Table.HeaderCell>\n                <Table.HeaderCell>{stateName}</Table.HeaderCell>\n                <Table.HeaderCell>United States</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                  {_.map(data[stateFips + countyFips],\n                    (v, k) => {\n                      var rmList = [\"casesfig\", \"deathsfig\", \"dailycases\", \"dailydeaths\", \"mean7daycases\", \"mean7daydeaths\", \"covidmortalityfig\"\n                        , \"caseratefig\", \"covidmortality7dayfig\", \"caserate7dayfig\", \"fips\", \"region\", \"urbanrural\"];\n                      if (!rmList.includes(k)) {\n                        return (\n                          <Table.Row key={k}>\n                            <Table.Cell>{varMap[k] ? varMap[k].name: k}</Table.Cell>\n                            <Table.Cell>{isNaN(v) ? v : varMap[k].name === \"Socioeconomic Vulnerability\" || \n                                                        varMap[k].name === \"Household Composition Vulnerability\" || \n                                                        varMap[k].name === \"Minority/Language Vulnerability\" || \n                                                        varMap[k].name === \"Housing/Transportaion Vulnerability\" ||\n                                                        varMap[k].name === \"% Native American\" || \n                                                        varMap[k].name === \"% in Group Quarters\" ||\n                                                        varMap[k].name === \"COVID-19 Community Vulnerability Index\"? \n                                                        numberWithCommas(parseFloat(v).toFixed(1)): k === \"urbanrural_text\" ? \n                                                        v : numberWithCommas(parseFloat(v).toFixed(0))}</Table.Cell>\n                            <Table.Cell>{isNaN(data[stateFips][k]) ? data[stateFips][k] : (numberWithCommas(parseFloat(data[stateFips][k]).toFixed(0)) === \"NaN\" || k === \"region_text\") ? \"\" : \n                                                        varMap[k].name === \"% Native American\" || varMap[k].name === \"% in Group Quarters\" ? numberWithCommas(parseFloat(data[stateFips][k]).toFixed(1)) : numberWithCommas(parseFloat(data[stateFips][k]).toFixed(0))}</Table.Cell>\n                            <Table.Cell>{isNaN(data['_nation'][k]) ? data[stateFips][k] : numberWithCommas(parseFloat(data['_nation'][k]).toFixed(0)) === \"NaN\" ? \"\" : \n                                                        varMap[k].name === \"% Native American\" || varMap[k].name === \"% in Group Quarters\" ? numberWithCommas(parseFloat(data['_nation'][k]).toFixed(1)) : numberWithCommas(parseFloat(data['_nation'][k]).toFixed(0))}</Table.Cell>\n                          </Table.Row>\n                        )\n                      }\n                    })}\n                </Table.Body>\n            </Table>\n            <a style ={{color: \"#397AB9\", fontSize: \"19px\", marginLeft: 12}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> Data Sources and Definitions</a>\n\n            <Divider hidden/>\n            <Grid.Row style={{paddingTop: 0, paddingBottom: 25, paddingLeft: 15}}>\n              <text style={{fontWeight: 300, fontSize: \"19px\", lineHeight: \"16pt\"}}>\n              <b>Data as of: </b>{date}\n              </text>\n\n            </Grid.Row>\n            </div>\n          }\n          <Notes />\n        </Container>\n        <ReactTooltip>{tooltipContent}</ReactTooltip>\n      </div>\n    </HEProvider>\n    );\n  } else{\n    return <Loader active inline='centered' />\n  }\n\n\n\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Dropdown, Header, Grid, Loader } from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport stateOptions from \"./stateOptions.json\";\nimport configs from \"./state_config.json\";\nimport _, { split } from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport { var_option_mapping, CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {HEProvider, useHE} from './HEProvider';\nimport {useStitchAuth} from \"./StitchAuth\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\"\n\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\nconst colorPalette2 = [\n        \"#e1dce2\",\n        \"#71C7EC\",\n        \"#1EBBD7\",\n        \"#0B92BF\", \n        \"#0270A1\", \n        \"#024174\",  \n      ];\n\nexport default function MapState() {\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();  \n  const [stateFips, setStateFips] = useState();\n  const [measureA, setMeasureA] = useState();\n  const [measureB, setMeasureB] = useState();  \n  const [colorScaleA, setColorScaleA] = useState();\n  const [colorScaleB, setColorScaleB] = useState();\n  const [config, setConfig] = useState();\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [data, setData] = useState();\n  const [oriData, setOriginalData] = useState();\n  const [varMap, setVarMap] = useState({});\n  const [measureOptionsA, setMeasureOptionsA] = useState([]);\n  const [measureOptionsB, setMeasureOptionsB] = useState([]);\n\n  const [legendSplitA, setLegendSplitA] = useState([]);\n  const [legendSplitB, setLegendSplitB] = useState([]);\n\n  const [legendMaxA, setLegendMaxA] = useState([]);\n  const [legendMaxB, setLegendMaxB] = useState([]);\n\n  const [legendMinA, setLegendMinA] = useState([]);\n  const [legendMinB, setLegendMinB] = useState([]);\n\n  const [name, setName] = useState([]);\n  const [stateName, setStateName] = useState('');\n\n\n\n  useEffect(()=>{\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMeasureOptionsA(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.name, text: d.name, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\") && (d.group === \"outcomes\")));\n        setMeasureOptionsB(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.name, text: d.name, group: d.group};\n        }), d => (d.text !== \"region\") \n                && (d.text !== \"Any Condition Prevalence2\") && (d.text !== \"Diabetes Prevalence\") && (d.text !== \"Heart Disease\") \n                && (d.text !== \"Chronic Obstructive Pulmonary Disease\") && (d.text !== \"Chronic Kidney Disease\")\n              && (d.text !== \"Urban-Rural Status Name\") && (d.text !== \"Region Status Code\") && (d.group !== \"outcomes\") && (d.group !== \"text\") && (d.group !== \"other\")));\n\n      });\n  }, []);\n\n  //local start\n  // useEffect(() => {\n  //   fetch('/data/data.json').then(res => res.json())\n  //     .then(x => setOriginalData(x));\n  // }, []);\n\n  //local end\n\n  //mongo start\n  useEffect(() =>{\n    if (isLoggedIn === true){\n      let newDict = {};\n\n      const fetchData = async() => {\n          const mainQ = {all: \"all\"};\n          const promStatic = await CHED_static.find(mainQ,{projection:{}}).toArray();\n          promStatic.forEach( i => {\n            if(i.tag === \"nationalrawfull\"){ //nationalraw\n              newDict = i.data;\n              setOriginalData(newDict);\n            }\n          });\n        };\n      fetchData();\n      } else {\n      handleAnonymousLogin();\n    }\n  }, [isLoggedIn]);\n  //mongo end\n\n  useEffect(()=>{\n    \n    const configMatched = configs.find(s => s.fips === stateFips);\n    if (!configMatched){\n      setStateName(\"Select State\");\n    }else{\n\n      setConfig(configMatched);\n\n      setStateName(configMatched.name);\n    }\n\n\n    if (varMap && stateFips !== \"_nation\"){\n      let coldata = {};\n      const dataFltrd = _.filter(_.map(oriData, (d, k)=>{d.fips=k; return d;}), (d)=> (\n              d.fips.length===5 &&\n              d.fips.substring(0,2)===stateFips));\n      _.each(dataFltrd, (d) => {\n        _.each(d, (v, k)=>{\n          if (varMap[k]){\n            if (!(varMap[k].name in coldata)){\n              coldata[varMap[k].name] = {};\n            }\n            if(v > 0){\n              coldata[varMap[k].name][d.fips] = v; \n            }\n          }\n        });\n      });\n      setData(coldata);\n      setMeasureA(null);\n      setMeasureB(null);\n      setColorScaleA(null);\n      setColorScaleB(null);\n    } \n    else if (varMap && stateFips === \"_nation\"){\n      let coldata = {};\n      const dataFltrd = _.filter(_.map(oriData, (d, k)=>{d.fips=k; return d;}), (d)=> (\n        d.fips.length===5 ));\n      _.each(dataFltrd, (d) => {\n        _.each(d, (v, k)=>{\n          if (varMap[k]){\n            if (!(varMap[k].name in coldata)){\n              coldata[varMap[k].name] = {};\n            }\n            if(v > 0){\n              coldata[varMap[k].name][d.fips] = v; \n            }\n            \n          }\n        });\n      });\n      setData(coldata);\n      setMeasureA(null);\n      setMeasureB(null);\n      setColorScaleA(null);\n      setColorScaleB(null);\n    }\n  }, [stateFips]);\n\n  useEffect(() => {\n\n    if (measureA && stateFips){\n      const cs = scaleQuantile()\n        .domain(_.map(data[measureA], d=>d))\n        .range(colorPalette);\n      let scaleMapA = {}\n      _.each(data[measureA], d=>{\n        scaleMapA[d] = cs(d)});\n      setColorScaleA(scaleMapA);\n      \n      var splitA = scaleQuantile()\n        .domain(_.map(data[measureA], d=>d))\n        .range(colorPalette);\n\n      setLegendSplitA(splitA.quantiles());\n\n      var maxA = 1\n      var minA = 100\n      _.each(data[measureA],d=>{\n        if (d > maxA) {\n          maxA = d\n        }else if ( d < minA && d > 0){\n          minA = d\n        }\n      });\n\n      if (maxA > 999) {\n        setLegendMaxA((maxA/1000).toFixed(0) + \"K\");\n      }else{\n        setLegendMaxA(maxA.toFixed(0));\n      }\n      setLegendMinA(minA.toFixed(0));\n\n      setName(measureA);\n    } \n  }, [measureA]);\n\n  useEffect(() => {\n    if (measureB && stateFips){\n      const cs = scaleQuantile()\n        .domain(_.map(data[measureB], d=>d))\n        .range(colorPalette2);\n      let scaleMapB = {}\n      _.each(data[measureB], d=>{\n        scaleMapB[d] = cs(d)});\n      setColorScaleB(scaleMapB);\n\n      var splitB = scaleQuantile()\n        .domain(_.map(data[measureB], d=>d))\n        .range(colorPalette);\n\n      setLegendSplitB(splitB.quantiles());\n\n      var maxB = 1\n      var minB = 100\n      _.each(data[measureB],d=>{\n        if (d > maxB) {\n          maxB = d\n        }else if (d < minB && d > 0){\n          minB = d\n        }\n      });\n      if (maxB > 999999) {\n        setLegendMaxB((maxB/1000000).toFixed(0) + \"M\");\n      }else if (maxB > 999) {\n        setLegendMaxB((maxB/1000).toFixed(0) + \"K\");\n      }else{\n        setLegendMaxB(maxB.toFixed(0));\n\n      }\n      setLegendMinB(minB.toFixed(0));\n    }\n  }, [measureB]);  \n  \n  if (data) {\n\n    return (\n      <HEProvider> \n        <div>\n          <AppBar menu='mapState'/>\n          <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n            <Header as='h3'>\n              <Header.Content style={{paddingTop: 8, fontWeight: 400, fontSize: \"14pt\"}}>\n\n                Side-by-Side View of Counties in&nbsp;\n                <Dropdown\n                  style={{background: '#fff', \n                          fontWeight: 400, \n                          fontSize: \"14pt\",\n                          width: '200px',\n                          borderTop: 'none',\n                          borderLeft: 'none',\n                          borderRight: 'none', \n                          borderBottom: '1px solid #bdbfc1',\n                          borderRadius: 0,\n                          minHeight: '2.2em',\n                          paddingBottom: '0.2em'}}\n                  text= {stateName}\n                  search\n                  selection\n                  options={stateOptions}\n                  onChange={(e, { value }) => {\n                    setStateFips(value);\n                  }}\n                />\n              </Header.Content>\n            </Header>\n\n            \n            <Grid columns={2} style={{paddingTop: '2em', minHeight: '400px'}}>\n              <Grid.Row>\n                <Grid.Column>\n                  <Grid columns={2} centered>\n                    <Grid.Column>\n                    <svg width = \"500\" height=\"30\">\n                        <text x={0} y={15} style={{fontSize: '14pt'}}>COVID-19 Outcome Measure:  </text>\n                    </svg>\n                      <Dropdown\n                        style={{background: '#fff', \n                                width: 460, \n                                fontWeight: 400, \n                                fontSize: \"14pt\",\n                                borderTop: 'none',\n                                borderLeft: 'none',\n                                borderRight: 'none', \n                                borderBottom: '1ox solid #bdbfc1',\n                                borderRadius: 0}}\n                        text= {measureA ? measureA:\"Select Measure\"}\n                        search\n                        selection\n                        value={measureA}\n                        options={measureOptionsA}\n                        onChange={(e, { value }) => {\n                          setMeasureA(value);\n                        }}\n                      />\n                      {measureA && legendSplitA &&\n                      <svg width=\"450\" height=\"110\">\n                              \n                              {_.map(legendSplitA, (split, i) => {\n                                if (legendSplitA[0].toFixed(0) === legendSplitA[1].toFixed(0) && legendSplitA[1].toFixed(0) === legendSplitA[2].toFixed(0) && legendSplitA[2].toFixed(0) === legendSplitA[3].toFixed(0) && legendSplitA[3].toFixed(0) === legendSplitA[4].toFixed(0) ) {\n                                  return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitA[i].toFixed(2) < 0? 0:legendSplitA[i].toFixed(2)} </text>\n                                }else if (legendSplitA[i].toFixed(0) < 1) {\n                                  return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitA[i].toFixed(1) < 0? 0:legendSplitA[i].toFixed(1)} </text>\n                                }else if (legendSplitA[i] > 999) {\n                                  return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {(legendSplitA[i]/1000).toFixed(0) < 0? 0:(legendSplitA[i]/1000).toFixed(0)}K </text>\n                                }\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitA[i].toFixed(0) < 0? 0:legendSplitA[i].toFixed(0)} </text>                    \n                              })}\n                              <text x={0} y={34} style={{fontSize: '1.0em'}}> {legendMinA} </text> \n                              <text x={240} y={34} style={{fontSize: '1.0em'}}> {legendMaxA} </text> \n\n\n                              {_.map(colorPalette, (color, i) => {\n                                return <rect key={i} x={40*i} y={40} width=\"40\" height=\"40\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                              })} \n\n\n                              <text x={0} y={99} style={{fontSize: '1.2em'}}> Low </text>\n                              <text x={40 * (colorPalette.length - 1)} y={99} style={{fontSize: '1.2em'}}> High </text> \n\n\n                              <rect x={280} y={40} width=\"40\" height=\"40\" style={{fill: '#FFFFFF', strokeWidth:0.1, stroke: '#000000'}}/>\n                              <text x={330} y={56} style={{fontSize: '1.2em'}}> None </text>\n                              <text x={330} y={76} style={{fontSize: '1.2em'}}> Reported </text>\n\n                      </svg>\n                    }\n                    </Grid.Column>\n                  </Grid>\n                </Grid.Column>\n                <Grid.Column>\n                  <Grid columns={2} centered>\n                    <Grid.Column>\n\n                    <svg width = \"500\" height=\"30\">\n                        <text x={0} y={15} style={{fontSize: \"14pt\"}}>COVID-19 County Population Characteristics:  </text>\n                    </svg>\n\n                      <Dropdown\n                        style={{background: '#fff', \n                                width: 460, \n                                fontWeight: 400, \n                                fontSize: \"14pt\",\n                                borderTop: 'none',\n                                borderLeft: 'none',\n                                borderRight: 'none', \n                                borderBottom: '1ox solid #bdbfc1',\n                                borderRadius: 0}}\n                        text= {measureB ? measureB:\"Select Characteristic\"}\n                        fluid\n                        labeled\n                        search\n                        selection\n                        value={measureB}\n                        options={measureOptionsB}\n                        onChange={(e, { value }) => {\n                          setMeasureB(value);\n                        }}\n                      />\n                      {measureB && legendSplitB &&\n                      <svg width=\"450\" height=\"110\">\n                              \n                              {_.map(legendSplitB, (split, i) => {\n                                if (legendSplitB[0].toFixed(0) === legendSplitB[1].toFixed(0) && legendSplitB[1].toFixed(0) === legendSplitB[2].toFixed(0) && legendSplitB[2].toFixed(0) === legendSplitB[3].toFixed(0) && legendSplitB[3].toFixed(0) === legendSplitB[4].toFixed(0) ) {\n                                  return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitB[i].toFixed(2) < 0? 0:legendSplitB[i].toFixed(2)} </text>\n                                }else if (legendSplitB[i].toFixed(0) < 1) {\n                                  return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitB[i].toFixed(1)< 0? 0:legendSplitB[i].toFixed(1)} </text>\n                                }else if (legendSplitB[i] > 999999) {\n                                  return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {(legendSplitB[i]/1000).toFixed(0)< 0? 0:(legendSplitB[i]/1000000).toFixed(0)}M </text>\n                                }else if (legendSplitB[i] > 999) {\n                                  return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {(legendSplitB[i]/1000).toFixed(0)< 0? 0:(legendSplitB[i]/1000).toFixed(0)}K </text>\n                                }\n                                return <text key = {i} x={40 + 40*i} y={34} style={{fontSize: '1.0em'}}> {legendSplitB[i].toFixed(0)< 0? 0:legendSplitB[i].toFixed(0)} </text>                    \n                              })}   \n                              <text x={0} y={34} style={{fontSize: '1.0em'}}> {legendMinB} </text> \n                              <text x={240} y={34} style={{fontSize: '1.0em'}}> {legendMaxB} </text>\n\n\n                              {_.map(colorPalette2, (color, i) => {\n                                return <rect key={i} x={40*i} y={40} width=\"40\" height=\"40\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                              })} \n\n\n                              <text x={0} y={99} style={{fontSize: '1.2em'}}>Low</text>\n                              <text x={40 * (colorPalette2.length - 1)} y={99} style={{fontSize: '1.2em'}}>High</text> \n\n                              <rect x={280} y={40} width=\"40\" height=\"40\" style={{fill: '#FFFFFF', strokeWidth:0.1, stroke: '#000000'}}/>\n                              <text x={330} y={56} style={{fontSize: '1.2em'}}> None </text>\n                              <text x={330} y={76} style={{fontSize: '1.2em'}}> Reported </text>\n\n                      </svg>\n                    }\n                    </Grid.Column>\n                  </Grid>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  <ComposableMap projection=\"geoAlbersUsa\" \n                    projectionConfig={{scale: !config? 650:`${config.scale}`}} \n                    width={600} \n                    height={600} \n                    strokeWidth = {0.1}\n                    stroke = 'black'\n                    data-tip=\"\"\n                    offsetX={!config? 50: config.offsetX}\n                    offsetY={!config? -120: config.offsetY}>\n                    <Geographies geography={!config? geoUrl: config.url}>\n                      {({geographies}) => geographies.map(geo => \n                        <Geography \n                          key={geo.rsmKey} \n                          geography={geo} \n                          onMouseEnter={()=>{\n                            if(measureA && colorScaleA){\n                              const cur = data[measureA][geo.properties.COUNTYFP];\n                              setTooltipContent(cur?(Math.round(cur*100)/100):'');\n                            }\n                          }}\n                          onMouseLeave={()=>{\n                            setTooltipContent(\"\")\n                          }}\n                          fill={(measureA && colorScaleA && stateFips === \"_nation\" && data[measureA][geo.id] > 0)? colorScaleA[data[measureA][geo.id]]: \n                                  (measureA && colorScaleA && stateFips === \"_nation\" && data[measureA][geo.id] === 0)? '#FFFFFF':\n                                  (measureA && colorScaleA && data[measureA][stateFips+geo.properties.COUNTYFP])?\n                                  colorScaleA[data[measureA][stateFips+geo.properties.COUNTYFP]] : \"#FFFFFF\"}\n                        />\n                      )}\n                    </Geographies>\n                  </ComposableMap>\n                </Grid.Column>\n                <Grid.Column>\n                  <ComposableMap projection=\"geoAlbersUsa\" \n                    projectionConfig={{scale: !config? 650:`${config.scale}`}} \n                    width={600} \n                    height={600} \n                    strokeWidth = {0.1}\n                    stroke = 'black'\n                    data-tip=\"\"\n                    offsetX={!config? 50: config.offsetX}\n                    offsetY={!config? -120: config.offsetY}>\n                    <Geographies geography={!config? geoUrl: config.url}>\n                      {({geographies}) => geographies.map(geo => \n                        <Geography \n                          key={geo.rsmKey} \n                          geography={geo} \n                          onMouseEnter={()=>{\n                            if(measureB && colorScaleB){\n                              const cur = data[measureB][geo.properties.COUNTYFP];\n                              setTooltipContent(cur?(Math.round(cur*100)/100):'');\n                            }\n                          }}\n                          onMouseLeave={()=>{\n                            setTooltipContent(\"\")\n                          }}\n                          fill = {(measureB && colorScaleB && stateFips === \"_nation\" && data[measureB][geo.id] > 0)? colorScaleB[data[measureB][geo.id]]: \n                                  (measureB && colorScaleB && stateFips === \"_nation\" && data[measureB][geo.id] === 0)? '#FFFFFF':\n                                  (measureB && colorScaleB && data[measureB][stateFips+geo.properties.COUNTYFP])?\n                                  colorScaleB[data[measureB][stateFips+geo.properties.COUNTYFP]] : \"#FFFFFF\"}\n                        />\n                      )}\n                    </Geographies>\n                  </ComposableMap>\n                  <ReactTooltip>{tooltipContent}</ReactTooltip>\n                </Grid.Column>\n              </Grid.Row>  \n            </Grid>\n            \n            <Notes />\n          </Container>\n\n        </div>\n      </HEProvider> \n      )}else {\n        return <Loader active inline='centered' />\n      };\n      \n\n}","import React from 'react'\nimport AppBar from './AppBar';\nimport { Container, Grid, List, Divider, Image, Header } from 'semantic-ui-react'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nfunction myFunction() {\n  alert('Link is copied to clipboard!');\n  \n}\n\nexport default function AboutUs(props){\n\n  return (\n    <div>\n      <AppBar menu='aboutUs'/>\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n        \n        <Grid row = {1} style = {{marginLeft: 0, paddingTop: 30}}>\n            <Header style={{fontWeight: 400, fontSize: \"24pt\", paddingBottom: 0}}>\n                About This Tool\n\n                <Header.Subheader style={{color: \"#000000\", paddingTop: 13, lineHeight: \"24pt\", fontSize: \"14pt\"}}>Early data about COVID-19 suggests that communities are affected very differently \n                due to social determinants of health like population density, poverty, residential segregation, underlying chronic health conditions, and availability of medical services.\n                 In order to predict how the epidemic will continue to unfold and prepare for the future, it is critical to understand differences in underlying risk factors. \n                 There is no one-size-fits all approach to combat the epidemic, but accurate and meaningful data is a key component of a robust public health response that is \n                 informed by contextual factors and prioritizes health equity.\n                  <br/><br/>\n                  The COVID-19 Health Equity Dashboard (<a style ={{color: \"#397AB9\"}} href=\"COVID19.emory.edu\"> COVID19.emory.edu</a>) seeks to fill the gaps in county-level data about the virus and underlying social determinants of health. \n                  Our goal is for this Dashboard to facilitate easy comparisons of counties with respect to COVID-19 outcomes and social determinants. \n                  We hope this becomes a valuable resource for and critical component of tailored public health responses to COVID-19 across the wide range of environments that Americans inhabit.\n                </Header.Subheader>\n            </Header>\n\n            \n        </Grid>\n        <Grid columns={2}>\n          <Grid.Column>\n            <Grid columns={2} style = {{width : 600, marginLeft: 0}}>\n\n              <Header as='h1' style={{fontWeight: 400, width: 600}}>\n                <Header.Content style = {{ fontSize: \"24pt\", paddingTop: 46, lineHeight: \"24pt\"}}>\n                  Team\n                  <Header.Subheader style={{color: \"#000000\", paddingTop: 17, paddingBottom: 0, lineHeight: \"24pt\", fontSize: \"14pt\"}}>We are an interdisciplinary group of researchers, clinicians, and students with expertise in epidemiology, social determinants of health, infectious disease, chronic disease, and computer science.</Header.Subheader>\n                </Header.Content>\n              </Header>\n              <Grid.Column style = {{overFlow: \"hidden\"}}>\n                <List bulleted style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Shivani A. Patel, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>K. M. Venkat Narayan, MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Carlos Del Rio, MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Robert F. Breiman, MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Mark Hutcheson, BS</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Yubin Park, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Daesung Choi, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Jing Zhang, PhD</List.Item>                \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Pooja Naik, B.Pharm</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Star Liu</List.Item>               \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Leanna Ehrlich, BA</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Neil K. Mehta, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Vince Marconi, MD</List.Item>                \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Joel P. Baumgart, PhD</List.Item> \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Ke Sun</List.Item>                \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Sriya Naga Karra</List.Item>     \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Gaëlle L. Sabben, MPH</List.Item>     \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Jithin Sam Varghese, PhD</List.Item>     \n            \n                                \n                </List>\n              </Grid.Column>\n              <Grid.Column style = {{overFlow: \"hidden\"}}>\n\n                <List bulleted style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Michael Kramer, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Rob O'Reilly, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Sanjana Pampati, MPH</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Joyce Ho, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Shabatun Jamila Islam, MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Anurag Mehta, MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Aditi Nayak , MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Arshed Quyyumi , MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Yi-Ann Co, PhD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Samaah Sullivan, MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Mohammed K. Ali, MD</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Xinzhu Wang, BS</List.Item>\n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Kaifu Xiao</List.Item>                \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Isha Gavas</List.Item>                \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Aditya Rao</List.Item>                \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Alka Rao</List.Item> \n                  <List.Item style = {{lineHeight: \"18pt\", fontSize: \"14pt\"}}>Kamini Doraivelu, MPH</List.Item> \n\n\n                </List>\n              </Grid.Column>\n            </Grid> \n          </Grid.Column>\n\n          <Grid.Column >\n            <Grid columns={1} style = {{width : 600, marginLeft: 10, overFlow: \"hidden\"}}>\n              <Header style={{fontWeight: 400, fontSize: \"24pt\", paddingTop: 41}}>\n                  Funding\n                <Header.Content style = {{paddingTop: 13, lineHeight: \"24pt\", paddingBottom: 20, fontSize: \"14pt\"}}>\n                  The COVID-19 Health Equity Dashboard was developed with funding from the Robert Wood Johnson Foundation and Emory University’s Woodruff Health Sciences Center. Development was also supported by the Georgia Center for Diabetes Translation Research.\n                </Header.Content>\n              </Header>\n              <br/>\n              <br/>\n              <Header style={{fontWeight: 400, fontSize: \"24pt\", paddingBottom: 0, paddingTop: 7}}>\n                Feedback\n                <Header.Content style = {{paddingTop: 9, lineHeight: \"24pt\", fontSize: \"14pt\"}}>\n                  We strive to make this a user-friendly resource for policy makers, public health actors, the public, researchers, \n                  and the media. Please share your feedback by mailing us at: \n                  <a href=\"mailto:covid19dashboard@emory.edu\"> covid19dashboard@emory.edu</a>\n                </Header.Content>\n              </Header>\n            </Grid>\n            </Grid.Column> \n          </Grid>\n\n\n        \n\n        <div style={{paddingTop: '2em', fontWeight: 300, overFlow: \"hidden\"}}>\n          \n    <Divider/>\n    <Grid style = {{overFlow: \"hidden\" }}>\n      <Divider hidden/>\n        <Grid.Row columns={3} style = {{overFlow: \"hidden\"}}>\n          <Grid.Column style={{fontSize: \"14pt\", overFlow: \"hidden\"}}>          \n            <Image size='medium' src='/logo.png' />\n            &copy; 2020 Emory University. All rights reserved.\n            <br/>\n            <a style ={{color: \"#397AB9\"}} href=\"/privacy\"> Privacy Statement</a> \n\n          </Grid.Column>\n          <Grid.Column style={{ left: 0, fontSize: \"14pt\", paddingRight: 0, width: \"500px\", overFlow: \"hidden\"}}>          \n            <Header.Content style={{width: \"500px\", fontSize: \"14pt\"}}>\n              This <a style ={{color: \"#397AB9\"}} href=\"COVID19.emory.edu\"> COVID-19 Health Equity Dashboard </a> is created using\n            </Header.Content>\n              <List as='ol'>\n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://www.react-simple-maps.io/\">React Simple Maps</a> by <a style ={{color: \"#397AB9\"}} href=\"https://www.zcreativelabs.com/\">z creative labs</a></List.Item>\n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/open-source/victory/\">Victory</a> by <a style ={{color: \"#397AB9\"}} href=\"https://formidable.com/\">Formidable</a></List.Item>\n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React\">Semantic UI React</a> by <a style ={{color: \"#397AB9\"}} href=\"https://github.com/levithomason\">@levithomason</a> and an amazing community of <a style ={{color: \"#397AB9\"}} href=\"https://github.com/Semantic-Org/Semantic-UI-React/graphs/contributors\">contributors</a></List.Item> \n                <List.Item as='li' value='-'><a style ={{color: \"#397AB9\"}} href=\"https://github.com/facebook/create-react-app\">Create React App</a> by <a style ={{color: \"#397AB9\"}} href=\"https://about.fb.com/company-info/\">Facebook</a></List.Item> \n              </List>\n            \n\n          </Grid.Column>\n\n          <Grid.Column style={{paddingLeft: 0, width: 300, overFlow: \"hidden\"}}>\n            <Grid>\n                <Grid.Row style={{fontSize: \"14pt\", paddingBottom: 0, right: -240}}> \n                    Share This Dashboard \n                </Grid.Row>\n              <Grid.Row columns = {15} style ={{ paddingTop: 5}}>\n                <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n                      <a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-size=\"large\" data-text=\"Check out the Emory COVID-19 Health Equity Interactive Dashboard! \" data-url=\"https://covid19.emory.edu/\" data-show-count=\"false\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"24px\" src='/Twitter_Logo_Blue.png' /> </a><script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script>\n                </Grid.Column>\n                <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -309, bottom: -5}}>\n                      <a href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fcovid19.emory.edu%2F&amp;src=sdkpreparse\" data-href=\"https://covid19.emory.edu/\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"14px\" src='/f_logo_RGB-Blue_512.png' /></a>\n                </Grid.Column>\n                <Grid.Column style ={{paddingLeft: 0, paddingRight: 0, right: -305}}>\n                      <a href=\"https://web.whatsapp.com/send?text= Check out the Emory COVID-19 Health Equity Interactive Dashboard! https://covid19.emory.edu/\" data-action=\"share/whatsapp/share\" target=\"_blank\" rel=\"noopener noreferrer\"><Image width= \"22px\" src='/WhatsApp_Logo_1.png' /></a>\n                </Grid.Column>\n                <Grid.Column style ={{paddingLeft: 9, paddingRight: 0, paddingTop: 4, right: -300}}>\n                    <div>\n       \n                    <CopyToClipboard text=\"https://covid19.emory.edu/\">\n                      <img onClick={()=>myFunction()} src='/copy_icon.png' style={{height: \"13px\", width: \"13px\" }}/>\n                    </CopyToClipboard>\n                    \n                    </div>                    \n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          \n            \n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      </div>\n      </Container>\n    </div>);\n}\n","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Container, Grid, List, Divider, Image, Header, Table } from 'semantic-ui-react'\n\nexport default function MediaHub(props){\n    const history = useHistory();\n\n\n  return (\n    <div>\n      <AppBar menu='mediaHub'/>\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n\n        <Header as='h2' style={{fontWeight: 400, paddingLeft: 0}}>\n          <Header.Content style = {{paddingTop: 20, fontSize: \"24pt\"}}>\n            Media Hub\n\n            <Header.Subheader style={{fontWeight: 300, fontSize: \"20pt\", paddingTop: 20}}>\n\n              Tune in for videos, podcasts, blogs, and more on COVID-19. \n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n\n      <Grid style={{paddingTop: 2}}>\n        <Grid.Row columns={3} style={{paddingBottom: 20}}> \n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 0}}>\n          <Grid.Row>\n            <div style = {{paddingBottom: 10}}>\n              <Image width='390' height='290' href = '/media-hub/blog/maskmandate' src='/blog images/maskmandate/Mask Mandate blog.png' />            \n            </div>\n          </Grid.Row>\n          <Grid.Row>\n            <div>\n              <Header as='h2'>\n                  <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                    <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/blog/maskmandate'>Statewide Mask Mandates in the United States</Header.Content></div>\n                    <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                      Date Published: Feb. 18, 2021 <br/> \n                      Media Type: Blog<br/><br/>\n                      Implementing state-wide mask mandate in the early stages of the pandemic may have been a clever move for US states resulting in lower case rates during the third wave of the pandemic compared to states with later or no mask mandates, our data suggests.\n                    </Header.Subheader>\n                  </Header.Content>\n              </Header>\n            </div>\n          </Grid.Row>\n        </Grid.Column>\n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 0}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='290' href = '/media-hub/podcast/Katie_Kirkpatrick_on_economic_responses' src='/podcast images/Katie Kirkpatrick.jpeg' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/podcast/Katie_Kirkpatrick_on_economic_responses'>“You can't have good public health, but not have equity and economic growth”: A conversation with Katie Kirkpatrick about economic responses to the COVID-19 pandemic.</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: Jan. 11, 2021 <br/> \n                        Media Type: Podcast<br/><br/>\n                        Katie Kirkpatrick, the president and CEO of the Metro Atlanta Chamber, talks about the ramifications of COVID-19 in the business community, from issues ranging to supply chain management to staff and customer safety, to the new MAC initiative, the Task Force to Restore Georgia's Economy. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 0}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='290' href = '/media-hub/podcast/Allison_Chamberlain_on_public_health_education_pandemic' src='/podcast images/Allison Chamberlain.png' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/podcast/Allison_Chamberlain_on_public_health_education_pandemic'>“A teaching opportunity for many years to come”: Dr. Allison Chamberlain on public health education in the time of the COVID-19 pandemic</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: Nov. 18, 2020 <br/> \n                        Media Type: Podcast<br/><br/>\n                        Dr. Allison Chamberlain talks about blending public health academia and practice, and how institutions like Emory can step up during the pandemic to put the skills of their faculty to use. We also discuss how the COVID-19 pandemic may change public health education forever, thinking about the communication and other skills students will need to combat current and future public health threats. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='290' href = '/media-hub/podcast/Robert_Breiman_on_COVID-19_vaccine_development_and_distribution' src='/podcast images/Robert Breiman.png' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/podcast/Robert_Breiman_on_COVID-19_vaccine_development_and_distribution'>“Information equity is a critical part of the whole picture”: Dr. Robert Breiman on COVID-19 vaccine development and distribution</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: Nov. 18, 2020 <br/> \n                        Media Type: Podcast<br/><br/>\n                        Dr. Robert Breiman talks about where different SARS-CoV-2 vaccines are in development and clinical trials, and considerations for production and distribution related to logistics and equity. How might vaccines be allocated fairly, both in consideration of essential workers and those at higher risk of developing severe COVID-19 outcomes?\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='290' href = '/media-hub/podcast/Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances' src='/podcast images/Vincent Macroni.png' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/podcast/Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances'>Innovations in Covid-19 Treatment: Dr. Vincent Marconi on Anti-Viral and Anti-Inflammatory Advances Against Covid-19 Infection</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: October 26, 2020 <br/> \n                        Media Type: Podcast<br/><br/>\n                        Dr. Vincent Marconi talks about the state of research around baricitinib, a JAK-STAT inhibitor that reduces inflammation and may reduce viral replication, and has played an important role in treating patients with severe Covid-19. We discuss the current state of research and considerations around underlying conditions and health equity. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='236' href = '/media-hub/blog/povertyRelatedIssues' src='/blog images/pri/Image 15.png' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href=\"/media-hub/blog/povertyRelatedIssues\">COVID-19 and Poverty-related issues</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Edited: October 7, 2020 <br/> \n                        Media Type: Blog<br/><br/>\n                        Since COVID-19 coronavirus pandemic took off in the United States in 2020, data show that poverty, lack of health insurance, socioeconomic vulnerability, and housing insecurity may all contribute to higher risk of contracting COVID-19 and having severe outcomes. As the pandemic affects businesses and employment, the cycle of poverty may be reinforced.\n\n\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n        </Grid.Column>\n\n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='236' href = '/media-hub/blog/swNativeAmericanCommunities' src='/blog images/swna/Image 7.png' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href=\"/media-hub/blog/swNativeAmericanCommunities\">COVID-19 in SW Native American Communities</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Edited: October 1, 2020 <br/> \n                        Media Type: Blog<br/><br/>\n                        Since COVID-19 coronavirus epidemic took off in the United States in 2020, data continue to show that Native Americans, particularly in the Southwest, are disproportionately impacted by infection and death. Some of the contributing factors may include high rates of poverty and chronic disease, lack of critical infrastructure like running water, isolation from health resources, crowded and multigenerational living conditions, and close-knit community support systems. \n\n\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n        </Grid.Column>\n\n        <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='236' href = '/media-hub/blog/africanAmericanCommunity' src='/blog images/aac/Image 1.png' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href=\"/media-hub/blog/africanAmericanCommunity\">COVID-19 in African American Communities</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Edited: September 30, 2020 <br/> \n                        Media Type: Blog<br/><br/>\n                        COVID-19 has disproportionately African Americans, with 2.6 times the infection rate of white non-Hispanic people, 4.7 times the hospitalization rate, and 2.1 times the death rate. African Americans have the highest rate of death of any racial or ethnic group in the United States.\n\n\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='236' href = '/media-hub/blog/underlyingConditions' src='/blog images/underlying/underlying_1.png' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href=\"/media-hub/blog/underlyingConditions\">COVID-19 and Underlying Conditions</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Edited: September 28, 2020 <br/> \n                        Media Type: Blog<br/><br/>\n                        Underlying conditions like having obesity or diabetes, and being over age 65, may make individuals more likely to develop severe COVID-19 infection and be at a higher risk of hospitalization and death. For example, 42% of US adults have obesity, which may lead to higher mortality among those with COVID-19. \n\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='290' href = '/media-hub/podcast/Dr._Nneka_Sederstrom_on_Racism_and_Ethics' src='/podcast images/Dr. Nneka Sederstrom.jpg' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/podcast/Dr._Nneka_Sederstrom_on_Racism_and_Ethics'>\"We Have to Be Better\": Dr. Nneka Sederstrom on Racism and Ethics During Covid-19</Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: September 7, 2020 <br/> \n                        Media Type: Podcast<br/><br/>\n                        Dr. Nneka Sederstrom discusses how COVID-19 has brought issues of structural racism in medicine to the forefront of clinical ethics and pandemic response conversations. We talk about how the process of change is accelerating as people are forced to have difficult but necessary reckonings with racism in medicine. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='290' href = '/media-hub/podcast/Dr.Judy_Monroe_on_Lesson_Learned_&_CDC' src='/podcast images/JudyMonroe.jpg' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/podcast/Dr.Judy_Monroe_on_Lesson_Learned_&_CDC'>\"You've Got to Have Trust\": Dr. Judy Monroe on Lessons Learned About Pandemic Preparedness </Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: August 26, 2020 <br/> \n                        Media Type: Podcast<br/><br/>\n                        Dr. Monroe tells us about the lessons she learned about leadership and community partnerships during pandemics based on her experience as State Health Commissioner of Indiana during the 2009 H1N1 pandemic. We talk about new initiatives the CDC Foundation is spearheading or partnering with to address health equity: gathering accurate data, engaging underserved communities, working on communications campaigns, and supporting virus hotspots with needed response personnel. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='300' href = '/media-hub/podcast/Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes' src='/podcast images/CarlosdelRio.jpg' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href = '/media-hub/podcast/Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes'>Dr. Carlos Del Rio on COVID-19 Equity and Outcomes </Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: August 10, 2020 <br/> \n                        Media Type: Podcast<br/><br/>\n                        Considering health equity and disparity, how will the pandemic progress? What is our current strategy? What can be and needs to be done to change the course of the pandemic? Listen to what Dr. Carlos Del Rio has to say. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n          \n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <Image width='390' height='236' href = '/media-hub/blog/Will_SARS-CoV-2_beat_the_Power_Five_Conferences' src='/blog images/power five/blog1cover.jpeg' />            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      <div style = {{lineHeight: \"16pt\", paddingTop:9}}> <Header.Content style ={{color: \"#397AB9\"}} href=\"/media-hub/blog/Will_SARS-CoV-2_beat_the_Power_Five_Conferences\">Will SARS-CoV-2 beat the Power Five Conferences? </Header.Content></div>\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Edited: August 19, 2020 <br/> \n                        Media Type: Blog<br/><br/>\n                        With almost half of all college football players being African American, resuming the football season might put African American athletes at an occupational risk due to COVID-19. Our data highlights greater severity of COVID-19 outcomes in counties where Power Five schools are located. With that said, can a team sport like football co-exist with COVID-19?\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/b9jvwt0dUPQ\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>            \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 and Population Density\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 30, 2020 <br/> \n                        Media Type: Video<br/><br/>\n                        Because the virus SARS-COV-2 is transmitted through droplets, proximity to other individuals is one of the risk factors, so in places where it is harder to practice social distancing, like densely populated urban areas, we often see higher cases per capita. At the same time, there are some states where rural communities are actually the ones experiencing disproportionate infection rates, often because of local outbreaks and exacerbating underlying conditions. \n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/IEojaw9cND4\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 and Poverty-related Issues\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 27, 2020<br/> \n                        Media Type: Video<br/><br/>\n                        Poverty, lack of health insurance, socioeconomic vulnerability, and housing insecurity may all contribute to higher risk of contracting COVID-19 and having severe outcomes. As the pandemic affects businesses and employment, the cycle of poverty may be reinforced by the progression of the pandemic and worsen unemployment, poverty, and related issues like insurance and housing.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop:70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/U-Aqx7vQocY\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>        \n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2'>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 in SW Native American Communities\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 14, 2020 <br/> \n                        Media Type: Video<br/><br/>\n                        Native American communities, particularly in the Southwest, are hard-hit by COVID-19. Contributing factors may include high rates of poverty and chronic disease, lack of critical infrastructure like running water, isolation from health resources, crowded and multigenerational living conditions, and close-knit community support systems.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop:70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/0eFjhnDQe6g\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2' >\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 in African American Communities\n                      <Header.Subheader style={{fontWeight: 300, fontSize: \"14pt\"}}>\n                        Date Published: July 9, 2020<br/> \n                        Media Type: Video<br/><br/>\n                        13% of the United States population is African American, but 23% of reported COVID-19 deaths have occurred in African Americans. In Georgia, African Americans represent 32% of the state’s population but 47% of COVID-19 deaths.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/2lWS3LGZUFU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2' style={{width:400, paddingLeft: 0}}>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      COVID-19 and Underlying Conditions\n                      <Header.Subheader style={{fontWeight: 300, width: 400, fontSize: \"14pt\"}}>\n                        Date Published: July 1, 2020<br/> \n                        Media Type: Video<br/><br/>\n                        Underlying conditions like having obesity or diabetes, and being over age 65, may make individuals more likely to develop severe COVID-19 infection and be at a higher risk of hospitalization and death.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n          <Grid.Column rows = {2} style={{paddingBottom: 20, paddingTop: 70}}>\n            <Grid.Row>\n              <div style = {{paddingBottom: 10}}>\n                <iframe width=\"390\" height=\"236\" src=\"https://www.youtube.com/embed/PmI42rHnI6U\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div>\n                <Header as='h2' style={{width:400, paddingLeft: 0}}>\n                    <Header.Content style={{fontSize: \"14pt\", fontWeight: 400}}>\n                      Dashboard Tutorial\n                      <Header.Subheader style={{fontWeight: 300, width: 400, fontSize: \"14pt\"}}>\n                        Date Published: June 5, 2020 <br/> \n                        Media Type: Video<br/><br/>\n                        Tutorial video walks you through the basics of the dashboard.\n                      </Header.Subheader>\n                    </Header.Content>\n                </Header>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n\n\n        </Grid.Row>\n        \n      </Grid>\n      <Notes />\n      </Container>\n    </div>);\n}\n","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, List, Divider, Image, Header, Table } from 'semantic-ui-react'\n\nexport default function DataSources(props){\n\n  return (\n    <div>\n      <AppBar menu='dataSources'/>\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n        <Header as='h1' style={{paddingTop: 16, fontWeight: 400, fontSize: \"24pt\"}}>\n\n          <Header.Content>\n            Data Sources and Interpretation\n          </Header.Content>\n        </Header>\n        <Table basic='very' style={{fontWeight: 400, fontSize: \"14pt\"}}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={3}>Measure</Table.HeaderCell>\n              <Table.HeaderCell width={5}>Data Source</Table.HeaderCell>\n              <Table.HeaderCell width={8}>How to Interpret</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Cases</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> The <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total COVID-19 Cases</i> is the number of people who have tested positive for COVID-19 in each county. This database includes case counts from \"both laboratory confirmed and probable cases using criteria that were developed by states and the federal government.\" </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Deaths</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> The <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total COVID-19 Deaths</i> is the number of people who have died of confirmed or presumed COVID-19 cases in each county. This database includes case counts from \"both laboratory confirmed and probable cases using criteria that were developed by states and the federal government.\" </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Cases</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Cases</i> is the average number of positive cases for COVID-19 infection per county in the United States over the last seven days.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Deaths</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Deaths</i> is the average number of deaths due to confirmed or presumed COVID-19 infection per county in the United States over the last seven days.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Cases per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total Cases per 100,000</i> helps us understand COVID-19 cases (people who have tested positive for COVID-19) by the population of the county per 100,000 people. \n                          <br/><br/>\n                          If every county in the United States had 100,000 residents, this is how many would have COVID-19 in each county. \n                          This measurement adjusts for different counties’ populations to provide a standardized point of comparison of \n                          cases in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Total COVID-19 Deaths per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Total Deaths per 100,000</i> helps us understand COVID-19 deaths by population of the county per 100,000 people. \n                            <br/><br/>\n                          If every county in the United States had 100,000 residents, this is how many would have died in each county from \n                          COVID-19. This measurement adjusts for different counties’ populations to provide a standardized point of comparison \n                          of deaths in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Cases per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Cases per 100,000</i> helps us understand the average number of positive cases for COVID-19 infection over the last seven days by population of the county per 100,000 people. \n                          <br/><br/>\n                          If every county in the United States had 100,000 residents, this is how many would have tested positive for COVID-19 \n                          over a recent 7-day period, in each county. This measurement adjusts for different counties’ populations to provide a \n                          standardized point of comparison of cases in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Average Daily COVID-19 Deaths per 100,000</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Derived from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a> in the United States and <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Average Daily Deaths per 100,000</i> helps us understand the average number of deaths due to confirmed or presumed COVID-19 infection over the last seven days by population of the county per 100,000 people. \n                          <br/><br/>\n                          If every county in the United States had 100,000 residents, this is how many would have died from COVID-19 \n                          over a recent 7-day period, in each county. This measurement adjusts for different counties’ populations to \n                          provide a standardized point of comparison of deaths in each county.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Daily Hospitalization</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://beta.healthdata.gov/Health/COVID-19-Community-Profile-Report/gqxm-d9w9\" target=\"_blank\" rel=\"noopener noreferrer\"> U.S. Department of Health & Human Services, Community Profile Report </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Daily Hospitalization</i> is the number of new daily COVID-19 hospitalizations.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Percent Positive</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://beta.healthdata.gov/Health/COVID-19-Community-Profile-Report/gqxm-d9w9\" target=\"_blank\" rel=\"noopener noreferrer\"> U.S. Department of Health & Human Services, Community Profile Report </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Percent Positive</i> is the percentage of total tests for COVID-19 that resulted in a positive result.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Percent Occupied Beds</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC's<a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nhsn/datastat/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> National Healthcare Safety Network  </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Percent Occupied Beds</i> is the state representative estimates for percentage of inpatient beds cccupied by COVID-19 patients.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Cases per 100,000 Persons by Race</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> Derived from <a style ={{color: \"#397AB9\"}} href=\"https://covidtracking.com/race\" target=\"_blank\" rel=\"noopener noreferrer\"> The COVID Racial Data Tracker </a> and <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Cases per 100,000 persons by race</i> shows the distribution of COVID-19 infections across the race categories relative to the size of their population, among those with race information available.\n              </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% African American</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% African American</i> is the percentage of residents in each county who self-identify as having African American ancestry. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Hispanic or Latino</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Hispanic or Latino</i> is the percentage of residents in each county who self-identified as Hispanic or Latino to the American Community Survey (ACS). These data are from ACS 2014-2016 (5-Year Estimate). </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% American Natives </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% American Natives </i> is the percentage of residents in each county who self-identified as American Indian and Alaska Native alone to the American Community Survey (ACS). These data are from ACS 2014-2016 (5-Year Estimate). </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Minority</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Minority</i> is the percentage of residents in each county who self-identify as having ancestry other than non-Hispanic white. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% in Poverty</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% in Poverty</i> is the percentage of residents in each county whose household income falls at or below the poverty thresholds set by the U.S. Census Bureau. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Uninsured</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Uninsured</i> is the percentage of residents in each county who currently lack personal health insurance. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Diabetes</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>CDC's<a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/diabetes/data/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Division of Diabetes Translation </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Diabetes</i> is the percentage of residents in each county who currently have a medical diagnosis of Type 2 Diabetes, previously called Adult Onset Diabetes. These data are from 2016. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Obesity</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>CDC's <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/diabetes/data/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Division of Diabetes Translation </a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Obesity</i> is the percentage of residents in each county who have obesity, defined as having a Body Mass Index (weight in kilograms divided by the square of height in meters) above 30. These data are from 2016.  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% over 65 y/o</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% over 65 y/o</i> is the percentage of residents in each county who are older than 65 years. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% in Group Quarters</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% in Group Quarters</i> is the percentage of residents in each county who live in group living arrangements, such as nursing or assisted-living facilities. These data are from 2018. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Male</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>% Male</i> is the percentage of residents in each county who are male. These data are from 2018.</Table.Cell>\n            </Table.Row>\n\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>COVID-19 Community Vulnerability Index (CCVI)</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>The COVID-19 Community Vulnerability Index (CCVI)</i> can be used to identify the communities that may need the most support during the pandemic. CCVI scores range in value from 0 to 1, with higher scores indicating greater vulnerability.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Residential Segregation</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.countyhealthrankings.org/explore-health-rankings/measures-data-sources/county-health-rankings-model/health-factors/social-and-economic-factors/family-social-support/residential-segregation-blackwhite\" target=\"_blank\" rel=\"noopener noreferrer\">Robert Wood Johnson Foundation program </a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Residential Segregation</i> is an index of dissimilarity where higher values indicate greater degree of Black and White county residents living separately from one another in a geographic area. \n                                                          <br/> <br/>\n                                                          The index score can be interpreted as the percentage of either Black or White residents that would have to move to different geographic areas to produce a distribution that matches that of the larger area.\n              </Table.Cell>\n            </Table.Row>\n\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Socioeconomic Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC’s <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\">Social Vulnerability Index data 2018 database</a> </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Socioeconomic Vulnerability</i> is a composite measurement for each county that takes into account poverty, unemployment, per capita income, and not having a high school diploma; with the highest level of vulnerability assigned to tracts in the top 10% based on values for all of these measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Household Composition Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC’s <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\">Social Vulnerability Index data 2018 database</a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Household Composition Vulnerability</i> is a composite measurement for each county that takes into account population aged 65 and older, population aged 17 and younger, people with disabilities who do not live in an institutional setting, and single-parent households with child(ren) under age 18; with the highest level of vulnerability assigned to tracts in the top 10% based on values for all of these measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Minority/Language Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC’s <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Social Vulnerability Index data 2018 database</a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Minority/Language Vulnerability</i> is a composite measurement for each county that takes into account all people except the white non-Hispanic population and those who speak English “less than well,” with the highest level of vulnerability assigned to tracts in the top 10% based on values for the measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Housing/Transportation Vulnerability</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> CDC's <a style ={{color: \"#397AB9\"}} href=\"https://svi.cdc.gov/data-and-tools-download.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Social Vulnerability Index data 2018 database</a></Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Housing/Transportation Vulnerability</i> is a composite measurement for each county that takes into account living structures with 10 or more units, mobile homes, having more people than rooms in occupied housing, households with no vehicle available, and those living in institutionalized group quarters; with the highest level of vulnerability assigned to tracts in the top 10% based on values for all of these measurements. These data are from 2018.</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Population</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Population</i> is the total number of people who live in each county. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Population Density</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Population Density</i> is the total number of people who live in each county per square mile. </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Household Income</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><i>Mean Household Income</i> measures the average total income per household in each county. These data are from 2018.</Table.Cell>\n            </Table.Row>            \n          </Table.Body>\n        </Table>\n        <Notes />\n      </Container>\n    </div>);\n}\n","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, List, Divider, Image, Header, Segment } from 'semantic-ui-react'\n\nexport default function AboutUs(props){\n\n  return (\n    <div>\n    <AppBar/>\n      <Container style={{marginTop: 128, minWidth: '1260px'}}>\n        <Header style={{fontSize: \"24pt\", fontWeight: 400}}>\n          <Header.Content>\n            Privacy Policy\n            <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Website Privacy Statement\n            </Header.Subheader>\n            <Header style={{fontSize: \"14pt\", fontWeight: 400, paddingTop: 0}}>\n            Emory University’s COVID-19 Health Equity Dashboard (CHED) is committed to protecting your personal information and respecting your privacy. \n            In general, you can visit our website without telling us who you are or revealing information about yourself.  \n            CHED uses various methods to collect certain other kinds of information including cookies, referrers, IP addresses, and system information.\n            </Header>\n          </Header.Content>\n        </Header>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Cookies: </b> Cookies are small snippets of data passed from a website to your PC as you browse the Internet that can be transferred\n             back to the original site or domain with future requests from your browser. Cookies can be used in a variety of ways, including \n             ways that have privacy implications, such as tracking your previous activities at a particular site. Most browsers allow you \n             to choose not to accept cookies. Choosing to accept cookies, however, enables some online services to work more efficiently \n             or makes the use of services more convenient.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Referrers: </b> A referrer is the information passed along by a browser that references the Internet URL you linked from. \n            Our Internet server automatically gathers this information. CHED uses this information for site statistical analysis. \n            CHED will not use this information to attempt to identify your personal information.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>IP Addresses: </b> Your computer uses IP addresses every time you connect to the Internet. \n            Computers on the network use your IP address to identify your computer so that data, such as the webpages you request, \n            can be sent to you. Our server automatically gathers them. CHED uses this information for site statistical analysis. \n            CHED will not use your IP address to attempt to identify your personal information.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>System Information: </b> System information includes time, type of browser being used, the operating system or platform, and CPU speed. \n            Your browser sends this information automatically when you are connected to a website. This information is used by CHED to \n            identify broad demographic statistics and may be used to provide information appropriate for your computer system. CHED will \n            not use this information to attempt to identify your personal information.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Security: </b> While no system can provide guaranteed security, we take reasonable efforts to keep information \n            you provide to us secure, including encryption technology and physical security at the location of the server where \n            information is stored.\n          </Header.Content>\n        </Header>\n\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n          <Header.Content>\n            <b>Links to Other Sites: </b> The CHED website includes hyperlinks to sites maintained or controlled by others. \n            Any links to external websites is provided as a courtesy and are not an endorsement by CHED of the content or views of \n            the linked website or web page. CHED is not responsible for and does not routinely screen, approve, review, or endorse \n            the contents or use of any of the products or services that may be offered at at any other website. We advise you to \n            review the individual privacy policies of the respective sites.\n          </Header.Content>\n        </Header>\n\n        <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Website Disclaimer\n        </Header.Subheader>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n            CHED provides information as a service to users. This website does not constitute a legal contract between CHED and the user. \n            Content is subject to change without notice and CHED makes no guarantees, warranties, or representations, express or limited, \n            on the website’s operation, information, content, and materials.\n        </Header>\n\n        <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Liability\n        </Header.Subheader>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n            CHED is not liable for damages of any kind arising from the use of or reliance on any content, goods, or services available on \n            or through this website or any hyperlinked site or resource.\n        </Header>\n\n        <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 400, color: \"#000000\", paddingTop: \"15px\"}}>\n            Contact Us\n        </Header.Subheader>\n        <Header style={{fontSize: \"14pt\", fontWeight: 400}}>\n            <a href=\"mailto:covid19dashboard@emory.edu\"> covid19dashboard@emory.edu</a>\n        </Header>\n\n        <Notes />\n\n      </Container>\n    </div>);\n}\n","import AppBar from './AppBar';\nimport Notes from './Notes';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react'\n\nimport { Container, Grid, List, Divider, Image, Breadcrumb, Header, Segment } from 'semantic-ui-react'\n\nexport default function AboutUs(props){\n  const history = useHistory();\n  let {blogTitle} = useParams();\n\n  return (\n    <div>\n    <AppBar/>\n\n    {blogTitle == \"maskmandate\" &&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Blog</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                Statewide Mask Mandates <br/>in the United States\n\n\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n                  Implementing state-wide mask mandate in the early stages of the pandemic may have been a clever move \n                  for US states resulting in lower case rates during the third wave of the pandemic compared to states with \n                  later or no mask mandates, our data suggests.\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                       <Image width='600' height='350' href = '/media-hub/blog/maskmandate' src='/blog images/maskmandate/Mask Mandate blog.png' />            \n\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Star Liu & Pooja Naik, Feb. 12, 2021  &nbsp;&nbsp; |  &nbsp;&nbsp; 5-minute read\n\n                      <br/>\n                      Contributors: Gaëlle Sabben, Shivani A. Patel \n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n                      <br/>\n\n                      By October 31<sup>st</sup>, 2020, over \n                      <a href=\"https://coronavirus.jhu.edu/us-map\" target=\"_blank\" rel=\"noopener noreferrer\"> 9,000,000 cases and 200,000 deaths \n                          </a> had occurred in the U.S., \n                      with cases and death rates consistently higher than in most other countries. The ongoing \n                      epidemic has demanded a comprehensive response from the federal, state, and local governments. \n                      It has also challenged governments to act in extraordinary ways to contain the spread of coronavirus. \n                      In addition to thorough handwashing, social distancing and mask wearing are the primary prevention \n                      strategies available to prevent SARS-CoV-2 (the virus that causes COVID-19 disease) infection. \n                      In crises like this, citizens look to their governments for information, guidance, and safety. \n                      The coronavirus pandemic has affected nearly every nation in the world differently and each \n                      government’s response towards containing the pandemic has been equally distinct. \n                      This has been the case on a range of measures, including whether leaders implemented local mask mandates.\n\n\n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      The shifting guidelines on mask use by the World Health Organization (WHO) and U.S. \n                      Centers for Disease Control and Prevention (CDC) in the early days of the pandemic \n                      precipitated confusion among the general public about the effectiveness and utility \n                      of face masks. Both \n                      <a href=\"https://www.vox.com/2020/6/6/21282108/masks-for-covid-19-world-health-organizationguidelines-cloth-n95\" target=\"_blank\" rel=\"noopener noreferrer\"> WHO </a>\n                       and \n                       <a href=\"https://www.dallasnews.com/news/public-health/2020/04/08/why-did-the-recommendation-on-wearing-face-masks-change/\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC </a>\n                        had deemed the use of face masks unnecessary earlier \n                      in the pandemic but later changed their stance in early June 2020. Several studies on the \n                      effectiveness of masks in controlling the spread of COVID-19 resulted in \n                      <a href=\"https://www.vox.com/2020/5/29/21273625/coronavirus-masks-required-virginia-china-hongkong\" target=\"_blank\" rel=\"noopener noreferrer\"> 15 U.S. states suddenly mandating mask use statewide </a>\n                           in April, May, and June. Twelve other states followed \n                      in June, July, and August 2020. Despite \n                      <a href=\"https://jamanetwork.com/journals/jama/fullarticle/2776536\" target=\"_blank\" rel=\"noopener noreferrer\"> several strong pieces of evidence </a> on the \n                      effectiveness of masks in controlling spread, 18 states had failed to put a statewide \n                      order in place before the peak rose too high to be controlled by October 31<sup>st</sup>, 2020. There \n                      had been several additional studies of mask effectiveness done before the third wave hit. \n                      However, since November, almost all the states saw dramatic spikes in cases. Thus, as we \n                      consider additional measures to control the ongoing spread of COVID-19, we need to examine \n                      how mask mandates could have had important and lasting effects on recent trends in cases \n                      and the implications for the coming weeks and months. If mask mandates indeed are crucial \n                      in controlling the spread of COVID-19, we expect states with early mask mandates to have \n                      the lowest case rates (per 100,000) among them all. As we negotiate the added risks of \n                      infection from new and potentially more infectious variants of SARS-CoV-2, we revisit the \n                      efficacy of mask mandates to remind ourselves of the importance of mask-wearing and \n                      quantify the performance of statewide mask mandates in controlling the spread of COVID-19 in the United States. \n\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      To understand the impact of mask mandates, we compared the trend of COVID-19 \n                      infection rates in the 15 states that first mandated mask usage statewide early \n                      in the pandemic (before the second wave hit in June) with other states that passed \n                      the statewide mask mandate order either during or after the second wave and with \n                      those that had not implemented statewide mask mandates as of October 31<sup>st</sup>, 2020. \n                      Since November 2020, there have been multiple events such as national elections, \n                      the Thanksgiving and end of year holidays, the end of the Fall semester for schools, \n                      and riots that could have contributed to the spike in COVID-19 cases. Thus, our \n                      window of analysis is cut off on October 31<sup>st</sup>, 2020 and we considered states that \n                      adopted a statewide order after November to be part of the group of states without \n                      mandates. Each wave of the pandemic is defined as the period from the point of \n                      lowest growth in daily cases in the previous period to the next peak. The states \n                      that passed statewide mask mandate orders in April and early May were classified as \n                      the “first group of states with mask mandates (Before the second wave).” Those that \n                      mandated mask use statewide between June 7 and July 19 make up the “second group of \n                      states with mask mandate (During the second wave).” Finally, we consider the states \n                      that mandated mask usage statewide after the second curve abated as the “third group \n                      of states with mask mandate (After the second wave).” The states in each category are listed below in Table 1. \n\n\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n                      \n                        <table style= {{border: \"1px solid black\", borderCollapse: \"collapse\"}}>\n                          <tr>\n                            <th rowSpan = \"2\" style = {{border: \"1px solid black\", textAlign: \"left\"}}>States without statewide orders <br/>(N = 18)</th>\n                            <th colspan = \"3\" style= {{border: \"1px solid black\"}}>States that implemented statewide mask mandate orders in different phases of the pandemic </th>\n                          </tr>\n                          <tr>\n                            <th style= {{border: \"1px solid black\"}}>First (Before the Second wave (N = 15)</th>\n                            <th style= {{border: \"1px solid black\"}}>Second (During the Second wave (N = 12)</th>\n                            <th style= {{border: \"1px solid black\"}}>Third (After the Second wave (N = 6)</th>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Alaska</td>\n                            <td style= {{border: \"1px solid black\"}}>Connecticut</td>\n                            <td style= {{border: \"1px solid black\"}}>Alabama</td>\n                            <td style= {{border: \"1px solid black\"}}>Arkansas</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Arizona</td>\n                            <td style= {{border: \"1px solid black\"}}>Delaware</td>\n                            <td style= {{border: \"1px solid black\"}}>California</td>\n                            <td style= {{border: \"1px solid black\"}}>Indiana</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Florida</td>\n                            <td style= {{border: \"1px solid black\"}}>District of Columbia</td>\n                            <td style= {{border: \"1px solid black\"}}>Colorado</td>\n                            <td style= {{border: \"1px solid black\"}}>Minnesota</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Georgia</td>\n                            <td style= {{border: \"1px solid black\"}}>Hawaii</td>\n                            <td style= {{border: \"1px solid black\"}}>Kentucky</td>\n                            <td style= {{border: \"1px solid black\"}}>Ohio</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Idaho</td>\n                            <td style= {{border: \"1px solid black\"}}>Illinois</td>\n                            <td style= {{border: \"1px solid black\"}}>Louisiana</td>\n                            <td style= {{border: \"1px solid black\"}}>Louisiana</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Iowa</td>\n                            <td style= {{border: \"1px solid black\"}}>Maine</td>\n                            <td style= {{border: \"1px solid black\"}}>Montana</td>\n                            <td style= {{border: \"1px solid black\"}}>Wisconsin</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Kansas</td>\n                            <td style= {{border: \"1px solid black\"}}>Maryland</td>\n                            <td style= {{border: \"1px solid black\"}}>Nevada</td>\n                            <td rowspan = \"12\" style= {{border: \"1px solid black\"}}></td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Missouri</td>\n                            <td style= {{border: \"1px solid black\"}}>Massachusetts</td>\n                            <td style= {{border: \"1px solid black\"}}>North Carolina</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Nebraska</td>\n                            <td style= {{border: \"1px solid black\"}}>Michigan</td>\n                            <td style= {{border: \"1px solid black\"}}>Oregon</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>North Dakota</td>\n                            <td style= {{border: \"1px solid black\"}}>New Jersey</td>\n                            <td style= {{border: \"1px solid black\"}}>Texas</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Oklahoma</td>\n                            <td style= {{border: \"1px solid black\"}}>New Mexico</td>\n                            <td style= {{border: \"1px solid black\"}}>Washington</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>South Carolina</td>\n                            <td style= {{border: \"1px solid black\"}}>New York</td>\n                            <td style= {{border: \"1px solid black\"}}>West Virginia</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>South Dakota</td>\n                            <td style= {{border: \"1px solid black\"}}>Pennsylvania</td>\n                            <td rowspan = \"6\" style= {{border: \"1px solid black\"}}></td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Tennessee</td>\n                            <td style= {{border: \"1px solid black\"}}>Rhode Island</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Utah</td>\n                            <td style= {{border: \"1px solid black\"}}>Virginia</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>New Hampshire</td>\n                            <td rowspan = \"3\" style= {{border: \"1px solid black\"}}></td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Wyoming</td>\n\n                          </tr>\n                          <tr>\n                            <td style= {{border: \"1px solid black\"}}>Mississippi<sup>*</sup></td>\n\n                          </tr>\n                        </table>\n                      \n                      <br/>\n                      <br/>\n\n                        <p style = {{marginLeft: 0, fontSize: \"14pt\", fontWeight: 300, lineHeight: \"16pt\", lineSpacing: 0}}>\n                            <b>Table 1:</b> List of U.S. states without statewide mask mandate versus states \n                            that mandated mask use statewide in the early phase of the pandemic (before the second wave), \n                            in the later phase (during the second wave), and after the second wave (by October 31<sup>st</sup>, 2020). \n                            <br/>\n                            <sup>*</sup>Mississippi is classified as such because it lifted mask mandate on September 30<sup>th</sup>.<br/>\n                            Data source: \n                            <a href=\"https://www.aarp.org/health/healthy-living/info-2020/states-mask-mandates-coronavirus.html\" target=\"_blank\" rel=\"noopener noreferrer\"> State-by-State Guide to Face Mask Requirements by Andy Markowitz, AARP.</a>\n                            <br/>\n                            \n                        </p>\n                      \n                      <br/>\n\n                      We computed the COVID-19 case rate in states grouped by our statewide mask mandate \n                      classification over time. In Figure 1, we show the cumulative COVID-19 cases, adjusted \n                      by population size, in states by the timing of mask mandate adoption.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                        </Header>\n                                <center> <Image width='800' height='500' src='/blog images/maskmandate/Picture1.png' /> </center>\n                                <p style = {{marginLeft: 0, fontSize: \"14pt\", fontWeight: 300, lineHeight: \"16pt\", lineSpacing: 0}}> \n                                <b>Figure 1:</b> Cases per 100,000 in states with and without statewide mask \n                                mandate as of October 31, 2020. Each wave is defined as the period from the \n                                point of lowest growth in daily cases in the previous period to the next peak.  </p>\n                \n                        <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <br/>\n\n                      One major assumption we make is that mask mandates have a direct effect on \n                      local residents’ behavior regarding mask-wearing. 15 states, including New York, \n                      New Jersey, Massachusetts, Rhode Island, and Connecticut, had implemented statewide \n                      mask mandates by the time first wave’s momentum halted in early June. Indeed, the first \n                      group of states that turned to mask mandates was the one that saw a spike in cases early \n                      on, but they were also the ones that limited the spike in case rate during the second wave. \n                      During the second wave, this group saw a flattened curve compared to states not yet \n                      implementing mandates, and the difference in case rate has grown only more separated \n                      since the start of the third wave. As of October 31<sup>st</sup>, the average case rate in states \n                      without mask mandates was approximately 50% more than (3,445 vs. 2,198 cases) that of \n                      states with the earliest mask mandates.\n\n                      <br/>\n                      <br/>\n                      <br/>\n                      \n                      States that mandated mask use statewide in June, July, and August (the “second group” \n                      in our categorization), saw a minimal impact of the mandates on COVID-19 case rates in \n                      the few weeks that followed. While it may be tempting to discredit the effectiveness of \n                      these mandates, the differences have manifested since September as case rates in states \n                      without mask mandates skyrocketed. On October 31<sup>st</sup>, states with mask mandates during the \n                      second wave saw approximately 867 fewer cases per 100,000 compared to the group with no \n                      mask mandates. Similarly, states with statewide mask mandates after the second wave saw \n                      approximately 884 fewer cases per 100,000 compared to states without mask mandates. The \n                      average case rate across the group without mask mandates ticked up in the second half of \n                      October at an alarming rate while other groups with earlier mask mandates had a steady \n                      increase during the same period. This discrepancy sheds some light on the positive \n                      contribution that mask mandates might have played in containing the spread of the \n                      pandemic - even when the entire nation is experiencing worst of the pandemic.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Multiple preventive guidelines beyond mask mandates could have contributed to \n                      controlling the SARS-CoV-2 virus, so it is difficult to assess what proportion of \n                      case control is due solely to mask mandates. For example, states that adopted early \n                      mask mandates may have also been more likely to adopt other simultaneous mitigation \n                      measures. Similarly, those states may have residents that are more compliant with \n                      public health guidance and invested in community-wide mitigation, which would allow \n                      decision-makers the political will to implement such measures in the first place. \n                      Nevertheless, the timing of mask mandates and the subsequent changes in the growth \n                      of case rates align. States that implemented statewide mask mandates saw a slower \n                      growth in cases compared to those that did not, not just in the weeks that followed \n                      the mandates, but for months after. The discrepancies in case rate trends affirm the \n                      correlation between mask mandates and COVID-19 case rate, but they also highlight \n                      that a lack thereof puts states in precarious situations.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      It has been over a year since the first COVID-19 case was discovered in the \n                      United States, and now the pandemic has reached new heights with increasing \n                      concerns about potential new variants of the SARS-CoV-2 virus. Statewide mask \n                      mandates assert states’ positions on following guidelines and could be game \n                      changing towards flattening the curve in states that are currently experiencing \n                      the worst of the pandemic. As vaccination slowly catches up, it remains critical \n                      to mandate masks, protecting each other’s health and buying time for greater \n                      vaccine uptake. Far too many lives have been lost, and there is no timetable for \n                      the end of this calamity. We just might get a glimpse of the light at the end of \n                      tunnel if we take all the necessary courses of action now. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      \n\n                </Header>\n\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n\n\n\n\n\n\n    {blogTitle == \"povertyRelatedIssues\"&&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Blog</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                COVID-19 and Poverty-related issues\n\n\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n                This blog provides an update to our July 27th video, “COVID-19 and Poverty-related Issues.” What do state maps look like now?\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                       <Image width='600' height='350' href = '/media-hub/blog/povertyRelatedIssues' src='/blog images/pri/Image 15.png' />            \n\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlich, published on October 7, 2020  &nbsp;&nbsp; |  &nbsp;&nbsp; 2-minute read\n\n                      <br/>\n                      Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n\n                      <b> This topic was first covered in the July 27th video “COVID-19 and Poverty-related Issues.” </b>\n                      <br/>\n                      <br/>\n                        <iframe width=\"700\" height=\"400\" src=\"https://www.youtube.com/embed/IEojaw9cND4\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      COVID-19 is affecting every community differently. The COVID-19 Health Equity \n                      Dashboard compiles publicly available data from across the United States to \n                      track COVID-19 infections and deaths across counties while considering demographic, social, and economic context.  \n\n\n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Since COVID-19 coronavirus pandemic took off in the United States in 2020, \n                      data continue to show that poverty, lack of health insurance, socioeconomic \n                      vulnerability, and housing insecurity may all contribute to higher risk of \n                      contracting COVID-19 and having severe outcomes. In the United States, \n                      approximately 12 percent of people are experiencing poverty, 8.5 percent do \n                      not have health insurance; 10 to 15 percent experience housing insecurity, \n                      and 8 percent are unemployed (up from a high of nearly 15% in April) [1, 2, 3, 4, 5]. \n                      These issues are related. As the pandemic affects businesses and employment, the \n                      cycle of poverty may be reinforced.\n\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Looking at county comparisons on the COVID-19 Health Equity Dashboard, \n                      we can find visual representations of these statistics across many states.\n\n\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      To start visualizing, click on the tab “Map State.” By selecting a state and \n                      selecting “Total COVID-19 Cases per 100,000” under “COVID-19 Outcome Measure,” \n                      and then selecting “% Poverty” in “COVID-19 County Population Characteristics,” \n                      you can map these relationships. Cases per 100,000 (left) track with poverty \n                      (right) in Arizona, Alabama, and Georgia.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> ARIZONA: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 16.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> ALABAMA: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 17.png' /> </center>\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> GEORGIA: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 18.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n                      \n                      In New Jersey and Washington, the case rate roughly tracks with uninsured residents.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> NEW JERSEY: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 19.png' /> </center>\n\n                      \n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> WASHINGTON: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 20.png' /> </center>\n\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      The composite index of socioeconomic vulnerability, which takes \n                      into account poverty, unemployment, per capita income, and lacking \n                      a high school diploma, tracks with case rates in Mississippi, Alabama, and California.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> MISSISSIPPI: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 21.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> ALABMA: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 22.png' /> </center>\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> CALIFORNIA: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 23.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Housing and transportation vulnerability, a composite measurement that takes into \n                      account dense living structures, mobile homes, households with no vehicle available, \n                      and institutionalized group living, tracks with case rates in Florida and Oregon.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Two articles in the New England Journal of Medicine explore this issue: \n                      <a href = \"https://www.nejm.org/doi/full/10.1056/NEJMp2012114?query=TOC\" target=\"_blank\" rel=\"noopener noreferrer\">“Rural Matters — Coronavirus and the Navajo Nation,” </a>\n                      and <a href = \"https://www.nejm.org/doi/full/10.1056/NEJMc2023540?query=TOC\" target=\"_blank\" rel=\"noopener noreferrer\">“Contact Tracing for Native Americans in Rural Arizona.” </a>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      We encourage you to read more and think about the systemic issues that are \n                      leading to severe COVID-19 outcomes in Native American communities. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> FLORIDA: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 24.png' /> </center>\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> OREGON: </b>\n                      <center>      <Image width='850' height='450' src='/blog images/pri/Image 25.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> References: </b>\n                      <br/>\n                      1. <a href=\"https://www.census.gov/library/publications/2019/demo/p60-266.html\" target=\"_blank\" rel=\"noopener noreferrer\"> https://www.census.gov/library/publications/2019/demo/p60-266.html </a>\n                      <br/>\n                      2. <a href=\"https://www.census.gov/library/publications/2019/demo/p60-267.html\" target=\"_blank\" rel=\"noopener noreferrer\"> https://www.census.gov/library/publications/2019/demo/p60-267.html </a>\n                      <br/>\n                      3. <a href=\"https://www.enterprisecommunity.org/opportunity360\" target=\"_blank\" rel=\"noopener noreferrer\"> https://www.enterprisecommunity.org/opportunity360 </a>\n                      <br/>\n                      4. <a href=\"https://www.bls.gov/news.release/pdf/empsit.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"> https://www.bls.gov/news.release/pdf/empsit.pdf </a>\n                      <br/>\n                      5. <a href=\"https://www.bls.gov/charts/employment-situation/civilian-unemployment-rate.htm\" target=\"_blank\" rel=\"noopener noreferrer\"> https://www.bls.gov/charts/employment-situation/civilian-unemployment-rate.htm </a>\n                      <br/>\n\n                </Header>\n\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n\n\n\n\n    {blogTitle == \"swNativeAmericanCommunities\"&&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Blog</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                COVID-19 in SW Native American Communities\n\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n                This blog provides an update to our July 14th video, “COVID-19 in SW Native American Communities.” What do state maps look like now?\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                       <Image width='600' height='350' href = '/media-hub/blog/swNativeAmericanCommunities' src='/blog images/swna/Image 7.png' />            \n\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlich, published on October 1, 2020  &nbsp;&nbsp; |  &nbsp;&nbsp; 2-minute read\n\n                      <br/>\n                      Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n\n                      <b> This topic was first covered in the July 14th video “COVID-19 in SW Native American Communities” </b>\n                      <br/>\n                      <br/>\n                        <iframe width=\"700\" height=\"400\" src=\"https://www.youtube.com/embed/U-Aqx7vQocY\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      COVID-19 is affecting every community differently. The COVID-19 Health Equity Dashboard \n                      compiles publicly available data from across the United States to track COVID-19 infections \n                      and deaths across counties while considering demographic, social, and economic context.  \n\n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Since COVID-19 coronavirus epidemic took off in the United States in 2020, data continue \n                      to show that Native Americans, particularly in the Southwest, are disproportionately \n                      impacted by infection and death. Contributing factors may include high rates of poverty \n                      and chronic disease, lack of critical infrastructure like running water, isolation from \n                      health resources, crowded and multigenerational living conditions, and close-knit community \n                      support systems.\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Despite many of these Native American communities being located in rural areas, \n                      the low population density has not had a protective effect against infection as seen \n                      elsewhere in the country. The COVID-19 fatality rate (meaning the percentage of people \n                      who test positive who have died) in the state of Arizona is 2.5 percent [1], whereas in \n                      Navajo Nation (located primarily in Arizona as well as the other Four Corners states), \n                      it is 5.3 percent [2].\n\n\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Looking at county comparisons on the COVID-19 Health Equity Dashboard, we can find visual \n                      representations of these statistics across many states.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      To start visualizing, click on the tab “Map State.” By selecting a state and selecting \n                      “Total COVID-19 Deaths per 100,000” under “COVID-19 Outcome Measure,” and then selecting \n                      “% Native American” in “COVID-19 County Population Characteristics,” you can map these \n                      relationships. Deaths per 100,000 (left) track with the Native American population (right) \n                      in Arizona. So do poverty, diabetes, and socioeconomic vulnerability. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/swna/Image 8.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/swna/Image 9.png' /> </center>\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/swna/Image 10.png' /> </center>\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/swna/Image 11.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n                      \n                      Cases per 100,000 track with minority/language vulnerability.\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/swna/Image 12.png' /> </center>\n\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Directly east, in New Mexico, we see a similar pattern, although the case and \n                      death rate is lower overall. Deaths per 100,000 tracks with the Native American \n                      population, and lack of insurance tracks with cases per 100,000.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/swna/Image 13.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/swna/Image 14.png' /> </center>\n\n\n                  \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Two articles in the New England Journal of Medicine explore this issue: \n                      <a href = \"https://www.nejm.org/doi/full/10.1056/NEJMp2012114?query=TOC\" target=\"_blank\" rel=\"noopener noreferrer\">“Rural Matters — Coronavirus and the Navajo Nation,” </a>\n                      and <a href = \"https://www.nejm.org/doi/full/10.1056/NEJMc2023540?query=TOC\" target=\"_blank\" rel=\"noopener noreferrer\">“Contact Tracing for Native Americans in Rural Arizona.” </a>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      We encourage you to read more and think about the systemic issues that are \n                      leading to severe COVID-19 outcomes in Native American communities. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n\n                      <b> References: </b>\n                      <br/>\n                      1. <a href=\"https://www.azdhs.gov/preparedness/epidemiology-disease-control/infectious-disease-epidemiology/covid-19/dashboards/\" target=\"_blank\" rel=\"noopener noreferrer\"> https://www.azdhs.gov/preparedness/epidemiology-disease-control/infectious-disease-epidemiology/covid-19/dashboards/ </a>\n                      <br/>\n                      2. <a href=\"https://navajotimes.com/coronavirus-updates/covid-19-across-the-navajo-nation/\" target=\"_blank\" rel=\"noopener noreferrer\">https://navajotimes.com/coronavirus-updates/covid-19-across-the-navajo-nation/ </a>\n\n\n                </Header>\n\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n\n    {blogTitle == \"africanAmericanCommunity\"&&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Blog</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                COVID-19 in African American Communities\n\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n                This blog provides an update to our July 9th video, “COVID-19 in African American Communities.” What do state maps look like now?\n\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                       <Image width='600' height='350' href = '/media-hub/blog/africanAmericanCommunity' src='/blog images/aac/Image 1.png' />            \n\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlich, published on Sep. 30, 2020  &nbsp;&nbsp; |  &nbsp;&nbsp; 2-minute read\n\n                      <br/>\n                      Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n\n                      <b> This topic was first covered in the July 9th video “COVID-19 in African American Communities” </b>\n                      <br/>\n                      <br/>\n                        <iframe width=\"700\" height=\"400\" src=\"https://www.youtube.com/embed/0eFjhnDQe6g\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                      <br/>\n                      <br/>\n                      <br/>\n                      COVID-19 is affecting every community differently. The COVID-19 Health Equity Dashboard compiles publicly \n                      available data from across the United States to track COVID-19 infections and deaths across \n                      counties while considering demographic, social, and economic context.\n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Since COVID-19 coronavirus epidemic took off in the United States in 2020, data continue \n                      to show that African Americans are disproportionately impacted by infection and death. \n                      In the US, African Americans have contracted COVID-19 at 2.6 times the rate of white \n                      non-Hispanic people, are hospitalized at 4.7 times the rate, and die at 2.1 times the \n                      rate [1]. Per 100,000, 88 African Americans have died versus 40 white Americans. African \n                      Americans have the highest rate of death of any racial or ethnic group in the United States [2]. \n                      At a community-level, this manifests  as a striking visual correlation between the proportion \n                      of a county that is African American and its per capita cases of COVID-19.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <center>      <Image width='850' height='450' src='/blog images/aac/Image 2.png' /> </center>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Looking at county comparisons on the COVID-19 Health Equity Dashboard, \n                      we can find visual representations of these statistics across many states.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      To start visualizing, click on the tab “Map State.” By selecting a state and selecting \n                      “Total COVID-19 Cases per 100,000” under “COVID-19 Outcome Measure,” and then selecting \n                      “% African American” in “COVID-19 County Population Characteristics,” you can map these \n                      relationships. Cases per 100,000 (left) track with the African American population (right) \n                      in places like Florida, Mississippi, Tennessee, and Virginia.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n\n                      <b> FLORIDA: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/aac/Image 3.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> MISSISSIPPI: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/aac/Image 4.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> TENNESSEE: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/aac/Image 5.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> VIRGINIA: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/aac/Image 6.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> References: </b>\n                      <br/>\n                      1. <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/covid-data/investigations-discovery/hospitalization-death-by-race-ethnicity.html\" target=\"_blank\" rel=\"noopener noreferrer\"> \n                          https://www.cdc.gov/coronavirus/2019-ncov/covid-data/investigations-discovery/hospitalization-death-by-race-ethnicity.html \n                        </a>\n                      <br/>\n                      2. <a href=\"https://www.apmresearchlab.org/covid/deaths-by-race#counts\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.apmresearchlab.org/covid/deaths-by-race#counts </a>\n\n\n                </Header>\n\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n\n\n\n\n    {blogTitle == \"underlyingConditions\"&&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Blog</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                COVID-19 and Underlying Conditions\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n                This blog provides an update to our July 1st video, “COVID-19 and Underlying Conditions.” What do state maps look like now?\n\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                       <Image width='600' height='350' href = '/media-hub/blog/underlyingConditions' src='/blog images/underlying/underlying_1.png' />            \n\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlich, published on Sep. 28, 2020  &nbsp;&nbsp; |  &nbsp;&nbsp; 2-minute read\n\n                      <br/>\n                      Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n\n                      <b> This topic was first covered in the July 1st video “COVID-19 and Underlying Conditions” </b>\n                      <br/>\n                      <br/>\n                        <iframe width=\"700\" height=\"400\" src=\"https://www.youtube.com/embed/2lWS3LGZUFU\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                      <br/>\n                      <br/>\n                      <br/>\n                      COVID-19 is affecting every community differently. The COVID-19 Health Equity Dashboard compiles publicly \n                      available data from across the United States to track COVID-19 infections and deaths across counties \n                      while considering demographic, social, and economic context. \n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      There are a lot of underlying conditions that may predispose certain people to develop severe COVID-19 \n                      infection and be at a higher risk of hospitalization and death. These include having underlying health \n                      conditions like obesity and diabetes, and being over 65 years old. Since COVID-19 coronavirus epidemic \n                      took off in the United States in 2020, data continue to show that people with underlying conditions are \n                      disproportionately impacted by infection and death. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      42% of US adults have obesity, and data shows that especially among adults under age 60 and who are male, \n                      obesity leads to higher mortality among those with COVID-19 [1]. Due to the impact of obesity on the \n                      immune systems, individuals with obesity may also be more susceptible to COVID-19 infection in the first place. \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Looking at county comparisons on the COVID-19 Health Equity Dashboard, we can find visual representations \n                      of these statistics across many states.\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      To start visualizing, click on the tab “Map State.” By selecting a state and selecting “Total COVID-19 \n                      Cases per 100,000” under “COVID-19 Outcome Measure,” and then selecting “% Obesity” in “COVID-19 County \n                      Population Characteristics,” you can map these relationships in any state. Cases per 100,000 (left) \n                      track with obesity (right) in states like Alabama, Idaho, and Oregon.\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> ALABAMA: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/underlying/underlying_2.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> IDAHO: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/underlying/underlying_3.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> OREGON: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/underlying/underlying_4.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Diabetes is another risk factor for COVID-19 complications. Over 10% of the US population has Type II diabetes, \n                      and data shows that having Type II diabetes increases the risk of having serious complications from COVID-19 - \n                      including death while hospitalized, based on data from the UK [2].\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      In Arizona and New Mexico, deaths per 100,000 (left) track with the percent of county residents who have diabetes (right).\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> ARIZONA: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/underlying/underlying_5.png' /> </center>\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> NEW MEXICO: </b>\n                      <center>      <Image width='800' height='500' src='/blog images/underlying/underlying_6.png' /> </center>\n                      <br/>\n                      <br/>\n                      <br/>\n                      \n                      Age is also a risk factor for COVID-19 due to older individuals having less robust immune systems and \n                      higher prevalence of comorbidities. \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      In the United States, 15% of the population is over age 65, but 80% of COVID-19 deaths have been in \n                      people over age 65 [3]. Visually, however, this is hard to see in state maps, because older people \n                      disproportionately live in rural parts of the country, and COVID-19 disproportionately affects urban \n                      areas due to population density. The map on the left shows the US population density per county and \n                      the right shows percent of the population over 65 years old.\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <Grid>\n                        <Grid.Row columns = {2}>\n                          <Grid.Column>\n                            <Image width='390' height='280' src='/blog images/underlying/underlying_7.png' />\n                          </Grid.Column>\n                          <Grid.Column>\n                            <Image width='390' height='250' src='/blog images/underlying/underlying_8.png' />\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b> References: </b>\n                      <br/>\n                      1. <a href=\"https://www.acpjournals.org/doi/10.7326/M20-3742\" target=\"_blank\" rel=\"noopener noreferrer\"> https://www.acpjournals.org/doi/10.7326/M20-3742 </a>\n                      <br/>\n                      2. <a href=\"https://www.thelancet.com/journals/landia/article/PIIS2213-8587(20)30272-2/fulltext\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.thelancet.com/journals/landia/article/PIIS2213-8587(20)30272-2/fulltext </a>\n                      <br/>\n                      3. <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/need-extra-precautions/older-adults.html#:~:text=In%20general%2C%20your%20risk%20of,aged%2065%20years%20and%20older\" target=\"_blank\" rel=\"noopener noreferrer\"> \n                          https://www.cdc.gov/coronavirus/2019-ncov/need-extra-precautions/older-adults.html#:~:text=In%20general%2C%20your%20risk%20of,aged%2065%20years%20and%20older \n                        </a>\n\n\n                </Header>\n\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n\n\n\n\n\n\n\n    {blogTitle == \"Will_SARS-CoV-2_beat_the_Power_Five_Conferences\"&&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Blog</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n                Will SARS-CoV-2 beat the Power Five Conferences?\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n                  Playing college football during the COVID-19 pandemic may unduly increase risk of infection, especially for African American student-athletes, our data suggest.\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                       <Image width='600' height='350' href = '/media-hub/blog/Will_SARS-CoV-2_beat_the_Power_Five_Conferences' src='/blog images/power five/blog1cover.jpeg' />            \n\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Pooja Naik, edited on Aug. 19, 2020  &nbsp;&nbsp; |  &nbsp;&nbsp; 4-minute read\n\n                      <br/>\n                      Contributors: Leanna Ehrlich, Aditya Rao, Alka Rao, Star Liu, K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n\n\n                      College football season is approaching, but the COVID-19 pandemic still looms large in the United States. \n                      The ability for colleges to pursue a 2020-2021 football season remains unclear, as it seems impossible to \n                      maintain student-athlete safety during practices and games. While some of the Power Five conferences like\n                      the Big Ten and Pac-12 have switched to conference-only games, other conferences are pushing their season\n                      to start late, at the end of September, or waiting until Spring 2021 to play any games. The unavoidable\n                      fact remains that there is no way to maintain physical distancing between players during practices and\n                      games. In the absence of a vaccine, physical distancing is the only way to prevent community spread, \n                      and this necessity clashes with the reality of college football. \n                \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      According to <a style ={{color: \"#397AB9\"}} href=\"http://www.ncaa.org/about/resources/research/ncaa-demographics-database\" target=\"_blank\" rel=\"noopener noreferrer\"> NCAA Demographics Database</a>, almost half of all college football players in the United States \n                      are African Americans. Meanwhile, African Americans only make up 13% of the US population as per <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\"> American Community Survey </a>\n                      by the U.S. Census Bureau. <a style ={{color: \"#397AB9\"}} href=\"https://doi.org/10.1111/pai.13271\" target=\"_blank\" rel=\"noopener noreferrer\"> Research from Italy and Germany</a> has highlighted the heightened \n                      risk of infection posed by playing college football, a strenuous exercise makes athletes more likely to inhale \n                      virus particles to the lower areas of their lungs - putting athletes such as football players at a higher risk \n                      of infection as they share close airspace on playing fields. Therefore, playing college football is an occupational \n                      risk for COVID-19 that disproportionately falls on African American young men. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      The college football scenario mirrors the disparate impact of the pandemic across American communities, \n                      <a style ={{color: \"#397AB9\"}} href=\"https://www.thedailybeast.com/coronavirus-is-hitting-black-and-hispanic-americans-way-harder-cdc-data-shows?ref=scroll\" target=\"_blank\" rel=\"noopener noreferrer\"> with significantly higher rates of infection and death seen in many marginalized populations</a>\n                      , including \n                      African Americans. Mortality rate in African Americans continue to rise and is \n                      <a style ={{color: \"#397AB9\"}} href=\"https://covidtracking.com/race\" target=\"_blank\" rel=\"noopener noreferrer\"> 2.5 times as high as White Americans’ mortality rates. </a>\n                      As communities of color grapple with higher infection rates caused by a wide \n                      range of factors, including higher participation in essential occupations and higher levels of underlying \n                      chronic disease, poverty, and constrained access to healthcare, it is important to give special consideration \n                      to the health of African American student athletes and occupational risk posed by college football season.\n\n                      <br/>\n                      <br/>\n\n                </Header>\n\n                                <center>      <Image width='800' height='500' src='/blog images/power five/Figure 1.png' /> </center>\n                                <p style = {{marginLeft: 0, fontSize: \"14pt\", fontWeight: 300, lineHeight: \"16pt\", lineSpacing: 0}}> \n                                  Figure 1: COVID-19 outcomes in all the 62 counties where conferences are located versus other counties. \n                                  Data sources from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a>  \n                                  </p>\n                \n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n                      <br/>\n\n                      In order to make an informed decision about how the college football season can proceed, it is important \n                      to understand the status of COVID-19 outbreaks in the counties where the Power Five schools are located \n                      and to account for interstate travel. To find out how these counties are affected by COVID-19, we used \n                      data compiled through \n                      <a style ={{color: \"#397AB9\"}} href=\"http://covid19.emory.edu/\" target=\"_blank\" rel=\"noopener noreferrer\"> The COVID-19 Health Equity Dashboard </a>\n                      to compare the COVID-19 infections and deaths \n                      in these counties with the rest of the counties in the country (Figure 1), adjusted for population. The \n                      analysis was then repeated to investigate how per capita infections and deaths compared across counties \n                      in each of the Power Five Conferences (Figure 2).\n\n                      <br/>\n                      <br/>\n\n                </Header>\n\n                                <center>      <Image width='800' height='500' src='/blog images/power five/Figure 2.png' /> </center>\n                                <p style = {{marginLeft: 0, fontSize: \"14pt\", fontWeight: 300, lineHeight: \"16pt\", lineSpacing: 0}}> \n                                  Figure 2: COVID-19 outcomes among counties where schools in each of the Power Five Conferences \n                                  are located and counties where none are located. \n                                  Data sources from the <a style ={{color: \"#397AB9\"}} href=\"https://www.nytimes.com/interactive/2020/us/coronavirus-us-cases.html\" target=\"_blank\" rel=\"noopener noreferrer\"> New York Times Coronavirus (Covid-19) Data </a></p>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <br/>\n\n                      We found that COVID-19 infection and mortality rates in the total population were much higher in counties \n                      with the Power Five Schools compared to those without. We performed a statistical test (Welch t-test) to \n                      assess whether the mean difference between COVID-19 per capita infections and deaths were due to the huge \n                      difference in the number of counties with and without D1 football teams.  \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Our data as of August 16, 2020 suggests that counties with the Power Five schools are more affected \n                      by COVID-19. These counties have 19% higher COVID-19 cases per capita \n                      and 12% higher COVID-19 deaths per capita than the rest of the country. Notably, the Atlantic Coast Conference \n                      (ACC) and Southeastern Conference (SEC) schools are located in the counties most affected by COVID-19. Respectively, \n                      these counties have approximately 25% and 63% more COVID-19 cases per capita than counties without the Power Five schools. \n                      The Welch t-test demonstrates that these differences are indeed statistically significant. This raises \n                      the question of whether it would be safe to bring student-athletes back to counties that are already \n                      hard-hit by COVID-19.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Even if the ACC and SEC decide to play conference-only games, there is still a high risk of infection for \n                      everyone playing within the conference due to lack of social distancing and high infection rates in these \n                      counties. Nevertheless, economic implications are large; for example, a “no-go” decision from any of the \n                      three remaining powerhouse conferences could cost the city of Atlanta $100 million in expected revenue from \n                      hosting games in the first week of conference play. However, it is reckless to risk the lives of athletes to \n                      ensure the college sports’ revenue streams. With athlete scholarships tied to team membership, conferences \n                      and schools must find a balance between supporting educational opportunities for student athletes while not \n                      unduly exposing student athletes to additional risk of COVID-19 infection. And, the outcome of these decisions \n                      will have a significant impact on students of color, who make up a large share of student athletes.\n\n\n                </Header>\n              </Header.Content>\n            </Header>\n  \n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n    </div>);\n}\n","import AppBar from './AppBar';\nimport Notes from './Notes';\nimport { useParams, useHistory } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\n\nimport { Container, Grid, List, Divider, Image, Breadcrumb, Header, Segment } from 'semantic-ui-react'\n\n\nexport default function AboutUs(props){\n  const history = useHistory();\n  let {podcastTitle} = useParams();\n\n  return (\n\n    <div>\n    <AppBar/>\n\n    {podcastTitle === \"Katie_Kirkpatrick_on_economic_responses\" &&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n              “You can't have good public health, but not have equity and economic growth”: A conversation with Katie Kirkpatrick about economic responses to the COVID-19 pandemic.\n\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/You-cant-have-good-public-health--but-not-have-equity-and-economic-growth-A-conversation-with-Katie-Kirkpatrick-about-economic-responses-to-the-COVID-19-pandemic-eooltg\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlich on Jan. 11, 2021\n\n                      <br/>\n                      Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n                      <b>Transcript</b>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:00:03] </b> Welcome back to the COVID-19 Equity and Outcomes podcast. Today we're talking to Katie Kirkpatrick, the President and CEO of the Metro Atlanta Chamber. We'll be hearing about what it's been like to run the Metro Atlanta Chamber during the pandemic, and what sorts of considerations have had to be made for economic development and support during these challenging times. Welcome, Ms. Kirkpatrick.\n                        \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Katie Kirkpatrick: [00:00:25] </b> Good morning. Thanks for having me.\n\n                      <br/>\n                      <br/>\n                      <br/> \n\n                      <b>Leanna Ehrlich: [00:00:28] </b> Can you please first tell our listeners a little bit about your professional background and your work at the Metro Atlanta Chamber?\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Katie Kirkpatrick: [00:00:35] </b> It's interesting, when you when you introduced and talked about my role at the Metro Atlanta Chamber – interestingly enough, I became the president and CEO of the Metro Atlanta Chamber on June 15, 2020. So right in the middle of the pandemic, and now in hindsight, at the beginning of the pandemic; but prior to coming into that role, I was with the chamber for 13 years. In the public policy group, I ultimately was the chief policy officer for the Metro Atlanta Chamber working on public policy, government affairs, and political action on behalf of the business community. But my background and my educational degree, I'm an environmental engineer, and professionally licensed in a number of states, and really cut my teeth on public policy, through the environmental lens, and looking at Environmental Public Policy. So that's a little bit about my background. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      From a chamber perspective, we are a business organization that focuses on economic development. And that is a wide range of activities from starting new companies, expanding those that are here, and also recruiting new ones to move to the region. Of course, I've touched on public policy, as an activity of the Chamber, and then of course, promote, which is telling the story of our region, not only to our region's residents, but also to those in the United States and abroad. So, really positioning Atlanta as a global city.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:02:11] </b> So how would you say over the last few months, you've seen the coronavirus pandemic impacting businesses and Atlanta, what have been some of the major impacts in your view and how they've been different between industries in the region?\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Katie Kirkpatrick: [00:02:24] </b> I don't think you're going to be surprised when I say that, about the middle of March here in Georgia, most companies had to pivot hard, from an environment where we filled up office buildings, and retail establishments and restaurants, and go to a virtual work environment. And so I think that was an immediate learning curve for companies – they may have been set up for an occasional, maybe, day or half day at home. But for the majority of employees that work in a commercial office space, that was not the norm. And so companies learned very quickly about technology needs, and what types of environments were conducive for their employees working from home. \n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      I think you have a whole other set of industries that also at that time had to think about frontline employees and their health and well-being. And to say that that wasn't already a priority, is a misnomer in a way. We already provided adequate safety and precautions for those that might be in jobs where you were interacting with the public. But this is a very different crisis. And we didn't have a whole lot of information at the beginning, about how the virus was transmitted. So how did you provide the appropriate personal protective equipment? To what types of employees and what types of settings, was a real conundrum? And then, of course, you had the supply chain issues.\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      To tee off on supply chain issues, it's really interesting when you look back, and we're probably seeing a little bit of it now, too, right – the grocery stores, no longer could you find toilet paper and paper towels. But that was not because they didn't exist. It was a supply chain issue. When you think about toilet paper, about half of toilet paper manufacturing in the United States is for residential use, and about half is for commercial. So our entire universe quit going to commercial in spaces, including schools, right? It's not just office schools, and everyone was at home. So your supply chain was not set up to meet the demands of 90% of the US working or being in their homes. It forced that type of industry to have to re imagine their supply chain to meet the new demand, and it takes time for that to happen. And then those companies also have to think about well, I'm doing this in the short term, what does it look in the mid to long term, because I'm thinking about capital investments that have to be made. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      The other piece to me – when I think at the beginning of the pandemic, technology and work from home was a big pivot and required ingenuity – I think the second piece was really focused on supply chain and logistics, and how to get products where they needed to go. You can also think of personal protective equipment, right, we had high demands. So you saw companies like Home Depot, who would normally stock the N-95 mask for construction workers, make the decision to no longer stock those masks, so those masks could go to health care workers, frontline workers, etc. So, a lot of decisions were being made in that supply chain space. \n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      And then the last thing I would just say to you, is there was a period of uncertainty. And so decisions about investment had to be put on hold for a period of time. Because, you can think about the home selling industry, or real estate, residential real estate industry, it cratered in April.  Those companies are thinking about, okay, well, what do we what do we need to forecast going forward? Well, guess what happened, all of a sudden, toward May, home sales began to pick up and then by June, it was skyrocketing. And many residential real estate firms are having their best year ever, because all of us were making decisions about where we wanted to work and live. And that was one place, your home. And so people were moving and buying new homes and used home – or used homes, that's not the right word, but existing stock at a much higher pace. And that, combined with low interest rates, really drove that market. So, in about a five week turn, that industry went from “we might not survive” to “we're having our best year ever.” So ,it was really a time of transformation for many of these industries. \n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Then last – it doesn't take an expert – our hospitality industry, which is a thriving part of our economy, has been decimated. That industry has a high percentage of small business owners in the hospitality space. So we've seen a real impact too, on small business owners with the loss of the business in the hospitality space.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:07:39] </b> That's been very difficult to see. You touched on a lot of different changes that we've seen over the last really nine months at this point, and some very surprising, like, “Where's all the toilet paper?”; and supply chains really needing to pivot very quickly over a month or two; the real estate market, having a really good year at the end, which, like you said, is due to consumers realizing this is a long-term issue, and we need to really think about where we want to be living. That seems like it was a surprising upwards turn. And then the hospitality industry not doing well, that future being more uncertain.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Katie Kirkpatrick: [00:08:15] </b> You have captured that very well.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:08:20] </b> So thinking about all those different issues, can you talk about the Task Force to Restore Georgia's Economy? In the words of the MAC, you “aim to provide a blueprint for how Metro Atlanta and our state might accelerate recovery in a fiscally responsible and practically achievable way that takes into consideration our most vulnerable populations and prioritizes the health of our families and neighbors.” So how did the Task Force get started? Who's involved in the task force? And can you explain how you're balancing this need for economic recovery with residents’ health in the region?\n\n                      <br/>\n                      <br/>\n                      <br/>\n                      \n                      <b>Katie Kirkpatrick: [00:08:50] </b> Absolutely. This really was an important part of our work. In the second quarter, how it got started was, I was sitting at home toward the end of March, asking myself “what is the role of a business organization?” as we're all trying to adapt and understand almost a river of information coming at us on public health and the various controls that were put in place, like lockdowns and other things. And I thought, now is the time for us to leverage the business mindset and think forward. I had full faith that at some point in the future, we would overcome the virus and we needed to be prepared for that moment. And Georgia was already set for success in the sense that our economy was performing above the national average in February. And so there were assets and opportunities to build upon. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      So we called on a number of retired executives. We reached out to John Rice, who at the time, was still part of the senior team at General Electric (GE); we recruited a combination of retired executives and current CEOs of major companies and our community. I think we had 50. And then, thanks to the Boston Consulting Group, who gave us pro bono work, we begin to dig into industry segments, we took a look at consumer confidence, we took a look at varying tactics and strategies. Not only what were local governments taking, our state government, but maybe, what were other countries doing, as well, in terms of mitigating the impact virus. So that's how we began. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      And here's what was not surprising, but interesting – because we really were looking at policy recommendations that we could go and hopefully partner with elected officials, to move things forward. A good example of one of those is, and you might chuckle at this, the delivery of alcohol was actually not legal in the state of Georgia. So you couldn't use Instacart and have a case of beer delivered to your home. That just didn't make sense when we were when we were locked down. And we had businesses that actually had alcohol to sell and couldn't do it because of an obstacle like that. So we worked with the industry, and we worked with lawmakers and were able to successfully move that through. Now, why is that important? Well, certainly for all of our enjoyment, right. But really, because that led to tax revenue, and again, led to local and state governments to pick up some tax revenue coming in at a time when we were uncertain what kind of revenue collections would look like for the state, and those revenues fund those critical services like education, and health care. It was very important for us to think about how do we support local and state government. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      What I want to want to kind of point out here is that we came up with, I think, over 150 ideas, by talking with executives and interviewing them and surveying them. But what was really fundamental at the end of the day was that consumer confidence will drive our economic recovery. And until we have the consumer confidence that they can go to work safely send their children to school safely, shop and dine safely, and travel safely, then our economy will remain in a position of not full recovery. So in addition to pursuing policy recommendations, we also began really leaning into the health, public health space, thinking about health disparities, why were we seeing different outcomes in our communities, and working and building a stronger relationship with the Department of Health, both the state and the local level, finding ways for the business groups and companies to really be able to leverage their employee base customers, and stakeholders to impact public health and hopefully, then accelerate the economy. \n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      I'll leave you with one example. If you think about Delta Airlines, they're our hometown airline, but also Georgia's largest employer. And they have a very robust health and wellness plan, to make sure that their customers can travel safely, and it's their number one priority. They were the one of the first ones to say we're going to mandate a mask. And you either wear a mask on our flight, or you can choose another airline. And they have held fast to that. What's interesting is, their scores have gone off the charts in terms of customer satisfaction and feeling safe flying. That ultimately is going to help them recover, that that creation of trust, and that brand value is going to benefit their economic recovery as well. So hopefully that answered your question around “restore.”\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:14:27] </b> Yes, it definitely did. That's really interesting about Delta. I've heard about the mask mandate, and I have not flown since the pandemic started. And I'm not trying to turn this into an ad for Delta, but if I were to fly, it would be Delta, because I know that they are the only airline to be guaranteed that sort of safety!\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Katie Kirkpatrick: [00:14:43] </b> I'm happy to had the experience of visiting the airport and visiting a plane and seeing the protocols actually in real life, in real time. I'm very proud of the work that a company that is based here is doing to keep the flying customer safe.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:15:08] </b> Yes, absolutely. Well, thank you so much for joining the Equity and Outcomes podcast today. Do you have anything else that you've thought of related to the business community and COVID-19 response that you've been working in that you think our listeners should know?\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Katie Kirkpatrick: [00:15:21] </b> I'll just leave you with one thought. We are not operating in a vacuum when we think about economic recovery. We are mindful that different communities have been impacted at different rates. Industries have been impacted. Of course, we know that black business owners have been impacted a disproportionate rate, black and Latinx. When we're thinking about moving forward as a business group, business organization, we think about three things, one of which is public health and restoring consumer confidence. The second piece is accelerating economic recovery for all Georgians, not just a few. And the third piece, and these are all three of these are tied together is racial equity. Equity is so important because you can't have good public health, but not have equity and economic growth, and really taking a look at social justice issues. All three of these have to work in concert. So I'll leave you with that message that we view all three as interdependent, and we approach it in that way.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:16:28] </b> Well, that's really great to hear. Thank you so much for joining today.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Katie Kirkpatrick: [00:16:32] </b> Oh, you're welcome, Leanna, happy to join.\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:16:36] </b> Yes, happy holidays. Thank you.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                </Header>\n              </Header.Content>\n            </Header>\n\n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n    {podcastTitle === \"Allison_Chamberlain_on_public_health_education_pandemic\" &&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n              “A teaching opportunity for many years to come”: Dr. Allison Chamberlain on public health education in the time of the COVID-19 pandemic\n\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/A-teaching-opportunity-for-many-years-to-come-Dr--Allison-Chamberlain-on-public-health-education-in-the-time-of-the-coronavirus-pandemic-emk7in\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlich on Nov. 18, 2020\n\n                      <br/>\n                      Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n                      <b>Transcript</b>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:00:00] </b> Welcome back to the COVID-19 Equity and Outcomes Podcast Series. Today we're talking to Dr. Allison Chamberlain, a Professor of Epidemiology at the Emory Rollins School of Public Health. So, welcome to the podcast, and thank you for being here. \n                        \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:00:14] </b> Thanks, glad to be here.\n\n                      <br/>\n                      <br/>\n                      <br/> \n\n\n                      <b>Leanna Ehrlich: [00:00:17] </b> Could you first tell our audience a little bit about your background directing the Emory Center for Public Health Preparedness and Research, and the Emory COVID-19 Response Collaborative, especially in these very recent challenging pandemic times?\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:00:31] </b> Certainly, yeah. I am acting director of this Emory Center for Public Health Preparedness and Research, which is an academic center that's been around since right after – since, I think, about 2001, 2002. Right after the 9/11 attacks, and the anthrax attacks. It was founded by a woman named Ruth Berkelman, a woman who was faculty at Emory for a number of years after she had a long career at the CDC. She was an infectious disease epidemiologist and physician, and she was the person who hired me, actually, at the Center for Public Health Preparedness and Research back in 2007, when I first came to Emory, as a staff person. \n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      I have been with the Center since then, so about 13 years; and see the Center of focus on a lot of different topics in public health preparedness, primarily around infectious disease preparedness and response. And the Center's mission really is to focus on how we can better learn from public health preparedness, infectious disease outbreaks, pandemics, things like that, to better prepare as a nation for what the future might hold with respect to these types of threats. So, we have done a lot of work on a variety of different topics ranging from Zika virus disease to, back all the way to H1N1, vaccine distribution, vaccine allocation and promotion; things that are a little bit more common, like Legionnaires disease, and how you can prepare or prevent Legionella overgrowth, for instance, in premise plumbing. And thinking through how as, you know, the public health field, we can better prepare ourselves and our residents, essentially, for threats that might be both common and less common, like pandemics or bioterror events.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      So I've had a long history with the Center, and it's been an exciting area to work in. By training, I'm an infectious disease epidemiologist, but have a background in public health preparedness that goes back to some work that I had done in Washington, DC prior to moving to Atlanta in 2007. So I have a kind of a background – I started out my career in in bio-defense policy and biosecurity which is really looking at how you how you prevent the misuse of legitimate life sciences research for nefarious purposes, like bioweapons. So, I've taken a number of twists and turns down paths that more or less always have something to do with infectious disease, epidemiology, and preparedness. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      In 2017, I ended up starting to work as an epidemiology consultant down at the Fulton County Board of Health, here in Atlanta, which is one of our local health departments. I took on that role, because I found myself really eager to get some experience working at a state or local public health level. I had never done that before. And I thought, if I'm going to be teaching – like the class that I teach now, that you're in, Leanna, about public health preparedness and practice – I wanted to get that experience working inside of the organizations that do public health preparedness, as part of their purview. And they're charged – they're the ones that are trying to work with communities, to make sure that they stay safe in the event of public health threats. And so I started working down there in 2017, with the Epidemiology Division, and trying to use my epidemiologic toolkit to help them analyze data that they didn't really have, necessarily, the time to dive in deeply to, but if they did, it could really help improve their programmatic services. So I ended up doing a lot of work down there on STDs, actually, and looking at risk factors for HIV seroconversion among women, risk factors for recurrent syphilis; but in my experience down there, really got intimately aware of how a local health department operates and what their successes are, what their challenges are, what their strengths are, what their weaknesses are. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      And that really set me up to be able to lead this this new initiative that we have now called the Emory COVID-19 Response Collaborative, that is really designed to help put our talented academic, faculty, staff and students into the service of our state and local public health department partners right now, during this COVID-19 crisis. As academics, we have a lot of skill sets, analytic skill sets, data collection skill sets, other types of things that we could really lend that expertise to, in this critical time, to our public health partners that are trying to combat COVID-19 here in Georgia. And so that is the premise behind the new Emory COVID-19 Response Collaborative. And it's been exciting to help sort of bridge the gap between academia and public health practice right now.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:05:50] </b> That's so great. There are so many resources at Rollins. So it's really cool that you're helping to harness all those skill sets to combat the pandemic locally, as well as people who are jointly appointed at CDC, and have all of this blend of academic and response experience. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:06:12] </b> Exactly.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:06:15] </b> So in addition, you talked about being a practitioner of epidemiology and public health preparedness, but of course, you also teach this class at Rollins on Public Health Preparedness and Practice, and I'm one of the students this semester. For me, this was a completely new topic – I had always studied mostly chronic disease and climate change. My interest in the topic was really spurred by the pandemic, which perhaps was true of some other students as well. So, I'm very curious about how you have been viewing this moment to prepare the next generation of public health students who will soon be entering the workforce, if they aren't already. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:06:47] </b> Yeah, this is a great question. You know, I think this is a remarkable time to be a student of public health. There are so many instances, in our history as public health students, all of us, where we already have data sets that we're going to analyze, and they're all from a previous epidemic, or pandemic, or outbreak, or something like that. But right now, we are in the midst of the largest pandemic that we've experienced in 100 years, and we are the ones that are collecting the data and being able, as a student of public health, to learn how hard it is to collect the data that we need to collect right now, to fully understand the epidemiology of this disease. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      What's unique about this point in time is that we have not experienced a disease on this scale during the digital age. So that that means that we're all connected in terms of communication by cell phones, and internet. And while some of that can really facilitate our ability to collect data, we're learning sometimes that's a big hindrance, when traditional activities, like contact tracing, for instance, are sort of grounded in, you know, the need for people to be answering their phones. And I think that's illustrated what are the pros and cons of technology during this type of pandemic right now. And we're really grappling as a public health enterprise with how to collect the data that we need to both understand, like I said, the epidemiology, but also to stop transmission. And when a lot of it has to do with people being responsive to requests from entities, public health departments that they may have never even had an interface with, they've never heard of them before, and giving sensitive data away over a cell phone number that they don't recognize sometimes, that's a challenge. That is a big challenge. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      But I think that in terms of being a student and thinking as an instructor myself, and training you all right now, just to be able to impart the gravity of what it's like to be inside the health department right now, what it's like to collect the data, giving you all opportunities to serve alongside of Public Health Department colleagues right now – I think it is just an invaluable point at which to start your career so that you learn exactly what it takes to stay the course with respect to all these different ebbs and flows of disease case counts and percent positivity and what that all means and how it relates to each other, with respect to understanding what we're going through. It's just an unprecedented time to have all of these inputs coming at you with respect to learning opportunities and examples like we've never seen before.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:09:47] </b> Yes, this is it's truly amazing to be a public health student right now, and I certainly didn't anticipate any of that, when I started a year and a half ago. But it's been crazy to really be learning in real time. And like you said, have data and have case studies that are unfolding right now, not a pandemic from 100 years ago, or 50 years ago. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:10:10] </b> That’s right.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:10:12] </b> So I'm curious about how you think this pandemic will influence public health education long term. So just like thinking short term, you seem to have really redesigned a lot of our classes this semester, to focus in many cases on COVID, for our topic of the week, or just sort of take that angle in approaching whatever topic we're learning about. Do you think that is going to be a long-term change for this class, and what about other professors? Is COVID-19 really going to be what professors are teaching about, and what students are studying, for many years to come?\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:10:44] </b> I do. I think that between now and 100 years ago, when we first had the most similar pandemic, the 1918 Influenza, there have been a number of different seminal disease milestones, I would say, things that have really revealed themselves to be teaching opportunities, more so than others. And I can think of, for instance, the HIV epidemic, that that was a career-setting disease discovery. And understanding what the root cause of HIV and how it is transmitted, and how it can be stopped – I think that's a great example of how many of our examples in public health practice and teaching come from that type of time in our public health history. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      Other sort of instances, I can think of, understanding learning from the eradication of smallpox, or the burgeoning obesity epidemic, things like that, that we're really utilizing to teach our students key aspects of how health and society intersect. And I think that this pandemic right now is going to change public health teaching for many years to come. In similar ways, COVID has revealed so many, pulled the blanket away from so many underlying societal conditions that contribute to health and the disparities that exist, and that have contributed to where we're seeing ourselves right now, and how COVID is affecting different populations differently. I feel like that, in and of itself, is going to be a lesson that we're going to be continuing to dissect for years to come. So, I think that more so now than ever, for more concentrated disciplines within public health, like infectious disease epidemiology, we're going to be focusing so much more on some of these social inequities and underlying systemic and cultural issues that perhaps we hadn't really focused on so much in the domain of infectious disease epidemiology before.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      I think that it is going to be, again, going back to that whole sort of pandemic in a digital age, making a shift to think about more creative ways that we can engage people in embracing public health and outreach to communities that we might not have been as effective in reaching before. And figuring out how we can do our jobs better with respect to the most foundational aspects of epidemiology, in terms of case investigations and contact tracing – how can we maybe turn it on its head like we've never thought before, to try to empower people on their own, to give us close contacts and details about their illness, that perhaps deviates a little bit from the way we've done it in the past. So I think that, yes, absolutely, this whole experience that we've been experiencing now for the past eight or nine months of COVID is going to be going to remain such a teaching opportunity for many years to come.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:14:08] </b> Yeah, I really like how you highlighted that. So many health disparities and social inequities are really having a harsh light shined on them by the pandemic. That's exactly what the COVID-19 Health Equity Dashboard is trying to visualize. And I also really agree that a paradigm shift might be needed in how we contact trace. As someone who, I was very briefly a contact tracer this summer just for about two months, it was very difficult at times, and this is the only pandemic or situation that I've ever contact traced in, but I can see how there are a lot of benefits to the digital age like being able to share information more easily, but also a lot of drawbacks and concerns about privacy and who is contacting you, and these issues probably had not come up very much before in any contact tracing efforts because you never needed to roll it out at this massive scale.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:14:57] </b> That's right. And I will also say that never, I think even more so now, because we can tend to feel comfortable hiding behind our electronics, I think one of the biggest things that I would like students of public health to begin realizing the importance of again, is the soft skills and being able to connect with people on a face to face or voice to voice manner, because I think we take that for granted. And we've actually lost touch with that a little bit. And when you're in a situation like a stressful disease pandemic situation, that human connection can really go a long way with respect to making people feel comfortable with each other, enough to share personal details about their illness, or who they may have come in contact with. And I think that as we pushed as a country to get a lot of contact tracers on board, we trained them in the sort of hard skills about the data collection, and what were the data variables that we needed to them to collect, and things like that. But the soft skills are what gets people comfortable with sharing that data. And I think that if we keep moving forward, or even if we had an opportunity to go back in time a little bit to train a little bit more intentionally, on how to build that rapport quickly and effectively with various types of people, that you might have to reach out to, to get sensitive information from – [I’m] just curious [what] a different place we might be in if we had put a little bit more emphasis on those types of skill sets from the beginning.\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:16:32] </b> Absolutely, that human communication seems like a really important skill to focus on in public health education moving forward. You don't just need data skills and hard skills, like you said, but you need communication skills, sort of like what doctors learn with bedside manner. And maybe this hasn't had to be so much a part of the public health toolkit in the past, but I can definitely vouch for it being very important when you're on the phone with someone contact tracing.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:17:00] </b> Exactly.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:17:02] </b> Well, thank you so much for joining today. These are all the questions that I had for you. But if you have any other thoughts on public health education, during and after this pandemic, I would be happy to hear them.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:17:13] </b> Yeah, I think anytime either now, or even into the future where public health students can get the opportunity to collaborate with or volunteer with a community group, whether that's a local health department or some other type of nonprofit or outreach group that is engaging with community – take that opportunity, because you learn so much about the application of your work, especially if you're in one of the harder disciplines within – harder meaning, I guess, kind of quantitative disciplines that don't naturally focus on some of these more behavioral aspects to public health. But if you're sort of an epidemiology focus, global epidemiology, or a biostats focus, that if you have opportunities to engage with the community, or a local health department to really sort of understand the intersection between people's behavior and their hesitancies and their concerns and the actual collection of the data that we ended up analyzing, you really can get a better sense of, I think your collective place in the fabric of public health practice, when you have that awareness of how you can interact with people to ultimately get the data that you want and need for understanding whatever disease you're trying to understand more.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:18:30] </b> Yes, you don't want to have waiting until after graduation to get involved in community work. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:18:37] </b> Definitely, exactly. Do it now. That's right. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:18:43] </b> Well, thank you again, Dr. Chamberlain, for joining us today, on the Equity and Outcomes podcast, and I'm very much looking forward to our last few weeks of class.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Allison Chamberlain: [00:18:53] </b> Thanks, Leanna.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                </Header>\n              </Header.Content>\n            </Header>\n\n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n\n\n\n\n\n\n\n\n    {podcastTitle === \"Robert_Breiman_on_COVID-19_vaccine_development_and_distribution\" &&\n      <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n      <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n            <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n            <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n      </Breadcrumb>\n        <div width = {888}>\n        \n            <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n              <Header.Content>\n              “Information equity is a critical part of the whole picture”: Dr. Robert Breiman on COVID-19 vaccine development and distribution\n\n                <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                </Header.Subheader>\n                <div style = {{paddingTop: 10}}>\n                <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/Information-equity-is-a-critical-part-of-the-whole-picture-Dr--Robert-Breiman-on-COVID-19-vaccine-development-and-distribution-emk23s\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n                </div>\n\n                <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                      <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                      By Leanna Ehrlich on Nov. 18, 2020\n\n                      <br/>\n                      Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                      <br/>\n                      From Emory University\n\n                      <br/>\n\n                      </p>\n\n                      <br/>\n                      <b>Transcript</b>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:00:00] </b> Welcome to the COVID-19 Equity and Outcomes podcast series. Today we’re talking to Dr. Robert Breiman, a Professor of Global Health, Environmental Health, and Infectious Diseases, at Emory’s Rollins School of Public Health and at the School of Medicine. Today we're going to be talking about progress in development of a SARS-CoV-2 vaccine, or multiple vaccines. So could you first give everyone an overview of how to your knowledge, vaccine development is progressing? How many different vaccines are in development? And where are they in the clinical trials phases? \n                        \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:00:33] </b> Yeah, thanks, Leanna. Great to be here and talk about vaccines, my favorite topic. We are in an unparalleled time right now. If you think back on it, we all first started hearing about this virus in January, and the pandemic ended up being called in March. And, here we are, in the first week of November. And, we have a panoply of vaccines that are in development. I've been doing epidemiology, public health, and prevention for my whole career – more than 30 years. And most of the time, when we talk about vaccines coming along, we have a 10 to 15-year window. \n\n                      <br/>\n                      <br/>\n                      <br/> \n\n                      I remember when I was just starting out at CDC, and working on pneumococcal conjugate vaccines, back in 1987. And the word was, at that time, that the conjugate vaccines were two years away. And we thought, two years, that's a long time. But it wasn't till another 11 years – actually sorry, it wasn't until 13 years – until that vaccine actually became available in the United States and more like 20 years, in places where it's needed the most. So to have more than 100 vaccines in development [for SARS-CoV-2], this early, this quickly, is truly a testimony to technology advancements, and also to partnerships. And actually for, you know, to government, for stimulating, pushing, if you will, the vaccine development; and in helping to shoulder some of the risk – the financial risk – that allowed companies to move forward so aggressively.\n                      <br/>\n                      <br/>\n                      <br/> \n\n                      And so there are there are five vaccines that are in in late staged evaluation clinical trials, in other words, either in phase three trials, or in the case of one vaccine, just about to move into a phase three trial. And, the other thing that is quite remarkable at this moment in time, is that the US government, and also other governments, have paid the vaccine companies to produce vaccine, so that it's waiting in the wings, in case the vaccines are safe and effective. If they're not, they'll just discard the vaccines. But if they are safe and effective, there won't be the usual many months or years to await production and having vaccines to actually give to people. So that's another amazing thing is that once these trials are done, and they go through rigorous regulatory review – which I always have to say, is crucial; you can't assume these vaccines are safe and effective. They have to be shown to be in the trials and then reviewed by regulatory experts and approved; and once you get to that point, there won't be much in the way to at least having vaccines that can start going into distribution.\n                      \n                      <br/>\n                      <br/>\n                      <br/> \n\n                      <b>Leanna Ehrlich: [00:03:48] </b> That is really good to hear. I think a lot of people are anxious for the vaccines; and of course, a wait of many months after a discovery of the correct vaccine wouldn't be ideal, even if that's completely normal for basically any other vaccine. So to follow up on that, what do you see as an optimistic and then perhaps a more realistic timeline for vaccine distribution of the actual correct vaccine or vaccines that work, worldwide and within the US?\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:04:14] </b> So, the four vaccines that are in phase three trial trials now include two vaccines that are messenger RNA vaccines, that have to be kept in very cold storage – like at minus 80 degrees; and then can only be out of that frozen state for a short relatively short period of time. And then the other two vaccines, which are – the first two are produced by Pfizer, and a company, a new company, called Moderna; and then the other two that are in phase three trials, Johnson and Johnson and AstraZeneca vaccines, in trials in the United States, I mean – are produced on an adenovirus back bone, which doesn't require freezing, but does require very careful storage. And so the big issues are actually going to be how these vaccines, in large amounts, are brought to points of use, in ways that they can be easily used without a great deal of wastage. And it's going to really be a challenge, a major challenge, for immunization managers, to ensure that the vaccine that they receive, it’s stored properly, and is handled properly, so that it can be given relatively easily to the people who need it the most. And the other big challenge is that these products, at least at the moment, based on what is understood, cannot be mixed and matched –they can't be interchanged. And so the systems will also have to, once there's more than one vaccine on the table, be able to differentiate between people that have received vaccine A, or vaccine B, or C, and so on, and make sure that their second dose, which needs to be a month later, is with the same vaccine.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:06:25] </b> Oh, that is complicated, because you're relying both on the people who you're giving the vaccine to, as well as health care systems, to keep track of that. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:06:31] </b> Yeah, I don't think there's from an immunization standpoint, I don't think we've ever had a challenge quite liked this one.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:06:37] </b> Yeah, that's really, really complex. So I've read some interesting pieces recently, about how vaccine distribution can, or will be, prioritized. And I think lots of people agree that prioritizing essential workers, especially those working in healthcare settings, seems like a very natural first step; they've already made many sacrifices and are definitely in a high-risk environment; and then maybe considering other essential workers like those in food services, or other emergency services. But then, I've also read some ideas about prioritizing different groups of people, people with underlying health conditions like diabetes, or asthma, or those in minority groups, ethnic or racial groups, because they may have a higher risk of severe outcomes of COVID-19. So I'm curious to hear your thoughts on equity surrounding vaccine distribution. Do you think that there is a certain prioritize scheme that should be used for deciding how and when vaccines are allocated, that would best promote equity, and also meet with public approval? \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:07:33] </b> So the vaccines, even with this advanced market commitment, and vaccines being produced in parallel to the trials, so that, you know, we can get to them quickly – there will just be a relative trickle of vaccines early on, once they do become safe and effective (I always feel like I have to emphasize that), vaccines are available. And therefore, immunization managers, people in charge of the programs, health care providers and so on, may have a certain amount of vaccine in their stock, will have to have some sort of prioritization for who gets the limited numbers of vaccines first. And there are two philosophies around that, around how to do this, and, the concepts, I should say, work side by side. One is to use a safe and effective vaccine to keep society, all the key societal functions, operating; and that includes making sure our health care workers, both physicians, nurses, others involved in providing hands on health care, are able to keep doing that. Because you can imagine how devastating that would be if we had a shortage produced by the pandemic of healthcare workers. And as you say, there also is focus on protecting those who are involved with essential functions, critical functions in our society, especially among workers, who are substantially higher risk of exposure while carrying out those functions. So you have that side of things where you're thinking about using vaccine to protect our critical resources, if you will, or critical human resources. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      And then you have the consideration of, there are certain people who are at disproportionate risk for illness, hospitalization, and death due to COVID. And so there would be interest in using limited quantities of vaccine to prevent illness and those that are at higher risk. And there has been a general move away of focusing use of vaccine based on racial characteristics, but more on social determinants of health. So that, the reason there is disproportionate risk among people of color in the United States for COVID is not necessarily related – or, there is no reason to think it's related, to any inherent qualities about them, about their physiology, and so on. But it's more related to structural imbalances in terms of the type of living and working conditions that exist that put certain populations at risk. So the focus is likely to be on those social determinants, if you will, rather than specifically on race.\n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:10:58] </b> Okay, and then do you foresee any barriers in vaccine distribution and uptake, specifically related to health disparities and health equity? Just some ideas that came to mind might be getting vaccines to rural populations, especially if you're talking about a cold chain supply management, or other medically underserved populations; or maybe overcoming social issues related to vaccine hesitancy or distrust in public health figures?\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:11:23] </b> Yeah, I mean, there's been a lot of focus on how to distribute the vaccines so that they can be placed at locations that would enable vaccine to reach those that are normally hard to reach. So that might include communities that are far away from hospitals or research settings where the cold chain can be maintained. So, figuring out ways the vaccine can be moved to places where people would have greater access. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      There's also discussion of using sort of non-traditional places to get vaccinated. I mean, one thing that we always used to call non-traditional, one place, are pharmacies themselves. And those are no longer non-traditional, because as you know, pharmacies are often places where many people get their vaccines now. And so they will almost certainly be right in the midst of things when it comes to COVID vaccine distribution. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      But, other considerations that people are exploring is, can, for instance, houses of worship, serve as places that are both resources for trusted information about the vaccines, as well as places where people could actually go and get vaccine? And that might be a way to reach people, especially in communities that tend to be more marginalized. And then, there's also discussion of certain kinds of workplaces and actually offering vaccine directly there to people that are at increased risk. So there's a lot of strategies that are coming out that will require new ways of, you know, distributing vaccine. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      And so, you touched on something that I think is really important, which is many of the people that are at disproportionate risk for COVID because of exposures – because their working conditions don't allow them work from home, they're often in situations where they're more likely to be exposed to the virus; maybe their living conditions at home also put them at increased risk for transmission – many of those communities and those populations, may be not only an increased risk for COVID, but they may be at increased likelihood to not accept a new vaccine that's been pushed along at warp speed, promoted by the government, and so on. And, maybe less likely to trust such an offer, such a system. And so, there does need to be a thoughtful, context specific, culturally appropriate and relevant translation of the science, as it comes out, in a transparent and clear way. So that there is what we call “information equity”: so that regardless of the community, that people will understand, in ways that are appropriate for their context, what are the benefits and what are the risks associated with being immunized with a COVID vaccine; and to be able to ultimately make an informed decision about getting vaccinated. And I think that information equity is really a critical part of the whole picture to address that issue because, as Walter Orenstein says, you know, “vaccines don't save lives, vaccinations do.” So we can produce all these wonderful vaccines and have them distributed right where people are, but if they don't get into the arms of people who need them the most, they won't really, they won't clearly, have done their job. So it's really important to have this information effort, as well. \n\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:15:40] </b> Absolutely, I have never heard it particularly phrased that way. But I think that's such an important perspective, like information equity is absolutely critical. And it'll be interesting to see what happens. I'm a public health student right now. So I know everything happening over the past year, and over the next year or two is going to become a case study that we'll all learn about for future public health practitioners. But of course, we also want everything to run smoothly, without too many hard-won lessons. So I guess we'll just have to wait and see how everything unfolds. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:16:07] </b> Yeah, it's kind of a scary thought that, you know, oftentimes, we look back on the 1918 flu pandemic with sort of a morbid curiosity, you know, “how could things have been so severe?” And how could people have, you know, dealt with these things in the ways that they did, or early on, and so on. But it's somewhat concerning to imagine that decades, maybe even a century from now, people will look back on this period with amazement and wonder, both in terms of, maybe what we didn't do, despite the fact that we could have; and also those great achievements that we've just touched upon, especially around hopefully, the availability of safe and effective vaccines and a strategy equitably administer them.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:16:58] </b> Yes, absolutely. I think that the vaccine development and the scientific progress during COVID is, within the US, probably the best part of our country's response. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:17:08] </b> Yes, I agree with that. It seems non-partisan, almost. Which these days is refreshing?\n                      \n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:17:19] </b> Yes, absolutely. Almost everyone wants a vaccine, and hopefully it will be trusted and accepted. So I was wondering if you have any other outstanding issues that you can think of related to vaccines and health equity that come to your mind that we haven't talked about today already? \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:17:34] </b> Yeah, there's one issue I just would like to touch upon. And that many of us in public health are automatically focused on a prevention strategy, like immunization, as a way to save lives and prevent hospitalizations and, you know, prevent suffering. And, those are the right things to focus on. And in addition, because of the way our society is structured, and because of the social, the systemic social inequities that exist, that much of what makes our economy run is built on people that, you know, keep the trains moving, if you will, and, you know, keep the food moving and keep businesses and office places open. And those are the people that are at disproportionate risk for COVID. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      So, it's our premise, and we're working with a group in Boston, that is going to be modeling the actual magnitude of this; but it's our premise that an equitable use of a safe and effective prevention strategy, not only makes sense from a standard health standpoint, but it also will save huge amounts of money. It'll be economically rewarding in ways that haven't been considered as well. And it's this nexus, I think, of public health and economics, that I think is particularly important to consider, and helps to make people think, regardless of their perspective, of where they are in society, in a parallel way regarding – in a similar way regarding – the benefits of not just giving vaccine out, but giving it out in the most equitable way possible.\n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Leanna Ehrlich: [00:19:42] </b> Yeah, absolutely. Thank you so much for joining the podcast today, Dr. Breiman, this was a really important conversation. We're getting pretty close to vaccine distribution. I mean, not next week, but it's definitely on the horizon of our future. I think a lot of people will find this information really useful as this sort of starts to become more and more the topic in the news related to the pandemic. So thank you for sharing your thoughts related to vaccine development and issues of equity. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Dr. Robert Breiman: [00:20:09] </b> Thank you. Pleasure to be here. \n\n                      <br/>\n                      <br/>\n                      <br/>\n\n                      <b>Addendum:</b>  Since this podcast was recorded, <a href = \"https://www.pfizer.com/news/press-release/press-release-detail/pfizer-and-biontech-announce-vaccine-candidate-against\"  target=\"_blank\" rel=\"noopener noreferrer\">Pfizer and BioNTech announced successful Phase 3 clinical trials</a> of a COVID-19 vaccine that appears to be more than 90% effective. We reached out to Dr. Breiman to get his comment on the new development, and he said “I look forward with great enthusiasm to seeing the data from the trial of the BioNTech/Pfizer mRNA SARS-CoV2 on efficacy against a variety of outcomes and on safety. Findings from the vaccine trial on safety and efficacy for people in a variety of risk categories (like underlying diseases, advanced age, and race/ethnicities) will be very helpful. While the recent press briefing certainly suggests that this vaccine (and potentially other formulations) offer substantial promise, the jury will remain out until the complete data are presented and there is rigorous regulatory review.”\n\n                      <br/>\n                      <br/>\n                      <br/>\n                </Header>\n              </Header.Content>\n            </Header>\n\n          \n        </div>\n        <Notes />\n\n      </Container>\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n        {podcastTitle === \"Dr._Vincent_Marconi_on_Anti-Viral_and_Anti-Inflammatory_Advances\" &&\n          <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n                <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n                <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n                <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n          </Breadcrumb>\n            <div width = {888}>\n            \n                <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n                  <Header.Content>\n                  Innovations in Covid-19 Treatment: Dr. Vincent Marconi on Anti-Viral and Anti-Inflammatory Advances Against Covid-19 Infection\n                    <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                    </Header.Subheader>\n                    <div style = {{paddingTop: 10}}>\n                    <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/Innovations-in-Covid-19-Treatment-Dr--Vincent-Marconi-on-Anti-Viral-and-Anti-Inflammatory-Advances-Against-Covid-19-Infection-elj2vh\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n                    </div>\n\n                    <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                          <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                          By Leanna Ehrlich on Oct. 26, 2020\n\n                          <br/>\n                          Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                          <br/>\n                          From Emory University\n\n                          <br/>\n\n                          </p>\n\n                          <br/>\n                          <b>Transcript</b>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:00:00] </b> Welcome back to the equity and outcomes podcast series from the COVID-19 Health Equity dashboard. On this episode, we're talking to Dr. Vincent Marconi, a Professor of Medicine in the Division of Infectious Diseases at Emory School of Medicine, as well as the Professor of Global Health at the Rollins School of Public Health and the Emory Vaccine Center. Welcome to the podcast, Dr. Marconi. Today, we're going to be talking about potential new treatments in antivirals and anti-inflammatories to address COVID-19 infection. So first, could you tell us about the treatments you've been working on related to baricitinib?\n                            \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:00:34] </b> Thank you, Leanna. It's great to be here. Absolutely. So we've been working with this particular class of drugs called JAK-STAT inhibitors, since about 2012. And this [work] is in conjunction with Dr. Raymond Schinazi and Christina Gavegnano, who worked in the Laboratory of Biochemical Pharmacology. That work was with me, [and it] focused primarily on people with HIV. They had found in the lab, that JAK-STAT inhibitors reduced inflammation for in vitro models of HIV. They've also looked at other viruses as well, but I was specifically interested in the results that they found related to HIV, as most of my research and clinical work deals with HIV. And it has already been known that these drugs reduced inflammation for many kinds of both autoimmune and inflammatory conditions, as well as cancers. And so it made sense for us to explore this [class of drugs], both in preclinical and then in clinical models for people with HIV, because inflammation is a large component of the disease and the morbidity and mortality associated with people living with HIV, even if they [the patients are] able to stay on treatment, and really suppress the virus in their body, that this ongoing [inflammatory] process, because of immunologic imbalance that happens early in infection, seems to be a persistent problem for a large percentage of patients receiving treatment. \n\n                          <br/>\n                          <br/>\n                          <br/> \n\n                          <b>Leanna Ehrlich: [00:02:20] </b> So, how did you first come to the realization that these JAK-STAT inhibitors could be useful for treating patients with severe COVID? \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:02:28] </b> We had embarked on a large program of treating patients and doing clinical trials using JAK-STAT inhibitors. And so when COVID-19 emerged at the beginning of this year, and it showed many aspects of inflammation that were similar to what we had been looking at in people with HIV as well as [what] others had been looking at in people with these inflammatory conditions, it made sense to consider JAK-STAT inhibitors in particular, as one of the strategies to help with treating people having severe COVID-19 who are hospitalized, etc. And so when the publication by Stebbing, and his group from the United Kingdom came out in early February showing that an artificial intelligence – one of these sort of machine learning algorithms – to screen using computer modeling, large libraries of compounds, to identify those [drugs] that would be effective against SARS-COV-2, it was really startling to see that baricitinib, one of these JAK-STAT inhibitors that we've been looking at, seemed to be the most promising. And this was really not exclusively, or really, the point; the point of the model was not to identify anti-inflammatories, but actually looking for molecules and for compounds that would actually inhibit viral replication. So here, encouraged by both our preclinical and clinical work with these agents outside of COVID-19, but in an infectious disease, a viral disease in particular, showing reduction in inflammation, inflammatory biomarkers, plus this potential in silica model showing that there was a reduction in viral replication if these were to be used. We were very interested, as you might imagine, in pursuing this further.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:04:39] </b> That’s so interesting. So it sounds like the early artificial intelligence analysis suggesting the promise of baricitinib for SARS-COV-2 infection inspired you to pivot from your work with this drug in HIV to the direct investigation of how baricitinib may work for COVID-19 patients. Can you tell us more about how this went to trials?\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:04:58] </b> So, we approached [Eli] Lilly [and Company] pharmaceuticals, who makes baricitinib; and also through our contacts, here at Emory, who are working with the NIH. This [team] includes Dr. David Stevens, who is the head of the Infectious Disease Clinical Research Consortium; Dr. Nadine Rouphael, who is the director of the VTEU, and Dr. Aneesh Mehta, who is the NETEC director. We approached [each of] them with these ideas to see if it might be included in the NIH platform trial called ACTT. So we were sort of trying a couple of different routes. I submitted a protocol to Lilly outlining our proposal; we had several meetings with them. And as I said, these three individuals from Emory were approaching NIH. And so as this process was moving forward, we began to see large numbers of patients admitted to our hospitals with COVID-19. And were quite sick. And so one of my fellows, a mentee of mine, [Dr.] Boghuma Titanji, was working on clinical service with our division chair, Dr. Monica Farley, at the Atlanta VA; and they were seeing patients with severe COVID-19. One [of these patients] was a relatively young individual who was severely ill. And despite all of the possible therapies [for COVID-19], including those that are being used, still today, such as steroids, etc., this patient was doing quite poorly, and in fact, was ventilated; and, you know, was in critical, and even guarded, condition, and had shock and had renal failure, etc. And so in discussions with Dr. Schinazi, we decided to try baricitinib off-label for this one patient. And really, within 24 hours, this patient's fever decreased – deferversed, as we describe it – and then within 48 hours, his ventilation settings had gone down significantly, and eventually [he] came off the ventilator and all of his organ systems returned back to health fairly quickly; it was really impressive compared to a lot of the other patients we had seen who had done poorly.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:07:33] </b> Wow, that must have been an exciting moment.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:07:36] </b> So encouraged by these findings, we decided to treat additional patients. [We] ended up treating 15 patients, 12 of which did very well, [while] a couple of patients declined further healthcare interventions such as intubation; and unfortunately, without [intubation], they were not able to survive, and one patient did ultimately die (despite being on the ventilator), who declined to have aggressive measures as well. So out of those 15 patients, again, we felt we had strong enough data to say, at least from a safety perspective, these patients appeared to tolerate the treatment and may have – although without a placebo control to compare it – but may have had improvement beyond [just tolerating the treatment], which we were seeing in other patients who did not receive it. And so with these data, we were more, again, justified in our discussions with both the NIH and Lilly to pursue this further. This resulted in two large international trials of treating patients with baricitinib compared to placebos [sponsored by] the NIH and Lilly. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:08:58] </b> So what do these two new, larger trials look like? How are they being conducted?\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:09:04] </b> So ACTT-2 [Adaptive COVID-19 Treatment Trial 2] was a study randomized [placebo]-controlled trial of remdesivir plus baricitinib, versus a control arm of remdesivir alone. Remdesivir, as you may know, in ACTT-1 was shown to be beneficial for patients [hospitalized with COVID] in a placebo-controlled trial. So, that had been moved into clinical care guidelines under [an] emergency use authorization. And so [remdesivir] became the standard of care for ACTT-2. [The ACTT-2] results are now put together in a publication and are very favorable [for baricitinib]. I’m unable at this point to go into the details, but they should be submitted to a journal within, hopefully the next few days, to a week. So [we are all] looking forward to seeing those in print soon. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          The second study, COV-BARRIER, which Lilly pharmaceuticals is sponsoring, is currently about 50% enrolled, and so we'll have a second look at the same strategy coming up soon [in the next few months].\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:10:10] </b> Could you speak to any differences in race and ethnicity with distributing baricitinib and other inflammatory response drugs? Do you think there might be any differences in how these drugs work in people of different backgrounds or ethnicities or underlying medical conditions? And or might there be any issues to consider around distribution of the drugs? If and when they become more widely available? \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:10:29] </b> Yeah, this, Leanna is a critical question. Both for me personally, but obviously, I think for the wider community; both [those] affected by this disease, and the clinical community treating patients with this disease. And it clearly has been evident to the world, the disproportionate effects in this country at least, and elsewhere, of specific minority groups. In particular in the US, African Americans have been, from a mortality perspective, and also severity of disease, have been most heavily hit, by SARS-COV-2. It appears that a lot of this [difference] is related to aspects of underlying medical conditions, but also access to health care, etc. So trying to extrapolate how baricitinib could potentially either affect this positively or negatively is a critical question. For our small study of 15 patients it, again, it's really impossible for us to make any conclusions; I can say the vast majority of our patients at the Atlanta VA, who have been able to participate either in the single arm study or in our randomized controlled trials, have been African Americans and other minorities. So we feel confident that we'll be able to address this in the data we have now, and in ACTT2. That is being explored currently, but is not in the initial findings that we have [assembled] – the top line findings didn't get into those analyses at this point. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:12:11] </b> Well that seems promising from an equity standpoint, that you were already exploring the treatment in early versions among a diverse population. Where do you go from here?\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:12:22] </b> YFrom a biological perspective, you know, it all depends on both whether a drug can impact positively and reverse the disease, based on the biology[ical mechanism]; and so the biology, in this particular circumstance, is twofold. One, immunologically, patients who go on to severe disease are at a risk of not being able to, or predisposed to not being able to, control the virus. It is probably in part related to type I interferons; there may be some differences in antibody responses as well. Also, the innate immune system, natural killer cells, etc., macrophage response [may be playing a role]. So, it's possible that diabetes and other medical conditions, ([i.e.] hypertension and obesity) may have some impact on that initial immune response to clear the virus. And so, if the virus has not cleared initially, it triggers a cascade of multiple different arms involving both the ACE2 receptor and the clotting system to result in the pathology we see in severe COVID disease. So, that second piece, this triggering, probably in part, [happens] because the virus isn't cleared to it initially early; but [it] may also have to do with predispositions to inflammation. Again, these diseases such as diabetes, cardiovascular disease, obesity, [patients are] already inflamed, and primed for inflammation at baseline. So it may not be very difficult to trigger that cascade. And so the fact that inflammation is a predisposition, and then as a consequence of the virus, it would make sense that baricitinib, because it acts on this inflammation in particular, would have a beneficial effect for these individuals who are hardest hit. So I would anticipate it should be equal in response to people [of colors and those] who are not of color who are having severe COVID-19. But again, that remains to be seen. And we looked eagerly towards those results from both ACTT2 and COV-BARRIER.\n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:14:44] </b> And how do you think your environment at Emory, at your workplace, has contributed to the success of these discoveries?\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:14:50] </b> It's incredible to see what we've been able to accomplish here at Emory, and certainly around the world. But in particular, I think the environment here at Emory has really facilitated multiple different discoveries across diagnoses: across prevention, therapeutics, vaccines, you know, community outreach and epidemiology. So, you know, I think has been favorable environment, as I said, and culture, to allow for these cross-disciplinary collaborations, and really transdisciplinary collaborations to help the community, you know, respond to this disease. We've reached across our partners at other universities here, across Georgia Tech and Morehouse. And I think our existing collaborations is what has facilitated [these partnerships]: these were not new relationships, but were pre-existing. And so [it] allowed us to pivot and respond again, in particular, to reach out to the communities most heavily affected by the disease, and reach into communities that can be disenfranchised and underserved. And I think that, again, bringing information and knowledge from the lab, from drug discovery programs, from our colleagues at the non-human Primate Research Center, all the way through to clinical trials and out into the community, shows really the dynamic opportunities and resources here at Emory.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:16:28] </b> Definitely, Emory and Atlanta are great places for innovation, research and building partnerships with communities and other institutions. So sounds like a good place to be.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:16:38] </b> I agree. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:16:40] </b> Well, thank you so much for joining the podcast today. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Vincent Marconi: [00:16:43] </b> My pleasure. Thanks, Leanna.\n                          \n                          <br/>\n                          <br/>\n                          <br/>\n                    </Header>\n                  </Header.Content>\n                </Header>\n      \n              \n            </div>\n            <Notes />\n\n          </Container>\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n        {podcastTitle === \"Dr._Nneka_Sederstrom_on_Racism_and_Ethics\" &&\n          <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n                <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n                <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n                <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n          </Breadcrumb>\n            <div width = {888}>\n            \n                <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n                  <Header.Content>\n                    \"We Have to Be Better\": Dr. Nneka Sederstrom on Racism and Ethics During Covid-19\n                    <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                    </Header.Subheader>\n                    <div style = {{paddingTop: 10}}>\n                      <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/We-Have-to-Be-Better-Dr--Nneka-Sederstrom-on-Racism-and-Ethics-During-Covid-19-eiok5g\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n                    </div>\n\n                    <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                          <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                          By Leanna Ehrlich on Sep. 7, 2020\n\n                          <br/>\n                          Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                          <br/>\n                          From Emory University\n\n                          <br/>\n\n                          </p>\n\n                          <br/>\n                          <b>Transcript</b>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:00:00] </b> Welcome to the third episode of the Health Equity and Outcomes \n                          COVID-19 podcast. On this podcast, we talked to Dr. Nneka Sederstrom, the director of Clinical \n                          Ethics at Children's Minnesota. Welcome, Dr. Sederstrom. First, would you mind telling our audience\n                          a little bit about yourself and your vast background in medical ethics? \n                            \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Nneka Sederstrom: [00:00:11] </b> Sure, I'm Nneka Sederstrom and I have been in the clinical \n                          ethics space since 2001. I started my career off as a clinical ethicist at the Washington Hospital \n                          Center, which is now called MedStar Washington Hospital Center in downtown Washington, D.C, and then \n                          became the director of that about five years after I started and ran both the clinical ethics department \n                          and the spiritual care department until I moved here to Minnesota, where I am now in charge of \n                          developing a clinical ethics program at Children’s Minnesota. Part of my training and experience \n                          and part of my PhD program was in race, class, and gender inequality, so I've also been really \n                          involved in looking at health equity and addressing how ethics and equity mix, ethics, equality. \n                          I've done a couple of talks on equality and ethics and how they intersect. \n\n                          <br/>\n                          <br/>\n                          <br/> \n\n                          And then I also have an MPH that focuses on global health management because I believe that we \n                          have to tie all this into our entire global community and not just the small hospital that I may \n                          be in right now. So, I kind of tried to set my career in the global stage to address health equity, \n                          ethics, and quality. And I'm very excited to be able to be on this podcast and talk about these \n                          issues because I feel like not a lot of people have been paying attention to how to create solutions \n                          around the COVID and inequity issue. And more people have just been paying attention to the fact that \n                          there is an issue, and I think that it's time to try to be more solution oriented and be more \n                          intentional with our decisions. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:02:03] </b> Can you speak to historical issues of trust between minority \n                          communities and the medical establishment? How can we keep this in mind and maybe work to overcome it during the pandemic? \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Nneka Sederstrom: [00:02:14] </b> Yes. So there's this misbelief that, especially in the \n                          Black American or African American community, that the distrust of medicine started with the \n                          Tuskegee experiments in the 1970s. Well, the experiment started earlier in the 30s, but ended in \n                          the 1970s. And that is that is a misconception, because if you ask many in the Black African American \n                          community, most don't have any idea what the Tuskegee experiment actually was, and to believe that \n                          the only time when medicine was behaving in suspect or inhumane ways towards Black Americans was only \n                          from the 1930s and a small population of Tuskegee, Alabama, is to also just live in some sort of \n                          ignorance or denial about how African Americans and Black Americans were treated in this country \n                          from the beginning of the slave trade in 1619. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          I think that the assumption that distrust of medicine happened in the 70s and now we have to somehow \n                          regain trust because of the Tuskegee experiment, is where all these interventions that people have \n                          tried on gaining trust between the African American community and medical community have fallen short. \n                          The premise is wrong. There's never been trust between the African American Black community and medicine. \n                          One of the best books out there that highlights the fact that trust has never been around, is Harriet \n                          Washington's book called Medical Apartheid. And in it she outlines beautifully and so brilliantly the \n                          core of why there needs to be a reckoning between the medical community and the Black community, where \n                          the medical community owns its part in racism from the beginning of Black people in America. Till this \n                          day, I mean, we even have recent data just coming out showing that Black babies have a higher mortality \n                          if treated by white doctors, a lower mortality if treated by Black doctors. I mean, just by virtue of \n                            the race of the physician, because of the way that the physician cares for the baby, the way that \n                          family trusts the physician, of all these additional elements that go into it. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          But for that to be a study that happens in 2020 and still a part of how we measure success and outcomes \n                          is based off of race of patients. I think that we still have to, we haven't done the work that we need \n                          to do with owning our responsibility and our in our role in perpetuating structural racism in the United \n                          States. And until that happens, there's never going to be an opportunity for trust to be built between the \n                          communities. And I think that COVID has given us a unique opportunity to face that and say, as a member of \n                          the medical community, we haven't gotten this right. We haven't done what needs to be done to develop trust \n                          between this - our community as a medicine community, and this these populations of color that we really need to do. \n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          COVID-19 has given us the glimpse into how the structures of racism that have led to inequities in patient \n                          outcomes and access to care. And now we have to do something intentional to reverse it because we no longer \n                          can pretend like we just didn't know it was there or it was only for a particular group of people who actually \n                          paid attention to this. There's no way to now be in medicine and not have health equity be something that's in \n                          your face, and I think that it's time for us to finally own it and address it. \n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:05:57] </b> What do you think are the best next steps forward in terms of addressing \n                          the historical structural racism in the relationship between communities of color and medicine? What do you \n                          see as some immediate steps that medical and health systems can be taking? I'm not trying to say that 400 years \n                          of structural racism can be fixed immediately, but clearly there's a crisis that needs addressing, especially during the pandemic. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Nneka Sederstrom: [00:06:31] </b> The most powerful steps that I've seen happening are people standing \n                          up and saying that we have to be better. I think that prior to this it was more of a “oh, I know we need to be \n                          better,” but it was like someone else's job to think about how to be better. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          Now there there's discourse and conversation bubbling up in every corner of the medical community on, how can \n                          we do our part to be better? And that movement, I think is the only way to get things going forward. Being able \n                          to have conversations that include terminology like racism, white supremacy, you know, structural, environmental, \n                          institutional, all those terms that are used to describe racism, having those conversations now in spaces where \n                          before the idea of even bringing it up would have would have caused you a lot of fear and distress, worrying about \n                          how your job was going to be affected because you decided to call everybody in a room that was mostly white privileged, \n                          right. So we no longer have a lot of those fears. Because there is no longer the ability to hide behind the \n                          reality of how racism is affecting us. So I think that the biggest gift that we have from COVID is an opportunity \n                          to start speaking truths and addressing things the way they need to be. I’ve seen it in the way that people \n                          have responded to trying to undo the additional burden of blackness that COVID has added. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          When our triage protocols were put into place, and most states enacted triage protocols that, the protocols \n                          then, of themselves, had racist foundations – the way that the protocols were enacted based off the tools that \n                          were developed that were foundationally racist, showed that we’re missed a huge opportunity to create structures \n                          and ethical frameworks that truly address racism and being anti-racist. And I think that now that many states \n                          are starting to look at that and say, how can we be intentional in ameliorating these harms that we know have \n                          happened to these populations? What are the things that we can do to try to address that? Is it possible to address \n                          it at a downstream bedside perspective with a triage protocol with having equity and inclusion officers like my \n                          institution does: we included equity and inclusion officers as part of our triage protocols to try and address \n                          equity and inclusion at the bedside level. Is it something that needs to be done more upstream from a population \n                          health, public health perspective? Where it's in the conversations of how vaccines should be allocated, how \n                          emergent therapeutics should be allocated? My answer is that it needs to be in all those spaces. But the beauty \n                          is that people are having the conversations and they're trying to figure out how to implement it. \n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          In the one thing that I worried about, that I feared probably when most when these conversations started over \n                          that people were going to, instead of acting and then figuring out later, were just going to think about it and \n                          do more research and write more thoughts about it and just drag on this process that the Academy is has sometimes \n                          made it to seem like the only way that we can move things forward is through a series of thoughts, and arguments \n                          on those thoughts, and new thoughts. But I think that people have jumped that queue and gone straight to the, \n                          “This may not be a perfect system, but at least we're going to try it because the outcome is worse than not.”\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:10:17] </b> Definitely. This does seem like a turning point, and you're so right that \n                          something good has to come of this because so much harm has already happened to many marginalized communities. \n                          And at least if these conversations about race and racism in medicine are being held more often, and aren't these \n                          like uncomfortable hidden conversations, that does seem like something good is happening. And I hope that it sticks \n                          around long after the crisis is over. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Nneka Sederstrom: [00:10:41] </b> I think it will. I think that we've reached new movement rate in this \n                          in this bigger movement, I think that this is another touch point in the movement that is going to be harder to \n                          die out. I do believe in, and that, I think, is because of the fact that there are people who are engaged in these \n                          conversations who historically have never had to. The white suburban mom at Target on a Saturday that normally \n                          would never have thought about a book club talking about how to be an anti-racist is picking up her copy because \n                          her Neighborhood Book club decided to do that book right. Those were not the usual areas and spaces that you see \n                          these conversations in the past, but now that's where they are and they're being normalized. So I think that this \n                          is one of those pivotal moments in history that that will actually turn out for the better. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:11:46] </b> Could you elaborate more on the triage protocols you mentioned, where you took \n                          a role in addressing health equity and racial awareness as your hospital established these protocols?\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Nneka Sederstrom: [00:12:10] </b> Although we've never had to go into triage, of course, everybody had to \n                          set up what would happen if, and the biggest – I don't want to say fight – but the biggest discord that I came \n                          across in trying to set up an established a triage mechanism, for assisting in the state of Minnesota trying to \n                          establish a triage mechanism, was this issue around whether or not the information about the patient coming into \n                          the door should be blinded from those doing the triage. Because there's this belief that if that information about \n                          race and gender and ethnicity is kept a secret from those doing the triaging, then that decreases the opportunity \n                          for bias. And my argument is that it may decrease the opportunity for explicit or even implicit bias. But what it \n                            also does is decrease the opportunity for amelioration of structural racism. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          And so what I have pushed back on is that there needs to be an unblinding of this data specifically because we \n                          know that the patient populations that are being affected more by COVID have suffered from racism that we need \n                          to be intentional in figuring out ways to ameliorate that racism. In doing that, we will be able to try and level \n                          the playing field a little better. So if you were blinded, then we won't know and we will be allocating resources \n                          based off of random, arbitrary numbers that are impacting humans attached to those numbers but, it kind of keeps a \n                          firewall between the humanity of the of the person impacted and the humanity of the person making the decision. What \n                          I've argued we need to do is unblind and allow for people in the triage teams, whose entire purpose and whose \n                          education and training is to address equity and inclusion, to be members of it so that they can help us think \n                          through better how to make these decisions in a manner that addresses the racism and provides a more equitable \n                          option for allocation of the resources.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:14:34] </b> So as we start to wrap up today, what else has been on your mind in regard \n                          to ethics in medicine and public health and where we go forward from here with COVID-19? \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Nneka Sederstrom: [00:14:55] </b> Yeah, I think that's the biggest thing, now that I'm trying to just \n                          kind of hash out more in my brain, is around this concept that I published on, called “the give back,” and figuring \n                          out ways to create an allocation structure that allows for this amelioration in a manner that people can stomach, \n                          so to speak, because I think that there's the stress initially about the idea of making decisions based off of race. \n                          There is this worry and fear that somehow if we are intentional in our decision making, if race is part of the \n                          intentionality, then we are somehow violating the 14th Amendment of the Constitution. And my arguments is, and what \n                          I'm hoping some of legal scholars will address as time goes on, is that if the 14th Amendments bars us from being \n                          deliberate and addressing racism because we have to address race, then that's a failing of the amendment and somebody \n                          needs to address that change the amendment, or is that just an interpretation that's been somehow misconstrued? \n                          And if we truly engage in what the 14th Amendment meant, then we should not be barred from actually using race. \n                          Because if that's the case, when we're never going to get to equity. Because without directly saying, this event \n                          or this feature or this access or this treatment or whatever it is, is being done in this way in particular, to \n                          address racism and to create some sort of corrective action for systemic racism – if we can't do that, then we're \n                          never gonna get past where we are now, and I don't believe that that's the case. But if it happens to be the case \n                          then I don't believe us the end of the story, laws are always changed. And that, I think, is the purpose of lawyers, \n                          to make better laws when they're not good. So that should give the lawyers something to do. If that's what it turns \n                          into. But I have a strong feeling that that's not really what it meant, but I'm not a legal scholar, so I don't \n                          really know. But it definitely is what people are using as an attempt to not bring race into the conversation: this \n                          worry that it would be considered unconstitutional as of this moment in time. But I think we need to get past that \n                          because if we don't, then we're just going to consign more generations to outcomes that are based off structural \n                          racism and not really use this time in a manner that we should be. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:17:14] </b> Okay, well, that's about it for today. Thank you again so much, Dr. Sederstrom, \n                          for joining the Equity and Outcomes COVID-19 podcast. These are really tough issues to unpack. So I appreciate you \n                            answering all my questions and shedding a lot of light on these difficult conversations.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Nneka Sederstrom: [00:17:54] </b> Yes, one day we will be through this and hopefully on the other side, we've come out better!\n                          \n                    </Header>\n                  </Header.Content>\n                </Header>\n      \n              \n            </div>\n            <Notes />\n\n          </Container>\n        }\n\n\n\n\n\n\n\n\n\n\n        {podcastTitle === \"Dr.Judy_Monroe_on_Lesson_Learned_&_CDC\" &&\n          <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n                <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n                <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n                <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n          </Breadcrumb>\n            <div width = {888}>\n            \n                <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n                  <Header.Content>\n                    \"You've Got to Have Trust\": Dr. Judy Monroe on Lessons Learned About Pandemic Preparedness\n                    <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                    </Header.Subheader>\n                    <div style = {{paddingTop: 10}}>\n                      <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/Youve-Got-to-Have-Trust-Dr--Judy-Monroe-on-Lessons-Learned-About-Pandemic-Preparedness-ein8ii\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n                    </div>\n\n                    <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                          <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                          By Leanna Ehrlich on Aug. 26, 2020\n\n                          <br/>\n                          Contributors: K.M. Venkat Narayan, Shivani A. Patel\n                          <br/>\n                          From Emory University\n\n                          <br/>\n\n                          </p>\n\n                          <br/>\n                          <b>Transcript</b>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:00:00] </b> Welcome to the second episode of the Health Equity and Outcomes COVID-19 podcast. \n                          On this episode, we talked to Dr. Judy Monroe, the president and CEO of the CDC \n                          Foundation. Welcome, Dr. Monroe, and let’s get started. How do you \n                          think the country’s doing right now responding to the pandemic, and what do you \n                          see as some key successes and also notable failures - especially related to health equity?\n                            \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Judy Monroe: [00:00:24] </b> Our country has had challenges with the response. If we look at the numbers we’re \n                          at 5.5 million confirmed cases now, 172,000 deaths, which is almost 25% of the world \n                          cases and deaths, so that's the bad news. Our overall response certainly could have \n                          been better. I think for the moment, though, the good news is we’re seeing declines \n                          over the past few weeks in parts of the country, and now testing is available in \n                          different forms, particularly the rapid saliva testing, so hopefully that will be \n                          a really positive force. In terms of what’s gone well, we are a country with technology \n                          and innovation, with how rapid vaccine development has taken place and those types \n                          of things, those are on the success side. \n\n                          <br/>\n                          <br/>\n                          <br/>                                  \n                          But you know, if we look also right now with where we are, despite the fact that \n                          cases are declining in parts of the country, we’re seeing an upward trajectory of \n                          cases in places like Guam, Hawaii, California, Indiana, and Vermont right now. My \n                          concern is that, with the first wave going across the United States, we've seen \n                          where cases have surged and then they start to decline, and then the problem is, \n                          folks let their guard down. We have not been, in this country, consistently and \n                          across the entire population, as diligent toward the measures that we can all take \n                          to stop the spread of the virus. That’s just wearing masks, hand washing, and distancing, \n                          keeping that social distance. So when we see folks going back into areas where \n                          there’s mass gathering, or in the bars, that type of thing, it’s quite concerning. \n                          Right now, we’re seeing our colleges trying to reopen and many of them are open \n                          only a few days and then they're going back to remote learning because folks are \n                          not following those very basic individual behaviors that we need to see. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          On the health equity side, what’s really interesting is we're now beginning to get \n                          at least some additional data around this. A report that just came out recently \n                          from New York City where they had been able to do antibody testing in a number of \n                          people across New York City. And as we would expect, the hardest hit a zip codes, \n                          are those of people of color, those individuals that work in restaurants, they drive \n                          cabs, or they’re Uber drivers, those types of jobs where they’re out in the public, \n                          and certainly keep our economy running, but they’re the ones at higher risk. We’ve \n                          always said when it comes to social determinants of health, your zip code matters \n                          more than your genetic code. \n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          And then when we look at, hit very hard are American Indians and Alaska Natives, \n                          they’ve had substantially higher impact. It’s social determinants of health: do \n                          you have running water, are you living in crowded conditions, can you get care \n                          when needed, do you trust the testing, all of those factors have led us to some \n                          really startling results coming out of COVID.\n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:04:18] </b> You were the state health commissioner in Indiana during the H1N1 pandemic, as \n                          well as the president of the Association of State and Territorial Health Officers. \n                          What did you take away or learn from that experience about the role of state governors \n                          and local leaders in pandemic preparedness and response, especially like now where we \n                          don’t really have a national strategy and it very much is up to local response?\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Judy Monroe: [00:04:40] </b> My first day on the job as state health officer in Indiana, I was briefed on the \n                          pandemic preparedness planning that was taking place. And at that time, now this \n                          was back in 2005, we as a country, being led by a secretary Michael Leavitt, as a \n                          country were undergoing pandemic preparedness planning. And that was a remarkable \n                          experience, and was my introduction to being a leader at the state level demonstrated \n                          for me, the need for national planning. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          And so when H1N1 came along, the country was really prepared not just because \n                          we had plans in place, but I think there was a mental preparedness, where our \n                          elected officials knew that we needed to have a national plan and they all abided \n                          by that. I learned a lot about leadership during H1N1. Governor Daniels was my \n                          governor, and I remember meeting with him, early morning right after we heard about \n                          H1N1, it’s 7:30 in the morning, I’m in his office at the state house, I’m briefing \n                          him, and he says, “You know, Judy, the state wants to hear from you, not a layman \n                          like myself, and I recommend that you get on a state plane and you go to every media \n                          market across the state of Indiana and get in front of this and let people know what we know.”\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          Now at that point in time, what we knew was that we had an emerging novel \n                          influenza virus, and we didn’t have a vaccine at that point. We didn’t know \n                          how it would respond to treatment. But we were able to practice the basics of \n                          risk communication: to be credible, to be first, to let people know what we did \n                          know and what we didn't know. We gave everyone the actions that they could do. \n                          We told everyone, wash your hands, cover your cough, stay home if you're sick: \n                          that was our mantra until we were able to understand better the antivirals and \n                          particularly when a vaccine became available. \n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          So when I look at government, the importance of having a national plan, that \n                          then the states are able to deploy, and then going down to that local level, \n                          is really the way this should flow. And so as a state leader I was able to get \n                          out there, shoulder to shoulder with local leaders, and we gave the message together. \n                          So there was no question in the minds of the public that everyone was in alignment, \n                          everyone was telling the public everything that we knew, and in doing that, we created \n                          trust. We developed trust in the majority of the population. I was personally pleased \n                          when I got feedback that the children had seen me on the news and would be telling \n                          their parents, you’ve got to make sure you wash your hands, cover your cough. \n                          You know you’ve broken through when the children are carrying your message for you \n                          and they believe in that message, so really important.\n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          One story I think about, with schools closing, was an area of real concern and \n                          question. We needed to make some decisions about schools closing before CDC could \n                          finalize it’s guidance. One of the things I told everyone in my state during H1N1 \n                          was, we will be following CDC guidance, and that's one way to certainly have consistency \n                          across the country and CDC is constantly updating their guidance based on new \n                          information as we learn about a novel virus such as this. And so there was a big \n                          question though, because CDC guidance wasn’t quite available yet. So I remember, \n                          again, wee hours of the morning, having conversations with the local health officer, \n                          so that we came to a conclusion about closing schools that we were united in that \n                          decision. Then I remember having calls, I took the state, she took the locals, and \n                          I talked with state authorities, education, the governor’s office, with Homeland \n                          Security, everyone, and she was managing all the local leaders. And at about 2 \n                          o’clock that day, we had a big press conference, to announce we were going to close \n                          some schools there in the Indianapolis area. And again we were shoulder to shoulder - \n                          there was no question in the minds of the public what the message was, why we were doing \n                          it, and how long we anticipated. And everyone abided by our request, there was no \n                          controversy, or pushback, it was pretty remarkable. So I think what I learned going \n                          back to this is that you’ve gotta have trust, you need consistent messaging, it’s \n                          gotta be science-driven, and letting people know that we will be learning along the way.\n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          Another story, when the vaccine became available, that we had some challenges with, \n                          were the black community in Lake County, Indiana. You know there's a long history of \n                          African Americans being tested by the government and low trust in the government. So \n                          now you have a free vaccine being given by the government. That put a lot of concern \n                          in the minds of people in the community. And so I went up. I remember the day I went \n                          up. We met with local pastors and First Ladies of the black churches. Again, I was \n                          doing that in alignment with local authorities, state authorities. And these local \n                          pastors and First Ladies got in line, and they were the first to get the vaccine. \n                          And then they saw their trusted leaders. This really drives home how important communities are. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          At the end of the day, any national plan has to be translated down to that community \n                          neighborhood level. That's how we really manage a pandemic and do it effectively\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:11:08] </b> So our final question is about some work at the CDC Foundation has been doing. \n                          We know the CDC Foundation has been drawing attention recently to the discrimination \n                          against African Americans and other minorities, and cyclical inequities in education \n                          and income and health that all sort of feed into each other. Could you tell us more \n                          about what the Foundation and its allies are doing to promote health equity around COVID-19 outcomes?\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Judy Monroe: [00:11:32] </b> Yes, this is an area that we really feel passionate about. And so we have several \n                          initiatives underway. One is working with Morehouse University in the Satcher Health \n                          Leadership Institute on a project where there will be a Health Equity Task Force that \n                          will utilise knowledge of experts in a range of fields to develop a platform that's \n                          going to allow everyone from policymakers to researchers to be able to access standardized \n                          demographic data related to the current pandemic. I think any time we see a pandemic or \n                          other epidemics emerge, detailed demographic data about those being impacted by the \n                          disease just seems to never be available when it's needed most. A hope of this project \n                          is to take a deep level of data, make sure that there's a deep level of data available \n                          in real time to be able to address health equity implications of the COVID-19 pandemic.\n                          So we're really very excited about that and excited about being part of this Health Equity \n                          Task Force. Morehouse is partnered with Google.org and Gilead Sciences, to be able to \n                          collect and analyze this detailed data to get to these root causes and drivers of the differences for people of color. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          So that's one. The other is Community Coalitions. We have some projects underway and \n                          hope to do more in terms of really engaging communities with those trusted organizations \n                          and institutions that can help mobilize African American communities and other communities \n                          of color to be able to really address the morbidity and mortality that we're seeing and to \n                          be able to make sure that preventive community mitigation strategy pieces are being \n                          adopted and coming from trusted individuals. This has everything to do with contact \n                          tracing. We need folks to answer the phone, but if they don't trust that they should \n                          give information out about their contacts, that's a problem for this response. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          We've talked about the face coverings and physical distancing which is needed, and then, \n                          of course, that once the vaccines are available, the vaccine engagement is going to be a \n                          really important area. So along with that, we also are doing a number of things in \n                          communications. We have some national communication efforts underway to help drive the \n                          message to these vulnerable populations, particularly. One thing that's really interesting \n                          for the Foundation and new for us, we've partnered with CDC on, we've been able to hire, \n                            we're calling it the COVID-19 Corps, the CDC Foundation COVID-19 Corps, where we've hired \n                          literally hundreds of people across the country. We have a team in every state, tribal \n                          organizations, the six largest cities and territories. These range from contact tracers, \n                          to epidemiologists, nurses, physicians, data analysts, a whole host of positions we've \n                          been able to hire. In addition to 10 senior advisers that are very seasoned individuals \n                          with backgrounds as state health officers or state epidemiologists as examples, \n                          long careers at CDC, and they have formed among themselves a smaller group that's \n                          looking at health equity particularly. We broke it down to the HHS regions across the \n                          country. So we have these senior advisers looking at their states in their region at \n                          vulnerable populations; again, this such an important area for us, and diving deep into \n                          where those communities of need are, and then we are working to try to support communities \n                          on the ground where they're needed.\n                          \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          A new example of that is Richmond, Virginia, where there was a Latinx community where \n                          they represented 6% of the population, had 30% of the COVID cases. Again kind of the gig economy. \n                          These were folks living in, multiple people living in households, but they're part of the \n                          gig economy with driving Ubers, or doing hourly wage type of work. They were really fearful \n                          if they gave information to contact tracers, they were fearful they would lose their jobs. \n                            So we had a whole community on the verge of homelessness because they had so many COVID cases. \n                          And so that's a population that we're working with. We were able to provide funding\n                          and to help them. And working with the mayor's office, the local authorities, state authorities, \n                          and our senior advisor’s been involved in that response area. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          So when we look across the country, there's just one community after another that needs help, \n                          and we need to drive, we need to understand the data, we need to know the best practices, and \n                          then disseminate those quickly. But nothing takes the place of really partnering right down to that neighborhood level. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:17:06] </b> Well, thank you so much for joining today. I want to draw attention as well to a podcast that \n                          the CDC Foundation has been releasing that people can access at \n                          <a style ={{color: \"#397AB9\"}} href=\"http://www.CDCfoundation.org/conversations\" target=\"_blank\" rel=\"noopener noreferrer\"> www.CDCfoundation.org/conversations. </a>\n                          And I know you guys have recorded three episodes recently focused on COVID-19. So we encourage people\n                          to check those out as well, if this conversation was of interest to them. \n\n                          \n                    </Header>\n                  </Header.Content>\n                </Header>\n      \n              \n            </div>\n            <Notes />\n\n          </Container>\n        }\n\n\n\n\n\n\n\n\n\n\n        {podcastTitle == \"Dr.Carlos_Del_Rio_on_COVID-19_Equity_&_Outcomes\"&&\n          <Container style={{marginTop: \"8em\", minWidth: '1260px'}}>\n\n          <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\", paddingBottom: \"14pt\"}}>\n                <Breadcrumb.Section link onClick={() => history.push('/media-hub')}>Media Hub</Breadcrumb.Section>\n                <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n                <Breadcrumb.Section active>Podcast</Breadcrumb.Section>\n          </Breadcrumb>\n            <div width = {888}>\n            \n                <Header style={{width: 800, marginLeft: 260, fontSize: \"32pt\", fontWeight: 400}}>\n                  <Header.Content>\n                    Dr. Carlos Del Rio on COVID-19 Equity and Outcomes\n                    <Header.Subheader style={{fontSize: \"18pt\", fontWeight: 300, paddingTop: \"15px\"}}>\n\n\n                    </Header.Subheader>\n                    <div style = {{paddingTop: 10}}>\n                      <iframe src=\"https://anchor.fm/rsph-ched/embed/episodes/Dr--Carlos-Del-Rio-on-COVID-19-Equity-and-Outcomes-ehuljb\" height=\"150px\" width=\"800px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n                    </div>\n\n                    <Header style={{fontSize: \"14pt\", lineHeight: \"16pt\", fontWeight: 400, paddingTop: 0}}>\n\n                          <p style={{textAlign:\"left\", fontWeight: 300}}>\n\n                          By Leanna Ehrlich on Aug. 10, 2020\n\n                          <br/>\n                          Contributors: Pooja Naik, K.M. Venkat Narayan, Shivani A. Patel\n                          <br/>\n                          From Emory University\n\n                          <br/>\n\n                          </p>\n\n                          <br/>\n                          <b>Transcript</b>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:00:00]</b> Welcome to the first. Health Equity and outcomes COVID-19 Podcast. \n                          On this episode we talked to Dr. Carlos Del Rio, a distinguished professor of medicine in \n                          the division of infectious diseases at Emory University School of Medicine and Executive \n                          Associate Dean for Emory at Grady Hospital. He is also Professor of Global Health in the \n                          Department of Global Health and a Professor of Epidemiology at the Rollins School of Public Health.\n                    \n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Carlos Del Rio: [00:00:26]</b> It's just been so hard to see how how disproportionate impact this epidemic \n                          has had in minority populations. We're not shocked we're not surprised because health equity in \n                          Health inequalities are...you know part of everyday everyday life right. The reality is is is \n                          it's been just a just really start to see how different the risk is to individuals how different \n                          the disease is how different the mortality is and you know there was an article in New York Times \n                          that really dug deep into this and I think it really highlighted for many of us how these differences \n                          are are really very real. You know how how much more at risk somebody who is Hispanic or African-American \n                          is compared to somebody who is white. Just to give you an idea you know we're seeing you know about about \n                          73 cases per 10000 people population in Latinos we're seeing twenty three cases per 10000 population of \n                          whites. Furthermore the disease in whites is primarily among older individuals and the disease in in in \n                          blacks and Latino population is really among all age groups including people in the ages of 40 50 so younger \n                          people. So what we're also seeing in our country is that the mortality of people with COVID is much younger \n                          than many other places in the world. And that's because of the disparity.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Carlos Del Rio: [00:01:57]</b> So I think if COVID tells us something is that we need to really \n                          at the root address and and and eradicate and really begin to take seriously the racial disparities \n                          that have existed for such a long time.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:02:12]</b> I'm really curious like what you see as I guess the future of the \n                          pandemic response taking into account these inequities.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Carlos Del Rio: [00:02:20]</b> Well you know I think what we need to realize is that we have multiple \n                          pandemics in this country. We have several pandemics and each community has to have a different approach. \n                          And we need to think about how do we involve the community. How do we really have a true community response. \n                          How do we truly have a community participation. How do we make sure the community that we work with community \n                          in addressing the pandemic because this is not going to be solved from from the top down. This is going to be \n                          solved with community participation. So as we look at for example vaccine studies my biggest fear is that we're \n                          not going to be involving the community as much as we should because we really need the community to be front \n                          and center in the response. I mean we have you know among the African-American population there's been mistrust \n                          from just keep you down. Right. So. \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:03:12]</b> Yes.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Carlos Del Rio: [00:03:12]</b> So you know you're gonna go in there with a vaccine. \n                          It's gonna be difficult so we have to work with community to educate them and to make them understand why this is important.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Dr. Carlos Del Rio: [00:03:21]</b> And I think that one thing that to me is is very significant is how \n                          you know a place like like Grady has which has responded to African-American populations and has done \n                          this for a long time. What we've seen here is we haven't seen a higher higher impact of the epidemic. \n                          I mean we have seen a higher mortality among minorities. Right. The the the outcomes have been the same. \n                          And I think that's because we are we are. This is our population we're comfortable treating them. And \n                          therefore we've done a good job with them.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:03:57]</b> Absolutely. Do you see there being a reality in the near future where we're \n                          testing catches up to cases either because cases are going down hopefully or because testing is significantly ramped up.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b> Dr. Carlos Del Rio: [00:04:08]</b> They are. But you don't can't you can't ramp it up much more. \n                          The problem is you know the U.S. already is consuming 55 percent of the testing capacity of the world. \n                          So imagine if we all of a sudden consume even more. Wouldn't that be an inequity for the rest of the world. \n                          And it's just because we're not doing a good job controlling our epidemic that we need more and more testing. \n                          I mean the problem is you know we need a national strategy. And here's what would happen in our national strategy. \n                          You know the testing capacity up in Boston cannot be moved to Atlanta but if you had a national coordinator \n                          the testing capacity in Atlanta. So you would say oh Atlanta has too little testing capacity but Boston has \n                          too much. We'll take the swabs from Atlanta and ship them to Boston and get them run in Boston right.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:04:48]</b> Yeah.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b> Dr. Carlos Del Rio: [00:04:48]</b> But but that wouldn't require a national strategy which the president \n                          from day one said it's gonna be a state strategy. And I think having a state strategy has been one of the \n                          biggest problems in our country because by having a state strategy we essentially have 50 strategies and \n                          we don't have any way to actually you know consolidate and synergize and help each other out.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:05:11]</b> Do you think right now is the biggest change that could be made in the US \n                          either within population health or in the medical system or public health system to change the course of the pandemic? \n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b> Dr. Carlos Del Rio: [00:05:21]</b> We need rapid turn around in testing and we need quick very efficient \n                          and well done contact tracing. We're not doing contact tracing the way it's supposed to be done where we're \n                          essentially are wasting what would be the benefits of contact tracing by not doing it the right way.\n\n                          <br/>\n                          <br/>\n                          <br/>\n\n                          <b>Leanna Ehrlich: [00:05:38]</b> Well this has been such an interesting conversation. Thank you for joining \n                          the podcast today and sharing your experience and perspective with us.\n\n\n\n\n                </Header>\n              </Header.Content>\n            </Header>\n  \n          \n            </div>\n        <Notes />\n\n      </Container>\n    }\n    </div>);\n}\n","\nimport React, { useContext, useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\n\nconst Marker = ({\n  coordinates,\n  children,\n  onMouseEnter,\n  onMouseLeave,\n  onMouseDown,\n  onMouseUp,\n  onFocus,\n  onBlur,\n  style = {},\n  className = \"\",\n  ...restProps\n}) => {\n  const { projection } = useContext(MapContext)\n  const [isPressed, setPressed] = useState(false)\n  const [isFocused, setFocus] = useState(false)\n\n  const [x, y] = projection(coordinates)\n\n  function handleMouseEnter(evt) {\n    setFocus(true)\n    if (onMouseEnter) onMouseEnter(evt)\n  }\n\n  function handleMouseLeave(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onMouseLeave) onMouseLeave(evt)\n  }\n\n  function handleFocus(evt) {\n    setFocus(true)\n    if (onFocus) onFocus(evt)\n  }\n\n  function handleBlur(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onBlur) onBlur(evt)\n  }\n\n  function handleMouseDown(evt) {\n    setPressed(true)\n    if (onMouseDown) onMouseDown(evt)\n  }\n\n  function handleMouseUp(evt) {\n    setPressed(false)\n    if (onMouseUp) onMouseUp(evt)\n  }\n\n  return (\n    <g\n      transform={`translate(${x}, ${y})`}\n      className={`rsm-marker ${className}`}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      style={style[isPressed || isFocused ? (isPressed ? \"pressed\" : \"hover\") : \"default\"]}\n      {...restProps}\n    >\n      {children}\n    </g>\n  )\n}\n\nMarker.propTypes = {\n  coordinates: PropTypes.array,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default Marker\n","\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\nimport { createConnectorPath } from \"../utils\"\n\nconst Annotation = ({\n  subject,\n  children,\n  connectorProps,\n  dx = 30,\n  dy = 30,\n  curve = 0,\n  className = \"\",\n  ...restProps\n}) => {\n  const { projection } = useContext(MapContext)\n  const [x, y] = projection(subject)\n  const connectorPath = createConnectorPath(dx, dy, curve)\n\n  return (\n    <g\n      transform={`translate(${x + dx}, ${y + dy})`}\n      className={`rsm-annotation ${className}`}\n      {...restProps}\n    >\n      <path d={connectorPath} fill=\"transparent\" stroke=\"#000\" {...connectorProps} />\n      {children}\n    </g>\n  )\n}\n\nAnnotation.propTypes = {\n  subject: PropTypes.array,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  dx: PropTypes.number,\n  dy: PropTypes.number,\n  curve: PropTypes.number,\n  connectorProps: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default Annotation\n","import AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, Rail, Ref, Sticky, Divider, Accordion, Icon, Header, Table, Menu } from 'semantic-ui-react'\nimport React, { useEffect, useState, Component, createRef, useRef, useContext, useMemo} from 'react'\nimport { Waypoint } from 'react-waypoint'\n\n\nconst contextRef = createRef()\n// const nameList = ['General Information', 'Vaccine Development', 'Vaccine Safety', 'Getting Vaccinated', 'After You Are Vaccinated'];\n// let scrollCount = 0;\n\nfunction StickyExampleAdjacentContext(props) {\n    const contextRef = createRef();\n    const [activeItem, setActiveItem] = useState('General Information')\n    var activeCharacter = props.activeCharacter;\n    //const { activeItem } = sTate\n    // useEffect(() => {\n    //     setActiveItem(nameList[scrollCount])\n    // }, [scrollCount])\n\n    console.log(props.activeCharacter)\n    \n    return (\n\n        <div >\n          <Ref innerRef={contextRef}>\n            <Rail attached size='mini' >\n              <Sticky offset={180} position= \"fixed\" context={contextRef}>\n                <div style={{width:240, overflow: \"hidden\"}}>\n                  <div style= {{height:600, width: 250, overflowY: \"scroll\", overflowX:\"hidden\"}}> \n                    {/* <div style={{height: \"100%\", width: 240}}> */}\n                      <Menu\n                        //   size='small'\n                        style={{width: 240, marginTop:'2rem', fontSize: '14pt'}}\n                          // compact\n                          pointing secondary vertical>\n                          <Menu.Item as='a' name='General Information' active={activeItem === 'General Information'}\n                          // || activeItem === 'General Information'\n                                onClick={(e, { name }) => { setActiveItem( name )  }}><Header as='h4'>General Information</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#develop\" name='Vaccine Development' active={activeItem === 'Vaccine Development' }\n                          // || activeItem === 'Vaccine Development'\n                                onClick={(e, { name }) => { setActiveItem( name ) }}><Header as='h4'>Vaccine Development</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#safety\" name='Vaccine Safety' active={activeItem === 'Vaccine Safety' }\n                          // || activeItem === 'Vaccine Safety'\n                                onClick={(e, { name }) => { setActiveItem( name ) }}><Header as='h4'>Vaccine Safety</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#get\" name='Getting Vaccinated' active={activeItem === 'Getting Vaccinated' }\n                          // || activeItem === 'Getting Vaccinated'\n                                onClick={(e, { name }) => { setActiveItem( name ) }}><Header as='h4'>Getting Vaccinated</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#after\" name='After You Are Vaccinated' active={activeItem === 'After You Are Vaccinated' }\n                          // || activeItem === 'After You Are Vaccinated'\n                                onClick={(e, { name }) => { setActiveItem( name ) }}><Header as='h4'>After You Are Vaccinated</Header></Menu.Item>\n                      </Menu>\n                    {/* </div> */}\n                  </div>\n                </div>\n              </Sticky>\n            </Rail>\n          </Ref> \n        </div>\n    )\n  // }\n\n}\n\n\n\n\n\n\nexport default function VaccinesFAQ(props){\n  const [activeCharacter, setActiveCharacter] = useState('');\n  const [activeIndex, setActiveIndex] = useState([-1]);\n  console.log(activeIndex);\n\n  return (\n    <div>\n      \n      <AppBar menu='vaccineTracker'/>\n      <Container style={{marginTop: '0em', minWidth: '1260px', overflow: \"hidden\"}}>\n\n      <Grid>\n        {/* <Grid.Column width={2} style={{zIndex: 10}}>\n          <Ref innerRef={createRef()} >\n            <StickyExampleAdjacentContext activeCharacter={activeCharacter}  />\n          </Ref>\n        </Grid.Column> */}\n\n\n        <Grid.Column width={14}>\n\n        <div style={{paddingLeft: '2rem', paddingRight:'8rem'}}>\n        <Header as='h1' style={{paddingTop: 30, fontWeight: 400, fontSize: \"24pt\"}}>\n\n          <Header.Content>\n            Frequently Asked Questions about COVID-19 Vaccines\n            <Header.Subheader style={{paddingTop:'2rem', paddingLeft: '0rem', paddingBottom:'0rem', lineHeight: \"20pt\", fontWeight: 400, fontSize: \"14pt\", color: 'black'}}> \n            This is a resource guide to answer common questions about the COVID-19 vaccines. This guide is based on the best available information as of Mar 14, 2021. Before taking the vaccine, please consult your healthcare provider.\n            If you have any questions or concerns beyond those addressed here, we recommend the following resources for additional information:\n            {/* {Date().slice(4,10)} */}\n            <ul style={{paddingLeft:'6rem', fontSize:'14pt', lineHeight:'1.5'}}>\n            <li>\n            <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC website </a>\n            </li>\n            <li>\n            <a style ={{color: \"#397AB9\"}} href=\"https://www.mayoclinic.org/coronavirus-covid-19/vaccine\" target=\"_blank\" rel=\"noopener noreferrer\"> Mayo Clinic website </a>\n            </li>\n            <li>\n            Your local Department of Health website\n            </li>\n            </ul>\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n\n        \n        <div style = {{height: 5}}> </div>\n        <Header as='h2' style={{fontWeight: 600}}>\n            General Information\n        </Header>\n        \n        <Waypoint\n            onEnter={() => {\n                setActiveCharacter('General Information')\n                //console.log(activeCharacter)\n            }}>\n        </Waypoint> \n\n        <div style={{paddingLeft:'2rem', paddingBottom: '0rem'}}>\n        <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          index={0}\n          onClick={() => activeIndex.indexOf(0) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 0]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 0))}\n        >\n          <Icon name='dropdown' />\n            What COVID-19 vaccines are approved for use in the United States?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(0)>0}>\n          <p style={{marginBottom: 0}}>\n            At this time, three vaccines have been approved for use by the United States Food and Drug Administration (<a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/emergency-preparedness-and-response/coronavirus-disease-2019-covid-19/covid-19-vaccines\" target=\"_blank\" rel=\"noopener noreferrer\">FDA</a>): \n            one developed by the company <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/emergency-preparedness-and-response/coronavirus-disease-2019-covid-19/pfizer-biontech-covid-19-vaccine\" target=\"_blank\" rel=\"noopener noreferrer\"> Pfizer-BioNTech</a>\n            , one by <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/emergency-preparedness-and-response/coronavirus-disease-2019-covid-19/moderna-covid-19-vaccine\" target=\"_blank\" rel=\"noopener noreferrer\"> Moderna </a>, and one by \n            <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/146305/download\" target=\"_blank\" rel=\"noopener noreferrer\"> Janssen Biotech, Johnson & Johnson’s vaccine division</a>. \n        </p>\n        <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            NOTE: The <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/news-events/press-announcements/joint-cdc-and-fda-statement-johnson-johnson-covid-19-vaccine\" target=\"_blank\" rel=\"noopener noreferrer\"> FDA and CDC </a>\n            recommended a pause in the use of the Johnson and Johnson vaccine “out of an abundance of caution” on 13 April 2021.\n          </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={1}\n          onClick={() => activeIndex.indexOf(1) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 1]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 1))}\n        >\n          <Icon name='dropdown' />\n            What are the differences between the approved vaccines?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(1)>0}>\n          <p>\n            Both the <a style ={{color: \"#397AB9\"}} href=\"https://www.nejm.org/doi/full/10.1056/NEJMoa2034577\" target=\"_blank\" rel=\"noopener noreferrer\"> Pfizer-BioNTech </a>\n            and the <a style ={{color: \"#397AB9\"}} href=\"https://www.nejm.org/doi/full/10.1056/nejmoa2022483\" target=\"_blank\" rel=\"noopener noreferrer\"> Moderna </a>\n            vaccines have shown that they are very effective in preventing symptomatic COVID-19 disease (95% and 94.1% effective, respectively). The Johnson & Johnson vaccine showed that it was also quite effective in preventing severe COVID-19 illness (85% effective), \n            as well as preventing less severe illness. All three vaccines  have also shown that they are safe to get. However, there are a few small differences in who should get them and when. The most important ones for anyone getting a vaccine are the following:\n        </p>\n        <Container style={{paddingLeft:'3rem', paddingBottom:'0.5rem'}}>\n        <Table celled compact style={{fontWeight: 400, fontSize:'13pt', width: '58rem'}}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell width={3}>Pfizer-BioNTech COVID-19 vaccine</Table.HeaderCell>\n              <Table.HeaderCell width={3}>Moderna COVID-19 vaccine</Table.HeaderCell>\n              <Table.HeaderCell width={3}>Johnson & Johnson COVID-19 vaccine</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"14pt\"}}>Approved for individuals aged 16 years and older</Table.Cell>\n              <Table.Cell style={{lineHeight: \"14pt\"}}>Approved for individuals aged 18 years and older</Table.Cell>\n              <Table.Cell style={{lineHeight: \"14pt\"}}>Approved for individuals aged 18 years and older</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"14pt\"}}>2 doses, 3 weeks apart</Table.Cell>\n              <Table.Cell style={{lineHeight: \"14pt\"}}>2 doses, 4 weeks apart</Table.Cell>\n              <Table.Cell style={{lineHeight: \"14pt\"}}>1 dose</Table.Cell>\n            </Table.Row>\n            </Table.Body>\n        </Table>\n        </Container>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={2}\n          onClick={() => activeIndex.indexOf(2) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 2]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 2))}\n        >\n          <Icon name='dropdown' />\n            What ingredients are in the approved COVID-19 vaccines?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(2)>0}>\n          <p style={{marginBottom:0}}>\n            Each vaccine that is being developed is slightly different. The three vaccines for COVID-19 currently approved by the Food and Drug Administration (FDA) for use in the United States are the Pfizer-BioNTech COVID-19 vaccine, the Moderna COVID-19 vaccine, and the Johnson & Johnson COVID-19 vaccine. \n          </p>\n          <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            For the Pfizer-BioNTech and Moderna vaccines, the active ingredient is mRNA. \n          </p>\n          <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            For the Johnson & Johnson vaccine, the active ingredient is modified virus particles that carry SARS-CoV-2 DNA. These virus particles are not active virus and cannot replicate in the body or cause illness. \n          </p>\n          <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            All of the vaccines also include other ingredients like fat, salts, and sugars that protect the active ingredients, either mRNA or modified virus cells, depending on the vaccine. These ingredients also help the active ingredients work better in the body, and protect the vaccine when it is stored at very cold temperatures. \n          </p>\n          <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            The specific ingredients for each vaccine are listed <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/144414/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>for the Pfizer-BioNTech vaccine, \n            <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/144638/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a> for the Moderna vaccine, and \n            <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/146305/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a> for the Johnson & Johnson vaccine.\n          </p>\n          <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            <u>None of the approved vaccines contain preservatives, eggs, latex, or fetal tissue.</u>\n          </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={3}\n          onClick={() => activeIndex.indexOf(3) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 3]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 3))}\n        >\n          <Icon name='dropdown' />\n            What is an mRNA vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(3)>0}>\n        <p style={{marginBottom:0}}>\n            The first two approved COVID-19 vaccines, those from Pfizer-BioNTech and Moderna, are a new type of vaccine called an <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/different-vaccines/mrna.html\" target=\"_blank\" rel=\"noopener noreferrer\"> mRNA vaccine</a>.\n            An mRNA vaccine contains “instructions” for the body to make a piece of the “spike protein” found on the surface of the virus that causes COVID-19. These vaccines do not contain the whole virus. \n            The body then follows the instructions in the mRNA to make spike proteins and the immune system learns to recognize those proteins. \n            The body can then make antibodies to fight viruses that have this protein, in the same way it would learn to recognize and fight the virus if you actually got a COVID infection. \n        </p>\n        <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            mRNA vaccines cannot change a person’s DNA. The mRNA from the vaccine does not interact with a person’s DNA. mRNA is not “permanent”. In fact, it is quite fragile and breaks down quickly after it has triggered the body to make the virus spike proteins. \n            The mRNA “instructions” in these vaccines is likely to be read just by the muscle cells in your arm and some immune system cells. It will not be read by cells in other parts of your body.\n        </p>\n        <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n          Although these vaccines are the first mRNA vaccines approved for use against any disease, scientists have been studying and working with mRNA for decades. This type of vaccine is also being studied against flu, Zika, rabies, and cytomegalovirus (CMV). \n          Because of the type of technology and materials they use, mRNA vaccines can also be developed more quickly against new viruses than other types of vaccines, as they were against COVID-19.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={34}\n          onClick={() => activeIndex.indexOf(34) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 34]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 34))}\n        >\n          <Icon name='dropdown' />\n          What is a “viral vector” or “adenovirus-based” vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(34)>0}>\n        <p style={{marginBottom:0}}>\n        The COVID-19 vaccine developed by Johnson & Johnson is part of a category of vaccines known as “non-replicating viral vector”, “adenovirus-based”, or simply “viral vector” vaccines. These vaccines contain modified virus cells to deliver information to the body’s cells. \n        These virus cells are modified to be harmless so that they cannot cause any kind of illness, including COVID-19. They are not SARS-CoV-2 virus cells.\n        </p>\n        <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        These cells carry the DNA, or genes, for the SARS-CoV-2 “spike protein”. Once in the body, these genes allow the body to produce the mRNA or instructions to build those spike proteins. Then the body makes those spike proteins and the immune system learns to recognize those proteins. \n        The body can then make antibodies to fight viruses that have this protein, in the same way it would learn to recognize and fight the virus if you actually got a COVID infection.    \n        </p>\n        <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        The spike protein DNA in these vaccines cannot change or affect a person’s DNA. The genes in the vaccines do not interact with a person’s DNA. \n        </p>\n        <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        Although adenovirus-based vaccines are a newer type of vaccine, this technology has been studied since the 1970s. A safe and effective vaccine against Ebola (also developed by \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.jnj.com/latest-news/latest-facts-about-johnson-johnson-ebola-vaccine\" target=\"_blank\" rel=\"noopener noreferrer\"> Johnson & Johnson</a>) that uses this technology has been in use since 2019. \n        Other viral vector vaccines that are being studied now include vaccines against HIV, Zika, and flu.  \n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title id=\"develop\" style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={4}\n          onClick={() => activeIndex.indexOf(4) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 4]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 4))}\n        >\n          <Icon name='dropdown' />\n            Can I get COVID-19 from taking the mRNA vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(4)>0}>\n          <p>\n        No. mRNA vaccines cannot make anyone sick with COVID-19. They do not contain the virus that causes COVID-19. However, after receiving a vaccine, you may experience feelings like a headache or muscle aches. \n        The headaches and muscle aches happen because the vaccine triggers your body’s immune system and teaches it how to fight the virus. That is good news! If you do <b>not</b> experience these symptoms, \n        however, that does not mean your immune system is not reacting to the vaccine and learning how to fight the virus or that the vaccine is not working. \n        Individuals react differently to vaccines and your body may just have a less pronounced response.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title id=\"develop\" style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={35}\n          onClick={() => activeIndex.indexOf(35) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 35]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 35))}\n        >\n          <Icon name='dropdown' />\n          Can I get COVID-19 from taking the viral vector vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(35)>0}>\n          <p>\n          No. Viral vector vaccines cannot make anyone sick with COVID-19. They do not contain the virus that causes COVID-19. However, after receiving a vaccine, you may experience feelings like a headache or muscle aches. \n          The headaches and muscle aches happen because the vaccine triggers your body’s immune system and teaches it how to fight the virus. That is good news! If you do not experience these symptoms, however, \n          that does not mean your immune system is not reacting to the vaccine and learning how to fight the virus or that the vaccine is not working. Individuals react differently to vaccines and your body may just have a less pronounced response.\n        </p>\n        </Accordion.Content>\n\n\n        </Accordion>\n        </div>\n\n\n\n        <div style = {{height: 5}}> </div>\n        <Header as='h2' style={{fontWeight: 600}}>\n            <Header.Content>\n                Vaccine Development\n            </Header.Content>\n        </Header>\n\n        \n\n        { /*<Header as='h3' style={{fontSize:'16pt', paddingLeft:'2rem'}}>\n            How many vaccines are currently being studied?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(0)>0}>\n          <p>\n        There are <a style ={{color: \"#397AB9\"}} href=\"https://covid19.trackvaccines.org/vaccines/\" target=\"_blank\" rel=\"noopener noreferrer\"> currently </a>\n        78 vaccines in various phases of testing across the world. Of these, 20 are in <a style ={{color: \"#397AB9\"}} href=\"https://covid19.trackvaccines.org/trials-vaccine-testing/#trial-phases\" target=\"_blank\" rel=\"noopener noreferrer\"> Phase 3 </a>\n        clinical trials. Phase 3 trials are the large-scale studies done before a vaccine is approved.\n        </p>\n\n        <Waypoint\n            onEnter={() => {\n                setActiveCharacter('Vaccine Development')\n                //console.log(activeCharacter)\n            }}>\n        </Waypoint> \n\n        <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={0}\n          onClick={() => activeIndex.indexOf(0) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 0]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 0))}\n        >\n          <Icon name='dropdown' />\n            Will the approved vaccines protect against new variants of the coronavirus?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(0)>0}>\n          <p>\n        It is hard to know exactly how effective the authorized vaccines will be against new and different variants of SARS-CoV-2, the virus that causes COVID-19. \n        Right now, the limited information we have suggests that the immune protection both from natural infection (i.e. actually getting COVID-19) or \n        from vaccination will still protect against most new variants. However, this is a changing situation, and something scientists are continuing to study. \n        </p>\n\n\n        <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={0}\n          onClick={() => activeIndex.indexOf(0) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 0]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 0))}\n        >\n          <Icon name='dropdown' />\n            What is Operation Warp Speed?\n        </Header>\n        <p style={{paddingLeft:'4rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            Operation Warp Speed is a partnership among components of the Department of Health and Human Services and the Department of Defense to help develop, make, \n            and distribute millions of vaccine doses for COVID-19 as quickly as possible after making sure that the vaccines are safe and that they work. \n        </p>\n        <p style={{paddingTop:'1rem',paddingLeft:'4rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n            Details about Operation Warp Speed can be found <a style ={{color: \"#397AB9\"}} href=\"https://www.hhs.gov/coronavirus/explaining-operation-warp-speed/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>.\n        </p>\n\n\n        <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={0}\n          onClick={() => activeIndex.indexOf(0) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 0]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 0))}\n        >\n          <Icon name='dropdown' />\n            What does it mean if a clinical trial is “paused”?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(0)>0}>\n          <p>\n        During clinical trials, the top priority is safety of the participants. The clinical trials of the COVID-19 vaccines are no different. \n        It is normal for a clinical trial to be temporarily paused when a possible side effect (or “adverse event”) is found. This pause happens so that the side effect can be investigated fully, \n        to see if it is really related to the vaccine, or to something else. This is done by doctors and an independent monitoring board of other scientists, not by the pharmaceutical company. \n        Clinical trials are specifically designed to allow for potential pauses, so that they can put patient safety at the absolute top of the priority list. \n        </p> */}\n\n\n      <div style={{paddingLeft:'2rem', paddingBottom: '0rem'}}>\n      <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={5}\n          onClick={() => activeIndex.indexOf(5) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 5]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 5))}\n        >\n          <Icon name='dropdown' />\n          How many vaccines are currently being studied?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(5)>0}>\n          <p>\n          There are <a style ={{color: \"#397AB9\"}} href=\"https://covid19.trackvaccines.org/vaccines/\" target=\"_blank\" rel=\"noopener noreferrer\"> currently </a>\n        93 vaccines in various phases of testing across the world. Of these, 25 are in <a style ={{color: \"#397AB9\"}} href=\"https://covid19.trackvaccines.org/trials-vaccine-testing/#trial-phases\" target=\"_blank\" rel=\"noopener noreferrer\"> Phase 3 </a>\n        clinical trials. Phase 3 trials are the large-scale studies done before a vaccine is approved. There are 12 vaccines approved for use in different countries, although only 3 have been approved for use in the United States under the Food and Drug Administration’s Emergency Use Authorization.\n          </p>\n        </Accordion.Content>\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 1}\n          index={6}\n          onClick={() => activeIndex.indexOf(6) <0 ? setActiveIndex(activeIndex =>[...activeIndex, 6]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 6))}\n        >\n          <Icon name='dropdown' />\n          Will the approved vaccines protect against new variants of the coronavirus?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(6)>0}>\n          <p style={{marginBottom:0}}>\n          It is hard to know exactly how effective the authorized vaccines will be against new and different variants of SARS-CoV-2, the virus that causes COVID-19. \n        Right now, the limited <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/transmission/variant.html\" target=\"_blank\" rel=\"noopener noreferrer\"> information </a>\n        we have suggests that the immune protection both from natural infection (i.e. actually getting COVID-19) or \n        from vaccination will still protect against most new variants. However, this is a changing situation, and something scientists are continuing to study. \n          </p>\n          <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n          At this time, the <a style ={{color: \"#397AB9\"}} href=\"https://www.bmj.com/content/372/bmj.n597\" target=\"_blank\" rel=\"noopener noreferrer\"> data </a> \n          show a mixed picture. Whether or not a vaccine is effective against a variant depends both on the specific vaccine and the specific variant. At this time, it is recommended that even if you are vaccinated, you continue to wear a mask, especially in large groups.\n          </p>\n        </Accordion.Content>\n\n        {/* <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 2}\n          index={7}\n          onClick={() => activeIndex.indexOf(7) <0 ? setActiveIndex(activeIndex =>[...activeIndex, 7]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 7))}\n        >\n          <Icon name='dropdown' />\n          What is Operation Warp Speed?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(7)>0}>\n          <p>\n            Operation Warp Speed is a partnership among components of the Department of Health and Human Services and the Department of Defense to help develop, make, \n            and distribute millions of vaccine doses for COVID-19 as quickly as possible after making sure that the vaccines are safe and that they work. \n            <br/><br/>\n            Details about Operation Warp Speed can be found <a style ={{color: \"#397AB9\"}} href=\"https://www.hhs.gov/coronavirus/explaining-operation-warp-speed/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>.\n          </p>\n        </Accordion.Content> */}\n\n\n        <Accordion.Title id=\"safety\" style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 3}\n          index={8}\n          onClick={() => activeIndex.indexOf(8) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 8]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 8))}\n        >\n          <Icon name='dropdown' />\n          What does it mean if a clinical trial is “paused”?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(8)>0}>\n          <p>\n          During clinical trials, the top priority is safety of the participants. The clinical trials of the COVID-19 vaccines are no different. \n        It is normal for a clinical trial to be temporarily paused when a possible side effect (or “adverse event”) is found. This pause happens so that the side effect can be investigated fully, \n        to see if it is really related to the vaccine, or to something else. This is done by doctors and an independent monitoring board of other scientists, not by the pharmaceutical company. \n        Clinical trials are specifically designed to allow for potential pauses, so that they can put patient safety at the absolute top of the priority list. \n        </p>\n        </Accordion.Content>\n\n\n      <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 1}\n          index={7}\n          onClick={() => activeIndex.indexOf(7) <0 ? setActiveIndex(activeIndex =>[...activeIndex, 7]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 7))}\n        >\n          <Icon name='dropdown' />\n          How was it possible to develop these vaccines so quickly?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(7)>0}>\n          <p style={{marginBottom:0}}>\n          As soon as the virus was identified as SARS-CoV-2 in early 2020, many researchers around the world began to work on mapping out its genetic code. Because scientists were already familiar with coronaviruses, \n          the virus family SARS-CoV-2 belongs to, and because they collaborated on this work, they were able to identify its viral sequence incredibly quickly. The technologies for the different types of vaccines (mRNA, viral vector, and others) \n          were already being tested on other viruses and in other areas of medicine. They were rapidly adapted against SARS-CoV-2 once scientists had its viral sequence fully mapped out.\n          </p>\n          <p style={{paddingTop:'1rem',paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n          Because of the global urgency to fight the COVID-19 pandemic, researchers received very large amounts of funding from governments and private sector investors. Partnerships were also developed between groups of institutions to plan ahead \n          in case the vaccines that were being developed and tested proved to be effective. In the United States, one such partnership was Operation Warp Speed. This collaboration brought together components of the Department of Health and Human Services \n          and the Department of Defense to develop, make and distribute vaccines as quickly as possible after they were tested for safety and effectiveness.\n          </p>\n        </Accordion.Content>\n        </Accordion>\n      </div>\n\n\n\n\n        <div style = {{height: 5}}> </div>\n        <Header as='h2' style={{fontWeight: 600}}>\n            <Header.Content>\n                Vaccine Safety\n            </Header.Content>\n        </Header>\n\n        <Waypoint\n            onEnter={() => {\n                setActiveCharacter('Vaccine Safety')\n                //console.log(activeCharacter)\n            }}>\n        </Waypoint> \n        \n        <div style={{paddingLeft:'2rem', paddingBottom: '0rem'}}>\n        <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={9}\n          onClick={() => activeIndex.indexOf(9) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 9]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 9))}\n        >\n          <Icon name='dropdown' />\n            What is an Emergency Use Authorization (EUA) for vaccines?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(9)>0}>\n          <p>\n        An <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/emergency-preparedness-and-response/mcm-legal-regulatory-and-policy-framework/emergency-use-authorization\" target=\"_blank\" rel=\"noopener noreferrer\"> Emergency Use Authorization </a>\n        is a way that the Food and Drug Administration (FDA) can approve a treatment when there is no alternative treatment for a major health threat. \n        The Food and Drug Administration issues Emergency Use Authorization only when a panel of doctors agrees that the benefits of the treatment very clearly outweigh the risk. \n        The Food and Drug Administration issued Emergency Use Authorization of the COVID-19 vaccine because there are no other treatments available and a panel of doctors decided there was enough information that the benefits of the vaccine are greater than the risks. \n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={10}\n          onClick={() => activeIndex.indexOf(10) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 10]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 10))}\n        >\n          <Icon name='dropdown' />\n            Are the approved COVID-19 vaccines safe?\n          </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(10)>0}>\n          <p style={{marginBottom: 0}}>\n        Yes. Any vaccine that is approved for use is thoroughly tested to make sure that it is both effective and safe. Tests for safety already happen in Phase I, Phase II, and Phase III clinical trials. \n        However, vaccines continue to be tested for safety after they are approved for use, in what are called “Phase IV” studies. All the vaccines for COVID-19 are being developed through careful scientific studies, \n        which follow strict standards set by the Food and Drug Administration (FDA). During vaccine development and testing, researchers carefully study whether each vaccine effectively reduces the chances of getting COVID-19 or getting sick from COVID-19. \n        Researchers have tested the vaccines on thousands of study participants during Phases I-III. Researchers also track whether a vaccine causes side effects, the kind of side effects people experience, and how serious those are. \n        All of the side effects are reported to doctors making the decision about whether the vaccine is safe.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        There are very strict standards about whether a vaccine is authorized as safe by the Food and Drug Administration. Before a COVID-19 vaccine is approved, scientists must show that any risks of side effects from the vaccine are outweighed by its benefits and \n        by the potential harm of getting sick from COVID-19. You can find additional information about COVID-19 vaccine safety on the <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/safety.html\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC’s website </a>\n        and the full documents shared with the FDA <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/144434/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a> for the Moderna vaccine, \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/144245/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a> for the Pfizer-BioNTech vaccine, and <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/146217/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>\n        for the Johnson & Johnson vaccine. Vaccine safety monitoring does not stop once a vaccine is approved. It continues on a larger scale with Phase IV studies as well as nationwide vaccine safety reporting systems.\n        </p>\n        \n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        There are multiple systems used to track any reports of any adverse side effects or reactions. The Vaccine Safety Datalink which helps to determine whether the reactions reported using the Vaccine Adverse Event Reporting System (VAERS) are related to a vaccine. \n        The Clinical Immunization Safety Assessment Project also helps to track and evaluate issues of vaccine safety. You can find out more about these and other different systems at CDC, the Food and Drug Administration, \n        and other groups used to monitor and assess safety  <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/safety.html\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title id=\"get\" style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={11}\n          onClick={() => activeIndex.indexOf(11) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 11]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 11))}\n        >\n          <Icon name='dropdown' />\n            Are there concerns about the COVID-19 vaccine and fertility?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(11)>0}>\n          <p>\n        No. There is no evidence to suggest that the COVID-19 vaccines would increase the risk of infertility. This is a concern that began to be shared widely by non-scientific sources. \n        However, there is no connection between the virus spike protein targeted by the vaccine and human reproductive tissue. As a result, there is no reason to be concerned about any effect of these vaccines on fertility. \n        </p>\n        </Accordion.Content>\n        </Accordion>\n        </div>\n\n\n\n\n        <div style = {{height: 5}}></div>\n        <Header as='h2' style={{fontWeight: 600}}>\n            <Header.Content>\n                Getting Vaccinated\n            </Header.Content>\n        </Header>\n\n        <Waypoint\n            onEnter={() => {\n                setActiveCharacter('Getting Vaccinated')\n                //console.log(activeCharacter)\n            }}>\n        </Waypoint> \n\n\n        <div style={{paddingLeft:'2rem', paddingBottom: '0rem'}}>\n        <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={12}\n          onClick={() => activeIndex.indexOf(12) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 12]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 12))}\n        >\n          <Icon name='dropdown' />\n            Is the COVID-19 vaccine effective in protecting people against getting COVID-19?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(12)>0}>\n          <p style={{marginBottom:0}}>\n        Yes. The clinical trials for each approved vaccine showed that the vaccine was effective in protecting vaccinated people from getting sick with COVID-19 disease. \n        </p>\n        \n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        For both the Pfizer-BioNTech and Moderna vaccines, 2 doses are required to be fully protected from COVID-19. Individuals are not considered to be “vaccinated” until after they receive their 2<sup>nd</sup> dose. \n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        For the Johnson & Johnson vaccine, only one dose is needed. For all vaccines, it takes around 2 weeks after vaccination to be fully protected.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={13}\n          onClick={() => activeIndex.indexOf(13) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 13]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 13))}\n        >\n          <Icon name='dropdown' />\n            Can the vaccine make me sick with COVID-19?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(13)>0}>\n          <p>\n        No. The COVID-19 vaccines do not contain COVID-19 virus particles that could cause the disease.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={14}\n          onClick={() => activeIndex.indexOf(14) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 14]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 14))}\n        >\n          <Icon name='dropdown' />\n            Do I need two doses of the COVID-19 vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(14)>0}>\n          <p style={{marginBottom:0}}>\n        Yes, if you are getting one of the approved mRNA vaccines (from Pfizer-BioNTech or Moderna), you need both doses. For these vaccines, one dose is not effective enough to provide strong protection against COVID-19. You can enroll in \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/vaccines/covid-19/reporting/vaxtext/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC’s VaxText program </a>\n        to receive text messages to remind you when it is time to get your second dose.\n        </p>\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        For the vaccine developed by Johnson & Johnson, you do not need a second dose.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={15}\n          onClick={() => activeIndex.indexOf(15) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 15]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 15))}\n        >\n          <Icon name='dropdown' />\n          Do I need two doses of the same COVID-19 vaccine (if I get a two-dose vaccine)?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(15)>0}>\n          <p style={{marginBottom:0}}>\n        Yes, whenever possible. You should get both doses of the same vaccine. In other words, you should not “mix and match” vaccines from different manufacturers. When you get your first vaccine dose, you will receive a card with the date, \n        the name of the manufacturer, and lot number of the vaccine you received and the date when you should get the second dose. You should take that card to your next vaccination appointment to keep track of what vaccine you were given and when. \n        This will help the healthcare staff provide you with the correct second dose. \n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        Getting two different types of vaccines will likely not give you more protection than one type of vaccine. \n        The safety of getting vaccinated by two different vaccines has not been directly tested in clinical trials, so this is not recommended. In very limited situations, CDC recently published\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/vaccines/covid-19/info-by-product/clinical-considerations.html\" target=\"_blank\" rel=\"noopener noreferrer\"> guidance </a>\n        to allow for two doses of different vaccines to be given. This should only be done if the vaccine given for the first dose is no longer available or it is not possible to determine which vaccine was used for the first dose. \n        This should be avoided if at all possible.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={16}\n          onClick={() => activeIndex.indexOf(16) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 16]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 16))}\n        >\n          <Icon name='dropdown' />\n            Will a flu shot protect me from COVID-19?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(16)>0}>\n          <p>\n        No. Getting a flu vaccine can only protect you from getting influenza (flu). It will not protect you from getting COVID-19 or from getting sick if you get COVID-19. If you do get COVID-19, being protected from the flu can keep you from having a more severe illness. \n        Therefore, getting a <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/flu/prevent/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> flu vaccine </a>\n        is still important. \n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={17}\n          onClick={() => activeIndex.indexOf(17) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 17]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 17))}\n        >\n          <Icon name='dropdown' />\n            Will the COVID-19 vaccine protect me from the flu?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(17)>0}>\n          <p>\n        No. Once you are able to get a COVID-19 vaccine, it will not protect you from getting the flu (influenza) or from getting sick if you do get the flu. Even after you get a vaccine for COVID-19, you should continue getting a flu vaccine every year to protect yourself from seasonal flu.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={18}\n          onClick={() => activeIndex.indexOf(18) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 18]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 18))}\n        >\n          <Icon name='dropdown' />\n            I’ve already had COVID-19. Should I still get vaccinated?\n            </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(18)>0}>\n          <p style={{marginBottom:0}}>\n        Yes. Since COVID-19 is a new virus, we do not know how long immunity (or protection) someone gets from having an infection lasts. In general, immunity after an infection depends on both the disease and the individual. \n        So far, based on evidence from a small number of people, it seems like immunity from a COVID-19 infection may not last very long. More research is needed to understand this fully and to get a clearer sense of how long it might last. \n        Because we do not yet know how long this immunity will last, it is still important to get vaccinated even if you had COVID-19 and recovered.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        However, if you currently have COVID-19, you should wait to get vaccinated until you feel better and your isolation period is over. If you were treated with antibody therapy during your COVID-19 illness, you should wait until 90 days after you received this treatment to get vaccinated. \n        There is data suggesting that getting re-infected with COVID-19 within 90 days following infection is uncommon. \n        As a result, some people may choose to wait 90 days after they have recovered from COVID-19 before getting vaccinated.\n        </p>\n        \n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        If you were recently exposed to COVID-19 and you can safely quarantine away from other people, you should also wait to get the vaccine until after your quarantine period. If there is a high risk you could transmit the virus to others, \n        you may discuss getting vaccinated during your quarantine period with your healthcare provider so you can protect others.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={37}\n          onClick={() => activeIndex.indexOf(37) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 37]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 37))}\n        >\n          <Icon name='dropdown' />\n            If I had COVID-19, can I just get one dose of the two-dose vaccines?\n          </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(37)>0}>\n          <p style={{marginBottom:0}}>\n          At this time, there isn’t enough evidence that one dose would be enough. The guidelines still recommend that, if you are getting either the Pfizer-BioNTech or the Moderna vaccine, \n          you plan to get both doses to ensure you are fully vaccinated.\n          </p>\n\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={38}\n          onClick={() => activeIndex.indexOf(38) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 38]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 38))}\n        >\n          <Icon name='dropdown' />\n          If I get a COVID-19 vaccine, will it cause me to test positive for COVID-19?\n          </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(38)>0}>\n          <p style={{marginBottom:0}}>\n          You will not test positive on a <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/testing/diagnostic-testing.html\" target=\"_blank\" rel=\"noopener noreferrer\"> viral test </a>  \n          i.e. a swab or saliva test. These tests check for a current COVID-19 infection. Since the vaccines do not contain SARS-CoV-2 virus cells and cannot make you sick with the disease, you will not get a positive test after the vaccine.\n          </p>\n        \n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        It is possible that you could get a positive <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/testing/serology-overview.html\" target=\"_blank\" rel=\"noopener noreferrer\"> antibody (serological) test </a> \n        after receiving one or two doses of a COVID-19 vaccine. This type of tests checks for antibodies against SARS-CoV-2, which your body’s immune system produces to fight off an infection or in response to a vaccine.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        If you are concerned about a positive test result and unsure how to protect yourself and others, speak with your healthcare provider.\n        </p>\n        </Accordion.Content>\n\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={19}\n          onClick={() => activeIndex.indexOf(19) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 19]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 19))}\n        >\n          <Icon name='dropdown' />\n            What side effects can I expect after I get the COVID-19 vaccine?\n            </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(19)>0}>\n          <p style={{marginBottom:0}}>\n        The <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/expect/after.html\" target=\"_blank\" rel=\"noopener noreferrer\"> side effects </a> of the approved vaccines are similar to typical side effects you might experience after getting other vaccines. \n        Common side effects people report are: a sore arm where you got the vaccine, tiredness, headaches, and muscle pain. Other side effects reported in some of the clinical trials include chills, joint pain, and fever. Most people reported that these lasted a day or less.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        For the approved two-dose vaccines, more people experienced side effects after the second dose than after the first dose. These side effects mean that your immune system is working to protect you against COVID-19, and that is a good sign.\n        </p>\n        \n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        More data on the types of side effects and reactions experienced by participants in the vaccine trials can be found <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/vaccines/covid-19/info-by-product/pfizer/reactogenicity.html\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>\n        for the Pfizer-BioNTech vaccine,<a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/vaccines/covid-19/info-by-product/moderna/reactogenicity.html\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a> for the Moderna vaccine, and \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/vaccines/covid-19/info-by-product/janssen/reactogenicity.html\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>for the Johnson & Johnson vaccine.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        You may see some rumors about untrue side effects online or on social media. Make sure any time you see a claim about a side effect that you carefully check the source of that claim. Some trustworthy sources are:\n        </p>\n        <ul style={{paddingLeft:'6rem', fontSize:'14pt', lineHeight:'1.5'}}>\n        <li>\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC website </a>\n        </li>\n        <li>\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.mayoclinic.org/coronavirus-covid-19/vaccine\" target=\"_blank\" rel=\"noopener noreferrer\"> Mayo Clinic website </a>\n        </li>\n        <li>\n        Your local Department of Health website\n        </li>\n        </ul>\n        </Accordion.Content>\n        \n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={20}\n          onClick={() => activeIndex.indexOf(20) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 20]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 20))}\n        >\n          <Icon name='dropdown' />\n            Is there a risk of an allergic reaction to the COVID-19 vaccine? \n            </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(20)>0}>\n          <p style={{marginBottom:0}}>\n        As for any vaccine there is a very small chance of a severe allergic reaction. These are very rare but, when they do happen, they usually happen in people who have a history of severe allergic reactions. There are reports that a small number of people have had serious \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/safety/allergic-reaction.html\" target=\"_blank\" rel=\"noopener noreferrer\"> allergic reactions </a> after getting a COVID-19 vaccine. \n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        A severe allergic reaction will usually happen within a few minutes to an hour after getting vaccinated. Your healthcare provider may ask you to stay at the place where you received your vaccine for a short time so that they can make sure you are safe when you leave. \n        This is particularly important if you have had allergic reactions in the past. If you have had an allergic reaction to a vaccine in the past, you should let your healthcare provider know ahead of time. Signs of a severe allergic reaction can include: \n        </p>\n        <ul style={{paddingLeft:'6rem', fontSize:'14pt', lineHeight:'1.5'}}>\n        <li>Difficulty breathing</li>\n        <li>Swelling of your face and throat</li>\n        <li>A fast heartbeat</li>\n        <li>A bad rash all over your body</li>\n        <li>Dizziness and weakness</li>\n        </ul>\n        <p style={{paddingTop:'0rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        Some people have reported less severe allergic reactions within 4 hours after getting vaccinated (known as an “immediate allergic reaction”). Symptoms of this type of reaction include:\n        </p>\n        <ul style={{paddingLeft:'6rem', fontSize:'14pt', lineHeight:'1.5'}}>\n        <li>Hives</li>\n        <li>Swelling</li>\n        <li>Wheezing</li>\n        </ul>\n        <p style={{paddingTop:'0rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        If you experience any of these symptoms after vaccination, tell your provider. They will be prepared and will be able to give you the care and advice that you need to resolve the allergic reaction. \n        </p>\n        \n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        If you experienced any kind of allergic reaction after getting the first dose of a COVID-19 vaccine, you should not get the second dose. If you have had an allergic reaction to any of the ingredients in one of the COVID-19 vaccines, \n        you should not get these vaccines. In either case, you should let your healthcare provider know and report this reaction. \n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={21}\n          onClick={() => activeIndex.indexOf(21) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 21]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 21))}\n        >\n          <Icon name='dropdown' />\n            How can I report any side effects or allergic reactions I have to a COVID-19 vaccine?\n            </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(21)>0}>\n          <p style={{marginBottom:0}}>\n        You can report any possible side effects to CDC through the <a style ={{color: \"#397AB9\"}} href=\"https://vaers.hhs.gov/reportevent.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Vaccine Adverse Event Reporting System </a>. \n        This is a national system that helps CDC monitor the safety of approved vaccines, including the COVID-19 vaccines. Ensuring that vaccines are safe is a top priority for CDC and the Food and Drug Administration (FDA). \n        Vaccine Adverse Event Reporting System data helps scientists to look for side effects or reactions that are unexpected, more frequent than expected, or unusual. You can learn more about vaccine side effects and how they are monitored\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/vaccinesafety/ensuringsafety/sideeffects/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> here </a>.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', marginBottom:'0', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        Healthcare providers are required to report certain reactions and side effects following vaccination to the Vaccine Adverse Event Reporting System. They must follow certain requirements relating to any safety issues \n        while the vaccines are being used under the Food and Drug Administration’s Emergency Use Authorization; these requirements are posted on their \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/emergency-preparedness-and-response/mcm-legal-regulatory-and-policy-framework/emergency-use-authorization\" target=\"_blank\" rel=\"noopener noreferrer\"> website </a>.\n        </p>\n        \n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        CDC is also using a new smartphone-based tool called <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/safety/vsafe.html\" target=\"_blank\" rel=\"noopener noreferrer\"> <b>v-safe</b> </a> \n        to check-in on people’s health after they receive a COVID-19 vaccine. When you receive your vaccine, you should also receive a <b>v-safe</b> information sheet telling you how to enroll in <b>v-safe</b>. If you enroll, \n        you will receive regular text messages for surveys where you can report any problems, side effects, or reactions you have after your vaccine. This tool does not track you or your location, and only records information that you directly give to it. \n        By using <b>v-safe</b>, you can help scientists gather even more information about vaccine safety, and you could be helping your community stay safe.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={22}\n          onClick={() => activeIndex.indexOf(22) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 22]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 22))}\n        >\n          <Icon name='dropdown' />\n        Who should <u>not</u> get the COVID-19 vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(22)>0}>\n          <p>\n        Anyone who has had a serious allergic reaction to an ingredient in one of the COVID-19 vaccines should not get the vaccine. Similarly, anyone who has a serious allergic reaction to the first dose of a COVID-19 vaccine should not get the second dose. \n        You can find a list of the ingredients for the vaccines <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/144414/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>,<a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/144638/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>, \n        and <a style ={{color: \"#397AB9\"}} href=\"https://www.fda.gov/media/146305/download\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>.\n        If you are not sure whether this applies to you, check with your healthcare provider.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={23}\n          onClick={() => activeIndex.indexOf(23) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 23]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 23))}\n        >\n          <Icon name='dropdown' />\n        I have allergies - can I still get the COVID-19 vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(23)>0}>\n          <p style={{marginBottom:0}}>\n        If you have had allergic reactions to other vaccines or injectable treatments in the past, you should check with your healthcare provider whether you can get the COVID-19 vaccine.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        If you have allergies to other medications or to substances (including pets, foods, latex, pollen…), CDC still recommends that you \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/safety/allergic-reaction.html\" target=\"_blank\" rel=\"noopener noreferrer\"> get vaccinated </a>.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={24}\n          onClick={() => activeIndex.indexOf(24) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 24]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 24))}\n        >\n          <Icon name='dropdown' />\n        I have a medical condition - can I still get the COVID-19 vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(24)>0}>\n          <p>\n        This depends on your medical condition; in most cases you will still be eligible to get the COVID-19 vaccine. None of the approved COVID-19 vaccines have specific \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/recommendations/underlying-conditions.html\" target=\"_blank\" rel=\"noopener noreferrer\"> restrictions </a> \n        based on medical conditions. However, if you have concerns about whether a vaccine is right for you, you should speak with your healthcare provider. \n        They can answer your questions and advise you based on your risk factors, your medical condition, and your risks of getting COVID-19.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black', lineHeight: 1.4}}\n          // active={activeIndex === 0}\n          index={25}\n          onClick={() => activeIndex.indexOf(25) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 25]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 25))}\n        >\n          <Icon name='dropdown' />\n        If I am trying to become pregnant or am considering becoming pregnant in the future, should I get the COVID-19 vaccine? \n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(25)>0}>\n          <p>\n        You may get any of the available vaccines even if you are considering becoming pregnant. The American College of Obstetricians and Gynecologists and \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/recommendations/pregnancy.html\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC </a> \n        recommend the COVID-19 vaccine for people trying to become pregnant or considering becoming pregnant in the future. There is no need to delay pregnancy after being fully vaccinated.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={26}\n          onClick={() => activeIndex.indexOf(26) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 26]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 26))}\n        >\n          <Icon name='dropdown' />\n        If I am already pregnant, should I get the COVID-19 vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(26)>0}>\n          <p>\n        You may get any of the available vaccines even if you are currently pregnant. The\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.acog.org/en/Clinical/Clinical%20Guidance/Practice%20Advisory/Articles/2020/12/Vaccinating%20Pregnant%20and%20Lactating%20Patients%20Against%20COVID%2019\" target=\"_blank\" rel=\"noopener noreferrer\"> American College of Obstetricians and Gynecologists </a> \n        recommends that pregnant people who are eligible to get vaccinated get a COVID-19 vaccine. Although there are no contraindications based on pregnancy, you should discuss this decision with your healthcare provider to make sure it is right for your situation.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={27}\n          onClick={() => activeIndex.indexOf(27) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 27]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 27))}\n        >\n          <Icon name='dropdown' />\n        Is it safe to get the COVID-19 vaccine while breastfeeding?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(27)>0}>\n          <p>\n        Yes. The\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.acog.org/en/Clinical/Clinical%20Guidance/Practice%20Advisory/Articles/2020/12/Vaccinating%20Pregnant%20and%20Lactating%20Patients%20Against%20COVID%2019\" target=\"_blank\" rel=\"noopener noreferrer\"> American College of Obstetricians and Gynecologists </a> \n        recommends that people who are breastfeeding get a COVID-19 vaccine. They may continue breastfeeding after getting the COVID-19 vaccine.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={36}\n          onClick={() => activeIndex.indexOf(36) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 36]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 36))}\n        >\n          <Icon name='dropdown' />\n          Can I get other vaccines at the same time as a COVID-19 vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(36)>0}>\n          <p>\n          <a style ={{color: \"#397AB9\"}} href=\"(https://www.cdc.gov/coronavirus/2019-ncov/vaccines/expect.html\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC</a> recommends \n          that you wait at least 14 days between a COVID-19 vaccine and any other vaccine, including vaccines against flu or shingles. If you get a COVID-19 vaccine within less than 14 days of another vaccine, you do not get revaccinated; you can still complete the vaccine series (for multi-dose vaccines) as planned.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={28}\n          onClick={() => activeIndex.indexOf(28) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 28]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 28))}\n        >\n          <Icon name='dropdown' />\n        What do I do to protect myself while I wait to get vaccinated against COVID-19?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(28)>0}>\n          <p>\n        You can continue taking the same precautions CDC recommends to protect yourself and others from COVID-19. This includes washing your hands, wearing a face covering, maintaining a physical distance of at least 6 feet from others, and limiting gathering in groups. \n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={29}\n          onClick={() => activeIndex.indexOf(29) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 29]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 29))}\n        >\n          <Icon name='dropdown' />\n        Why are some people getting the COVID-19 vaccine first?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(29)>0}>\n          <p style={{marginBottom:0}}>\n        Because there are limited doses of the vaccine at this point, vaccination efforts are \n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/recommendations.html\" target=\"_blank\" rel=\"noopener noreferrer\"> prioritizing </a> \n        people based on:\n        </p>\n        <ul style={{paddingLeft:'6rem', fontSize:'14pt', lineHeight:'1.5'}}>\n        <li>Decreasing death and serious disease as much as possible</li>\n        <li>Protecting our essential services and essential workers as much as possible </li>\n        <li>Reducing the extra burden of COVID-19 on people already facing disparities</li>\n        </ul>\n        <p style={{paddingLeft:'0rem', paddingRight:'1rem', marginBottom: 0, fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        This means that those who have the highest risks of being exposed to COVID-19 or the highest risks of getting seriously ill if they become infected with COVID-19 are being vaccinated first. \n        For Phase 1a, the first phase, this means vaccinating healthcare workers and residents of long-term care facilities. The second phase (“Phase 1b”) focuses on frontline essential workers \n        and people aged 75 and over. During the third phase (“Phase 1c”), the following groups are also eligible: essential workers, people aged 65-74, and people aged 16-64 who have other medical conditions \n        that put them at risk for serious complications from COVID-19.\n        </p>\n\n        <p style={{paddingTop:'1rem', paddingLeft:'0rem', paddingRight:'1rem', fontWeight: 400, fontSize: \"14pt\", textAlign: 'justify'}}>\n        These decisions were made by the\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/recommendations-process.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Advisory Committee on Immunization Practices </a> \n        and are based on recommendations by, among others, the\n        <a style ={{color: \"#397AB9\"}} href=\"https://www.nap.edu/catalog/25917/framework-for-equitable-allocation-of-covid-19-vaccine\" target=\"_blank\" rel=\"noopener noreferrer\"> National Academies of Sciences, Engineering, and Medicine </a> \n        </p>\n        </Accordion.Content>\n\n        <center> <Waypoint\n            onEnter={() => {\n                setActiveCharacter('Getting Vaccinated')\n                //console.log(activeCharacter)\n            }}>\n        </Waypoint> \n        </center>\n\n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={30}\n          onClick={() => activeIndex.indexOf(30) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 30]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 30))}\n        >\n          <Icon name='dropdown' />\n        When can I get a COVID-19 vaccine?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(30)>0}>\n          <p>\n        Since doses of the available vaccines continue to be limited at this point, certain groups are being prioritized, for example healthcare workers and residents in long-term care facilities, older age groups, and adults with some medical conditions. You can find out more about what groups of people are currently eligible \n        to be vaccinated in your state by accessing your state’s Department of Health website.\n        </p>\n        </Accordion.Content>\n\n\n        <Accordion.Title id=\"after\" style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={31}\n          onClick={() => activeIndex.indexOf(31) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 31]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 31))}\n        >\n          <Icon name='dropdown' />\n        Will I have to pay to get vaccinated against COVID-19?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(31)>0}>\n          <p>\n        The federal government will cover the cost of the COVID-19 vaccine. However, some healthcare providers may charge you an office visit fee, or a fee to give you the vaccine. Health insurance should cover these fees since this vaccine is recommended by the Advisory Committee on Immunization Practices. \n        If you do not have health insurance, you may be eligible for additional help to cover the cost of the vaccine. This may be state dependent. Vaccine providers can get reimbursed for costs associated with vaccinated uninsured people through the Health Resources and Services Administration’s Provider Relief Fund. \n        Children (if in the appropriate age range for the vaccines) can get access to vaccines through the Vaccines for Children program.\n        </p>\n        </Accordion.Content>\n        </Accordion>\n        </div>\n        \n\n\n\n\n        <div style = {{height: 5}}></div>\n        <Header as='h2' style={{fontWeight: 600}}>\n            <Header.Content>\n                After You Are Vaccinated\n            </Header.Content>\n        </Header>\n\n        <center> <Waypoint\n            onEnter={() => {\n                setActiveCharacter('After You Are Vaccinated')\n                //console.log(activeCharacter)\n            }}>\n        </Waypoint> \n        </center>\n\n\n        <div style={{paddingLeft:'2rem', paddingBottom: '0rem'}}>\n        <Accordion fluid styled exclusive={false}>\n        <Accordion.Title style={{fontSize:'15pt', color: 'black', lineHeight:'1.4'}}\n          // active={activeIndex === 0}\n          index={32}\n          onClick={() => activeIndex.indexOf(32) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 32]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 32))}\n        >\n          <Icon name='dropdown' />\n        After I am fully vaccinated against COVID-19, do I still have to take other preventive measures?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(32)>0}>\n          <p>\n        Yes.\n        <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/_nation\" target=\"_blank\" rel=\"noopener noreferrer\"> COVID-19 transmission </a> \n        is very high in communities across the United States right now. As such, CDC still recommends continuing to physically distance, wear a face covering, limit gatherings, and wash your hands thoroughly even once you are vaccinated, including after receiving both doses for the two-dose vaccines. \n        It will take months for everyone across the United States to be fully vaccinated, so it is important that people continue to follow these precautions. The vaccine is the first part in a “one-two punch” that also includes physical distancing, wearing a mask, \n        washing your hands regularly, and staying away from large gatherings.\n        </p>\n        </Accordion.Content>\n\n      \n        <Accordion.Title style={{fontSize:'15pt', color: 'black'}}\n          // active={activeIndex === 0}\n          index={33}\n          onClick={() => activeIndex.indexOf(33) < 0 ? setActiveIndex(activeIndex =>[...activeIndex, 33]) : setActiveIndex(activeIndex => activeIndex.filter(item => item !== 33))}\n        >\n          <Icon name='dropdown' />\n        After I am fully vaccinated, do I still need to quarantine if I am exposed to COVID-19?\n        </Accordion.Title>\n        <Accordion.Content style={{fontSize:'14pt'}}\n          active={activeIndex.indexOf(33)>0}>\n        <p>\n        You may not need to quarantine, but it depends on your situation. Currently,<a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/vaccines/covid-19/info-by-product/clinical-considerations.html#phrecs\" target=\"_blank\" rel=\"noopener noreferrer\"> COVID-19 recommendations </a>\n        are that you do not need to quarantine if you meet all these criteria: \n        </p>\n        <ol style={{paddingLeft:'4rem', lineHeight:\"150%\"}}>\n          <li>\n            You have been fully vaccinated (received both shots if the COVID-19 vaccine you are getting is a two-dose vaccine) more than 2 weeks ago\n          </li>\n          <li>\n            You received your last COVID-19 vaccine less than 3 months ago\n          </li>\n          <li>\n            AND you do not have any symptoms of COVID-19 since you were exposed.\n          </li>\n        </ol>\n        <p>\n        Transmission of COVID-19 is very high across the country so CDC still recommends quarantining if you are exposed through a close contact and do not meet all 3 of these conditions.\n        </p>\n        </Accordion.Content>\n        </Accordion>\n        </div>\n\n        \n        <div id=\"after\" style = {{height: 20}}></div>\n        <Header as='h2' style={{fontWeight: 600}}>\n          Reviewed by \n        </Header>\n\n        <p style={{fontSize:'14pt', paddingLeft:'0rem'}}>\n          Robert A. Bednarczyk, PhD (Assistant Professor, Emory University Rollins School of Public Health) <br/>\n          Vincent Marconi, MD (Professor, Emory University School of Medicine, Division of Infectious Diseases; Emory University Rollins School of Public Health) <br/>\n          Maria Sundaram, MSPH, PhD (Postdoctoral Fellow, ICES/ University of Toronto Dalla Lana School of Public Health <br/>\n          Henry M. Wu, MD (Associate Professor, Emory University School of Medicine, Division of Infectious Diseases)\n        </p>\n        \n\n        </div>\n        </Grid.Column>\n        {/* <Notes /> */}\n        </Grid>\n      </Container>\n      \n    </div>\n    );\n}\n","import React, { useEffect, useState, useRef, createRef, PureComponent} from 'react'\nimport { Container, Breadcrumb, Dropdown, Header, Grid, Progress, Loader, Divider, Popup, Table, Button, Image, Rail, Sticky, Ref, Segment, Accordion, Icon, Menu, Message, Transition} from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport { geoCentroid } from \"d3-geo\";\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport Marker from './Marker';\nimport Annotation from './Annotation';\nimport { Waypoint } from 'react-waypoint'\nimport ReactTooltip from \"react-tooltip\";\nimport VaccinesFAQ from './VaccineFAQ';\n// import {\n//   ComposableMap,\n//   Geographies,\n//   Geography,\n//   Marker,\n//   Annotation\n// } from \"react-simple-maps\";\nimport allStates from \"./allstates.json\";\n\n// import FileSaver from \"file-saver\";\n// import { getPngData, useRechartToPng } from \"recharts-to-png\";\n// import { exportComponentAsJPEG, exportComponentAsPDF, exportComponentAsPNG } from 'react-component-export-image';\n\nimport { VictoryChart, \n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  // VictoryLegend,\n  VictoryLine,  \n  VictoryLabel, \n  VictoryArea,\n  VictoryContainer\n} from 'victory';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport _ from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport configs from \"./state_config.json\";\n// import ReactDOM from 'react-dom';\n// import fips2county from './fips2county.json'\n// import stateOptions from \"./stateOptions.json\";\n\nimport { var_option_mapping, CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {HEProvider, useHE} from './HEProvider';\nimport {useStitchAuth} from \"./StitchAuth\";\nimport {LineChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, Cell,  PieChart, Pie, LabelList, ReferenceArea, ReferenceLine} from \"recharts\";\n\n// function getKeyByValue(object, value) {\n//   return Object.keys(object).find(key => object[key] === value);\n// }\n\nfunction getMax(arr, prop) {\n    var max;\n    for (var i=0 ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction getMaxRange(arr, prop, range) {\n    var max;\n    for (var i=range ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\"\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3.0.0/states-10m.json\"\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\n\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\n\nconst mortalityColor = [\n        \"#0270A1\",\n        \"#024174\"\n      ];\nconst colorHighlight = '#f2a900';\nconst stateColor = \"#778899\";\nconst nationColor = '#b1b3b3';\nconst pieChartRace = ['#007dba', '#a45791', '#e8ab3b', '#000000', '#b1b3b3'];\n\nconst VaxColor = [\n  \"#72ABB1\",\n  \"#337fb5\"\n];\n\nfunction goToAnchor(anchor) {\n  var loc = document.location.toString().split('#')[0];\n  document.location = loc + '#' + anchor;\n  return false;\n}\nconst contextRef = createRef()\nconst nameList = ['USA Vaccination Tracker', 'State Vaccination Tracker', \n'State COVID-19 Burden', 'General Information', 'Vaccine Development', 'Vaccine Safety', \n'Getting Vaccinated', 'After You Are Vaccinated','COVID-19 Vaccines FAQ', \"Vaccination by Race & Ethinicity\"];\nvar scrollCount = 0;\n\nfunction StickyExampleAdjacentContext(props) {\n    const contextRef = createRef();\n    const [actionItem, setActiveItem] = useState({ activeItem: nameList[0] })\n    const { activeItem } = actionItem;\n    useEffect(() => {\n      setActiveItem(nameList[scrollCount])\n    }, [scrollCount])\n    \n    return (\n\n        <div style = {{width: 140}}>\n          <Ref innerRef={contextRef}>\n            <Rail attached size='mini' style = {{width: 250}}>\n                <Sticky offset={180} position= \"fixed\" context={contextRef}>\n                    <Menu\n                        style = {{width: 140}}\n                        size='small'\n                        compact\n                        pointing secondary vertical>\n                          <Menu.Item as='a' href=\"#\" name={nameList[0]} active={props.activeCharacter == nameList[0] || activeItem === nameList[0]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'> {nameList[0]} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#race\" name={nameList[9]} active={props.activeCharacter == nameList[9] || activeItem === nameList[9]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>{nameList[9]}</Header></Menu.Item>\n                          \n                          <Menu.Item as='a' href=\"#vaccine\" name={nameList[1]} active={props.activeCharacter == nameList[1] || activeItem === nameList[1]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>{nameList[1]}</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#burden\" name={nameList[2]} active={props.activeCharacter == nameList[2] || activeItem === nameList[2]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>{nameList[2]}</Header></Menu.Item>\n                                \n                          <Menu.Item as='a' href=\"#general\" name={nameList[8]} active={props.activeCharacter == nameList[8] || activeItem === nameList[8]}\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name })  }}><Header as='h4'>{nameList[8]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#general\" name={nameList[3]} active={props.activeCharacter == nameList[3] || activeItem === nameList[3]}\n                          // || activeItem === 'General Information'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name })  }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[3]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#develop\" name={nameList[4]} active={props.activeCharacter == nameList[4] || activeItem === nameList[4]}\n                          // || activeItem === 'Vaccine Development'\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[4]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#safety\" name={nameList[5]} active={props.activeCharacter == nameList[5] || activeItem === nameList[5]}\n                          // || activeItem === 'Vaccine Safety'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name } ) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[5]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#get\" name={nameList[6]} active={props.activeCharacter == nameList[6] || activeItem === nameList[6]}\n                          // || activeItem === 'Getting Vaccinated'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name }) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[6]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#after\" name={nameList[7]} active={props.activeCharacter == nameList[7] || activeItem === nameList[7]}\n                          // || activeItem === 'After You Are Vaccinated'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name }) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[7]}</Header></Menu.Item>\n                    </Menu>\n                </Sticky>\n            </Rail>\n          </Ref> \n        </div>\n    )\n  // }\n\n}\n\n\n\nfunction CaseChart(props){\n  const [playCount, setPlayCount] = useState(0);\n  const data = props.data;\n  const dataState = props.dataState;\n  const sfps = props.stateFips;\n  const ticks = props.ticks;\n  const variable = props.var;\n  const tickFormatter = props.tickFormatter;\n  const labelFormatter = props.labelFormatter;\n  const [animationBool, setAnimationBool] = useState(true);\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n\n  return(\n    <div style={{paddingTop: 5, paddingBottom: 70, width: 500}}>\n      <LineChart width={500} height={180} data = {data} margin={{right: 20}}>\n        {/* <CartesianGrid stroke='#f5f5f5'/> */}\n        <XAxis dataKey=\"t\" ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter} allowDuplicatedCategory={false}/>\n        <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n        <Line data={data[\"_nation\"]} name=\"Nation\" type='monotone' dataKey={variable} dot={false} \n              isAnimationActive={animationBool} \n              onAnimationEnd={()=>setAnimationBool(false)} \n              animationDuration={5500} \n              animationBegin={500} \n              stroke={nationColor} strokeWidth=\"2\" />\n        {sfps !== \"_nation\" && <Line data={dataState} name=\"State\" type='monotone' dataKey={variable} dot={false} \n              isAnimationActive={animationBool} \n              onAnimationEnd={()=>setAnimationBool(false)}\n              animationDuration={5500} \n              animationBegin={500} \n              stroke={stateColor} strokeWidth=\"2\" />}\n\n        {/* <ReferenceLine x={data[\"_nation\"][275].t} stroke=\"red\" label=\"2021\" /> */}\n\n\n        \n        <Tooltip labelFormatter={labelFormatter} formatter={variable === \"covidmortality7dayfig\" ? (value) => numberWithCommas(value.toFixed(1)): (value) => numberWithCommas(value.toFixed(0))} active={true}/>\n      </LineChart>\n      {/* <LineChart width={500} height={300}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"t\" type=\"category\" allowDuplicatedCategory={false} />\n        <YAxis dataKey={variable} />\n        <Tooltip />\n        <Legend />\n        \n        <Line dataKey={variable} data={data[\"_nation\"]} name = \"nation\" />\n        <Line dataKey={variable} data={data[sfps]} name = \"nation1\"/>\n        <Line dataKey={variable} data={data[sfps+cfps]} name = \"nation2\"/>\n      </LineChart> */}\n      {/* <Button content='Play' icon='play' floated=\"right\" onClick={() => {setPlayCount(playCount+1); }}/> */}\n    </div>\n  );\n}\n\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value, dataKey } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill=\"#000000\">\n        {dataKey == \"percentPop\" ? \"Percent of Population\" : \"Percent Fully Vaccinated\"}\n        \n      </text>\n      {/* <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      /> */}\n      {/* <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} fill=\"#333\">{`${payload.demogLabel} ${(percent * 100).toFixed(0)}%`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey - payload.percentCases/100 * 10} dy={18} textAnchor={'end'} fill=\"#999\">\n        {`(${payload.demogLabel})(${(percent * 100).toFixed(2)}%)`}\n      </text> */}\n    </g>\n  );\n};\n\nconst COLORSex = ['#0088FE', '#00C49F'];\nconst COLORRace = ['#e8ab3b' , '#000000', '#b1b3b3', '#a45791', '#007dba'];\n\nconst RADIAN = Math.PI / 180;\n\n\nconst renderCustomizedLabelFV = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, payload, index, }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 0) * cos;\n  const sy = cy + (outerRadius + 0) * sin;\n  const mx = cx + (outerRadius + 25) * cos;\n  const my = cy + (outerRadius + 35.5) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n\n\n  return (\n    <text x={ex} y={ey } \n      fill=\"black\" textAnchor={x > cx? 'end' : 'start'} dominantBaseline=\"central\">\n      {`${(payload.pctAdmDose2).toFixed(0)}%`}\n\n    </text>\n  );\n};\n\n  const renderCustomizedLabelPop = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, payload, index, }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 0) * cos;\n    const sy = cy + (outerRadius + 0) * sin;\n    const mx = cx + (outerRadius + 25) * cos;\n    const my = cy + (outerRadius + 35.5) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n  \n  \n    return (\n      <text x={ex} y={ey } \n        fill=\"black\" textAnchor={x > cx? 'end' : 'start'} dominantBaseline=\"central\">\n        {/* {dataKey == \"percentCases\" ? `${(payload.percentCases).toFixed(0)}%` : `${(payload.caserate).toFixed(0)}`} */}\n        {`${numberWithCommas((payload.percentPop).toFixed(0))}%`}\n  \n      </text>\n    );\n\n\n  // const radius = innerRadius + (outerRadius - innerRadius) * 0.3;\n  // const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  // const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n  // return (\n  //   <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n  //     {`${(percent * 100).toFixed(0)}%`}\n  //   </text>\n  // );\n};\n\nclass Race extends PureComponent{\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/hqnrgxpj/';\n\n  state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (_, index) => {\n    this.setState({\n      activeIndex: [index],\n    });\n    // console.log(index);\n  };\n\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      dataTot: [],\n      chart: \"\",\n    };\n\n    // this.handleDownload = this.handleDownload.bind(this);\n\n  }\n\n  // async handleDownload() {\n  //       const {chart} = this.state;\n  //       // Send the chart to getPngData\n  //       const pngData = await useRechartToPng(chart);\n  //       // Use FileSaver to download the PNG\n  //       FileSaver.saveAs(pngData, \"test.png\");\n  //     };\n\n  componentDidMount(){\n    fetch('/data/nationalDemogdata.json').then(res => res.json()).then(data => this.setState({ \n      dataTot: [\n        data['vaccineRace'][0]['Hispanic'][0], data['vaccineRace'][0]['Asian'][0],\n        data['vaccineRace'][0]['American Native'][0], data['vaccineRace'][0]['African American'][0],\n        data['vaccineRace'][0]['White'][0]\n      ] }));\n  }\n\n   \n\n  render() {\n    const { dataTot } = this.state;\n    console.log(\"this props\", this.props);\n    // console.log(\"here\", this.props.rate)\n\n    return (\n      <PieChart \n        ref={(ref) => this.setState({chart: ref})} // Save the ref of the chart\n        width={300} height={280}>\n        <Pie\n          \n          activeIndex={10}\n          activeShape={renderActiveShape}\n          data={dataTot}\n          cx={150}\n          cy={150}\n          innerRadius={50}\n          outerRadius={70}\n          paddingAngle = {5}\n          fill=\"#8884d8\"\n          dataKey={this.props.pop == true? \"percentPop\" : \"pctAdmDose2\"}\n          // onMouseEnter={this.onPieEnter}\n          labelLine={true}\n          label = {this.props.pop == true? renderCustomizedLabelPop: renderCustomizedLabelFV}\n          rate = {this.props.pop}\n          \n        >\n          {dataTot.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORRace[index % COLORRace.length]} />\n          ))}\n        <Label value={this.props.pop == true? \"Population\" : \"Fully Vaccinated\"} position=\"center\" />\n          \n        </Pie>\n      </PieChart>\n      \n    );\n  }\n}\n\n\n// class Race extends PureComponent{\n// function Race(props) {\n//   // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/hqnrgxpj/';\n\n//   // state = {\n//   //   activeIndex: 0,\n//   // };\n\n//   // constructor(props) {\n//   //   super(props);\n \n//   //   this.state = {\n//   //     dataTot: [],\n//   //     chart: \"\",\n//   //   };\n\n//   //   // this.handleDownload = this.handleDownload.bind(this);\n\n//   // }\n//   const [dataTot, setDataTot] = useState([]);\n//   const [activeIndex, setActiveIndex] = useState([]);\n//   const [chart, setChart] = React.useState();\n\n//   const onPieEnter = (_, index) => {\n//     setActiveIndex([index]);\n//     // console.log(index);\n//   };\n\n//   const [pngData, ref] = useRechartToPng();\n\n//   const handleDownload = React.useCallback(async () => {\n//     // Send the chart to getPngData\n//     // const pngData = await getPngData(chart);\n//     // Use FileSaver to download the PNG\n//     FileSaver.saveAs(pngData, \"test.png\");\n//   }, [pngData]);\n\n//   // componentDidMount(){\n//   useEffect(() => {\n//     fetch('/data/nationalDemogdata.json').then(res => res.json()).then(data => setDataTot(\n//       [\n//         data['vaccineRace'][0]['Hispanic'][0], data['vaccineRace'][0]['Asian'][0],\n//         data['vaccineRace'][0]['American Native'][0], data['vaccineRace'][0]['African American'][0],\n//         data['vaccineRace'][0]['White'][0]\n//       ] ));\n//   },[])\n   \n\n//   // render() {\n//   //   const { dataTot } = this.state;\n//     console.log(\"here\", dataTot)\n\n//     if(dataTot.length>1){\n//     return (\n//       <div >\n//       <PieChart \n//         // ref={(ref) => setChart(ref)} // Save the ref of the chart\n//         ref={ref}\n//         width={300} height={280}>\n//         <Pie\n//           activeIndex={10}\n//           activeShape={renderActiveShape}\n//           data={dataTot}\n//           cx={150}\n//           cy={150}\n//           innerRadius={50}\n//           outerRadius={70}\n//           paddingAngle = {5}\n//           fill=\"#8884d8\"\n//           dataKey={props.pop == true? \"percentPop\" :\"pctAdmDose2\"}\n//           // onMouseEnter={this.onPieEnter}\n//           labelLine={true}\n//           label = {props.pop == true? renderCustomizedLabelPop:renderCustomizedLabelFV }\n//           rate = {props.pop}\n          \n//         >\n//           {dataTot.map((entry, index) => (\n//             <Cell key={`cell-${index}`} fill={COLORRace[index % COLORRace.length]} />\n//           ))}\n//         <Label value={props.pop == true? \"Population\" : \"Fully Vaccinated\"} position=\"center\" />\n          \n//         </Pie>\n//       </PieChart>\n//       {/* <span style={{ float: \"left\" }}>\n//         <button onClick={handleDownload}>Download</button>\n//       </span> */}\n//       </div>\n//     );} else {\n//       return null;\n//     }\n// }\n\n// const toPrint = React.forwardRef((props, ref) => (\n  \n//   <Grid.Column rows = {2} >\n//     <Ref innerRef={ref}>\n//     <Grid.Row style = {{width: 550}}>\n//       <Grid.Column style = {{width: 550, paddingLeft: 0}}>\n//         <div>\n//           <svg width=\"550\" height=\"80\">\n\n//               <rect x={80} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[0], strokeWidth:1, stroke: pieChartRace[0]}}/>                    \n//               <text x={110} y={35} style={{fontSize: '16px'}}> White </text>  \n\n//               <rect x={255} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[1], strokeWidth:1, stroke: pieChartRace[1]}}/>                    \n//               <text x={285} y={35} style={{fontSize: '16px'}}> African Americans </text>    \n\n//               <rect x={430} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[2], strokeWidth:1, stroke: pieChartRace[2]}}/>                    \n//               <text x={460} y={35} style={{fontSize: '16px'}}> Hispanic </text>   \n\n//               <rect x={167.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[3], strokeWidth:1, stroke: pieChartRace[3]}}/>                    \n//               <text x={197.6} y={70} style={{fontSize: '16px'}}> Asian </text>  \n\n//               <rect x={342.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[4], strokeWidth:1, stroke: pieChartRace[4]}}/>                    \n//               <text x={372.5} y={70} style={{fontSize: '16px'}}> American Native </text>                    \n\n\n//               {/* {_.map(pieChartRace, (color, i) => {\n//                 return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n//               })}  */}\n//           </svg>\n//         </div>\n//       </Grid.Column>\n//     </Grid.Row>\n//     <Grid >\n//       <Grid.Row columns = {2} style = {{width: 1000}}>\n//         <Grid.Column style = {{width: 300}}>\n//           <Race pop = {false} />\n//         </Grid.Column>\n//         <Grid.Column style = {{width: 300, paddingLeft: 50}}>\n//           <Race pop = {true}/> \n//         </Grid.Column>\n//       </Grid.Row>\n\n//       {/* <Grid.Row style = {{width: 900}}>\n//         <Grid.Column style = {{width: 450, paddingLeft: 0}}>\n//             <div>\n//               <svg width=\"450\" height=\"145\">\n\n//                   <text x={280} y={15} style={{fontSize: '16px'}}> Hispanic</text>                    \n//                   <text x={280} y={35} style={{fontSize: '16px'}}> American Native</text>                    \n//                   <text x={280} y={55} style={{fontSize: '16px'}}> Asian</text>                    \n//                   <text x={280} y={75} style={{fontSize: '16px'}}> African American</text>                    \n//                   <text x={280} y={95} style={{fontSize: '16px'}}> White</text>                    \n\n\n//                   {_.map(pieChartRace, (color, i) => {\n//                     return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n//                   })} \n//               </svg>\n//             </div>\n//           </Grid.Column>\n//       </Grid.Row> */}\n//       </Grid>\n//       </Ref>\n//   </Grid.Column>\n  \n// ));\n\nconst toPrint = React.forwardRef((props, ref) => (\n  <div ref={ref}>Hello World</div>\n));\n\n// export default function USVaccineTracker(props) {\nconst USVaccineTracker = (props) => {\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();\n  const [caseTicks, setCaseTicks] = useState([]);\n  \n  // const [open, setOpen] = React.useState(true)\n  const [showState, setShowState] = useState(false);\n  const [clicked, setClicked] = useState(false);\n\n  const [activeCharacter, setActiveCharacter] = useState('');\n\n  const history = useHistory();\n  const [tooltipContent, setTooltipContent] = useState('');\n  \n  const [stateLabels, setStateLabels] = useState();\n  const [date, setDate] = useState('');\n  const [vaccineDate, setVaccineDate] = useState('');\n  const [nationalDemogDate, setNationalDemogDate] = useState('');\n\n  const [data, setData] = useState();\n  const [dataTS, setDataTS] = useState();\n  const [VaxSeries, setVaxSeries] = useState();\n  const [vaccineData, setVaccineData] = useState();\n  const [allTS, setAllTS] = useState();\n  const [raceData, setRaceData] = useState();\n  const [nationalDemog, setNationalDemog] = useState();\n\n  const [hoverName, setHoverName] = useState('The United States');\n  const [stateName, setStateName] = useState('The United States');\n  const [usAbbrev, setUSabbrev] = useState('');\n  const [stateMapName, setStateMapName] = useState('State');\n  const [fips, setFips] = useState('_nation');\n  const [stateFips, setStateFips] = useState();\n  const [stateMapFips, setStateMapFips] = useState(\"_nation\");\n  const [config, setConfig] = useState();\n  const [countyFips, setCountyFips] = useState('');\n  const [colorScaleState, setColorScaleState] = useState();\n  const [legendMaxState, setLegendMaxState] = useState([]);\n  const [legendMinState, setLegendMinState] = useState([]);\n  const [legendSplitState, setLegendSplitState] = useState([]);\n  const [metricOptions, setMetricOptions] = useState('caserate7dayfig');\n\n  const [colorScale, setColorScale] = useState();\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  const [varMap, setVarMap] = useState({});\n  const [vaxVarMap, setVaxVarMap] = useState({});\n  const [metric, setMetric] = useState('caserate7dayfig');\n  const [fully, setFully] = useState('PercentAdministeredPartial');\n\n  const [pctVacPopDisp, setPctVacPopDisp] = useState(0);\n  const [finalStr, setFinalStr] = useState('');\n  const [vaccineProp, setVaccine] = useState();\n  const [selectedName, setSelectedName] = useState();\n\n  const vaccineOptions = [\n    {\n      key: 'PercentAdministeredPartial',\n      text: '% of population partially vaccinated (one dose received)',\n      value: 'PercentAdministeredPartial',\n    },\n    {\n      key: 'Series_Complete_Pop_Pct',\n      text: '% of population fully vaccinated (two doses received)',\n      value: 'Series_Complete_Pop_Pct',\n    },\n  ]\n  const vaccineList = \n    {\n      'PercentAdministeredPartial': '% of population partially vaccinated (one dose received)',\n      'Series_Complete_Pop_Pct': '% of population fully vaccinated (two doses received)'\n\n    }\n    \n  useEffect(() => {\n    if (dataTS ){\n      setCaseTicks([\n          dataTS[\"_nation\"][0].t,\n          dataTS[\"_nation\"][30].t,\n          dataTS[\"_nation\"][61].t,\n          dataTS[\"_nation\"][91].t,\n          dataTS[\"_nation\"][122].t,\n          dataTS[\"_nation\"][153].t,\n          dataTS[\"_nation\"][183].t,\n          dataTS[\"_nation\"][214].t,\n          dataTS[\"_nation\"][244].t,\n          dataTS[\"_nation\"][275].t,\n          dataTS[\"_nation\"][306].t,\n          dataTS[\"_nation\"][334].t,\n          dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]);\n          //console.log(\"dataTS\", dataTS[\"_nation\"][0].t);\n    }\n  }, [dataTS]);\n\n  const labelTickFmt = (tick) => { \n    return (\n      // <text>// </ text>\n        /* {tick} */\n        // monthNames[new Date(tick*1000).getMonth()] + \" \" +  new Date(tick*1000).getDate()\n        new Date(tick*1000).getFullYear() + \"/\" + (new Date(tick*1000).getMonth()+1) + \"/\" +  new Date(tick*1000).getDate()\n      \n      );\n  };\n\n  const caseTickFmt = (tick) => { \n    return (\n      // <text>// </ text>\n        /* {tick} */\n        // monthNames[new Date(tick*1000).getMonth()] + \" \" +  new Date(tick*1000).getDate()\n        (new Date(tick*1000).getMonth()+1) + \"/\" +  new Date(tick*1000).getDate()\n      \n      );\n  };\n\n  useEffect(()=>{\n    fetch('/data/date.json').then(res => res.json())\n      .then(x => {setDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4));});\n    \n    fetch('/data/vaccinedate.json').then(res => res.json())\n      .then(x => {setVaccineDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4));});\n    \n    fetch('/data/nationalDemogdate.json').then(res => res.json())\n      .then(x => setNationalDemogDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n\n    \n    fetch('/data/allstates.json').then(res => res.json())\n      .then(x => {setStateLabels(x);});\n\n    fetch('/data/rawdata/variable_mapping_Vaccine.json').then(res => res.json())\n      .then(x => {setVaxVarMap(x);});\n\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMetricOptions(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.variable, text: d.name, def: d.definition, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\" && d.group === \"outcomes\")));\n      });\n    fetch('/data/nationalDemogdata.json').then(res => res.json())\n      .then(x => {\n        setNationalDemog(x);\n        var listW = [];\n        var count = (x['vaccineRace'][0]['White'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['White'][0]['percentPop']) \n        + \n        (x['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['Hispanic'][0]['percentPop']) \n        + \n        (x['vaccineRace'][0]['African American'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['African American'][0]['percentPop']) \n        +\n        (x['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['Asian'][0]['percentPop'])\n        +\n        (x['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['American Native'][0]['percentPop']);\n\n        setPctVacPopDisp(count);\n\n        if(x['vaccineRace'][0]['White'][0]['pctAdmDose2'] > x['vaccineRace'][0]['White'][0]['percentPop']){\n          listW.push(\"White Americans\");\n        }\n        if(x['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] > x['vaccineRace'][0]['Hispanic'][0]['percentPop']){\n          listW.push(\"Hispanic Americans\");\n        }\n        if(x['vaccineRace'][0]['African American'][0]['pctAdmDose2'] > x['vaccineRace'][0]['African American'][0]['percentPop']){\n          listW.push(\"African Americans\");\n        }\n        if(x['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] > x['vaccineRace'][0]['Asian'][0]['percentPop']){\n          listW.push(\"Asian Americans\");\n        }\n        if(x['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] > x['vaccineRace'][0]['American Native'][0]['percentPop']){\n          listW.push(\"Native Americans\");\n        }\n        var joinedStr = listW.join();\n        var indexStr = 0;\n        var i;\n        for (i = 0; i< (count - 1); i++){\n          indexStr = joinedStr.indexOf(',', indexStr);\n        };\n        var left = joinedStr.substring(0, indexStr);\n        var right = joinedStr.substring(indexStr+1); \n\n        if(count == 1){\n        }else if(count == 2){\n          setFinalStr(left + \" and \" + right);\n        }else if(count > 2){\n          setFinalStr(left + \", and \" + right); \n        }\n        \n\n      });\n\n    fetch('/data/timeseriesAll.json').then(res => res.json())\n      .then(x => {setAllTS(x);});\n\n    fetch('/data/racedataAll.json').then(res => res.json())\n      .then(x => {setRaceData(x);});\n    \n    fetch('/data/rawdata/USabb.json').then(res => res.json())\n      .then(x => {setUSabbrev(x);});\n\n    fetch('/data/data.json').then(res => res.json())\n      .then(x => {\n        setData(x);\n      });\n    \n  }, []);\n\n\n\n  useEffect(() => {\n    if (metric) {\n      fetch('/data/vaccineTimeseries.json').then(res => res.json())\n        .then(x => {setVaxSeries(x);});\n      \n      fetch('/data/vaccineData.json').then(res => res.json())\n        .then(x => {\n          setVaccineData(x);\n          const cs = scaleQuantile()\n            .domain(_.map(_.filter(_.map(x, (d, k) => {\n              d.fips = k\n              return d}), \n              d => (\n                  d[fully] >= 0 &&\n                  d.fips.length === 2)),\n              d=> d[fully]))\n            .range(colorPalette);\n  \n            let scaleMap = {}\n            _.each(x, d=>{\n              if(d[fully] >= 0){\n              scaleMap[d[fully]] = cs(d[fully])}});\n          \n            setColorScale(scaleMap);\n            var max = 0\n            var min = 100\n            _.each(x, d=> { \n              if (d[fully] > max && d.fips.length === 2) {\n                max = d[fully]\n              } else if (d.fips.length === 2 && d[fully] < min && d[fully] >= 0){\n                min = d[fully]\n              }\n            });\n  \n            if (max > 999999) {\n              max = (max/1000000).toFixed(0) + \"M\";\n              setLegendMax(max);\n            }else if (max > 999) {\n              max = (max/1000).toFixed(0) + \"K\";\n              setLegendMax(max);\n            }else{\n              setLegendMax(max.toFixed(0));\n  \n            }\n            setLegendMin(min.toFixed(0));\n            setLegendSplit(cs.quantiles());\n          \n        });\n      \n    }\n  }, [fully]);\n\n\n\n  useEffect(()=>{\n    if (metric) {\n\n    \n    const configMatched = configs.find(s => s.fips === stateMapFips);\n\n    if (!configMatched){\n      \n    }else{\n\n      setConfig(configMatched);\n\n      setStateMapName(configMatched.name);\n\n      fetch('/data/data.json').then(res => res.json())\n        .then(x => {\n          \n\n          const cs = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] > 0 &&\n                d.fips.length === 5)),\n            d=> d[metric]))\n          .range(colorPalette);\n\n          let scaleMap = {}\n          _.each(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] > 0 &&\n                d.fips.length === 5))\n                , d=>{\n            scaleMap[d[metric]] = cs(d[metric])});\n\n          setColorScaleState(scaleMap);\n          var max = 0\n          var min = 100\n          _.each(x, d=> { \n            if (d[metric] > max && d.fips.length === 5) {\n              max = d[metric]\n            } else if (d.fips.length === 5 && d[metric] < min && d[metric] > 0){\n              min = d[metric]\n            }\n          });\n\n          if (max > 999) {\n            max = (max/1000).toFixed(0) + \"K\";\n            setLegendMaxState(max);\n          }else{\n            setLegendMaxState(max.toFixed(0));\n\n          }\n          setLegendMinState(min.toFixed(0));\n\n          var split = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] > 0 &&\n                d.fips.length === 5)),\n            d=> d[metric]))\n          .range(colorPalette);\n\n          setLegendSplitState(split.quantiles());\n        });\n      }\n    }\n     \n  }, []);\n\n  // useEffect(()=>{\n    \n  //   if (isLoggedIn === true){\n  //     const fetchData = async() => { \n  //       // let seriesDict = {};\n  //       const stateSeriesQ = {tag: \"stateonly\"};\n  //       const promState = await CHED_series.find(stateSeriesQ,{projection:{}}).toArray();\n  //       // _.map(promState, i=> {\n  //       //   seriesDict[i[Object.keys(i)[4]]] = i[Object.keys(i)[5]];\n  //       //   return seriesDict;\n  //       // });\n  //       // let seriesDict = promState[0].timeseriesAll;\n  //       setDataTS(promState[0].timeseriesAll);\n  //     };\n  //     fetchData();\n  //   } else {\n  //     handleAnonymousLogin();\n  //   }\n\n\n  // },[isLoggedIn]);\n\n  \n\n  useEffect(()=>{\n    fetch('/data/timeseriesAll.json').then(res => res.json())\n        .then(x => setDataTS(x));\n    \n\n\n  },[]);\n\n\n\n  const componentRef = useRef();\n\n\n  if (data && allTS && vaccineData && fips && dataTS && stateMapFips && VaxSeries) {\n    // console.log(vaccineData[stateFips]);\n  return (\n    <HEProvider>\n      <div >\n        <AppBar menu='vaccineTracker'/>\n        <Container style={{marginTop: '8em', width: 1260}}>\n          {/* <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\"}}>\n            <Breadcrumb.Section active >Vaccination: United States</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n          </Breadcrumb>\n          <Divider hidden /> */}\n          <Grid >\n            \n            <Grid.Column style={{zIndex: 10, width:140}}>\n              <Ref innerRef={createRef()} >\n                <StickyExampleAdjacentContext activeCharacter={activeCharacter}  />\n              </Ref>\n            </Grid.Column>\n            <Grid.Column style = {{paddingLeft: 170, width: 1000}}>\n              <center>  \n                <Waypoint onEnter={() => {\n                  setActiveCharacter('USA Vaccination Tracker')}}>\n                </Waypoint> \n              </center>\n              {/* <Grid columns={14}> */}\n              <div>     \t\n                <Header as='h2' style={{color: \"#004071\",textAlign:'center', fontWeight: 400, fontSize: \"24pt\", paddingTop: 17, paddingLeft: 210, paddingBottom: 50}}>\n                  <Header.Content >\n                  <b> COVID-19 Vaccination Tracker </b> \n                  \n                  </Header.Content>\n                </Header>\n              </div>\n              <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '22pt', paddingLeft: 20}}> The United States </Divider>\n\n              <Grid>\n\n\n                <Grid.Row columns = {5} style = {{width: 1000, paddingLeft: 35, paddingTop: 40}}>\n                  <Grid.Column style = {{width: 240, paddingLeft: 0, paddingTop: 8, paddingBottom: 0}}> \n                        <center style={{width: 240,fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\", paddingBottom: 0}}>Total doses delivered</center>\n\n                    \n                  </Grid.Column>\n                  \n                  <Grid.Column style = {{width: 240, paddingLeft: 85, paddingTop: 8}}> \n                        <center style={{width: 240,fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\", paddingBottom: 0}}>Total doses administered</center>\n\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 170, paddingTop: 8}}> \n           \n                        <center style={{width: 240, fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\"}}>Number received <br/> at least one dose</center>\n\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 232, paddingTop: 8}}> \n                   \n                        <center style={{width: 240, fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\"}}>Number fully vaccinated</center>\n  \n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row columns = {5} style = {{width: 1000, paddingLeft: 35, paddingTop: 0}}>\n                  <Grid.Column style = {{width: 240, paddingLeft: 0, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        <br/><br/><p style={{width: 240, fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Doses_Distributed\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  \n                  <Grid.Column style = {{width: 240, paddingLeft: 85, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        <br/><br/><p style={{width: 240, fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Doses_Administered\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 170, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                          \n                        <br/><br/><p style={{fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Administered_Dose1\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 232, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received second dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        \n                        <br/><br/><p style={{fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Series_Complete_Yes\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                      {/* <Grid style = {{width: 240}}>\n                        <Grid.Row style = {{width: 240}}>\n                          <Grid.Column style = {{width: 240, paddingTop: 0, paddingBottom: 5, textAlign: \"center\"}}>\n                            <Header>\n                              <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Newly distributed per 100K <br/><br/></p>\n                            </Header>\n                            <p style={{fontSize: \"28px\", fontWeight: 800, fontFamily: 'lato', color: \"#004071\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Dist_Per_100K_new\"].toFixed(0))}</p>\n\n                          </Grid.Column>\n                          \n                        </Grid.Row> */}\n                        {/* <Grid.Row columns = {2} style = {{width: 240}}>\n                          \n                          <Grid.Column style = {{width: 140, height: 100}}>\n                            \n                            <br/><br/><br/><br/>\n                              <p style={{fontSize: \"28px\", fontWeight: 800, fontFamily: 'lato', color: \"#004071\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Dist_Per_100K_new\"].toFixed(0))}</p>\n                       \n                          </Grid.Column>\n                          <Grid.Column style = {{width: 100, paddingLeft: 0}}>\n                                  <VictoryChart \n                                                      \n                                    width={100}\n                                    height={118}\n                                    padding={{left: -5, right: -1, top: 20, bottom: 0}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                    <VictoryLine data={VaxSeries ? VaxSeries[\"_nation\"] : [0,0,0]}\n                                        x='t' y='Dist_new'\n                                        />\n\n                                    </VictoryGroup>\n                                    <VictoryArea\n                                      style={{ data: {fill: \"#00BFFF\" , fillOpacity: 0.1} }}\n                                      data={VaxSeries? VaxSeries[\"_nation\"] : [0,0,0]}\n                                      x= 't' y = 'Dist_new'\n\n                                    />\n                                    \n                                </VictoryChart>\n                            </Grid.Column>\n                          </Grid.Row> */}\n                        {/* </Grid> */}\n                      </div>\n                  </Grid.Column>\n                </Grid.Row>\n\n                \n              \n              <Grid.Row>\n               <Grid.Column style = {{width: 900, paddingLeft: 35, paddingTop: 18}}> \n                  <div style = {{width: 900}}>\n                    <Header>\n                      \n                      <div>\n                        <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 975}}>\n                          Percent of the U.S. population partially vaccinated<br/>\n                          <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                            One of two doses of Pfizer or Moderna vaccine received\n                          </Header.Content>\n                        </Header>\n                      </div>\n                      <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                        <Progress style = {{width: 970}} percent={((vaccineData[\"_nation\"][\"PercentAdministeredPartial\"]).toFixed(1))} size='large' color='green' progress/>\n                      </Header.Content>\n\n                      <div>\n                        <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 975}}>\n                          Percent of the U.S. population fully vaccinated<br/>\n                          <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                            Both doses of Pfizer or Moderna vaccine or one and only dose of Johnson and Johnson received\n                          </Header.Content>\n                        </Header>\n                      </div>\n                      <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                        <Progress style = {{width: 970}} percent={((vaccineData[\"_nation\"][\"Series_Complete_Pop_Pct\"]).toFixed(1))} size='large' color='green' progress/>\n                      </Header.Content>\n\n                      <div>\n                        <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 975}}>\n                          Percent of the U.S. population that received at least one dose<br/>\n                          <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                            One or more doses of any of the authorized vaccines received\n                          </Header.Content>\n                        </Header>\n                      </div>\n                      <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                        <Progress style = {{width: 970}} percent={((vaccineData[\"_nation\"][\"PercentAdministeredPartial\"] + vaccineData[\"_nation\"][\"Series_Complete_Pop_Pct\"]).toFixed(1))} size='large' color='green' progress/>\n                      </Header.Content>\n                    </Header>\n                  </div>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row >\n              {stateFips && <Accordion id = \"race\" style = {{paddingTop: 0, paddingLeft: 30, paddingBottom: 15}}defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                  <Header.Content style={{fontWeight: 300, paddingTop: 7, paddingLeft: 5,fontSize: \"19px\", width: 975}}>\n                                    Data are from the <a href = 'https://covid.cdc.gov/covid-data-tracker/#vaccinations' target=\"_blank\" rel=\"noopener noreferrer\">CDC COVID Data Tracker</a>, data as of {vaccineDate} <br/>\n                                    <b><em> {vaxVarMap[\"Doses_Distributed\"].name} </em></b> {vaxVarMap[\"Doses_Distributed\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Doses_Administered\"].name} </em></b> {vaxVarMap[\"Doses_Administered\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Administered_Dose1\"].name} </em></b> {vaxVarMap[\"Administered_Dose1\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Series_Complete_Yes\"].name} </em></b> {vaxVarMap[\"Series_Complete_Yes\"].definition} <br/>\n\n                                    {/* <b><em> {vaxVarMap[\"percentVaccinatedDose1\"].name} </em></b> {vaxVarMap[\"percentVaccinatedDose1\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Series_Complete_Pop_Pct\"].name} </em></b> {vaxVarMap[\"Series_Complete_Pop_Pct\"].definition} <br/> */}\n\n\n                                  </Header.Content>\n                                ),\n                              },\n                          }\n                      ]\n                      } /> }\n              </Grid.Row>\n              <div style = {{height: 25}}> </div>\n              <Grid>\n                <Grid.Column>\n                  <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '29px', paddingLeft: 20}}> COVID-19 Vaccination by Race & Ethnicity </Divider>\n\n                </Grid.Column>\n              </Grid>\n\n              {/* <center style={{paddingLeft: 190}}><Divider style={{width: 900}}/> </center> */}\n              {/* <Grid.Row columns = {1} style = {{width: 1000, paddingTop: 15}}>\n                  <Grid.Column style = {{width: 810, paddingLeft: 60}}>\n                    <div style={{paddingTop:'0em'}}>\n                      <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: 190, paddingRight: \"1em\", paddingBottom: 0}}>\n                        <center> <b style= {{fontSize: \"22px\"}}>Deaths by Race</b> </center> \n                        <br/>\n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                  \n              </Grid.Row>\n                <Grid>\n                  <Grid.Row columns = {2} style = {{width: 1000}}>\n                    <Grid.Column style = {{width: 450, paddingLeft: 0}}>\n                      <div style={{paddingLeft: \"6em\", paddingRight: \"0em\"}}>\n\n                      <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={450}\n                            height={230}\n                            domainPadding={25}\n                            minDomain={{y: props.ylog?1:0}}\n                            padding={{left: 180, right: 40, top: 15, bottom: 1}}\n                            style = {{fontSize: \"14pt\"}}\n                            containerComponent={<VictoryContainer responsive={false}/>}\n                          >\n                            <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                            <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                            <VictoryGroup offset={13}>\n                            <VictoryBar\n                              horizontal\n                              barWidth={20}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0))}\n                              data={[\n                                      {key: nationalDemog['race'][0]['American Native'][0]['demogLabel'], 'value': nationalDemog['race'][0]['American Native'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['Asian'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Asian'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['Hispanic'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Hispanic'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['African American'][0]['demogLabel'], 'value': nationalDemog['race'][0]['African American'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['White'][0]['demogLabel'], 'value': nationalDemog['race'][0]['White'][0]['deathrate']},\n                                  \n\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                              style={{\n                                data: {\n                                  fill: mortalityColor[1]\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n\n                          \n\n                            </VictoryGroup>\n                          </VictoryChart>\n                          <Header.Content style = {{paddingLeft: 50, width: 450}}>\n                              <Header.Content style={{ fontWeight: 300, paddingTop: 20, paddingBottom:5, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>Percentage of COVID-19 Deaths and Population</b>\n                              </Header.Content>\n                          </Header.Content>\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column style = {{width: 0}}>\n                      \n                        <div style={{paddingLeft: 140, paddingRight: \"0em\"}}>\n                          \n                          <Header.Subheader style={{width: 400, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:28, paddingLeft: 6}}>\n                            <center> <b style= {{fontSize: \"22px\", paddingLeft: 0}}> Risks for COVID-19 Deaths by Race/Ethnicity</b> </center> \n                            <br/><br/>\n                            <p style = {{paddingLeft: 40}}>\n                              Compared to the White <br/>\n                              - African Americans: {(nationalDemog['race'][0]['African American'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                              {(nationalDemog['race'][0]['African American'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) <= 1? \"times\" : \"times\"} the risk\n                              <br/>\n                              - Hispanic: {(nationalDemog['race'][0]['Hispanic'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                              {(nationalDemog['race'][0]['Hispanic'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) <= 1? \"times\" : \"times\"} the risk\n                              <br/>\n                              - Asians: {(nationalDemog['race'][0]['Asian'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                              {(nationalDemog['race'][0]['Asian'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) <= 1? \"times\" : \"times\"} the risk\n                              <br/>\n                              - American Native: {(nationalDemog['race'][0]['American Native'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                              {(nationalDemog['race'][0]['American Native'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) <= 1? \"times\" : \"times\"} the risk\n\n                            \n                              \n                          </Header.Subheader>\n                        \n                        </div>\n                    </Grid.Column>\n                  </Grid.Row>\n\n              </Grid> */}\n\n              {/* <center style={{paddingLeft: 30}}><Divider style={{width: 1000}}/> </center> */}\n\n              <Grid.Row columns = {1} style = {{width: 1000, paddingTop: 15}}>\n                  <Grid.Column style = {{width: 810, paddingLeft: 60}}>\n                    <div style={{paddingTop:'0em'}}>\n                      <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: 190, paddingRight: \"1em\", paddingBottom: 0}}>\n                        <center> <b style= {{fontSize: \"22px\"}}>Vaccination by Race & Ethnicity</b> </center> \n                        <br/>\n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                  \n              </Grid.Row>\n              \n              \n                    \n              <Grid>\n                \n                <Grid.Row columns = {2} style = {{width: 1000, paddingLeft: 0}} >\n                  <Grid.Column rows = {3} >\n\n                    <Grid.Row style = {{width: 550}}>\n                      <Grid.Column style = {{width: 550, paddingLeft: 0}}>\n                        <div>\n                          <svg width=\"550\" height=\"80\">\n\n                              <rect x={80} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[0], strokeWidth:1, stroke: pieChartRace[0]}}/>                    \n                              <text x={110} y={35} style={{fontSize: '16px'}}> White </text>  \n\n                              <rect x={235} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[1], strokeWidth:1, stroke: pieChartRace[1]}}/>                    \n                              <text x={265} y={35} style={{fontSize: '16px'}}> African American </text>    \n\n                              <rect x={430} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[2], strokeWidth:1, stroke: pieChartRace[2]}}/>                    \n                              <text x={460} y={35} style={{fontSize: '16px'}}> Hispanic </text>   \n\n                              <rect x={167.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[3], strokeWidth:1, stroke: pieChartRace[3]}}/>                    \n                              <text x={197.6} y={70} style={{fontSize: '16px'}}> Asian </text>  \n\n                              <rect x={322.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[4], strokeWidth:1, stroke: pieChartRace[4]}}/>                    \n                              <text x={352.5} y={70} style={{fontSize: '16px'}}> American Native </text>                    \n\n\n                              {/* {_.map(pieChartRace, (color, i) => {\n                                return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                              })}  */}\n                          </svg>\n                        </div>\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid >\n                      <Grid.Row columns = {2} style = {{width: 1000}}>\n                        <Grid.Column style = {{width: 300}}>\n                          <Race pop = {false}/>\n                        </Grid.Column>\n                        <Grid.Column style = {{width: 300, paddingLeft: 50}}>\n                          <Race pop = {true}/> \n                        </Grid.Column>\n                      </Grid.Row>\n                      \n                      {/* <Grid.Row style = {{width: 900}}>\n                        <Grid.Column style = {{width: 450, paddingLeft: 0}}>\n                            <div>\n                              <svg width=\"450\" height=\"145\">\n\n                                  <text x={280} y={15} style={{fontSize: '16px'}}> Hispanic</text>                    \n                                  <text x={280} y={35} style={{fontSize: '16px'}}> American Native</text>                    \n                                  <text x={280} y={55} style={{fontSize: '16px'}}> Asian</text>                    \n                                  <text x={280} y={75} style={{fontSize: '16px'}}> African American</text>                    \n                                  <text x={280} y={95} style={{fontSize: '16px'}}> White</text>                    \n\n\n                                  {_.map(pieChartRace, (color, i) => {\n                                    return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                                  })} \n                              </svg>\n                            </div>\n                          </Grid.Column>\n                      </Grid.Row> */}\n                      </Grid>\n                      {/* <toPrint ref={componentRef} />\n                    <button onClick={() => exportComponentAsPNG(componentRef)}>\n                              Export As PNG\n                            </button> */}\n\n                    \n                  </Grid.Column>\n                  <Grid.Column style = {{width: 450}}>\n                    <div style={{paddingTop: 0, paddingLeft: 140}}>\n                      <Header.Subheader style={{width: 400, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:0, paddingLeft: 6}}>\n                        <center> <b style= {{fontSize: \"22px\", paddingLeft: 0}}> Under-vaccinated Populations</b> </center> \n                        \n                        <p style = {{paddingLeft: 40}}>\n                          <ul>\n                            \n                          {nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['White'][0]['percentPop'] && <li>\n                            {nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['White'][0]['percentPop'] ? \n                            \" White Americans make up \" + (nationalDemog['vaccineRace'][0]['White'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\" \n                          :\n                            \"\"} </li>}\n\n                            {nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop'] && <li>\n                              {nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop'] ? \n                            \" Hispanic Americans make up \" + (nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\" \n                          :\n                            \"\"}</li>}\n\n                          {nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['African American'][0]['percentPop'] && <li> \n                            {nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['African American'][0]['percentPop'] ? \n                            \" African Americans make up \" + (nationalDemog['vaccineRace'][0]['African American'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                          :\n                            \"\"} </li>}\n\n                          {nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop'] && <li>\n                            {nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop'] ? \n                            \" Asian Americans make up \" + (nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                          :\n                            \"\"}</li>}\n\n                          {nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop'] && <li>\n                            {nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop'] ? \n                            \" Native Americans make up \" + (nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                          :\n                            \"\"} </li>}\n                          \n                          \n                          {pctVacPopDisp >= 1 && <li>\n                            {(pctVacPopDisp) < 1 ? \"\": \" \" + finalStr + \" make up a larger proportion of those fully vaccinated than of the population.\"}\n                          </li>}\n\n                          </ul>\n                        </p>\n                          \n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n                 \n              </Grid>\n              <Grid.Row>\n                <Accordion id = \"vaccine\" style = {{paddingTop: 0, paddingLeft: 30, paddingBottom: 15}}defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                  <Header.Content style={{fontWeight: 300, paddingTop: 7, paddingLeft: 5,fontSize: \"19px\", width: 975}}>\n                                    The demographics of vaccinated adults is obtained from the U.S.\n                                    <a href = \"https://covid.cdc.gov/covid-data-tracker/#demographics\" target=\"_blank\" rel=\"noopener noreferrer\"> CDC COVID Data Tracker. </a> \n                                    The CDC notes that “These demographic data only represent the geographic areas that \n                                    contributed data and might differ by populations prioritized within each state or \n                                    jurisdiction’s vaccination phase. Every geographic area has a different racial and \n                                    ethnic composition, and not all are in the same vaccination phase.” For comparison \n                                    purposes, we show the demographics of the U.S. population. Note that the demographics of the total \n                                    population will include some areas that are not represented in the vaccination data. \n                                    The numbers are therefore our best estimation of vaccination coverage by race.\n\n                                  </Header.Content>\n                                ),\n                              },\n                          }\n                      ]\n                      } />\n\n              </Grid.Row>\n\n              <div style = {{height: 25}}> </div>\n              <Grid>\n                <Grid.Column>\n                  <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '29px', paddingLeft: 20}}> COVID-19 Vaccination by State </Divider>\n\n                </Grid.Column>\n              </Grid>\n\n              <Grid>\n\n                <Grid.Row columns = {2} style = {{width: 1260}}>\n\n                  <Grid.Column style = {{width: 1000, paddingLeft: 30}}>\n\n                        <div style = {{paddingBottom: 0, width: 1000}}>\n                          <Header.Content style = {{paddingLeft: 20, fontSize: \"22px\"}}>\n                            <a style = {{color: \"#004071\"}}> Click on a state. </a>\n                            <br/>\n                            <br/>\n                            {/* <b> { selectedName? selectedName : \"% of population partially vaccinated (one dose received)\"}</b> */}\n                          </Header.Content>\n\n                          <Dropdown\n                          style={{background: '#fff', \n                                  fontSize: \"19px\",\n                                  fontWeight: 400, \n                                  theme: '#000000',\n                                  width: '530px',\n                                  top: '0px',\n                                  left: '15px',\n                                  text: \"Select\",\n                                  borderTop: '0.5px solid #bdbfc1',\n                                  borderLeft: '0.5px solid #bdbfc1',\n                                  borderRight: '0.5px solid #bdbfc1', \n                                  borderBottom: '0.5px solid #bdbfc1',\n                                  borderRadius: 0,\n                                  minHeight: '1.0em',\n                                  paddingBottom: '0.5em',\n                                  paddingLeft: '1em'}}\n                          text= { selectedName? selectedName : \"% of population partially vaccinated (one dose received)\"}\n                          pointing = 'top'\n                          search\n                          selection\n                          options={vaccineOptions}\n                          onChange={(e, { value}) => {\n                            setFully(value);\n                            setSelectedName(vaccineList[value]);\n                            \n                                    \n                          }}\n                        />\n                        <br/>\n                          <svg width=\"460\" height=\"80\" >\n                            {/* <text x={280} y={59} style={{fontSize: '1.5em'}}> Click on a state</text> */}\n                            \n                            {/* {_.map(legendSplit, (splitpoint, i) => {\n                              if(legendSplit[i] < 1){\n                                return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(1)}</text>                    \n                              }else if(legendSplit[i] > 999999){\n                                return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                              }else if(legendSplit[i] > 999){\n                                return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000).toFixed(0) + \"K\"}</text>                    \n                              }\n                              return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(0)}</text>                    \n                            })}  */}\n                            <text x={20} y={35} style={{fontSize: '0.7em'}}>{legendMin + \"%\"}</text>\n                            <text x={140} y={35} style={{fontSize: '0.7em'}}>{legendMax + \"%\"}</text>\n\n\n                            {_.map(colorPalette, (color, i) => {\n                              return <rect key={i} x={20+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                            })} \n\n\n                            <text x={20} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                            <text x={20+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n                          </svg>\n                        </div>\n\n                        <ComposableMap \n                          projection=\"geoAlbersUsa\" \n                          data-tip=\"\"\n                          width={1200} \n                          height={450}\n                          strokeWidth= {0.1}\n                          stroke= 'black'\n                          offsetX = {-380}\n                          projectionConfig={{scale: 800}}\n\n\n                          >\n                          <Geographies geography={geoUrl}>\n                            {({ geographies }) => \n                              <svg>\n                                {setStateFips(fips)}\n                                {geographies.map(geo => (\n                                  <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    onMouseEnter={()=>{\n                                      const fips = geo.id.substring(0,2);\n                                      const configMatched = configs.find(s => s.fips === fips);\n                                      setFips(fips);\n                                      setHoverName(configMatched.name)\n\n                                    }}\n                                    \n                                    onMouseLeave={()=>{\n\n                                      setTooltipContent(\"\");\n                                      setFips(\"_nation\");\n                                      setHoverName(\"The United States\");\n                                    }}\n\n                                    onClick={()=>{\n                                      const configMatched = configs.find(s => s.fips === fips);\n                                      setStateName(configMatched.name); \n                                      setStateMapFips(geo.id.substring(0,2));\n\n                                      setClicked(true);\n                                      setShowState(true);\n\n                                    }}\n\n                                    \n                                    fill={stateMapFips===geo.id.substring(0,2) || fips===geo.id.substring(0,2)?colorHighlight:\n                                    ((colorScale && vaccineData[geo.id] && (vaccineData[geo.id][fully]) > 0)?\n                                        colorScale[vaccineData[geo.id][fully]]: \n                                        (colorScale && vaccineData[geo.id] && vaccineData[geo.id][fully] === 0)?\n                                          '#e1dce2':'#FFFFFF')}\n                                  />\n\n\n                                ))}\n\n                                {geographies.map(geo => {\n                                              const centroid = geoCentroid(geo);\n                                              const cur = allStates.find(s => s.val === geo.id);\n                                              return (\n                                                <g key={geo.rsmKey + \"-name\"}>\n                                                  {cur &&\n                                                    centroid[0] > -160 &&\n                                                    centroid[0] < -67 &&\n                                                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                                                      <Marker coordinates={centroid}>\n                                                        <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                                                          {cur.id}\n                                                        </text>\n                                                      </Marker>\n                                                    ) : (\n                                                      <Annotation\n                                                        subject={centroid}\n                                                        dx={offsets[cur.id][0]}\n                                                        dy={offsets[cur.id][1]}\n                                                      >\n                                                        <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                                                          {cur.id}\n                                                        </text>\n                                                      </Annotation>\n                                                    ))}\n                                                </g>\n                                              );\n                                            })}\n                              </svg>\n                            }\n                          </Geographies>\n                          \n\n                        </ComposableMap>\n                    \n                        <Grid>\n                          <Grid.Row>\n                            {stateFips && <Accordion id = \"burden\" style = {{paddingTop: 10, paddingLeft: 14}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,icon: 'dropdown',\n                                    },\n                                    content: {\n                                        content: (\n                                          <Header.Content style={{fontWeight: 300, paddingTop: 7, paddingLeft: 5,fontSize: \"19px\", lineHeight: \"20px\", width: 975}}>\n                                            Data are from the <a href = 'https://covid.cdc.gov/covid-data-tracker/#vaccinations' target=\"_blank\" rel=\"noopener noreferrer\">CDC COVID Data Tracker</a>, data as of {vaccineDate} <br/>\n\n                                            <b><em> {vaxVarMap[\"AdministeredPartial\"].name} </em></b> {vaxVarMap[\"AdministeredPartial\"].definition} <br/>\n                                            <b><em> {vaxVarMap[\"PercentAdministeredPartial\"].name} </em></b> {vaxVarMap[\"PercentAdministeredPartial\"].definition} <br/>\n                                            <b><em> {vaxVarMap[\"Series_Complete_Yes\"].name} </em></b> {vaxVarMap[\"Series_Complete_Yes\"].definition} <br/>\n                                            <b><em> {vaxVarMap[\"Series_Complete_Pop_Pct\"].name} </em></b> {vaxVarMap[\"Series_Complete_Pop_Pct\"].definition} <br/>\n\n                                            <b><em> Newly distributed per 100K </em></b> is the number of vaccine doses per 100K that have been \n                                            distributed to facilities across the United States by the federal government. \n                                            Newly distributed per 100K for the U.S. was data as of {vaccineDate}. \n                                            For {stateName === \"_nation\" ? \"SELECT STATE\": stateName}, the most recent date of new distribution was on {vaccineDate}. <br/>\n                                           \n                                          </Header.Content>\n                                      ),\n                                    },\n                                }\n                              ]\n                            } /> }\n                          </Grid.Row>\n                        </Grid>\n                  </Grid.Column>\n                  \n                  <Grid.Column style ={{width: 350}}>\n                    <Header as='h2' style={{fontWeight: 400}}>\n                      <Header.Content style={{width : 350, height: 100, fontSize: \"22px\", textAlign: \"center\", paddingTop: 36, paddingLeft: 35}}>\n                        Vaccination Status in <br/> <b>{stateName}</b>\n                        \n                        \n                      </Header.Content>\n                    </Header>\n                    <Grid>\n                      <Grid.Row style={{width: 350, paddingLeft: 35}}>\n                        <Table celled fixed style = {{width: 350}}>\n                          <Table.Header>\n\n                            <tr textalign = \"center\" colSpan = \"5\" style = {{backgroundImage : 'url(/Emory_COVID_header_LightBlue.jpg)'}}>\n                                <td colSpan='1' style={{width:130}}> </td>\n                                <td colSpan='1' style={{width:110, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> {stateMapFips === \"_nation\" ? \"Select State\":usAbbrev[stateMapFips][\"state_abbr\"]}</td>\n                                <td colSpan='1' style={{width:110, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> U.S.</td>\n                            </tr>\n                            <Table.Row textAlign = 'center' style = {{height: 40}}>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Number partially vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {stateMapFips === \"_nation\" ? \"\":numberWithCommas(vaccineData[stateMapFips][\"AdministeredPartial\"])} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(vaccineData[\"_nation\"][\"AdministeredPartial\"])} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Percent partially vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {stateMapFips === \"_nation\" ? \"\":numberWithCommas(vaccineData[stateMapFips][\"PercentAdministeredPartial\"]) + \"%\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(vaccineData[\"_nation\"][\"PercentAdministeredPartial\"]) + \"%\"} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Number fully vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {stateMapFips === \"_nation\" ? \"\":numberWithCommas(vaccineData[stateMapFips][\"Series_Complete_Yes\"])} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(vaccineData[\"_nation\"][\"Series_Complete_Yes\"])} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Percent fully vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {stateMapFips === \"_nation\" ? \"\":numberWithCommas(vaccineData[stateMapFips][\"Series_Complete_Pop_Pct\"]) + \"%\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(vaccineData[\"_nation\"][\"Series_Complete_Pop_Pct\"]) + \"%\"} </Table.HeaderCell>\n\n                            </Table.Row>\n                            {/* <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {\"Moderna Vaccine\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {numberWithCommas(vaccineData[\"_nation\"][\"Administered_Moderna\"])} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {numberWithCommas(vaccineData[stateMapFips][\"Administered_Moderna\"])} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {\"Pfizer \\n \\n Vaccine\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {numberWithCommas(vaccineData[\"_nation\"][\"Administered_Pfizer\"])} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '19px'}}> {numberWithCommas(vaccineData[stateMapFips][\"Administered_Pfizer\"])} </Table.HeaderCell>\n\n                            </Table.Row> */}\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Distributed on \" + vaccineDate} </Table.HeaderCell>\n                              <Table.HeaderCell  style={{fontSize: '14px'}}> {stateMapFips === \"_nation\" ? \"\":numberWithCommas(vaccineData[stateMapFips][\"Dist_new\"].toFixed(0))} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(vaccineData[\"_nation\"][\"Dist_new\"].toFixed(0))} </Table.HeaderCell>\n\n                            </Table.Row>\n                            \n                          </Table.Header>\n                        </Table>\n                      </Grid.Row>\n                      \n                    </Grid>\n                    \n                  </Grid.Column>\n                </Grid.Row> \n                \n              </Grid>\n              <div style = {{height: 55}}> </div>\n\n              <Grid>\n                <Grid.Column>\n                <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '22pt', paddingLeft: 20, paddingBottom: 15}}> COVID-19 Burden in {stateName} </Divider>\n\n                </Grid.Column>\n              </Grid>\n\n              <Grid.Row columns = {2} style = {{width: 1000}}>\n\n                \n                <Grid.Column style = {{width: 630}}>\n                  <Grid>\n                    \n\n                  <Grid.Row columns = {2} style = {{width: 630, paddingLeft: 20}}>\n                    <Grid.Column style = {{width: 240, paddingLeft: 15}}> \n\n                      <div>\n                      {stateMapFips &&\n                        <VictoryChart \n                                    minDomain={{ x: stateMapFips? allTS[stateMapFips][allTS[stateMapFips].length-15].t : allTS[\"13\"][allTS[\"13\"].length-15].t}}\n                                    maxDomain = {{y: stateMapFips? getMaxRange(allTS[stateMapFips], \"caseRateMean\", (allTS[stateMapFips].length-15)).caseRateMean*1.05 : getMaxRange(allTS[\"13\"], \"caseRateMean\", (allTS[\"13\"].length-15)).caseRateMean*1.05}}                            \n                                    width={220}\n                                    height={180}\n                                    padding={{marginLeft: 0, right: -1, top: 150, bottom: -0.9}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryAxis\n                                      tickValues={stateMapFips ? \n                                        [\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3)*2 - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3) - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length-1].t]\n                                        :\n                                      [\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3)*2 - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3) - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length-1].t]}                         \n                                      style={{grid:{background: \"#ccdee8\"}, tickLabels: {fontSize: 10}}} \n                                      tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                    <VictoryLine data={stateMapFips && allTS[stateMapFips] ? allTS[stateMapFips] : allTS[\"13\"]}\n                                        x='t' y='caseRateMean'\n                                        />\n\n                                    </VictoryGroup>\n                                    <VictoryArea\n                                      style={{ data: {fill: \"#00BFFF\" , fillOpacity: 0.1} }}\n                                      data={stateMapFips && allTS[stateMapFips]? allTS[stateMapFips] : allTS[\"13\"]}\n                                      x= 't' y = 'caseRateMean'\n\n                                    />\n\n                                    <VictoryLabel text= {stateMapFips ? numberWithCommas((allTS[stateMapFips][allTS[stateMapFips].length - 1].dailyCases).toFixed(0)) : numberWithCommas((allTS[\"13\"][allTS[\"13\"].length - 1].dailyCases).toFixed(0))} x={80} y={80} textAnchor=\"middle\" style={{fontSize: 40, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) + \"%\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? ((allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0)).substring(1) + \"%\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) + \"%\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? ((allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0)).substring(1) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) + \"%\"} x={197} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"↑\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"↓\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"↑\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"↓\": \"\"} \n                                                        \n\n                                                        x={160} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'\n\n                                                        , fill: stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"#32CD32\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"#32CD32\": \"\"\n\n                                                      }}/>\n\n                                    <VictoryLabel text= {\"14-day\"}  x={197} y={100} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"change\"}  x={197} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"Daily Cases\"}  x={110} y={20} textAnchor=\"middle\" style={{fontSize: \"22px\", fontFamily: 'lato'}}/>\n\n                                    \n                        </VictoryChart>}\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column style = {{width: 240, paddingLeft: 55}}> \n                      <div>\n                      {stateMapFips && \n                        <VictoryChart theme={VictoryTheme.material}\n                                    minDomain={{ x: stateMapFips? allTS[stateMapFips][allTS[stateMapFips].length-15].t: allTS[\"13\"][allTS[\"13\"].length-15].t}}\n                                    maxDomain = {{y: stateMapFips? getMax(allTS[stateMapFips], \"mortalityMean\").mortalityMean + 0.8: getMax(allTS[\"13\"], \"mortalityMean\").mortalityMean + 0.8}}                            \n                                    width={220}\n                                    height={180}       \n                                    padding={{left: 0, right: -1, top: 150, bottom: -0.9}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryAxis\n                                      tickValues={stateMapFips ? \n                                        [\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3)*2 - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3) - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length-1].t]\n                                        :\n                                      [\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3)*2 - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3) - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length-1].t]}                        \n                                      style={{tickLabels: {fontSize: 10}}} \n                                      tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                      <VictoryLine data={stateMapFips && allTS[stateMapFips] ? allTS[stateMapFips] : allTS[\"13\"]}\n                                        x='t' y='mortalityMean'\n                                        />\n\n                                    </VictoryGroup>\n\n                                    <VictoryArea\n                                      style={{ data: { fill: \"#00BFFF\", stroke: \"#00BFFF\", fillOpacity: 0.1} }}\n                                      data={stateMapFips && allTS[stateMapFips]? allTS[stateMapFips] : allTS[\"13\"]}\n                                      x= 't' y = 'mortalityMean'\n\n                                    />\n\n                                    \n                                    <VictoryLabel text= {stateMapFips ? numberWithCommas((allTS[stateMapFips][allTS[stateMapFips].length - 1].dailyMortality).toFixed(0)) : numberWithCommas((allTS[\"13\"][allTS[\"13\"].length - 1].dailyMortality).toFixed(0))} x={80} y={80} textAnchor=\"middle\" style={{fontSize: 40, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) + \"%\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? ((allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)).substring(1) + \"%\": \n                                                        \"0%\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) < 0? ((allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)).substring(1) + \"%\": \n                                                        \"0%\"} x={197} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato', fill: \"#004071\"}}/>\n\n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"↑\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? \"↓\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"↑\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)< 0?\"↓\": \"\"} \n\n                                                        x={160} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'\n\n                                                        , fill: stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? \"#32CD32\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)< 0?\"#32CD32\": \"\"}}/>\n\n                                    <VictoryLabel text= {\"14-day\"}  x={197} y={100} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"change\"}  x={197} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"Daily Deaths\"}  x={110} y={20} textAnchor=\"middle\" style={{fontSize: \"22px\", fontFamily: 'lato'}}/>\n\n                        </VictoryChart>}\n                      </div>\n                    \n                    </Grid.Column>\n                    \n                    \n                  </Grid.Row>\n                  <div style = {{height: 60}}>\n                    {stateFips && <Accordion style = {{paddingTop: 10, paddingLeft: 17}} defaultActiveIndex={1} panels={[\n                          {\n                              key: 'acquire-dog',\n                              title: {\n                                  content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n                                      <Header.Content style={{fontWeight: 300, paddingTop: 0, paddingLeft: 5,fontSize: \"19px\", width: 460}}>\n                                        *14-day change trends use 7-day averages.\n                                        <br/>\n                                        <b><em> {varMap[\"dailycases\"].name} </em></b> {varMap[\"dailycases\"].definition}\n                                        <br/> \n                                        <b><em> {varMap[\"dailydeaths\"].name} </em></b> {varMap[\"dailydeaths\"].definition} \n                                        <br/>\n                                        <br/>\n                                        \n\n\n\n                                      </Header.Content>\n                                  ),\n                                },\n                            }\n                          ]\n                        } /> }\n                  </div>\n\n                  <Grid.Row>\n                    <Grid.Column style = {{paddingLeft: 20, paddingTop: 101}}>\n                      <Header as='h2' style={{fontWeight: 400, paddingTop: 10}}>\n                        <Header.Content style={{width : 500, fontSize: \"22px\", textAlign: \"center\"}}>\n                          Disparities in COVID-19 Mortality <br/> <b>{stateMapFips !== \"_nation\" ? stateName : \"Nation\"}</b>\n                          \n                        </Header.Content>\n                      </Header>\n\n                      {stateMapFips && stateMapFips === \"_nation\" && <div style = {{marginTop: 13}}>\n                              <Header.Content x={0} y={20} style={{fontSize: '19px', paddingLeft: 130, fontWeight: 400, width: 400}}> Deaths by Race & Ethnicity</Header.Content>\n                      </div>}\n\n                      {stateMapFips && stateMapFips === \"_nation\" && <div style={{paddingLeft: \"0em\", paddingRight: \"2em\"}}>\n\n                      <VictoryChart\n                                theme={VictoryTheme.material}\n                                width={400}\n                                height={160}\n                                domainPadding={20}\n                                minDomain={{y: props.ylog?1:0}}\n                                padding={{left: 164, right: 35, top: 12, bottom: 1}}\n                                style = {{fontSize: \"19px\"}}\n                                containerComponent={<VictoryContainer responsive={false}/>}\n                              >\n                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                <VictoryBar\n                                  horizontal\n                                  barRatio={0.45}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                  data={[\n                                    {key: nationalDemog['race'][0]['American Native'][0]['demogLabel'], 'value': nationalDemog['race'][0]['American Native'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['Asian'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Asian'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['Hispanic'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Hispanic'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['African American'][0]['demogLabel'], 'value': nationalDemog['race'][0]['African American'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['White'][0]['demogLabel'], 'value': nationalDemog['race'][0]['White'][0]['deathrate']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: \"#004071\"\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n                              </VictoryChart>\n                              <Header.Content style = {{width: 420}}>\n                                  <Header.Content style={{ fontWeight: 300, paddingLeft: 150, paddingTop: 8, paddingBottom:34, fontSize: \"19px\", lineHeight: \"18pt\"}}>\n                                    <b>Deaths per 100K residents</b>\n                                  </Header.Content>\n                              </Header.Content>\n                    </div>}\n                    \n                          {stateMapFips !== \"_nation\" && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" &&\n                          <Grid>\n                            <Grid.Row columns = {2} style = {{height: 273, paddingBottom: 0}}>\n                              <Grid.Column style = {{paddingLeft: 20}}> \n                                {!raceData[stateMapFips][\"Non-Hispanic African American\"]  && stateMapFips !== \"02\"  && \n                                  <div style = {{marginTop: 10, width: 250}}>\n                                    <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 58, fontWeight: 400}}> Deaths by Race</Header.Content>\n                                  </div>\n                                }\n                                {stateMapFips && !raceData[stateMapFips][\"Non-Hispanic African American\"] && stateMapFips !== \"38\"  && stateMapFips !== \"02\" &&\n                                  <VictoryChart\n                                                theme = {VictoryTheme.material}\n                                                width = {250}\n                                                height = {40 * (( !!raceData[stateMapFips][\"Asian Alone\"] && raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"Asian Alone\"][0][\"deaths\"] > 30 && raceData[stateMapFips][\"Asian Alone\"][0][\"percentPop\"] >= 1 ? 1: 0) + \n                                                (!!raceData[stateMapFips][\"American Natives Alone\"] && raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"American Natives Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"American Natives Alone\"][0][\"percentPop\"] >= 1 ? 1 : 0) + \n                                                (!!raceData[stateMapFips][\"African American Alone\"] && raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"African American Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"African American Alone\"][0][\"percentPop\"] >= 1 ? 1 : 0) + \n                                                (!!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"White Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"White Alone\"][0][\"percentPop\"] >= 1 ?1:0))}\n                                                domainPadding={20}\n                                                minDomain={{y: props.ylog?1:0}}\n                                                padding={{left: 100, right: 65, top: 12, bottom: 1}}\n                                                style = {{fontSize: \"14pt\"}}\n                                                containerComponent={<VictoryContainer responsive={false}/>}\n                                              >\n\n                                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                                <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                                <VictoryGroup>\n                                                \n                                                \n\n                                                {\"American Natives Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"American Natives Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"American Natives Alone\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"American\\n Natives\", 'value': raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {\"Asian Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"Asian Alone\"][0][\"deaths\"] > 30 && raceData[stateMapFips][\"Asian Alone\"][0][\"percentPop\"] >= 1 && \n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Asian\", 'value': raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n\n                                                {\"African American Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'] >= 0  && raceData[stateMapFips][\"African American Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"African American Alone\"][0][\"percentPop\"] >= 1 && \n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"African\\n American\", 'value': raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {\"White Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'] >= 0  && raceData[stateMapFips][\"White Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"White Alone\"][0][\"percentPop\"] >= 1 && \n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"White\", 'value': raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                \n                                                </VictoryGroup>\n                                  </VictoryChart>\n                                }\n                                {!raceData[stateMapFips][\"Non-Hispanic African American\"] && stateMapFips !== \"38\" && stateMapFips !== \"02\" &&\n                                  <div style = {{marginTop: 10, textAlign: \"center\", width: 250}}>\n                                    <Header.Content x={15} y={20} style={{fontSize: '14pt', paddingLeft: 15, fontWeight: 400}}> Deaths per 100K <br/> residents</Header.Content>\n                                  </div>\n                                }\n\n                                {stateMapFips === \"02\" &&\n                                  <div style = {{marginTop: 10, width: 250}}>\n                                    <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 35, fontWeight: 400}}> Deaths by Race</text>\n\n                                    <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 0, fontWeight: 400}}> <br/> <br/> <br/> \n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    None Reported</text>\n                                  </div>\n                                }\n\n                              </Grid.Column>\n                              <Grid.Column style = {{paddingLeft: 50}}> \n                                {!!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" &&\n                                  <div style = {{marginTop: 10}}>\n                                    <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 60, fontWeight: 400, width: 250}}> Deaths by Ethnicity</Header.Content>\n                                    {!(stateMapFips && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" && !(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] ) ))\n                                        && \n                                      <center> <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 20, fontWeight: 400, width: 250}}> <br/> <br/> None Reported</Header.Content> </center>\n\n                                  }\n                                  </div>\n                                }\n                                {stateMapFips && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" && !(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] ) ) && \n                                  <VictoryChart\n                                                theme = {VictoryTheme.material}\n                                                width = {250}\n                                                height = {!!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"Non Hispanic\"] ?  81 : 3 * (!!raceData[stateMapFips][\"Hispanic\"] + !!raceData[stateMapFips][\"Non Hispanic\"] + !!raceData[stateMapFips][\"Non-Hispanic African American\"] + !!raceData[stateMapFips][\"Non-Hispanic American Natives\"] + !!raceData[stateMapFips][\"Non-Hispanic Asian\"] + !!raceData[stateMapFips][\"Non-Hispanic White\"] )}\n                                                domainPadding={20}\n                                                minDomain={{y: props.ylog?1:0}}\n                                                padding={{left: 130, right: 35, top: !!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"Non Hispanic\"] ? 13 : 10, bottom: 1}}\n                                                style = {{fontSize: \"14pt\"}}\n                                                containerComponent={<VictoryContainer responsive={false}/>}\n                                              >\n\n                                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                                <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                                \n                                                  <VictoryGroup>\n\n\n                                                  {!!raceData[stateMapFips][\"Non-Hispanic American Natives\"] && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"American\\n Natives\", 'value': raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  {!!raceData[stateMapFips][\"Non-Hispanic Asian\"] && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic Asian\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"Asian\", 'value': raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n                                                  \n\n                                                  {!!raceData[stateMapFips][\"Non Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Non Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non Hispanic\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      barRatio={0.1}\n                                                      horizontal\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"Non Hispanic\", 'value': raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  {(!!raceData[stateMapFips][\"Hispanic\"] || (!!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Hispanic\"][0][\"percentPop\"] >= 1))&&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      barRatio={0.1}\n                                                      horizontal\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"Hispanic\", 'value': raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n                                                  \n                                                \n                                                  {!!raceData[stateMapFips][\"Non-Hispanic African American\"] && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic African American\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"African\\n American\", 'value': raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  \n                                                  {!!raceData[stateMapFips][\"Non-Hispanic White\"] && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic White\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"White\", 'value': raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  \n                                                  </VictoryGroup>\n                                          \n\n                                  </VictoryChart>\n                                }\n                                {stateMapFips !== \"_nation\" && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" && !(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] ) ) && \n                                  <div style = {{marginTop: 10, textAlign: \"center\", width: 250}}>\n                                    <Header.Content style={{fontSize: '14pt', paddingLeft: 35, fontWeight: 400}}> Deaths per 100K <br/> &nbsp;&nbsp;&nbsp;&nbsp;residents</Header.Content>\n                                  </div>\n                                }\n\n                                \n                              </Grid.Column>\n                            </Grid.Row>\n                          </Grid>\n                          }\n\n                          {stateMapFips !== \"_nation\" && (!!raceData[stateMapFips][\"Non-Hispanic African American\"] || !!raceData[stateMapFips][\"Non-Hispanic White\"] ) && stateMapFips !== \"38\" &&\n                          <Grid.Row columns = {1}>\n                            <Grid.Column style = {{ marginLeft : 0, paddingBottom: (13+ 2 * (!raceData[stateMapFips][\"Hispanic\"] + !raceData[stateMapFips][\"Non Hispanic\"] + !raceData[stateMapFips][\"Non-Hispanic African American\"] + !raceData[stateMapFips][\"Non-Hispanic American Natives\"] + !raceData[stateMapFips][\"Non-Hispanic Asian\"] + !raceData[stateMapFips][\"Non-Hispanic White\"] ))}}> \n                              {stateMapFips && !raceData[stateMapFips][\"White Alone\"] &&\n                                <div style = {{marginTop:10, width: 400}}>\n                                  <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 150, fontWeight: 400}}> Deaths by Race & Ethnicity</Header.Content>\n                                </div>\n                              }\n                              {stateMapFips && !raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" &&\n                              <div style={{paddingLeft: \"1em\", paddingRight: \"0em\", width: 550}}>\n                                <VictoryChart\n                                              theme = {VictoryTheme.material}\n                                              width = {400}\n                                              height = {32 * (!!raceData[stateMapFips][\"Hispanic\"] + !!raceData[stateMapFips][\"Non Hispanic\"] + !!raceData[stateMapFips][\"Non-Hispanic African American\"] + !!raceData[stateMapFips][\"Non-Hispanic American Natives\"] + !!raceData[stateMapFips][\"Non-Hispanic Asian\"] + !!raceData[stateMapFips][\"Non-Hispanic White\"] )}\n                                              domainPadding={20}\n                                              minDomain={{y: props.ylog?1:0}}\n                                              padding={{left: 160, right: 35, top: !!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"Non Hispanic\"] ? 12 : 10, bottom: 1}}\n                                              style = {{fontSize: \"14pt\"}}\n                                              containerComponent={<VictoryContainer responsive={false}/>}\n                                            >\n\n                                              <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                              <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                              \n                                                <VictoryGroup>\n\n                                                {!!raceData[stateMapFips][\"Non-Hispanic American Natives\"] && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"American Natives\", 'value': raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {!!raceData[stateMapFips][\"Non-Hispanic Asian\"] && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic Asian\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Asian\", 'value': raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {!!raceData[stateMapFips][\"Non Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Non Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non Hispanic\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    barRatio={0.1}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Non Hispanic\", 'value': raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {(!!raceData[stateMapFips][\"Hispanic\"] || (!!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Hispanic\"][0][\"percentPop\"] >= 1 ))&&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    barRatio={0.1}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Hispanic\", 'value': raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                } \n                                                \n                                                {!!raceData[stateMapFips][\"Non-Hispanic African American\"] && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic African American\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"African American\", 'value': raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                \n                                                {!!raceData[stateMapFips][\"Non-Hispanic White\"] && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic White\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"White\", 'value': raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                \n                                                </VictoryGroup>\n                                        \n\n                                </VictoryChart>\n                                </div>\n                              }\n                              {stateMapFips && !raceData[stateMapFips][\"White Alone\"] &&\n                                <div style = {{marginTop: 10, width: 400, paddingBottom: 3}}>\n                                  <Header.Content style={{fontSize: '19px', marginLeft: 150, fontWeight: 400}}> Deaths per 100K residents<br/> \n                                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                  \n                                  \n                                  </Header.Content>\n                                </div>\n                              }\n\n                            </Grid.Column>\n                          </Grid.Row>}\n\n                          {stateMapFips === \"38\" &&\n                            <Grid.Row columns = {1}>\n                            <Grid.Column style = {{ marginLeft : 0, paddingTop: 8, paddingBottom: 87, width: 500}}> \n                                <div style = {{marginTop: 50}}>\n                                  <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 90, fontWeight: 400}}> Deaths per capita by Race & Ethnicity <br/> <br/> <br/> <br/> </text>\n                                  <text style={{fontSize: '14pt', paddingLeft: 190, fontWeight: 400}}> None Reported</text>\n                                </div>                            \n                            </Grid.Column>\n                          </Grid.Row>\n                          }\n                      <Grid>\n                        <Grid.Row>\n                          {stateMapFips && <Accordion style = {{paddingTop: 30, paddingLeft: 25}}defaultActiveIndex={1} panels={[\n                            {\n                                key: 'acquire-dog',\n                                title: {\n                                    content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                    icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n\n                                      <div style = {{fontSize: \"19px\", paddingLeft: 5}}>\n                                        \n                                        For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n\n                                        {stateMapFips && stateMapFips === \"_nation\" && <Grid.Row style= {{paddingTop: 0, paddingBottom: 25}}> \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, paddingLeft: 0, lineHeight: \"18pt\", width: 450}}>\n                                            The United States reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {nationalDemog['race'][0]['Unknown'][0]['availableDeaths'] + \"%\"} of deaths in the nation.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covid.cdc.gov/covid-data-tracker/#demographics\" target = \"_blank\" rel=\"noopener noreferrer\"> The CDC </a>\n                                            <br/><b>Data as of:</b> {nationalDemogDate}, updated every weekday.<br/>\n                                          \n                                          </Header.Content>\n                                        </Grid.Row>}\n\n                                        {stateMapFips && stateMapFips !== \"_nation\" && <Grid.Row style={{top: stateMapFips === \"38\"? -30 : stateMapFips && !raceData[stateMapFips][\"White Alone\"] ? -40 : -30, paddingLeft: 0}}>\n                                        \n\n                                        \n\n                                        {stateMapFips === \"38\" &&\n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} is not reporting deaths by race or ethnicity.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                        {stateMapFips !== \"38\" && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !!raceData[stateMapFips][\"White Alone\"] && (!raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] )\n                                                    && \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} reports deaths by race. The chart shows race groups that constitutes at least 1% of the state population and have 30 or more deaths. Race data are known for {raceData[stateMapFips][\"Race Missing\"][0][\"percentRaceDeaths\"] + \"%\"} of deaths in {stateName}.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                        {stateMapFips !== \"38\"  && !!raceData[stateMapFips][\"White Alone\"] && !!raceData[stateMapFips][\"White Alone\"] && !(!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] )\n                                                    && \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} reports deaths by race and ethnicity separately. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race data are known for {raceData[stateMapFips][\"Race Missing\"][0][\"percentRaceDeaths\"] + \"%\"} of deaths while ethnicity data are known for {raceData[stateMapFips][\"Ethnicity Missing\"][0][\"percentEthnicityDeaths\"] + \"%\"} of deaths in {stateName}.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                        {stateMapFips !== \"38\"  && (!!raceData[stateMapFips][\"Non-Hispanic African American\"] || !!raceData[stateMapFips][\"Non-Hispanic White\"] ) && \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {raceData[stateMapFips][\"Race & Ethnicity Missing\"][0][\"percentRaceEthnicityDeaths\"] + \"%\"} of deaths in {stateName}.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                          {!raceData[stateMapFips][\"Non-Hispanic African American\"]  && stateMapFips !== \"02\"  && \n                                              <div style = {{marginTop: 10}}>\n                                              </div>\n                                            }\n\n                                        </Grid.Row>}\n\n                                      </div>\n                                    ),\n                                  },\n                              }\n                          ]\n\n                          } /> }\n                        \n                        </Grid.Row>\n                      </Grid>\n                          \n\n\n                      </Grid.Column>\n                    </Grid.Row>\n                      \n\n                  </Grid>\n                </Grid.Column>\n                <Grid.Column style = {{paddingLeft: 80, width: 630}}>\n                  <div style = {{paddingTop: 10, paddingLeft: 50}}>\n                    <div style = {{paddingTop: 0, width: 500, paddingBottom: 20}}>\n                      <Header.Content x={0} y={20} style={{fontSize: \"22px\", fontWeight: 400}}>Average Daily COVID-19 Cases / 100K </Header.Content>\n                    </div>\n                    <svg width = \"500\" height = \"40\">\n                        <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                        <text x = {35} y = {20} style = {{ fontSize: \"22px\"}}> USA</text>\n                        <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                        <text x = {102} y = {20} style = {{ fontSize: \"22px\"}}> {stateMapFips === \"_nation\" || stateMapFips === \"72\"? \"Select State\":stateName} </text>\n                    </svg>\n                  </div>\n                  <div style = {{width: 500, height: 180}}>\n                  {stateMapFips && <CaseChart data={dataTS} dataState = {dataTS[stateMapFips]} lineColor={[colorPalette[1]]} stateFips = {stateMapFips} \n                                ticks={caseTicks} tickFormatter={caseTickFmt} labelFormatter = {labelTickFmt} var = {\"caserate7dayfig\"}/>\n                          }\n                  </div>\n\n                  <div style = {{paddingTop: 65, paddingLeft: 50}}>\n                    <div style = {{paddingTop: 47, width: 500, paddingBottom: 20}}>\n                      <Header.Content style={{fontSize: \"22px\", fontWeight: 400}}>Average Daily COVID-19 Deaths / 100K </Header.Content>\n                    </div>\n                    <svg width = \"500\" height = \"40\">\n                        <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                        <text x = {35} y = {20} style = {{ fontSize: \"22px\"}}> USA</text>\n                        <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                        <text x = {102} y = {20} style = {{ fontSize: \"22px\"}}> {stateMapFips === \"_nation\" || stateMapFips === \"72\"? \"Select State\":stateName} </text>\n                    </svg>\n                  </div>\n                  <div style = {{width: 500, height: 180}}>\n                  {stateMapFips && <CaseChart data={dataTS} dataState = {dataTS[stateMapFips]} lineColor={[colorPalette[1]]} stateFips = {stateMapFips} \n                                ticks={caseTicks} tickFormatter={caseTickFmt} labelFormatter = {labelTickFmt} var = {\"covidmortality7dayfig\"}/>\n                          }\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n\n                      {stateFips && <Accordion style = {{paddingTop: 85, paddingLeft: 32}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,icon: 'dropdown',\n                                    },\n                                    content: {\n                                        content: (\n                                          <Header.Content style={{fontWeight: 300, paddingTop: 0, paddingLeft: 5,fontSize: \"19px\", width: 510}}>\n                                            <b><em> {varMap[\"caserate7dayfig\"].name} </em></b> {varMap[\"caserate7dayfig\"].definition}\n                                            <br/> \n                                            <b><em> {varMap[\"covidmortality7dayfig\"].name} </em></b> {varMap[\"covidmortality7dayfig\"].definition} \n                                            <br/>\n                                            <br/>\n                                            \n\n\n\n                                          </Header.Content>\n                                      ),\n                                    },\n                                }\n                              ]\n                            } /> }\n                    </Grid.Row>\n                  </Grid>\n                  \n                </Grid.Column>\n\n              </Grid.Row>\n              <div id = \"general\" style = {{height: 40}}></div>\n              <Grid>\n                <Grid.Column style = {{paddingLeft: 33}}>\n                  <Divider style={{width: 980}}/> \n\n                </Grid.Column>\n              </Grid>\n              <Grid >\n                <VaccinesFAQ />\n\n              </Grid>\n\n              {/* <Grid.Row>\n                <Header as='h2' style={{fontWeight: 400, paddingTop: 70}}>\n                  <Header.Content style={{width : 900, fontSize: \"18pt\"}}>\n                    Vaccination FAQs\n                    \n                  </Header.Content>\n                </Header>\n              </Grid.Row> */}\n              </Grid>\n            </Grid.Column>\n          </Grid>\n          \n          <Container id=\"title\" style={{marginTop: '8em', minWidth: '1260px', overFlowX: 'hidden'}}>\n            <Notes />\n          </Container>\n        </Container>\n        <ReactTooltip > \n          <font size=\"+2\"><b >{hoverName}</b> </font> \n          <br/> \n          {/* <b> # received first dose: </b> {numberWithCommas(vaccineData[fips][\"Administered_Dose1\"])}\n          <br/>\n          <b> % received first dose: </b> {numberWithCommas(vaccineData[fips][\"percentVaccinatedDose1\"]) + \"%\"}\n          <br/>\n          <b> # received second dose: </b> {numberWithCommas(vaccineData[fips][\"Series_Complete_Yes\"])}\n          <br/>\n          <b> % received second dose: </b> {numberWithCommas(vaccineData[fips][\"Series_Complete_Pop_Pct\"]) + \"%\"}\n          <br/> */}\n\n          <b>Click to lock.</b> \n\n          <table class=\"ui celled inverted table\" >\n            <thead>\n              <tr>\n                <th># partially vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"AdministeredPartial\"])}</th>\n              </tr>\n              <tr>\n                <th> % partially vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"PercentAdministeredPartial\"]) + \"%\"}</th>\n              </tr>\n              <tr>\n                <th> # fully vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"Series_Complete_Yes\"])}</th>\n              </tr>\n              <tr>\n                <th> % fully vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"Series_Complete_Pop_Pct\"]) + \"%\"}</th>\n              </tr>\n            </thead>\n          </table>\n        </ReactTooltip>\n      </div>\n    </HEProvider>\n      );\n  } else {\n    return <Loader active inline='centered' />\n  }\n}\n\nexport default USVaccineTracker;","import React, { useEffect, useState, useRef, createRef, PureComponent} from 'react'\nimport { Container, Breadcrumb, Dropdown, Header, Grid, Progress, Loader, Divider, Popup, Table, Tab, Button, Image, Rail, Sticky, Ref, Segment, Accordion, Icon, Menu, Message, Transition} from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport { geoCentroid } from \"d3-geo\";\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport Marker from './Marker';\nimport Annotation from './Annotation';\nimport { Waypoint } from 'react-waypoint'\nimport ReactTooltip from \"react-tooltip\";\nimport VaccinesFAQ from './VaccineFAQ';\n// import {\n//   ComposableMap,\n//   Geographies,\n//   Geography,\n//   Marker,\n//   Annotation\n// } from \"react-simple-maps\";\nimport allStates from \"./allstates.json\";\n\n// import FileSaver from \"file-saver\";\n// import { getPngData, useRechartToPng } from \"recharts-to-png\";\n// import { exportComponentAsJPEG, exportComponentAsPDF, exportComponentAsPNG } from 'react-component-export-image';\n\nimport { VictoryChart, \n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  // VictoryLegend,\n  VictoryLine,  \n  VictoryLabel, \n  VictoryArea,\n  VictoryContainer\n} from 'victory';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport _ from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport configs from \"./state_config.json\";\n// import ReactDOM from 'react-dom';\n// import fips2county from './fips2county.json'\n// import stateOptions from \"./stateOptions.json\";\n\nimport { var_option_mapping, CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {HEProvider, useHE} from './HEProvider';\nimport {useStitchAuth} from \"./StitchAuth\";\nimport {LineChart, Line, BarChart, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, Cell,  PieChart, Pie, LabelList, ReferenceArea, ReferenceLine} from \"recharts\";\n\n// function getKeyByValue(object, value) {\n//   return Object.keys(object).find(key => object[key] === value);\n// }\n\nfunction getMax(arr, prop) {\n    var max;\n    for (var i=0 ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction getMaxRange(arr, prop, range) {\n    var max;\n    for (var i=range ; i<arr.length ; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n            max = arr[i];\n    }\n    return max;\n}\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\"\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3.0.0/states-10m.json\"\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\n\nconst colorPalette = [\n        \"#e1dce2\",\n        \"#d3b6cd\",\n        \"#bf88b5\", \n        \"#af5194\", \n        \"#99528c\", \n        \"#633c70\", \n      ];\n\nconst mortalityColor = [\n        \"#0270A1\",\n        \"#024174\"\n      ];\nconst colorHighlight = '#f2a900';\nconst stateColor = \"#778899\";\nconst nationColor = '#b1b3b3';\nconst pieChartRace = ['#007dba', '#a45791', '#e8ab3b', '#000000', '#b1b3b3', '#00aeef', '#5d3f6d'];\n\nconst VaxColor = [\n  \"#72ABB1\",\n  \"#337fb5\"\n];\n\nfunction goToAnchor(anchor) {\n  var loc = document.location.toString().split('#')[0];\n  document.location = loc + '#' + anchor;\n  return false;\n}\nconst contextRef = createRef()\nconst nameList = ['USA Vaccination Tracker', 'State Vaccination Tracker', \n'State COVID-19 Burden', 'General Information', 'Vaccine Development', 'Vaccine Safety', \n'Getting Vaccinated', 'After You Are Vaccinated','COVID-19 Vaccines FAQ', \"Vaccination by Race & Ethinicity\"];\nvar scrollCount = 0;\n\nfunction StickyExampleAdjacentContext(props) {\n    const contextRef = createRef();\n    const [actionItem, setActiveItem] = useState({ activeItem: nameList[0] })\n    const { activeItem } = actionItem;\n    useEffect(() => {\n      setActiveItem(nameList[scrollCount])\n    }, [scrollCount])\n    \n    return (\n\n        <div style = {{width: 140}}>\n          <Ref innerRef={contextRef}>\n            <Rail attached size='mini' style = {{width: 250}}>\n                <Sticky offset={180} position= \"fixed\" context={contextRef}>\n                    <Menu\n                        style = {{width: 140}}\n                        size='small'\n                        compact\n                        pointing secondary vertical>\n                          <Menu.Item as='a' href=\"#\" name={nameList[0]} active={props.activeCharacter == nameList[0] || activeItem === nameList[0]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'> {nameList[0]} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#race\" name={nameList[9]} active={props.activeCharacter == nameList[9] || activeItem === nameList[9]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>{nameList[9]}</Header></Menu.Item>\n                          \n                          <Menu.Item as='a' href=\"#vaccine\" name={nameList[1]} active={props.activeCharacter == nameList[1] || activeItem === nameList[1]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>{nameList[1]}</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#burden\" name={nameList[2]} active={props.activeCharacter == nameList[2] || activeItem === nameList[2]}\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>{nameList[2]}</Header></Menu.Item>\n                                \n                          <Menu.Item as='a' href=\"#general\" name={nameList[8]} active={props.activeCharacter == nameList[8] || activeItem === nameList[8]}\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name })  }}><Header as='h4'>{nameList[8]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#general\" name={nameList[3]} active={props.activeCharacter == nameList[3] || activeItem === nameList[3]}\n                          // || activeItem === 'General Information'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name })  }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[3]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#develop\" name={nameList[4]} active={props.activeCharacter == nameList[4] || activeItem === nameList[4]}\n                          // || activeItem === 'Vaccine Development'\n                                onClick={(e, { name }) => { setActiveItem({ activeItem: name }) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[4]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#safety\" name={nameList[5]} active={props.activeCharacter == nameList[5] || activeItem === nameList[5]}\n                          // || activeItem === 'Vaccine Safety'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name } ) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[5]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#get\" name={nameList[6]} active={props.activeCharacter == nameList[6] || activeItem === nameList[6]}\n                          // || activeItem === 'Getting Vaccinated'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name }) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[6]}</Header></Menu.Item>\n                          <Menu.Item as='a' href=\"#after\" name={nameList[7]} active={props.activeCharacter == nameList[7] || activeItem === nameList[7]}\n                          // || activeItem === 'After You Are Vaccinated'\n                                onClick={(e, { name }) => { setActiveItem( { activeItem: name }) }}><Header as='h4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{nameList[7]}</Header></Menu.Item>\n                    </Menu>\n                </Sticky>\n            </Rail>\n          </Ref> \n        </div>\n    )\n  // }\n\n}\n\n\n\nfunction CaseChart(props){\n  const [playCount, setPlayCount] = useState(0);\n  const data = props.data;\n  const dataState = props.dataState;\n  const sfps = props.stateFips;\n  const ticks = props.ticks;\n  const variable = props.var;\n  const tickFormatter = props.tickFormatter;\n  const labelFormatter = props.labelFormatter;\n  const [animationBool, setAnimationBool] = useState(true);\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n\n  return(\n    <div style={{paddingTop: 5, paddingBottom: 70, width: 500}}>\n      <LineChart width={500} height={180} data = {data} margin={{right: 20}}>\n        {/* <CartesianGrid stroke='#f5f5f5'/> */}\n        <XAxis dataKey=\"t\" ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter} allowDuplicatedCategory={false}/>\n        <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n        <Line data={data[\"_nation\"]} name=\"Nation\" type='monotone' dataKey={variable} dot={false} \n              isAnimationActive={animationBool} \n              onAnimationEnd={()=>setAnimationBool(false)} \n              animationDuration={5500} \n              animationBegin={500} \n              stroke={nationColor} strokeWidth=\"2\" />\n        {sfps !== \"_nation\" && <Line data={dataState} name=\"State\" type='monotone' dataKey={variable} dot={false} \n              isAnimationActive={animationBool} \n              onAnimationEnd={()=>setAnimationBool(false)}\n              animationDuration={5500} \n              animationBegin={500} \n              stroke={stateColor} strokeWidth=\"2\" />}\n\n        {/* <ReferenceLine x={data[\"_nation\"][275].t} stroke=\"red\" label=\"2021\" /> */}\n\n\n        \n        <Tooltip labelFormatter={labelFormatter} formatter={variable === \"covidmortality7dayfig\" ? (value) => numberWithCommas(value.toFixed(1)): (value) => numberWithCommas(value.toFixed(0))} active={true}/>\n      </LineChart>\n      {/* <LineChart width={500} height={300}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"t\" type=\"category\" allowDuplicatedCategory={false} />\n        <YAxis dataKey={variable} />\n        <Tooltip />\n        <Legend />\n        \n        <Line dataKey={variable} data={data[\"_nation\"]} name = \"nation\" />\n        <Line dataKey={variable} data={data[sfps]} name = \"nation1\"/>\n        <Line dataKey={variable} data={data[sfps+cfps]} name = \"nation2\"/>\n      </LineChart> */}\n      {/* <Button content='Play' icon='play' floated=\"right\" onClick={() => {setPlayCount(playCount+1); }}/> */}\n    </div>\n  );\n}\n\nconst ToPrint = React.forwardRef((props, ref) => (\n  \n  <div ref={ref} style={{width: 550}}>\n  <Grid.Column rows = {2}>\n    <Grid.Row style = {{width: 550}}>\n      <Grid.Column style = {{width: 550, paddingLeft: 0}}>\n        <div>\n          <svg width=\"550\" height=\"80\">\n\n              <rect x={80} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[0], strokeWidth:1, stroke: pieChartRace[0]}}/>                    \n              <text x={110} y={35} style={{fontSize: '16px'}}> White </text>  \n\n              <rect x={255} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[1], strokeWidth:1, stroke: pieChartRace[1]}}/>                    \n              <text x={285} y={35} style={{fontSize: '16px'}}> African Americans </text>    \n\n              <rect x={430} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[2], strokeWidth:1, stroke: pieChartRace[2]}}/>                    \n              <text x={460} y={35} style={{fontSize: '16px'}}> Hispanic </text>   \n\n              <rect x={167.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[3], strokeWidth:1, stroke: pieChartRace[3]}}/>                    \n              <text x={197.6} y={70} style={{fontSize: '16px'}}> Asian </text>  \n\n              <rect x={342.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[4], strokeWidth:1, stroke: pieChartRace[4]}}/>                    \n              <text x={372.5} y={70} style={{fontSize: '16px'}}> American Native </text>     \n              \n\n\n              {/* {_.map(pieChartRace, (color, i) => {\n                return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n              })}  */}\n          </svg>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n    <Grid >\n      <Grid.Row columns = {2} >\n      {/* style = {{width: 550}} */}\n        <Grid.Column>\n          {/* <Race pop = {false} /> */}\n        </Grid.Column>\n        <Grid.Column >\n          {/* <Race pop = {true}/>  */}\n          {/* style = {{width: 200}} */}\n        </Grid.Column>\n      </Grid.Row>\n\n      {/* <Grid.Row style = {{width: 900}}>\n        <Grid.Column style = {{width: 450, paddingLeft: 0}}>\n            <div>\n              <svg width=\"450\" height=\"145\">\n\n                  <text x={280} y={15} style={{fontSize: '16px'}}> Hispanic</text>                    \n                  <text x={280} y={35} style={{fontSize: '16px'}}> American Native</text>                    \n                  <text x={280} y={55} style={{fontSize: '16px'}}> Asian</text>                    \n                  <text x={280} y={75} style={{fontSize: '16px'}}> African American</text>                    \n                  <text x={280} y={95} style={{fontSize: '16px'}}> White</text>                    \n\n\n                  {_.map(pieChartRace, (color, i) => {\n                    return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                  })} \n              </svg>\n            </div>\n          </Grid.Column>\n      </Grid.Row> */}\n      </Grid>\n  </Grid.Column>\n  </div>\n  \n));\n\n\n\n\n\n\nfunction ComparisonTable(props){\n  return(\n    <div>\n      <Header as='h2' style={{fontWeight: 400}}>\n        <Header.Content style={{width : 350, height: 100, fontSize: \"22px\", textAlign: \"center\", paddingTop: 20, paddingLeft: 35}}>\n          Vaccination Status in <br/> <b>{props.stateName}</b>\n          \n          \n        </Header.Content>\n      </Header>\n      <Grid>\n        <Grid.Row style={{width: 350, paddingLeft: 35}}>\n          <Table celled fixed style = {{width: 350}}>\n            <Table.Header>\n\n           \n\n              <tr textalign = \"center\" colSpan = \"5\" style = {{backgroundImage : 'url(/Emory_COVID_header_LightBlue.jpg)'}}>\n                                <td colSpan='1' style={{width:130}}> </td>\n                                <td colSpan='1' style={{width:110, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> {props.fips === \"_nation\" ? \"Select State\":props.abbrev[props.fips][\"state_abbr\"]}</td>\n                                <td colSpan='1' style={{width:110, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> U.S.</td>\n                            </tr>\n                            <Table.Row textAlign = 'center' style = {{height: 40}}>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Number partially vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {props.fips === \"_nation\" ? \"\":numberWithCommas(props.data[props.fips][\"AdministeredPartial\"])} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(props.data[\"_nation\"][\"AdministeredPartial\"])} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Percent partially vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {props.fips === \"_nation\" ? \"\":numberWithCommas(props.data[props.fips][\"PercentAdministeredPartial\"]) + \"%\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(props.data[\"_nation\"][\"PercentAdministeredPartial\"]) + \"%\"} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Number fully vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {props.fips === \"_nation\" ? \"\":numberWithCommas(props.data[props.fips][\"Series_Complete_Yes\"])} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(props.data[\"_nation\"][\"Series_Complete_Yes\"])} </Table.HeaderCell>\n\n                            </Table.Row>\n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Percent fully vaccinated\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {props.fips === \"_nation\" ? \"\":numberWithCommas(props.data[props.fips][\"Series_Complete_Pop_Pct\"]) + \"%\"} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(props.data[\"_nation\"][\"Series_Complete_Pop_Pct\"]) + \"%\"} </Table.HeaderCell>\n\n                            </Table.Row>\n                            \n                            <Table.Row textAlign = 'center'>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {\"Distributed on \" + props.date} </Table.HeaderCell>\n                              <Table.HeaderCell  style={{fontSize: '14px'}}> {props.fips === \"_nation\" ? \"\":numberWithCommas(props.data[props.fips][\"Dist_new\"].toFixed(0))} </Table.HeaderCell>\n                              <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(props.data[\"_nation\"][\"Dist_new\"].toFixed(0))} </Table.HeaderCell>\n\n                            </Table.Row>\n              \n            </Table.Header>\n          </Table>\n        </Grid.Row>\n        \n      </Grid>\n    </div>\n  )\n}\n\nconst RaceBarChart = (props) => {\n\n  // https://codesandbox.io/s/recharts-issue-template-70kry?file=/src/index.js\n\n  const [hoverBar, setHoverBar] = useState([]);\n  const [activeIndex, setActiveIndex] = useState(-1)\n\n  const valueAccessor = attribute => ({ payload }) => {\n    return payload[attribute]===0 ? null : ( payload[attribute]=== undefined ? null : payload[attribute]+'%');\n\n  };\n\n  let barSize = 50\n\n  const data = [\n    {\n      name: '% Population',\n      white: props.demogData['race'][0]['White'][0]['percentPop'].toFixed(1),\n      black: props.demogData['race'][0]['African American'][0]['percentPop'].toFixed(1),\n      hispanic: props.demogData['race'][0]['Hispanic'][0]['percentPop'].toFixed(1),\n      asian: props.demogData['race'][0]['Asian'][0]['percentPop'].toFixed(1),\n      american_natives: props.demogData['race'][0]['American Native'][0]['percentPop'].toFixed(1),\n      NHPI: props.demogData['race'][0]['NHPI'][0]['percentPop'].toFixed(1),\n      // multiOther: props.demogData['race'][0]['Multiple/Other'][0]['percentPop'].toFixed(1),\n    },\n    {\n      name: '% Vaccination',\n      white: props.fips == '_nation' ? props.demogData['vaccineRace'][0]['White'][0]['pctAdmDose2'].toFixed(1)\n         :(props.VaccineData[props.fips][0]['White'][0]['percentVaccinated'] === -9999 ? 0 \n            : props.VaccineData[props.fips][0]['White'][0]['percentVaccinated']),\n      black: props.fips == '_nation' ? props.demogData['vaccineRace'][0]['African American'][0]['pctAdmDose2'].toFixed(1)\n         :(props.VaccineData[props.fips][0]['Black'][0]['percentVaccinated'] === -9999 ? 0 \n            : props.VaccineData[props.fips][0]['Black'][0]['percentVaccinated']),\n      hispanic: props.fips == '_nation' ? props.demogData['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'].toFixed(1)\n         :(props.VaccineData[props.fips][0]['Hispanic'][0]['percentVaccinated'] === -9999 ? 0 \n            : props.VaccineData[props.fips][0]['Hispanic'][0]['percentVaccinated']),\n      asian: props.fips == '_nation' ? props.demogData['vaccineRace'][0]['Asian'][0]['pctAdmDose2'].toFixed(1)\n         :(props.VaccineData[props.fips][0]['Asian'][0]['percentVaccinated'] === -9999 ? 0 \n            : props.VaccineData[props.fips][0]['Asian'][0]['percentVaccinated']),\n      american_natives: props.fips == '_nation' ? props.demogData['vaccineRace'][0]['American Native'][0]['pctAdmDose2'].toFixed(1)\n         :(props.VaccineData[props.fips][0]['American Native'][0]['percentVaccinated'] === -9999 ? 0 \n            : props.VaccineData[props.fips][0]['American Native'][0]['percentVaccinated']),\n      \n      NHPI: props.fips == '_nation' ? props.demogData['vaccineRace'][0]['NHPI'][0]['pctAdmDose2'].toFixed(1)\n            :(props.VaccineData[props.fips][0]['NHPI'][0]['percentVaccinated'] === -9999 ? 0 \n               : props.VaccineData[props.fips][0]['NHPI'][0]['percentVaccinated']),\n      multiOther: props.fips == '_nation' ? props.demogData['vaccineRace'][0]['Multiple/Other'][0]['pctAdmDose2'].toFixed(1)\n               :(props.VaccineData[props.fips][0]['Multiple/Other'][0]['percentVaccinated'] === -9999 ? 0 \n                  : props.VaccineData[props.fips][0]['Multiple/Other'][0]['percentVaccinated'])\n    }\n  ]\n\nconst CustomTooltip = ({ active, payload, label }) => {\n\n  if (active && payload && payload.length && hoverBar[0]>=0) {\n    var colIndex = 6-hoverBar[0];\n\n    return (\n      <div className='tooltip' style={{background: 'white', border:'2px', borderStyle:'solid', borderColor: '#DCDCDC', borderRadius:'2px', padding: '0.8rem'}}>\n        <p style={{color: pieChartRace[colIndex]}}> <b> {hoverBar[2]} </b> </p>\n        {/* ${payload[hoverBar[0]]['name']}  */}\n        <p className=\"label\">{`% Population: ${data[0][hoverBar[1]]}`}</p>\n        <p className=\"label\">{`% Vaccinated : ${data[1][hoverBar[1]]}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconsole.log('active index', activeIndex);\n\n  return(\n    // <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          width={400}\n          height={500}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 0,\n            bottom: 10,\n          }}\n        >\n          {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n          <XAxis dataKey=\"name\" />\n          <YAxis domain={[0,100]}/>\n          <Tooltip content={<CustomTooltip />}\n          // formatter={function(value, name) {\n          //     if(name === hoverBar){\n          //       return [value,name];\n          //     }else {\n          //       return null\n          //     }\n          //   }}\n             cursor={false}/>\n          {/* content={renderTooltip}  content={<CustomTooltip />}*/}\n          <Legend width={410} />\n          <Bar name='Multiple/Other' id='multiOther' barSize={barSize} dataKey=\"multiOther\" stackId=\"a\" fill={pieChartRace[6]}\n            isAnimationActive={false}\n            onMouseEnter={()=>{setHoverBar([0,'multiOther', 'Multiple/Other']); setActiveIndex(0)}}\n            onMouseLeave={()=>setActiveIndex(-1)}>\n            {/* {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={activeIndex === 0 ? 'white' : pieChartRace[4]}/>\n              ))\n            } */}\n            <LabelList valueAccessor={valueAccessor(\"multiOther\")}  fill='white'/>\n          </Bar>\n          <Bar name='Native Hawaiian/Pacific Islander' id='NHPI' barSize={barSize} dataKey=\"NHPI\" stackId=\"a\" fill={pieChartRace[5]}\n            isAnimationActive={false}\n            onMouseEnter={()=>{setHoverBar([1,'NHPI', 'Native Hawaiian/Pacific Islander']); setActiveIndex(1)}}\n            onMouseLeave={()=>setActiveIndex(-1)}>\n            {/* {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={activeIndex === 0 ? 'white' : pieChartRace[4]}/>\n              ))\n            } */}\n            <LabelList valueAccessor={valueAccessor(\"NHPI\")} position=\"left\" fill='black'/>\n          </Bar>\n\n          <Bar name='American Native' id='an' barSize={barSize} dataKey=\"american_natives\" stackId=\"a\" fill={pieChartRace[4]}\n            isAnimationActive={false}\n            onMouseEnter={()=>{setHoverBar([2,'american_natives', 'American Native']); setActiveIndex(2)}}\n            onMouseLeave={()=>setActiveIndex(-1)}>\n            {/* {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={activeIndex === 0 ? 'white' : pieChartRace[4]}/>\n              ))\n            } */}\n            <LabelList valueAccessor={valueAccessor(\"american_natives\")} position=\"right\" fill='black'/>\n          </Bar>\n          <Bar name='Asian' id='asian' barSize={barSize} dataKey=\"asian\" stackId=\"a\" fill={pieChartRace[3]}\n            isAnimationActive={false}\n            onMouseEnter={()=>{setHoverBar([3,'asian', 'Asian']); setActiveIndex(3)}}\n            onMouseLeave={()=>setActiveIndex(-1)}> \n            {/* {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} style={{zIndex: -10}} fill={activeIndex === 1 ? 'white' : pieChartRace[3]}/>\n              ))\n            } */}\n            <LabelList valueAccessor={valueAccessor(\"asian\")} fill='white'/>\n          </Bar>\n          <Bar name='Hispanic' id='hispanic' barSize={barSize} dataKey=\"hispanic\" stackId=\"a\" fill={pieChartRace[2]}\n            isAnimationActive={false}\n            onMouseEnter={()=>{setHoverBar([4,'hispanic', 'Hispanic']); setActiveIndex(4)}}\n            onMouseLeave={()=>setActiveIndex(-1)}>\n            {/* {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={activeIndex === 2 ? 'white' : pieChartRace[2]}/>\n              ))\n            } */}\n            <LabelList valueAccessor={valueAccessor(\"hispanic\")} fill='white'/>\n          </Bar>\n          <Bar name='African Americans' id='black' barSize={barSize} dataKey=\"black\" stackId=\"a\" fill={pieChartRace[1]}\n            isAnimationActive={false}\n            onMouseEnter={()=>{setHoverBar([5,'black', 'African Americans']); setActiveIndex(5)}}\n            onMouseLeave={()=>setActiveIndex(-1)}>\n            {/* {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} stroke='white' strokeWidth={activeIndex === 3 ? 2 : 0}/>\n                // fill={activeIndex === 3 ? 'white' : pieChartRace[1]}\n              ))\n            } */}\n            <LabelList valueAccessor={valueAccessor(\"black\")} fill='white'/>\n          </Bar>\n          <Bar name='White' id='white' barSize={barSize} dataKey=\"white\" stackId=\"a\" fill={pieChartRace[0]}\n            isAnimationActive={false}\n            onMouseEnter={()=>{setHoverBar([6,'white','White']); setActiveIndex(6)}}\n            onMouseLeave={()=>setActiveIndex(-1)}>\n            {/* {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={activeIndex === 4 ? 'white' : pieChartRace[0]}/>\n              ))\n            } */}\n            <LabelList valueAccessor={valueAccessor(\"white\")} fill='white'/>\n            \n          </Bar>\n        \n          \n        </BarChart>\n      \n  )\n}\n\nfunction TabExampleBasic(props){\n  console.log('fips', props.fips)\n  const panes = [\n    { menuItem: 'State & Nation Vaccination', render: () => \n      <Tab.Pane attached={false}>\n        <ComparisonTable \n          data = {props.data} \n          fips = {props.fips} \n          stateName = {props.stateName} \n          abbrev = {props.abbrev}\n          date = {props.date}\n        />\n      </Tab.Pane> \n    },\n    { menuItem: 'Vaccination by Race & Ethnicity', render: () => \n      <Tab.Pane attached={false}>\n        <RaceBarChart\n          demogData = {props.demogData}\n          fips = {props.fips}\n          VaccineData = {props.VaccineData}\n        />\n      </Tab.Pane> },\n  ]\n\n  return(\n    <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n  )\n}\n\n\nconst toPrint = React.forwardRef((props, ref) => (\n  <div ref={ref}>Hello World</div>\n));\n\n// export default function USVaccineTracker(props) {\nconst USVaccineTracker = (props) => {\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();\n  const [caseTicks, setCaseTicks] = useState([]);\n  \n  // const [open, setOpen] = React.useState(true)\n  const [showState, setShowState] = useState(false);\n  const [clicked, setClicked] = useState(false);\n\n  const [activeCharacter, setActiveCharacter] = useState('');\n\n  const history = useHistory();\n  const [tooltipContent, setTooltipContent] = useState('');\n  \n  const [stateLabels, setStateLabels] = useState();\n  const [date, setDate] = useState('');\n  const [vaccineDate, setVaccineDate] = useState('');\n\n  const [data, setData] = useState();\n  const [dataTS, setDataTS] = useState();\n  const [VaxSeries, setVaxSeries] = useState();\n  const [vaccineData, setVaccineData] = useState();\n  const [stateVaccineData, setStateVaccineData] = useState();\n\n  const [allTS, setAllTS] = useState();\n  const [raceData, setRaceData] = useState();\n  const [nationalDemog, setNationalDemog] = useState();\n\n  const [hoverName, setHoverName] = useState('The United States');\n  const [stateName, setStateName] = useState('The United States');\n  const [usAbbrev, setUSabbrev] = useState('');\n  const [stateMapName, setStateMapName] = useState('State');\n  const [fips, setFips] = useState('_nation');\n  const [stateFips, setStateFips] = useState();\n  const [stateMapFips, setStateMapFips] = useState(\"_nation\");\n  const [config, setConfig] = useState();\n  const [countyFips, setCountyFips] = useState('');\n  const [colorScaleState, setColorScaleState] = useState();\n  const [legendMaxState, setLegendMaxState] = useState([]);\n  const [legendMinState, setLegendMinState] = useState([]);\n  const [legendSplitState, setLegendSplitState] = useState([]);\n  const [metricOptions, setMetricOptions] = useState('caserate7dayfig');\n\n  const [colorScale, setColorScale] = useState();\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  const [varMap, setVarMap] = useState({});\n  const [vaxVarMap, setVaxVarMap] = useState({});\n  const [metric, setMetric] = useState('caserate7dayfig');\n  const [fully, setFully] = useState('PercentAdministeredPartial');\n\n  const [pctVacPopDisp, setPctVacPopDisp] = useState(0);\n  const [finalStr, setFinalStr] = useState('');\n  const [vaccineProp, setVaccine] = useState();\n  const [selectedName, setSelectedName] = useState();\n\n  const vaccineOptions = [\n    {\n      key: 'PercentAdministeredPartial',\n      text: '% of population partially vaccinated (one dose received)',\n      value: 'PercentAdministeredPartial',\n    },\n    {\n      key: 'Series_Complete_Pop_Pct',\n      text: '% of population fully vaccinated (two doses received)',\n      value: 'Series_Complete_Pop_Pct',\n    },\n  ]\n  const vaccineList = \n    {\n      'PercentAdministeredPartial': '% of population partially vaccinated (one dose received)',\n      'Series_Complete_Pop_Pct': '% of population fully vaccinated (two doses received)'\n\n    }\n    \n  useEffect(() => {\n    if (dataTS ){\n      setCaseTicks([\n          dataTS[\"_nation\"][0].t,\n          dataTS[\"_nation\"][30].t,\n          dataTS[\"_nation\"][61].t,\n          dataTS[\"_nation\"][91].t,\n          dataTS[\"_nation\"][122].t,\n          dataTS[\"_nation\"][153].t,\n          dataTS[\"_nation\"][183].t,\n          dataTS[\"_nation\"][214].t,\n          dataTS[\"_nation\"][244].t,\n          dataTS[\"_nation\"][275 ].t,\n          dataTS[\"_nation\"][306 ].t,\n          dataTS[\"_nation\"][336 ].t,\n          dataTS[\"_nation\"][366 ].t,\n          dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]);\n          //console.log(\"dataTS\", dataTS[\"_nation\"][0].t);\n    }\n  }, [dataTS]);\n\n  const labelTickFmt = (tick) => { \n    return (\n      // <text>// </ text>\n        /* {tick} */\n        // monthNames[new Date(tick*1000).getMonth()] + \" \" +  new Date(tick*1000).getDate()\n        new Date(tick*1000).getFullYear() + \"/\" + (new Date(tick*1000).getMonth()+1) + \"/\" +  new Date(tick*1000).getDate()\n      \n      );\n  };\n\n  const caseTickFmt = (tick) => { \n    return (\n      // <text>// </ text>\n        /* {tick} */\n        // monthNames[new Date(tick*1000).getMonth()] + \" \" +  new Date(tick*1000).getDate()\n        (new Date(tick*1000).getMonth()+1) + \"/\" +  new Date(tick*1000).getDate()\n      \n      );\n  };\n\n  useEffect(()=>{\n    fetch('/data/date.json').then(res => res.json())\n      .then(x => {setDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4));});\n    \n    fetch('/data/vaccinedate.json').then(res => res.json())\n      .then(x => {setVaccineDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4));});\n    \n    fetch('/data/stateVaccineData.json').then(res => res.json())\n      .then(x => {setStateVaccineData(x);});\n    \n    fetch('/data/allstates.json').then(res => res.json())\n      .then(x => {setStateLabels(x);});\n\n    fetch('/data/rawdata/variable_mapping_Vaccine.json').then(res => res.json())\n      .then(x => {setVaxVarMap(x);});\n\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMetricOptions(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.variable, text: d.name, def: d.definition, group: d.group};\n        }), d => (d.text !== \"Urban-Rural Status\" && d.group === \"outcomes\")));\n      });\n    fetch('/data/nationalDemogdata.json').then(res => res.json())\n      .then(x => {\n        setNationalDemog(x);\n        var listW = [];\n        var count = (x['vaccineRace'][0]['White'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['White'][0]['percentPop']) \n        + \n        (x['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['Hispanic'][0]['percentPop']) \n        + \n        (x['vaccineRace'][0]['African American'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['African American'][0]['percentPop']) \n        +\n        (x['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['Asian'][0]['percentPop'])\n        +\n        (x['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['American Native'][0]['percentPop'])\n        + \n        (x['vaccineRace'][0]['NHPI'][0]['pctAdmDose2'] >= x['vaccineRace'][0]['NHPI'][0]['percentPop']);\n\n        setPctVacPopDisp(count);\n\n        if(x['vaccineRace'][0]['White'][0]['pctAdmDose2'] > x['vaccineRace'][0]['White'][0]['percentPop']){\n          listW.push(\"White Americans\");\n        }\n        if(x['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] > x['vaccineRace'][0]['Hispanic'][0]['percentPop']){\n          listW.push(\"Hispanic Americans\");\n        }\n        if(x['vaccineRace'][0]['African American'][0]['pctAdmDose2'] > x['vaccineRace'][0]['African American'][0]['percentPop']){\n          listW.push(\"African Americans\");\n        }\n        if(x['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] > x['vaccineRace'][0]['Asian'][0]['percentPop']){\n          listW.push(\"Asian Americans\");\n        }\n        if(x['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] > x['vaccineRace'][0]['American Native'][0]['percentPop']){\n          listW.push(\"Native Americans\");\n        }\n        if(x['vaccineRace'][0]['NHPI'][0]['pctAdmDose2'] > x['vaccineRace'][0]['NHPI'][0]['percentPop']){\n          listW.push(\"Native Hawaiians/Pacific Islander\");\n        }\n        var joinedStr = listW.join();\n        var indexStr = 0;\n        var previousIndexStr = 0;\n        var i;\n        var oldLeft = '';\n        for (i = 0; i< (count - 1); i++){\n          indexStr = joinedStr.indexOf(',', indexStr + 1);\n          if (count ===2){\n            oldLeft = oldLeft + joinedStr.substring(previousIndexStr, indexStr);\n          }else{\n            oldLeft = oldLeft + joinedStr.substring(previousIndexStr, indexStr+1) + \" \";\n          }\n          previousIndexStr = indexStr+1;\n        };\n        var left = oldLeft;\n        // var left = joinedStr.substring(0, indexStr);\n        var right = joinedStr.substring(indexStr+1); \n\n        if(count === 1){\n        }else if(count === 2){\n          setFinalStr(left + \" and \" + right);\n        }else if(count > 2){\n          setFinalStr(left + \" and \" + right); \n        }\n        \n\n      });\n\n    fetch('/data/timeseriesAll.json').then(res => res.json())\n      .then(x => {setAllTS(x);});\n\n    fetch('/data/racedataAll.json').then(res => res.json())\n      .then(x => {setRaceData(x);});\n    \n    fetch('/data/rawdata/USabb.json').then(res => res.json())\n      .then(x => {setUSabbrev(x);});\n\n    fetch('/data/data.json').then(res => res.json())\n      .then(x => {\n        setData(x);\n      });\n    \n  }, []);\n\n\n\n  useEffect(() => {\n    if (metric) {\n      fetch('/data/vaccineTimeseries.json').then(res => res.json())\n        .then(x => {setVaxSeries(x);});\n      \n      fetch('/data/vaccineData.json').then(res => res.json())\n        .then(x => {\n          setVaccineData(x);\n          const cs = scaleQuantile()\n            .domain(_.map(_.filter(_.map(x, (d, k) => {\n              d.fips = k\n              return d}), \n              d => (\n                  d[fully] >= 0 &&\n                  d.fips.length === 2)),\n              d=> d[fully]))\n            .range(colorPalette);\n  \n            let scaleMap = {}\n            _.each(x, d=>{\n              if(d[fully] >= 0){\n              scaleMap[d[fully]] = cs(d[fully])}});\n          \n            setColorScale(scaleMap);\n            var max = 0\n            var min = 100\n            _.each(x, d=> { \n              if (d[fully] > max && d.fips.length === 2) {\n                max = d[fully]\n              } else if (d.fips.length === 2 && d[fully] < min && d[fully] >= 0){\n                min = d[fully]\n              }\n            });\n  \n            if (max > 999999) {\n              max = (max/1000000).toFixed(0) + \"M\";\n              setLegendMax(max);\n            }else if (max > 999) {\n              max = (max/1000).toFixed(0) + \"K\";\n              setLegendMax(max);\n            }else{\n              setLegendMax(max.toFixed(0));\n  \n            }\n            setLegendMin(min.toFixed(0));\n            setLegendSplit(cs.quantiles());\n          \n        });\n      \n    }\n  }, [fully]);\n\n\n\n  useEffect(()=>{\n    if (metric) {\n\n    \n    const configMatched = configs.find(s => s.fips === stateMapFips);\n\n    if (!configMatched){\n      \n    }else{\n\n      setConfig(configMatched);\n\n      setStateMapName(configMatched.name);\n\n      fetch('/data/data.json').then(res => res.json())\n        .then(x => {\n          \n\n          const cs = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] > 0 &&\n                d.fips.length === 5)),\n            d=> d[metric]))\n          .range(colorPalette);\n\n          let scaleMap = {}\n          _.each(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] > 0 &&\n                d.fips.length === 5))\n                , d=>{\n            scaleMap[d[metric]] = cs(d[metric])});\n\n          setColorScaleState(scaleMap);\n          var max = 0\n          var min = 100\n          _.each(x, d=> { \n            if (d[metric] > max && d.fips.length === 5) {\n              max = d[metric]\n            } else if (d.fips.length === 5 && d[metric] < min && d[metric] > 0){\n              min = d[metric]\n            }\n          });\n\n          if (max > 999) {\n            max = (max/1000).toFixed(0) + \"K\";\n            setLegendMaxState(max);\n          }else{\n            setLegendMaxState(max.toFixed(0));\n\n          }\n          setLegendMinState(min.toFixed(0));\n\n          var split = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[metric] > 0 &&\n                d.fips.length === 5)),\n            d=> d[metric]))\n          .range(colorPalette);\n\n          setLegendSplitState(split.quantiles());\n        });\n      }\n    }\n     \n  }, []);\n\n  // useEffect(()=>{\n    \n  //   if (isLoggedIn === true){\n  //     const fetchData = async() => { \n  //       // let seriesDict = {};\n  //       const stateSeriesQ = {tag: \"stateonly\"};\n  //       const promState = await CHED_series.find(stateSeriesQ,{projection:{}}).toArray();\n  //       // _.map(promState, i=> {\n  //       //   seriesDict[i[Object.keys(i)[4]]] = i[Object.keys(i)[5]];\n  //       //   return seriesDict;\n  //       // });\n  //       // let seriesDict = promState[0].timeseriesAll;\n  //       setDataTS(promState[0].timeseriesAll);\n  //     };\n  //     fetchData();\n  //   } else {\n  //     handleAnonymousLogin();\n  //   }\n\n\n  // },[isLoggedIn]);\n\n  \n\n  useEffect(()=>{\n    fetch('/data/timeseriesAll.json').then(res => res.json())\n        .then(x => setDataTS(x));\n    \n\n\n  },[]);\n\n\n\n  const componentRef = useRef();\n\n\n  if (data && allTS && vaccineData && fips && dataTS && stateMapFips && VaxSeries && stateVaccineData) {\n    // console.log(vaccineData[stateFips]);\n  return (\n    <HEProvider>\n      <div >\n        <AppBar menu='vaccineTracker'/>\n        <Container style={{marginTop: '8em', width: 1260}}>\n          {/* <Breadcrumb style={{fontSize: \"14pt\", paddingTop: \"14pt\"}}>\n            <Breadcrumb.Section active >Vaccination: United States</Breadcrumb.Section>\n            <Breadcrumb.Divider style={{fontSize: \"14pt\"}}/>\n          </Breadcrumb>\n          <Divider hidden /> */}\n          <Grid >\n            \n            <Grid.Column style={{zIndex: 10, width:140}}>\n              <Ref innerRef={createRef()} >\n                <StickyExampleAdjacentContext activeCharacter={activeCharacter}  />\n              </Ref>\n            </Grid.Column>\n            <Grid.Column style = {{paddingLeft: 170, width: 1000}}>\n              <center>  \n                <Waypoint onEnter={() => {\n                  setActiveCharacter('USA Vaccination Tracker')}}>\n                </Waypoint> \n              </center>\n              {/* <Grid columns={14}> */}\n              <div>     \t\n                <Header as='h2' style={{color: \"#004071\",textAlign:'center', fontWeight: 400, fontSize: \"24pt\", paddingTop: 17, paddingLeft: 210, paddingBottom: 50}}>\n                  <Header.Content >\n                  <b> COVID-19 Vaccination Tracker </b> \n                  \n                  </Header.Content>\n                </Header>\n              </div>\n              <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '22pt', paddingLeft: 20}}> The United States </Divider>\n\n              <Grid>\n\n\n                <Grid.Row columns = {5} style = {{width: 1000, paddingLeft: 35, paddingTop: 40}}>\n                  <Grid.Column style = {{width: 240, paddingLeft: 0, paddingTop: 8, paddingBottom: 0}}> \n                        <center style={{width: 240,fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\", paddingBottom: 0}}>Total doses delivered</center>\n\n                    \n                  </Grid.Column>\n                  \n                  <Grid.Column style = {{width: 240, paddingLeft: 85, paddingTop: 8}}> \n                        <center style={{width: 240,fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\", paddingBottom: 0}}>Total doses administered</center>\n\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 170, paddingTop: 8}}> \n           \n                        <center style={{width: 240, fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\"}}>Number received <br/> at least one dose</center>\n\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 232, paddingTop: 8}}> \n                   \n                        <center style={{width: 240, fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\"}}>Number fully vaccinated</center>\n  \n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row columns = {5} style = {{width: 1000, paddingLeft: 35, paddingTop: 0}}>\n                  <Grid.Column style = {{width: 240, paddingLeft: 0, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        <br/><br/><p style={{width: 240, fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Doses_Distributed\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  \n                  <Grid.Column style = {{width: 240, paddingLeft: 85, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        <br/><br/><p style={{width: 240, fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Doses_Administered\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 170, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                          \n                        <br/><br/><p style={{fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Administered_Dose1\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 240, paddingLeft: 232, paddingTop: 0}}> \n                    <div style = {{width: 240, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received second dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        \n                        <br/><br/><p style={{fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Series_Complete_Yes\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                      {/* <Grid style = {{width: 240}}>\n                        <Grid.Row style = {{width: 240}}>\n                          <Grid.Column style = {{width: 240, paddingTop: 0, paddingBottom: 5, textAlign: \"center\"}}>\n                            <Header>\n                              <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Newly distributed per 100K <br/><br/></p>\n                            </Header>\n                            <p style={{fontSize: \"28px\", fontWeight: 800, fontFamily: 'lato', color: \"#004071\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Dist_Per_100K_new\"].toFixed(0))}</p>\n\n                          </Grid.Column>\n                          \n                        </Grid.Row> */}\n                        {/* <Grid.Row columns = {2} style = {{width: 240}}>\n                          \n                          <Grid.Column style = {{width: 140, height: 100}}>\n                            \n                            <br/><br/><br/><br/>\n                              <p style={{fontSize: \"28px\", fontWeight: 800, fontFamily: 'lato', color: \"#004071\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Dist_Per_100K_new\"].toFixed(0))}</p>\n                       \n                          </Grid.Column>\n                          <Grid.Column style = {{width: 100, paddingLeft: 0}}>\n                                  <VictoryChart \n                                                      \n                                    width={100}\n                                    height={118}\n                                    padding={{left: -5, right: -1, top: 20, bottom: 0}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                    <VictoryLine data={VaxSeries ? VaxSeries[\"_nation\"] : [0,0,0]}\n                                        x='t' y='Dist_new'\n                                        />\n\n                                    </VictoryGroup>\n                                    <VictoryArea\n                                      style={{ data: {fill: \"#00BFFF\" , fillOpacity: 0.1} }}\n                                      data={VaxSeries? VaxSeries[\"_nation\"] : [0,0,0]}\n                                      x= 't' y = 'Dist_new'\n\n                                    />\n                                    \n                                </VictoryChart>\n                            </Grid.Column>\n                          </Grid.Row> */}\n                        {/* </Grid> */}\n                      </div>\n                  </Grid.Column>\n                </Grid.Row>\n\n                \n              \n              <Grid.Row>\n               <Grid.Column style = {{width: 900, paddingLeft: 35, paddingTop: 18}}> \n                  <div style = {{width: 900}}>\n                    <Header>\n                      \n                      <div>\n                        <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 975}}>\n                          Percent of the U.S. population partially vaccinated<br/>\n                          <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                            One of two doses of Pfizer or Moderna vaccine received\n                          </Header.Content>\n                        </Header>\n                      </div>\n                      <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                        <Progress style = {{width: 970}} percent={((vaccineData[\"_nation\"][\"PercentAdministeredPartial\"]).toFixed(1))} size='large' color='green' progress/>\n                      </Header.Content>\n\n                      <div>\n                        <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 975}}>\n                          Percent of the U.S. population fully vaccinated<br/>\n                          <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                            Both doses of Pfizer or Moderna vaccine or one and only dose of Johnson and Johnson received\n                          </Header.Content>\n                        </Header>\n                      </div>\n                      <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                        <Progress style = {{width: 970}} percent={((vaccineData[\"_nation\"][\"Series_Complete_Pop_Pct\"]).toFixed(1))} size='large' color='green' progress/>\n                      </Header.Content>\n\n                      <div>\n                        <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 975}}>\n                          Percent of the U.S. population that received at least one dose<br/>\n                          <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                            One or more doses of any of the authorized vaccines received\n                          </Header.Content>\n                        </Header>\n                      </div>\n                      <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                        <Progress style = {{width: 970}} percent={((vaccineData[\"_nation\"][\"PercentAdministeredPartial\"] + vaccineData[\"_nation\"][\"Series_Complete_Pop_Pct\"]).toFixed(1))} size='large' color='green' progress/>\n                      </Header.Content>\n                    </Header>\n                  </div>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row >\n              {stateFips && <Accordion id = \"race\" style = {{paddingTop: 0, paddingLeft: 30, paddingBottom: 15}}defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                  <Header.Content style={{fontWeight: 300, paddingTop: 7, paddingLeft: 5,fontSize: \"19px\", width: 975}}>\n                                    Data are from the <a href = 'https://covid.cdc.gov/covid-data-tracker/#vaccinations' target=\"_blank\" rel=\"noopener noreferrer\">CDC COVID Data Tracker</a>, data as of {vaccineDate} <br/>\n                                    <b><em> {vaxVarMap[\"Doses_Distributed\"].name} </em></b> {vaxVarMap[\"Doses_Distributed\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Doses_Administered\"].name} </em></b> {vaxVarMap[\"Doses_Administered\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Administered_Dose1\"].name} </em></b> {vaxVarMap[\"Administered_Dose1\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Series_Complete_Yes\"].name} </em></b> {vaxVarMap[\"Series_Complete_Yes\"].definition} <br/>\n\n                                    {/* <b><em> {vaxVarMap[\"percentVaccinatedDose1\"].name} </em></b> {vaxVarMap[\"percentVaccinatedDose1\"].definition} <br/>\n                                    <b><em> {vaxVarMap[\"Series_Complete_Pop_Pct\"].name} </em></b> {vaxVarMap[\"Series_Complete_Pop_Pct\"].definition} <br/> */}\n\n\n                                  </Header.Content>\n                                ),\n                              },\n                          }\n                      ]\n                      } /> }\n              </Grid.Row>\n              <div style = {{height: 25}}> </div>\n              <Grid>\n                <Grid.Column>\n                  <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '29px', paddingLeft: 20}}> COVID-19 Vaccination by Race & Ethnicity </Divider>\n\n                </Grid.Column>\n              </Grid>\n              <Grid.Row columns = {1} style = {{width: 1000, paddingTop: 15}}>\n                  <Grid.Column style = {{width: 810, paddingLeft: 60}}>\n                    <div style={{paddingTop:'0em'}}>\n                      <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: 190, paddingRight: \"1em\", paddingBottom: 0}}>\n                        <center> <b style= {{fontSize: \"22px\"}}>Vaccination by Race & Ethnicity</b> </center> \n                        <br/>\n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                  \n              </Grid.Row>\n              \n              \n                    \n              <Grid>\n                \n                <Grid.Row columns = {2} style = {{width: 1000, paddingLeft: 0}} >\n                  <Grid.Column rows = {3} >\n\n                    {/* <Grid.Row style = {{width: 550}}>\n                      <Grid.Column style = {{width: 550, paddingLeft: 0}}>\n                        <div>\n                          <svg width=\"550\" height=\"80\">\n\n                              <rect x={80} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[0], strokeWidth:1, stroke: pieChartRace[0]}}/>                    \n                              <text x={110} y={35} style={{fontSize: '16px'}}> White </text>  \n\n                              <rect x={235} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[1], strokeWidth:1, stroke: pieChartRace[1]}}/>                    \n                              <text x={265} y={35} style={{fontSize: '16px'}}> African American </text>    \n\n                              <rect x={430} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[2], strokeWidth:1, stroke: pieChartRace[2]}}/>                    \n                              <text x={460} y={35} style={{fontSize: '16px'}}> Hispanic </text>   \n\n                              <rect x={167.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[3], strokeWidth:1, stroke: pieChartRace[3]}}/>                    \n                              <text x={197.6} y={70} style={{fontSize: '16px'}}> Asian </text>  \n\n                              <rect x={322.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[4], strokeWidth:1, stroke: pieChartRace[4]}}/>                    \n                              <text x={352.5} y={70} style={{fontSize: '16px'}}> American Native </text>                    \n\n\n                              {/* {_.map(pieChartRace, (color, i) => {\n                                return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                              })}  \n                          </svg>\n                        </div>\n                      </Grid.Column>\n                    </Grid.Row> */}\n                    <Grid >\n                      <Grid.Row columns = {1} style = {{width: 1000, paddingLeft: 100}}>\n                        <Grid.Column style = {{width: 300, paddingleft: 100}}>\n                          <RaceBarChart\n                            demogData = {nationalDemog}\n                            fips = {\"_nation\"}\n                            VaccineData = {vaccineData}\n                          />\n                        </Grid.Column>\n                        \n                      </Grid.Row>\n                      \n                      {/* <Grid.Row style = {{width: 900}}>\n                        <Grid.Column style = {{width: 450, paddingLeft: 0}}>\n                            <div>\n                              <svg width=\"450\" height=\"145\">\n\n                                  <text x={280} y={15} style={{fontSize: '16px'}}> Hispanic</text>                    \n                                  <text x={280} y={35} style={{fontSize: '16px'}}> American Native</text>                    \n                                  <text x={280} y={55} style={{fontSize: '16px'}}> Asian</text>                    \n                                  <text x={280} y={75} style={{fontSize: '16px'}}> African American</text>                    \n                                  <text x={280} y={95} style={{fontSize: '16px'}}> White</text>                    \n\n\n                                  {_.map(pieChartRace, (color, i) => {\n                                    return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                                  })} \n                              </svg>\n                            </div>\n                          </Grid.Column>\n                      </Grid.Row> */}\n                      </Grid>\n                      {/* <toPrint ref={componentRef} />\n                    <button onClick={() => exportComponentAsPNG(componentRef)}>\n                              Export As PNG\n                            </button> */}\n\n                    \n                  </Grid.Column>\n                  <Grid.Column style = {{width: 450}}>\n                    <div style={{paddingTop: 0, paddingLeft: 80}}>\n                      <Header.Subheader style={{width: 430, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:0, paddingLeft: 6}}>\n                        <center> <b style= {{fontSize: \"22px\", paddingLeft: 0}}> Under-vaccinated Populations</b> </center> \n                        \n                        <p style = {{paddingLeft: 40}}>\n                          <ul>\n                            \n                          {nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['White'][0]['percentPop'] && <li>\n                            {nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['White'][0]['percentPop'] ? \n                            \" White Americans make up \" + (nationalDemog['vaccineRace'][0]['White'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\" \n                          :\n                            \"\"} </li>}\n\n                            {nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop'] && <li>\n                              {nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop'] ? \n                            \" Hispanic Americans make up \" + (nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\" \n                          :\n                            \"\"}</li>}\n\n                          {nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['African American'][0]['percentPop'] && <li> \n                            {nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['African American'][0]['percentPop'] ? \n                            \" African Americans make up \" + (nationalDemog['vaccineRace'][0]['African American'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                          :\n                            \"\"} </li>}\n\n                          {nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop'] && <li>\n                            {nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop'] ? \n                            \" Asian Americans make up \" + (nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                          :\n                            \"\"}</li>}\n\n                          {nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop'] && <li>\n                            {nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop'] ? \n                            \" Native Americans make up \" + (nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                          :\n                            \"\"} </li>}\n\n                          {nationalDemog['vaccineRace'][0]['NHPI'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['NHPI'][0]['percentPop'] && <li>\n                            {nationalDemog['vaccineRace'][0]['NHPI'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['NHPI'][0]['percentPop'] ? \n                            \" Native Hawaiians/Pacific Islanders make up \" + (nationalDemog['vaccineRace'][0]['NHPI'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                            (nationalDemog['vaccineRace'][0]['NHPI'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                          :\n                            \"\"} </li>}\n                          \n                          \n                          {pctVacPopDisp >= 1 && <li>\n                            {(pctVacPopDisp) < 1 ? \"\": \" \" + finalStr + \" make up a larger proportion of those fully vaccinated than of the population.\"}\n                          </li>}\n\n                          </ul>\n                        </p>\n                          \n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n                 \n              </Grid>\n\n              <div style = {{height: 25}}> </div>\n              <Grid>\n                <Grid.Column>\n                  <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '29px', paddingLeft: 20}}> COVID-19 Vaccination by State </Divider>\n                  \n                </Grid.Column>\n              </Grid>\n\n              <Grid>\n\n                <Grid.Row columns = {2} style = {{width: 1260}}>\n\n                  <Grid.Column style = {{width: 1000, paddingLeft: 30, paddingRight: 50}}>\n\n                        <div style = {{paddingBottom: 0, width: 1000}}>\n                          <Header.Content style = {{paddingLeft: 20, fontSize: \"22px\"}}>\n                            <a style = {{color: \"#004071\"}}> Click on a state. </a>\n                            <br/>\n                            <br/>\n                            {/* <b> { selectedName? selectedName : \"% of population partially vaccinated (one dose received)\"}</b> */}\n                          </Header.Content>\n\n                          <Dropdown\n                          style={{background: '#fff', \n                                  fontSize: \"19px\",\n                                  fontWeight: 400, \n                                  theme: '#000000',\n                                  width: '530px',\n                                  top: '0px',\n                                  left: '15px',\n                                  text: \"Select\",\n                                  borderTop: '0.5px solid #bdbfc1',\n                                  borderLeft: '0.5px solid #bdbfc1',\n                                  borderRight: '0.5px solid #bdbfc1', \n                                  borderBottom: '0.5px solid #bdbfc1',\n                                  borderRadius: 0,\n                                  minHeight: '1.0em',\n                                  paddingBottom: '0.5em',\n                                  paddingLeft: '1em'}}\n                          text= { selectedName? selectedName : \"% of population partially vaccinated (one dose received)\"}\n                          pointing = 'top'\n                          search\n                          selection\n                          options={vaccineOptions}\n                          onChange={(e, { value}) => {\n                            setFully(value);\n                            setSelectedName(vaccineList[value]);\n                            \n                                    \n                          }}\n                        />\n                        <br/>\n                          <svg width=\"460\" height=\"80\" >\n                            {/* <text x={280} y={59} style={{fontSize: '1.5em'}}> Click on a state</text> */}\n                            \n                            {/* {_.map(legendSplit, (splitpoint, i) => {\n                              if(legendSplit[i] < 1){\n                                return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(1)}</text>                    \n                              }else if(legendSplit[i] > 999999){\n                                return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                              }else if(legendSplit[i] > 999){\n                                return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplit[i]/1000).toFixed(0) + \"K\"}</text>                    \n                              }\n                              return <text key = {i} x={40 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplit[i].toFixed(0)}</text>                    \n                            })}  */}\n                            <text x={20} y={35} style={{fontSize: '0.7em'}}>{legendMin + \"%\"}</text>\n                            <text x={140} y={35} style={{fontSize: '0.7em'}}>{legendMax + \"%\"}</text>\n\n\n                            {_.map(colorPalette, (color, i) => {\n                              return <rect key={i} x={20+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                            })} \n\n\n                            <text x={20} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                            <text x={20+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n                          </svg>\n                        </div>\n\n                        <ComposableMap \n                          projection=\"geoAlbersUsa\" \n                          data-tip=\"\"\n                          width={1100} \n                          height={450}\n                          strokeWidth= {0.1}\n                          stroke= 'black'\n                          offsetX = {-375}\n                          projectionConfig={{scale: 750}}\n\n\n                          >\n                          <Geographies geography={geoUrl}>\n                            {({ geographies }) => \n                              <svg>\n                                {setStateFips(fips)}\n                                {geographies.map(geo => (\n                                  <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    onMouseEnter={()=>{\n                                      const fips = geo.id.substring(0,2);\n                                      const configMatched = configs.find(s => s.fips === fips);\n                                      setFips(fips);\n                                      setHoverName(configMatched.name)\n\n                                    }}\n                                    \n                                    onMouseLeave={()=>{\n\n                                      setTooltipContent(\"\");\n                                      setFips(\"_nation\");\n                                      setHoverName(\"The United States\");\n                                    }}\n\n                                    onClick={()=>{\n                                      const configMatched = configs.find(s => s.fips === fips);\n                                      setStateName(configMatched.name); \n                                      setStateMapFips(geo.id.substring(0,2));\n\n                                      setClicked(true);\n                                      setShowState(true);\n\n                                    }}\n\n                                    \n                                    fill={stateMapFips===geo.id.substring(0,2) || fips===geo.id.substring(0,2)?colorHighlight:\n                                    ((colorScale && vaccineData[geo.id] && (vaccineData[geo.id][fully]) > 0)?\n                                        colorScale[vaccineData[geo.id][fully]]: \n                                        (colorScale && vaccineData[geo.id] && vaccineData[geo.id][fully] === 0)?\n                                          '#e1dce2':'#FFFFFF')}\n                                  />\n\n\n                                ))}\n\n                                {geographies.map(geo => {\n                                              const centroid = geoCentroid(geo);\n                                              const cur = allStates.find(s => s.val === geo.id);\n                                              return (\n                                                <g key={geo.rsmKey + \"-name\"}>\n                                                  {cur &&\n                                                    centroid[0] > -160 &&\n                                                    centroid[0] < -67 &&\n                                                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                                                      <Marker coordinates={centroid}>\n                                                        <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                                                          {cur.id}\n                                                        </text>\n                                                      </Marker>\n                                                    ) : (\n                                                      <Annotation\n                                                        subject={centroid}\n                                                        dx={offsets[cur.id][0]}\n                                                        dy={offsets[cur.id][1]}\n                                                      >\n                                                        <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                                                          {cur.id}\n                                                        </text>\n                                                      </Annotation>\n                                                    ))}\n                                                </g>\n                                              );\n                                            })}\n                              </svg>\n                            }\n                          </Geographies>\n                          \n\n                        </ComposableMap>\n                    \n                        <Grid>\n                          <Grid.Row>\n                            {stateFips && <Accordion id = \"burden\" style = {{paddingTop: 10, paddingLeft: 14}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,icon: 'dropdown',\n                                    },\n                                    content: {\n                                        content: (\n                                          <Header.Content style={{fontWeight: 300, paddingTop: 7, paddingLeft: 0,fontSize: \"19px\", width: 560}}>\n                                            Data are from the <a href = 'https://covid.cdc.gov/covid-data-tracker/#vaccinations' target=\"_blank\" rel=\"noopener noreferrer\">CDC COVID Data Tracker</a>, last updated on {vaccineDate} <br/>\n\n                                            <b><em> {vaxVarMap[\"Doses_Distributed\"].name} </em></b> {vaxVarMap[\"Doses_Distributed\"].definition} <br/>\n                                            <b><em> {vaxVarMap[\"Administered_Dose1\"].name} </em></b> {vaxVarMap[\"Administered_Dose1\"].definition} <br/>\n                                            <b><em> {vaxVarMap[\"Series_Complete_Yes\"].name} </em></b> {vaxVarMap[\"Series_Complete_Yes\"].definition} <br/>\n\n                                            <b><em> Newly distributed per 100,000 </em></b> is the number of vaccine doses per 100,000 that have been \n                                            distributed to facilities across the United States by the federal government. \n                                            Newly distributed per 100,000 for the US was last updated on {vaccineData[\"_nation\"]['distDate'].substring(5,7) + \"/\" + vaccineData[\"_nation\"]['distDate'].substring(8,10)}. \n                                            For {stateName === \"_nation\" ? \"SELECT STATE\": stateName}, the most recent date of new distribution was on {vaccineData[stateMapFips]['distDate'].substring(5,7) + \"/\" + vaccineData[stateMapFips]['distDate'].substring(8,10)}. <br/>\n                                            \n                                            <b><em> {vaxVarMap[\"percentVaccinatedDose1\"].name} </em></b> {vaxVarMap[\"percentVaccinatedDose1\"].definition} <br/>\n                                            <b><em> {vaxVarMap[\"Series_Complete_Pop_Pct\"].name} </em></b> {vaxVarMap[\"Series_Complete_Pop_Pct\"].definition} <br/>\n\n                                          </Header.Content>\n                                      ),\n                                    },\n                                }\n                              ]\n                            } /> }\n                          </Grid.Row>\n                        </Grid>\n                  </Grid.Column>\n                  \n                  <Grid.Column>\n                    <div style = {{width: 425}}>\n                      <TabExampleBasic data = {vaccineData} fips = {stateMapFips} stateName = {stateName} abbrev = {usAbbrev} date = {vaccineDate} demogData = {nationalDemog} VaccineData = {stateVaccineData}/>\n\n                    </div>\n                    \n                    \n                    <Grid>\n                          <Grid.Row>\n                            {stateFips && <Accordion id = \"burden\" style = {{paddingTop: 56, paddingLeft: 14}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,icon: 'dropdown',\n                                    },\n                                    content: {\n                                        content: (\n                                          <Header.Content style={{fontWeight: 300, paddingTop: 7, paddingLeft: 0,fontSize: \"19px\", width: 410}}>\n                                              <Header.Subheader style={{width: 410, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:0, paddingLeft: 0}}>\n                                                {/* <b style= {{fontSize: \"22px\", paddingLeft: 8}}> Under-vaccinated Populations</b> \n                                                \n                                                <p style = {{paddingLeft: 15}}>\n                                                  <ul>\n                                                    \n                                                  {nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['White'][0]['percentPop'] && <li>\n                                                    {nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['White'][0]['percentPop'] ? \n                                                    \" White Americans make up \" + (nationalDemog['vaccineRace'][0]['White'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                                                    (nationalDemog['vaccineRace'][0]['White'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\" \n                                                  :\n                                                    \"\"} </li>}\n\n                                                    {nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop'] && <li>\n                                                      {nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop'] ? \n                                                    \" Hispanic Americans make up \" + (nationalDemog['vaccineRace'][0]['Hispanic'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                                                    (nationalDemog['vaccineRace'][0]['Hispanic'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\" \n                                                  :\n                                                    \"\"}</li>}\n\n                                                  {nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['African American'][0]['percentPop'] && <li> \n                                                    {nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['African American'][0]['percentPop'] ? \n                                                    \" African Americans make up \" + (nationalDemog['vaccineRace'][0]['African American'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                                                    (nationalDemog['vaccineRace'][0]['African American'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                                                  :\n                                                    \"\"} </li>}\n\n                                                  {nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop'] && <li>\n                                                    {nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop'] ? \n                                                    \" Asian Americans make up \" + (nationalDemog['vaccineRace'][0]['Asian'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                                                    (nationalDemog['vaccineRace'][0]['Asian'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                                                  :\n                                                    \"\"}</li>}\n\n                                                  {nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop'] && <li>\n                                                    {nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2'] < nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop'] ? \n                                                    \" Native Americans make up \" + (nationalDemog['vaccineRace'][0]['American Native'][0]['percentPop']).toFixed(0) + \"% of the population, but only \" + \n                                                    (nationalDemog['vaccineRace'][0]['American Native'][0]['pctAdmDose2']).toFixed(0) + \"% of the fully vaccinated.\"\n                                                  :\n                                                    \"\"} </li>}\n                                                  \n                                                  \n                                                  {pctVacPopDisp >= 1 && <li>\n                                                    {(pctVacPopDisp) < 1 ? \"\": \" \" + finalStr + \" make up a larger proportion of those fully vaccinated than of the population.\"}\n                                                  </li>}\n\n                                                  </ul>\n                                                </p> */}\n                                                  \n                                              </Header.Subheader>\n                                          </Header.Content>\n                                      ),\n                                    },\n                                }\n                              ]\n                            } /> }\n                          </Grid.Row>\n                        </Grid>\n                  </Grid.Column>\n                  \n                  \n                </Grid.Row> \n                \n              </Grid>\n              <div style = {{height: 55}}> </div>\n\n              <Grid>\n                <Grid.Column>\n                <Divider horizontal style={{fontWeight: 400, width: 1000, color: 'black', fontSize: '22pt', paddingLeft: 20, paddingBottom: 15}}> COVID-19 Burden in {stateName} </Divider>\n\n                </Grid.Column>\n              </Grid>\n\n              <Grid.Row columns = {2} style = {{width: 1000}}>\n\n                \n                <Grid.Column style = {{width: 630}}>\n                  <Grid>\n                    \n\n                  <Grid.Row columns = {2} style = {{width: 630, paddingLeft: 20}}>\n                    <Grid.Column style = {{width: 240, paddingLeft: 15}}> \n\n                      <div>\n                      {stateMapFips &&\n                        <VictoryChart \n                                    minDomain={{ x: stateMapFips? allTS[stateMapFips][allTS[stateMapFips].length-15].t : allTS[\"13\"][allTS[\"13\"].length-15].t}}\n                                    maxDomain = {{y: stateMapFips? getMaxRange(allTS[stateMapFips], \"caseRateMean\", (allTS[stateMapFips].length-15)).caseRateMean*1.05 : getMaxRange(allTS[\"13\"], \"caseRateMean\", (allTS[\"13\"].length-15)).caseRateMean*1.05}}                            \n                                    width={220}\n                                    height={180}\n                                    padding={{marginLeft: 0, right: -1, top: 150, bottom: -0.9}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryAxis\n                                      tickValues={stateMapFips ? \n                                        [\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3)*2 - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3) - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length-1].t]\n                                        :\n                                      [\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3)*2 - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3) - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length-1].t]}                         \n                                      style={{grid:{background: \"#ccdee8\"}, tickLabels: {fontSize: 10}}} \n                                      tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                    <VictoryLine data={stateMapFips && allTS[stateMapFips] ? allTS[stateMapFips] : allTS[\"13\"]}\n                                        x='t' y='caseRateMean'\n                                        />\n\n                                    </VictoryGroup>\n                                    <VictoryArea\n                                      style={{ data: {fill: \"#00BFFF\" , fillOpacity: 0.1} }}\n                                      data={stateMapFips && allTS[stateMapFips]? allTS[stateMapFips] : allTS[\"13\"]}\n                                      x= 't' y = 'caseRateMean'\n\n                                    />\n\n                                    <VictoryLabel text= {stateMapFips ? numberWithCommas((allTS[stateMapFips][allTS[stateMapFips].length - 1].dailyCases).toFixed(0)) : numberWithCommas((allTS[\"13\"][allTS[\"13\"].length - 1].dailyCases).toFixed(0))} x={80} y={80} textAnchor=\"middle\" style={{fontSize: 40, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) + \"%\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? ((allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0)).substring(1) + \"%\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) + \"%\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? ((allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0)).substring(1) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) + \"%\"} x={197} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"↑\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"↓\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"↑\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"↓\": \"\"} \n                                                        \n\n                                                        x={160} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'\n\n                                                        , fill: stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"#32CD32\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyCases).toFixed(0) < 0? \"#32CD32\": \"\"\n\n                                                      }}/>\n\n                                    <VictoryLabel text= {\"14-day\"}  x={197} y={100} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"change\"}  x={197} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"Daily Cases\"}  x={110} y={20} textAnchor=\"middle\" style={{fontSize: \"22px\", fontFamily: 'lato'}}/>\n\n                                    \n                        </VictoryChart>}\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column style = {{width: 240, paddingLeft: 55}}> \n                      <div>\n                      {stateMapFips && \n                        <VictoryChart theme={VictoryTheme.material}\n                                    minDomain={{ x: stateMapFips? allTS[stateMapFips][allTS[stateMapFips].length-15].t: allTS[\"13\"][allTS[\"13\"].length-15].t}}\n                                    maxDomain = {{y: stateMapFips? getMax(allTS[stateMapFips], \"mortalityMean\").mortalityMean + 0.8: getMax(allTS[\"13\"], \"mortalityMean\").mortalityMean + 0.8}}                            \n                                    width={220}\n                                    height={180}       \n                                    padding={{left: 0, right: -1, top: 150, bottom: -0.9}}\n                                    containerComponent={<VictoryContainer responsive={false}/>}>\n                                    \n                                    <VictoryAxis\n                                      tickValues={stateMapFips ? \n                                        [\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3)*2 - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length - Math.round(allTS[stateMapFips].length/3) - 1].t,\n                                        allTS[stateMapFips][allTS[stateMapFips].length-1].t]\n                                        :\n                                      [\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3)*2 - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length - Math.round(allTS[\"13\"].length/3) - 1].t,\n                                        allTS[\"13\"][allTS[\"13\"].length-1].t]}                        \n                                      style={{tickLabels: {fontSize: 10}}} \n                                      tickFormat={(t)=> new Date(t*1000).toLocaleDateString()}/>\n                                    \n                                    <VictoryGroup \n                                      colorScale={[stateColor]}\n                                    >\n\n                                      <VictoryLine data={stateMapFips && allTS[stateMapFips] ? allTS[stateMapFips] : allTS[\"13\"]}\n                                        x='t' y='mortalityMean'\n                                        />\n\n                                    </VictoryGroup>\n\n                                    <VictoryArea\n                                      style={{ data: { fill: \"#00BFFF\", stroke: \"#00BFFF\", fillOpacity: 0.1} }}\n                                      data={stateMapFips && allTS[stateMapFips]? allTS[stateMapFips] : allTS[\"13\"]}\n                                      x= 't' y = 'mortalityMean'\n\n                                    />\n\n                                    \n                                    <VictoryLabel text= {stateMapFips ? numberWithCommas((allTS[stateMapFips][allTS[stateMapFips].length - 1].dailyMortality).toFixed(0)) : numberWithCommas((allTS[\"13\"][allTS[\"13\"].length - 1].dailyMortality).toFixed(0))} x={80} y={80} textAnchor=\"middle\" style={{fontSize: 40, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    \n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) + \"%\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? ((allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)).substring(1) + \"%\": \n                                                        \"0%\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) + \"%\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) < 0? ((allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)).substring(1) + \"%\": \n                                                        \"0%\"} x={197} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato', fill: \"#004071\"}}/>\n\n                                    <VictoryLabel text= {stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"↑\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? \"↓\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"↑\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)< 0?\"↓\": \"\"} \n\n                                                        x={160} y={80} textAnchor=\"middle\" style={{fontSize: 24, fontFamily: 'lato'\n\n                                                        , fill: stateMapFips ? \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[stateMapFips][allTS[stateMapFips].length - 1].percent14dayDailyDeaths).toFixed(0)< 0? \"#32CD32\": \"\"\n                                                        : \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0) > 0? \"#FF0000\": \n                                                        (allTS[\"13\"][allTS[\"13\"].length - 1].percent14dayDailyDeaths).toFixed(0)< 0?\"#32CD32\": \"\"}}/>\n\n                                    <VictoryLabel text= {\"14-day\"}  x={197} y={100} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"change\"}  x={197} y={110} textAnchor=\"middle\" style={{fontSize: 12, fontFamily: 'lato', fill: \"#004071\"}}/>\n                                    <VictoryLabel text= {\"Daily Deaths\"}  x={110} y={20} textAnchor=\"middle\" style={{fontSize: \"22px\", fontFamily: 'lato'}}/>\n\n                        </VictoryChart>}\n                      </div>\n                    \n                    </Grid.Column>\n                    \n                    \n                  </Grid.Row>\n                  <div style = {{height: 60}}>\n                    {stateFips && <Accordion style = {{paddingTop: 10, paddingLeft: 17}} defaultActiveIndex={1} panels={[\n                          {\n                              key: 'acquire-dog',\n                              title: {\n                                  content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n                                      <Header.Content style={{fontWeight: 300, paddingTop: 0, paddingLeft: 5,fontSize: \"19px\", width: 460}}>\n                                        *14-day change trends use 7-day averages.\n                                        <br/>\n                                        <b><em> {varMap[\"dailycases\"].name} </em></b> {varMap[\"dailycases\"].definition}\n                                        <br/> \n                                        <b><em> {varMap[\"dailydeaths\"].name} </em></b> {varMap[\"dailydeaths\"].definition} \n                                        <br/>\n                                        <br/>\n                                        \n\n\n\n                                      </Header.Content>\n                                  ),\n                                },\n                            }\n                          ]\n                        } /> }\n                  </div>\n\n                  <Grid.Row>\n                    <Grid.Column style = {{paddingLeft: 20, paddingTop: 101}}>\n                      <Header as='h2' style={{fontWeight: 400, paddingTop: 10}}>\n                        <Header.Content style={{width : 500, fontSize: \"22px\", textAlign: \"center\"}}>\n                          Disparities in COVID-19 Mortality <br/> <b>{stateMapFips !== \"_nation\" ? stateName : \"Nation\"}</b>\n                          \n                        </Header.Content>\n                      </Header>\n\n                      {stateMapFips && stateMapFips === \"_nation\" && <div style = {{marginTop: 13}}>\n                              <Header.Content x={0} y={20} style={{fontSize: '19px', paddingLeft: 130, fontWeight: 400, width: 400}}> Deaths by Race & Ethnicity</Header.Content>\n                      </div>}\n\n                      {stateMapFips && stateMapFips === \"_nation\" && <div style={{paddingLeft: \"0em\", paddingRight: \"2em\"}}>\n\n                      <VictoryChart\n                                theme={VictoryTheme.material}\n                                width={400}\n                                height={160}\n                                domainPadding={20}\n                                minDomain={{y: props.ylog?1:0}}\n                                padding={{left: 164, right: 35, top: 12, bottom: 1}}\n                                style = {{fontSize: \"19px\"}}\n                                containerComponent={<VictoryContainer responsive={false}/>}\n                              >\n                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                <VictoryBar\n                                  horizontal\n                                  barRatio={0.45}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                  data={[\n                                    {key: nationalDemog['race'][0]['American Native'][0]['demogLabel'], 'value': nationalDemog['race'][0]['American Native'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['Asian'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Asian'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['Hispanic'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Hispanic'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['African American'][0]['demogLabel'], 'value': nationalDemog['race'][0]['African American'][0]['deathrate']},\n                                    {key: nationalDemog['race'][0]['White'][0]['demogLabel'], 'value': nationalDemog['race'][0]['White'][0]['deathrate']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: \"#004071\"\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n                              </VictoryChart>\n                              <Header.Content style = {{width: 420}}>\n                                  <Header.Content style={{ fontWeight: 300, paddingLeft: 150, paddingTop: 8, paddingBottom:34, fontSize: \"19px\", lineHeight: \"18pt\"}}>\n                                    <b>Deaths per 100K residents</b>\n                                  </Header.Content>\n                              </Header.Content>\n                    </div>}\n                    \n                          {stateMapFips !== \"_nation\" && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" &&\n                          <Grid>\n                            <Grid.Row columns = {2} style = {{height: 273, paddingBottom: 0}}>\n                              <Grid.Column style = {{paddingLeft: 20}}> \n                                {!raceData[stateMapFips][\"Non-Hispanic African American\"]  && stateMapFips !== \"02\"  && \n                                  <div style = {{marginTop: 10, width: 250}}>\n                                    <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 58, fontWeight: 400}}> Deaths by Race</Header.Content>\n                                  </div>\n                                }\n                                {stateMapFips && !raceData[stateMapFips][\"Non-Hispanic African American\"] && stateMapFips !== \"38\"  && stateMapFips !== \"02\" &&\n                                  <VictoryChart\n                                                theme = {VictoryTheme.material}\n                                                width = {250}\n                                                height = {40 * (( !!raceData[stateMapFips][\"Asian Alone\"] && raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"Asian Alone\"][0][\"deaths\"] > 30 && raceData[stateMapFips][\"Asian Alone\"][0][\"percentPop\"] >= 1 ? 1: 0) + \n                                                (!!raceData[stateMapFips][\"American Natives Alone\"] && raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"American Natives Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"American Natives Alone\"][0][\"percentPop\"] >= 1 ? 1 : 0) + \n                                                (!!raceData[stateMapFips][\"African American Alone\"] && raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"African American Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"African American Alone\"][0][\"percentPop\"] >= 1 ? 1 : 0) + \n                                                (!!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"White Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"White Alone\"][0][\"percentPop\"] >= 1 ?1:0))}\n                                                domainPadding={20}\n                                                minDomain={{y: props.ylog?1:0}}\n                                                padding={{left: 100, right: 65, top: 12, bottom: 1}}\n                                                style = {{fontSize: \"14pt\"}}\n                                                containerComponent={<VictoryContainer responsive={false}/>}\n                                              >\n\n                                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                                <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                                <VictoryGroup>\n                                                \n                                                \n\n                                                {\"American Natives Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"American Natives Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"American Natives Alone\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"American\\n Natives\", 'value': raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"American Natives Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {\"Asian Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'] >= 0 && raceData[stateMapFips][\"Asian Alone\"][0][\"deaths\"] > 30 && raceData[stateMapFips][\"Asian Alone\"][0][\"percentPop\"] >= 1 && \n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Asian\", 'value': raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"Asian Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n\n                                                {\"African American Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'] >= 0  && raceData[stateMapFips][\"African American Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"African American Alone\"][0][\"percentPop\"] >= 1 && \n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"African\\n American\", 'value': raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"African American Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {\"White Alone\" in raceData[stateMapFips] && raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'] >= 0  && raceData[stateMapFips][\"White Alone\"][0]['deaths'] > 30 && raceData[stateMapFips][\"White Alone\"][0][\"percentPop\"] >= 1 && \n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"White\", 'value': raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'], 'label': numberWithCommas(raceData[stateMapFips][\"White Alone\"][0]['deathrateRace'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                \n                                                </VictoryGroup>\n                                  </VictoryChart>\n                                }\n                                {!raceData[stateMapFips][\"Non-Hispanic African American\"] && stateMapFips !== \"38\" && stateMapFips !== \"02\" &&\n                                  <div style = {{marginTop: 10, textAlign: \"center\", width: 250}}>\n                                    <Header.Content x={15} y={20} style={{fontSize: '14pt', paddingLeft: 15, fontWeight: 400}}> Deaths per 100K <br/> residents</Header.Content>\n                                  </div>\n                                }\n\n                                {stateMapFips === \"02\" &&\n                                  <div style = {{marginTop: 10, width: 250}}>\n                                    <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 35, fontWeight: 400}}> Deaths by Race</text>\n\n                                    <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 0, fontWeight: 400}}> <br/> <br/> <br/> \n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    None Reported</text>\n                                  </div>\n                                }\n\n                              </Grid.Column>\n                              <Grid.Column style = {{paddingLeft: 50}}> \n                                {!!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" &&\n                                  <div style = {{marginTop: 10}}>\n                                    <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 60, fontWeight: 400, width: 250}}> Deaths by Ethnicity</Header.Content>\n                                    {!(stateMapFips && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" && !(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] ) ))\n                                        && \n                                      <center> <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 20, fontWeight: 400, width: 250}}> <br/> <br/> None Reported</Header.Content> </center>\n\n                                  }\n                                  </div>\n                                }\n                                {stateMapFips && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" && !(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] ) ) && \n                                  <VictoryChart\n                                                theme = {VictoryTheme.material}\n                                                width = {250}\n                                                height = {!!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"Non Hispanic\"] ?  81 : 3 * (!!raceData[stateMapFips][\"Hispanic\"] + !!raceData[stateMapFips][\"Non Hispanic\"] + !!raceData[stateMapFips][\"Non-Hispanic African American\"] + !!raceData[stateMapFips][\"Non-Hispanic American Natives\"] + !!raceData[stateMapFips][\"Non-Hispanic Asian\"] + !!raceData[stateMapFips][\"Non-Hispanic White\"] )}\n                                                domainPadding={20}\n                                                minDomain={{y: props.ylog?1:0}}\n                                                padding={{left: 130, right: 35, top: !!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"Non Hispanic\"] ? 13 : 10, bottom: 1}}\n                                                style = {{fontSize: \"14pt\"}}\n                                                containerComponent={<VictoryContainer responsive={false}/>}\n                                              >\n\n                                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                                <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                                \n                                                  <VictoryGroup>\n\n\n                                                  {!!raceData[stateMapFips][\"Non-Hispanic American Natives\"] && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"American\\n Natives\", 'value': raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  {!!raceData[stateMapFips][\"Non-Hispanic Asian\"] && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic Asian\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"Asian\", 'value': raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n                                                  \n\n                                                  {!!raceData[stateMapFips][\"Non Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Non Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non Hispanic\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      barRatio={0.1}\n                                                      horizontal\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"Non Hispanic\", 'value': raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  {(!!raceData[stateMapFips][\"Hispanic\"] || (!!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Hispanic\"][0][\"percentPop\"] >= 1))&&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      barRatio={0.1}\n                                                      horizontal\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"Hispanic\", 'value': raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n                                                  \n                                                \n                                                  {!!raceData[stateMapFips][\"Non-Hispanic African American\"] && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic African American\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"African\\n American\", 'value': raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  \n                                                  {!!raceData[stateMapFips][\"Non-Hispanic White\"] && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic White\"][0][\"percentPop\"] >= 1 &&\n                                                    <VictoryBar\n                                                      barWidth= {10}\n                                                      horizontal\n                                                      barRatio={0.7}\n                                                      labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                      data={[\n\n                                                            {key: \"White\", 'value': raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'])}\n\n                                                      ]}\n                                                      labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                      style={{\n                                                        data: {\n                                                          fill: \"#004071\"\n                                                        }\n                                                      }}\n                                                      x=\"key\"\n                                                      y=\"value\"\n                                                    />\n                                                  }\n\n                                                  \n                                                  </VictoryGroup>\n                                          \n\n                                  </VictoryChart>\n                                }\n                                {stateMapFips !== \"_nation\" && !!raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" && !(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] < 0 || (!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] ) ) && \n                                  <div style = {{marginTop: 10, textAlign: \"center\", width: 250}}>\n                                    <Header.Content style={{fontSize: '14pt', paddingLeft: 35, fontWeight: 400}}> Deaths per 100K <br/> &nbsp;&nbsp;&nbsp;&nbsp;residents</Header.Content>\n                                  </div>\n                                }\n\n                                \n                              </Grid.Column>\n                            </Grid.Row>\n                          </Grid>\n                          }\n\n                          {stateMapFips !== \"_nation\" && (!!raceData[stateMapFips][\"Non-Hispanic African American\"] || !!raceData[stateMapFips][\"Non-Hispanic White\"] ) && stateMapFips !== \"38\" &&\n                          <Grid.Row columns = {1}>\n                            <Grid.Column style = {{ marginLeft : 0, paddingBottom: (13+ 2 * (!raceData[stateMapFips][\"Hispanic\"] + !raceData[stateMapFips][\"Non Hispanic\"] + !raceData[stateMapFips][\"Non-Hispanic African American\"] + !raceData[stateMapFips][\"Non-Hispanic American Natives\"] + !raceData[stateMapFips][\"Non-Hispanic Asian\"] + !raceData[stateMapFips][\"Non-Hispanic White\"] ))}}> \n                              {stateMapFips && !raceData[stateMapFips][\"White Alone\"] &&\n                                <div style = {{marginTop:10, width: 400}}>\n                                  <Header.Content x={0} y={20} style={{fontSize: '14pt', paddingLeft: 150, fontWeight: 400}}> Deaths by Race & Ethnicity</Header.Content>\n                                </div>\n                              }\n                              {stateMapFips && !raceData[stateMapFips][\"White Alone\"] && stateMapFips !== \"38\" &&\n                              <div style={{paddingLeft: \"1em\", paddingRight: \"0em\", width: 550}}>\n                                <VictoryChart\n                                              theme = {VictoryTheme.material}\n                                              width = {400}\n                                              height = {32 * (!!raceData[stateMapFips][\"Hispanic\"] + !!raceData[stateMapFips][\"Non Hispanic\"] + !!raceData[stateMapFips][\"Non-Hispanic African American\"] + !!raceData[stateMapFips][\"Non-Hispanic American Natives\"] + !!raceData[stateMapFips][\"Non-Hispanic Asian\"] + !!raceData[stateMapFips][\"Non-Hispanic White\"] )}\n                                              domainPadding={20}\n                                              minDomain={{y: props.ylog?1:0}}\n                                              padding={{left: 160, right: 35, top: !!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"Non Hispanic\"] ? 12 : 10, bottom: 1}}\n                                              style = {{fontSize: \"14pt\"}}\n                                              containerComponent={<VictoryContainer responsive={false}/>}\n                                            >\n\n                                              <VictoryAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000', fontSize: \"19px\"}, tickLabels: {fontSize: \"19px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                              <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, axis: {stroke: \"#000000\"}, labels: {fill: '#000000'}, tickLabels: {fontSize: \"19px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                                              \n                                                <VictoryGroup>\n\n                                                {!!raceData[stateMapFips][\"Non-Hispanic American Natives\"] && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic American Natives\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"American Natives\", 'value': raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic American Natives\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {!!raceData[stateMapFips][\"Non-Hispanic Asian\"] && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic Asian\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Asian\", 'value': raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic Asian\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {!!raceData[stateMapFips][\"Non Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Non Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non Hispanic\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    barRatio={0.1}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Non Hispanic\", 'value': raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                {(!!raceData[stateMapFips][\"Hispanic\"] || (!!raceData[stateMapFips][\"Hispanic\"] && !!raceData[stateMapFips][\"White Alone\"] && raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'] >= 0  && raceData[stateMapFips][\"Hispanic\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Hispanic\"][0][\"percentPop\"] >= 1 ))&&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    barRatio={0.1}\n                                                    horizontal\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"Hispanic\", 'value': raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Hispanic\"][0]['deathrateEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                } \n                                                \n                                                {!!raceData[stateMapFips][\"Non-Hispanic African American\"] && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'] >= 0  && raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic African American\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"African American\", 'value': raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic African American\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                \n                                                {!!raceData[stateMapFips][\"Non-Hispanic White\"] && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'] >= 0 && raceData[stateMapFips][\"Non-Hispanic White\"][0]['deaths'] > 30 && raceData[stateMapFips][\"Non-Hispanic White\"][0][\"percentPop\"] >= 1 &&\n                                                  <VictoryBar\n                                                    barWidth= {10}\n                                                    horizontal\n                                                    barRatio={0.7}\n                                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                    data={[\n\n                                                          {key: \"White\", 'value': raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'], 'label': numberWithCommas(raceData[stateMapFips][\"Non-Hispanic White\"][0]['deathrateRaceEthnicity'])}\n\n                                                    ]}\n                                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"19px\", fill: \"#000000\" }}/>}\n                                                    style={{\n                                                      data: {\n                                                        fill: \"#004071\"\n                                                      }\n                                                    }}\n                                                    x=\"key\"\n                                                    y=\"value\"\n                                                  />\n                                                }\n\n                                                \n                                                </VictoryGroup>\n                                        \n\n                                </VictoryChart>\n                                </div>\n                              }\n                              {stateMapFips && !raceData[stateMapFips][\"White Alone\"] &&\n                                <div style = {{marginTop: 10, width: 400, paddingBottom: 3}}>\n                                  <Header.Content style={{fontSize: '19px', marginLeft: 150, fontWeight: 400}}> Deaths per 100K residents<br/> \n                                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                  \n                                  \n                                  </Header.Content>\n                                </div>\n                              }\n\n                            </Grid.Column>\n                          </Grid.Row>}\n\n                          {stateMapFips === \"38\" &&\n                            <Grid.Row columns = {1}>\n                            <Grid.Column style = {{ marginLeft : 0, paddingTop: 8, paddingBottom: 87, width: 500}}> \n                                <div style = {{marginTop: 50}}>\n                                  <text x={0} y={20} style={{fontSize: '14pt', paddingLeft: 90, fontWeight: 400}}> Deaths per capita by Race & Ethnicity <br/> <br/> <br/> <br/> </text>\n                                  <text style={{fontSize: '14pt', paddingLeft: 190, fontWeight: 400}}> None Reported</text>\n                                </div>                            \n                            </Grid.Column>\n                          </Grid.Row>\n                          }\n                      <Grid>\n                        <Grid.Row>\n                          {stateMapFips && <Accordion style = {{paddingTop: 30, paddingLeft: 25}}defaultActiveIndex={1} panels={[\n                            {\n                                key: 'acquire-dog',\n                                title: {\n                                    content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                    icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n\n                                      <div style = {{fontSize: \"19px\", paddingLeft: 5}}>\n                                        \n                                        For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n\n                                        {stateMapFips && stateMapFips === \"_nation\" && <Grid.Row style= {{paddingTop: 0, paddingBottom: 25}}> \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, paddingLeft: 0, lineHeight: \"18pt\", width: 450}}>\n                                            The United States reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {nationalDemog['race'][0]['Unknown'][0]['availableDeaths'] + \"%\"} of deaths in the nation.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covid.cdc.gov/covid-data-tracker/#demographics\" target = \"_blank\" rel=\"noopener noreferrer\"> The CDC </a>\n                                            <br/><b>Data as of:</b> {date}, updated every weekday.<br/>\n                                          \n                                          </Header.Content>\n                                        </Grid.Row>}\n\n                                        {stateMapFips && stateMapFips !== \"_nation\" && <Grid.Row style={{top: stateMapFips === \"38\"? -30 : stateMapFips && !raceData[stateMapFips][\"White Alone\"] ? -40 : -30, paddingLeft: 0}}>\n                                        \n\n                                        \n\n                                        {stateMapFips === \"38\" &&\n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} is not reporting deaths by race or ethnicity.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                        {stateMapFips !== \"38\" && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !!raceData[stateMapFips][\"White Alone\"] && (!raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] )\n                                                    && \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} reports deaths by race. The chart shows race groups that constitutes at least 1% of the state population and have 30 or more deaths. Race data are known for {raceData[stateMapFips][\"Race Missing\"][0][\"percentRaceDeaths\"] + \"%\"} of deaths in {stateName}.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                        {stateMapFips !== \"38\"  && !!raceData[stateMapFips][\"White Alone\"] && !!raceData[stateMapFips][\"White Alone\"] && !(!raceData[stateMapFips][\"Hispanic\"] && !raceData[stateMapFips][\"Non Hispanic\"] && !raceData[stateMapFips][\"Non-Hispanic African American\"] && !raceData[stateMapFips][\"Non-Hispanic American Natives\"] && !raceData[stateMapFips][\"Non-Hispanic Asian\"] && !raceData[stateMapFips][\"Non-Hispanic White\"] )\n                                                    && \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} reports deaths by race and ethnicity separately. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race data are known for {raceData[stateMapFips][\"Race Missing\"][0][\"percentRaceDeaths\"] + \"%\"} of deaths while ethnicity data are known for {raceData[stateMapFips][\"Ethnicity Missing\"][0][\"percentEthnicityDeaths\"] + \"%\"} of deaths in {stateName}.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                        {stateMapFips !== \"38\"  && (!!raceData[stateMapFips][\"Non-Hispanic African American\"] || !!raceData[stateMapFips][\"Non-Hispanic White\"] ) && \n                                          <Header.Content style={{fontWeight: 300, fontSize: \"14pt\", paddingTop: 7, lineHeight: \"18pt\", width: 450}}>\n                                            {stateName} reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {raceData[stateMapFips][\"Race & Ethnicity Missing\"][0][\"percentRaceEthnicityDeaths\"] + \"%\"} of deaths in {stateName}.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covidtracking.com/about-data\" target = \"_blank\" rel=\"noopener noreferrer\"> The COVID Tracking Project </a>\n                                            <br/><b>Data as of:</b> 03/07/2021, updated every weekday.<br/>\n                                          \n                                          </Header.Content>}\n\n                                          {!raceData[stateMapFips][\"Non-Hispanic African American\"]  && stateMapFips !== \"02\"  && \n                                              <div style = {{marginTop: 10}}>\n                                              </div>\n                                            }\n\n                                        </Grid.Row>}\n\n                                      </div>\n                                    ),\n                                  },\n                              }\n                          ]\n\n                          } /> }\n                        \n                        </Grid.Row>\n                      </Grid>\n                          \n\n\n                      </Grid.Column>\n                    </Grid.Row>\n                      \n\n                  </Grid>\n                </Grid.Column>\n                <Grid.Column style = {{paddingLeft: 80, width: 630}}>\n                  <div style = {{paddingTop: 10, paddingLeft: 50}}>\n                    <div style = {{paddingTop: 0, width: 500, paddingBottom: 20}}>\n                      <Header.Content x={0} y={20} style={{fontSize: \"22px\", fontWeight: 400}}>Average Daily COVID-19 Cases / 100K </Header.Content>\n                    </div>\n                    <svg width = \"500\" height = \"40\">\n                        <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                        <text x = {35} y = {20} style = {{ fontSize: \"22px\"}}> USA</text>\n                        <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                        <text x = {102} y = {20} style = {{ fontSize: \"22px\"}}> {stateMapFips === \"_nation\" || stateMapFips === \"72\"? \"Select State\":stateName} </text>\n                    </svg>\n                  </div>\n                  <div style = {{width: 500, height: 180}}>\n                  {stateMapFips && <CaseChart data={dataTS} dataState = {dataTS[stateMapFips]} lineColor={[colorPalette[1]]} stateFips = {stateMapFips} \n                                ticks={caseTicks} tickFormatter={caseTickFmt} labelFormatter = {labelTickFmt} var = {\"caserate7dayfig\"}/>\n                          }\n                  </div>\n\n                  <div style = {{paddingTop: 65, paddingLeft: 50}}>\n                    <div style = {{paddingTop: 47, width: 500, paddingBottom: 20}}>\n                      <Header.Content style={{fontSize: \"22px\", fontWeight: 400}}>Average Daily COVID-19 Deaths / 100K </Header.Content>\n                    </div>\n                    <svg width = \"500\" height = \"40\">\n                        <rect x = {20} y = {12} width = \"12\" height = \"2\" style = {{fill: nationColor, strokeWidth:1, stroke: nationColor}}/>\n                        <text x = {35} y = {20} style = {{ fontSize: \"22px\"}}> USA</text>\n                        <rect x = {87} y = {12} width = \"12\" height = \"2\" style = {{fill: stateColor, strokeWidth:1, stroke: stateColor}}/>\n                        <text x = {102} y = {20} style = {{ fontSize: \"22px\"}}> {stateMapFips === \"_nation\" || stateMapFips === \"72\"? \"Select State\":stateName} </text>\n                    </svg>\n                  </div>\n                  <div style = {{width: 500, height: 180}}>\n                  {stateMapFips && <CaseChart data={dataTS} dataState = {dataTS[stateMapFips]} lineColor={[colorPalette[1]]} stateFips = {stateMapFips} \n                                ticks={caseTicks} tickFormatter={caseTickFmt} labelFormatter = {labelTickFmt} var = {\"covidmortality7dayfig\"}/>\n                          }\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n\n                      {stateFips && <Accordion style = {{paddingTop: 85, paddingLeft: 32}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,icon: 'dropdown',\n                                    },\n                                    content: {\n                                        content: (\n                                          <Header.Content style={{fontWeight: 300, paddingTop: 0, paddingLeft: 5,fontSize: \"19px\", width: 510}}>\n                                            <b><em> {varMap[\"caserate7dayfig\"].name} </em></b> {varMap[\"caserate7dayfig\"].definition}\n                                            <br/> \n                                            <b><em> {varMap[\"covidmortality7dayfig\"].name} </em></b> {varMap[\"covidmortality7dayfig\"].definition} \n                                            <br/>\n                                            <br/>\n                                            \n\n\n\n                                          </Header.Content>\n                                      ),\n                                    },\n                                }\n                              ]\n                            } /> }\n                    </Grid.Row>\n                  </Grid>\n                  \n                </Grid.Column>\n\n              </Grid.Row>\n              <div id = \"general\" style = {{height: 40}}></div>\n              <Grid>\n                <Grid.Column style = {{paddingLeft: 33}}>\n                  <Divider style={{width: 980}}/> \n\n                </Grid.Column>\n              </Grid>\n              <Grid >\n                <VaccinesFAQ />\n\n              </Grid>\n\n              {/* <Grid.Row>\n                <Header as='h2' style={{fontWeight: 400, paddingTop: 70}}>\n                  <Header.Content style={{width : 900, fontSize: \"18pt\"}}>\n                    Vaccination FAQs\n                    \n                  </Header.Content>\n                </Header>\n              </Grid.Row> */}\n              </Grid>\n            </Grid.Column>\n          </Grid>\n          \n          <Container id=\"title\" style={{marginTop: '8em', minWidth: '1260px', overFlowX: 'hidden'}}>\n            <Notes />\n          </Container>\n        </Container>\n        <ReactTooltip > \n          <font size=\"+2\"><b >{hoverName}</b> </font> \n          <br/> \n          {/* <b> # received first dose: </b> {numberWithCommas(vaccineData[fips][\"Administered_Dose1\"])}\n          <br/>\n          <b> % received first dose: </b> {numberWithCommas(vaccineData[fips][\"percentVaccinatedDose1\"]) + \"%\"}\n          <br/>\n          <b> # received second dose: </b> {numberWithCommas(vaccineData[fips][\"Series_Complete_Yes\"])}\n          <br/>\n          <b> % received second dose: </b> {numberWithCommas(vaccineData[fips][\"Series_Complete_Pop_Pct\"]) + \"%\"}\n          <br/> */}\n\n          <b>Click to lock.</b> \n\n          <table class=\"ui celled inverted table\" >\n            <thead>\n              <tr>\n                <th># partially vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"AdministeredPartial\"])}</th>\n              </tr>\n              <tr>\n                <th> % partially vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"PercentAdministeredPartial\"]) + \"%\"}</th>\n              </tr>\n              <tr>\n                <th> # fully vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"Series_Complete_Yes\"])}</th>\n              </tr>\n              <tr>\n                <th> % fully vaccinated</th>\n                <th>{numberWithCommas(vaccineData[fips][\"Series_Complete_Pop_Pct\"]) + \"%\"}</th>\n              </tr>\n            </thead>\n          </table>\n        </ReactTooltip>\n      </div>\n    </HEProvider>\n      );\n  } else {\n    return <Loader active inline='centered' />\n  }\n}\n\nexport default USVaccineTracker;","import React, { useEffect, useState, PureComponent, createRef} from 'react'\nimport { Container, Dropdown, Grid, Breadcrumb, Header, Loader, Divider, Table, Icon, Transition, Button, Card} from 'semantic-ui-react'\nimport AppBar from './AppBar';\n// import Geographies from './Geographies';\n// import Geography from './Geography';\n// import ComposableMap from './ComposableMap';\n// import { Marker } from \"react-simple-maps\";\n\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Marker\n  } from \"react-simple-maps\";\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport _, { toArray } from 'lodash';\nimport { scaleQuantile } from \"d3-scale\";\nimport fips2county from './fips2county.json'\nimport stateOptions from \"./stateOptions.json\";\nimport configs from \"./state_config.json\";\n// import vaccine_site_geocoded from \"./vaccine_site_geocoded.json\";\n\nimport { var_option_mapping, CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {HEProvider, useHE} from './HEProvider';\nimport {useStitchAuth} from \"./StitchAuth\";\nimport {LineChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, LabelList, ReferenceArea, ReferenceLine} from \"recharts\";\n\n\n\n\nconst colorPalette = [\n  \"#e1dce2\",\n  \"#d3b6cd\",\n  \"#bf88b5\", \n  \"#af5194\", \n  \"#99528c\", \n  \"#633c70\", \n];\n\nconst countyColor = '#f2a900';\nconst stateColor = \"#778899\";\nconst nationColor = '#b1b3b3';\n\nconst monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\",\n  \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"\n];\n\nfunction numberWithCommas(x) {\n  x = x.toString();\n  var pattern = /(-?\\d+)(\\d{3})/;\n  while (pattern.test(x))\n      x = x.replace(pattern, \"$1,$2\");\n  return x;\n}\n\n\nfunction CountySites(props) {\n  const county = props.county;\n  const siteData = props.siteData;\n  console.log(\"selectedCounty\", county)\n  \n  const CardGroup = _.filter(siteData, {'county':county+' County'}).map((obj, index) =>\n    <Card \n      href={\"https://maps.google.com?q=\"+obj.address}\n      target='_blank'\n      key={index}\n      header={obj.address}\n      // meta='Friend'\n      description='Click to view on Google Map'\n    />\n    )\n  \n  return (\n    <Card.Group style={{width:'280px', paddingTop:'2rem'}}>\n      {CardGroup}\n    </Card.Group>\n  )\n}\n\n\nexport default function VaccineMap(props) {\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();  \n\n  const dropdownRef = createRef();\n  \n  const history = useHistory();\n  //let {stateFips} = useParams();\n  let stateFips = \"13\";\n  let configURL = \"https://raw.githubusercontent.com/deldersveld/topojson/master/countries/us-states/GA-13-georgia-counties.json\"\n  //let zipURL = \"https://api.zip-codes.com/ZipCodesAPI.svc/1.0/GetAllZipCodes?state=GA&country=US&key=DEMOAPIKEY\"\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const [countyTooltipContent, setCountyTooltipContent] = useState(\"\");\n  // const [hoverMarker, setHoverMarker] = useState('');\n  const [countyList, setCountyList] = useState([]);\n  const [countySelected, setCountySelected] = useState([]);\n  const [countyFips, setCountyFips] = useState(\"13121\");\n  const [countyClicked, setCountyClicked] = useState(\"Fulton County\");\n\n  const [zipList, setZipList] = useState([]);\n  const [zipSelected, setZipSelected] = useState();\n\n  const [siteData, setSiteData] = useState();\n  const [countyData, setCountyData] = useState();\n\n  const [mapColor, setMapColor] = useState(0);\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  var transform = [-900,-420];\n  \n  console.log(\"stateFips \", stateFips);\n\n\n  \n\n  //variable list & fips code to county name \n  useEffect(()=>{\n    // fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n    //   .then(x => {\n    //     setVarMap(x);\n    //     // setMetricOptions(_.filter(_.map(x, d=> {\n    //     //   return {key: d.id, value: d.variable, text: d.name, group: d.group};\n    //     // }), d => (d.text !== \"Urban-Rural Status\" && d.group === \"outcomes\")));\n    //   });\n\n    // fetch('/data/rawdata/f2c.json').then(res => res.json())\n    //   .then(x => {\n    //     setCountyOption(_.filter(_.map(x, d=> {\n    //       return {key: d.id, value: d.value, text: d.text, group: d.state};\n    //     }), d => (d.group === stateFips && d.text !== \"Augusta-Richmond County consolidated government\" && d.text !== \"Wrangell city and borough\" && d.text !== \"Zavalla city\")));\n    //   });\n\n    // fetch('data/vaccine_site_geocoded.json',{\n    //   headers : { \n    //     'Content-Type': 'application/json',\n    //     'Accept': 'application/json'\n    //    }\n\n    // }).then(res => res.json())\n    //     .then(x => {\n    //       setSiteData(\n    //         _.map(x, d=> {\n    //           return {name: d.id, address: d.address, coordinates: [d.lon, d.lat]};\n    //         })\n    //       );\n    //   }).then(text => console.log(text))\n    //   .catch(err => {\n    //     // Do something for an error here\n    //     console.log(\"Error Reading data \" + err);\n    //   });\n\n\n      fetch('data/vaccinesite_0301_cleaned.json',{\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }\n  \n      }).then(res => res.json())\n          .then(x => {\n            setSiteData(\n              _.map(x, d=> {\n                return {address: d.Address, county: d.County, zipcode: d.Zipcode2, coordinates: [d.Longitude, d.Latitude]};\n              \n              })\n            );\n        }).then(text => console.log(text))\n        .catch(err => {\n          // Do something for an error here\n          console.log(\"Error Reading data \" + err);\n        });\n\n\n\n  }, []);\n\n  useEffect(() => {\n    setZipList(_.sortBy(_.map(_.uniq(_.map(siteData,'zipcode')), d => {\n      return {key:d, value:d, text:d}\n    }),'key'));\n  },[siteData])\n\n    \n\n  // mongo\n  useEffect(()=>{\n\n    if (isLoggedIn === true){\n        const configMatched = configs.find(s => s.fips === stateFips);\n      \n        if (!configMatched){\n            history.push('/_nation');\n        } else{\n\n          //setConfig(configMatched);\n        //   setTransform(\"translate(\" + configMatched.offsetX + \",\" + configMatched.offsetY + \")\")\n          //setStateName(configMatched.name);\n          console.log(\"transform\", \"translate(\"+(transform[0]-12)+\",\"+transform[1]+\")\")\n          const fetchData = async() => { \n        //     if(stateFips !== \"_nation\"){\n        //       //all static data\n              const staticQ = {tag: \"nationalrawfull\"};\n              const promStatic = await CHED_static.find(staticQ,{projection:{}}).toArray();\n              setCountyData(promStatic[0].data);\n              var varData = _.map(promStatic[0].data,'dailycases').slice(115,274);\n              setLegendMin(Math.min(...varData).toFixed(1));\n              setLegendMax(Math.max(...varData).toFixed(1));\n\n              let scaleMap = {};\n              var scaler = scaleQuantile().domain(varData).range(colorPalette);\n\n              _.forEach(promStatic[0].data, item => {\n                if(parseInt(Object.keys(promStatic[0].data).find(key => promStatic[0].data[key] === item))>=13001 \n                && parseInt(Object.keys(promStatic[0].data).find(key => promStatic[0].data[key] === item))<=14000){\n                  scaleMap[parseInt(Object.keys(promStatic[0].data).find(key => promStatic[0].data[key] === item))] = scaler(item['dailycases'])\n                }\n                \n              });\n              setLegendSplit(scaler.quantiles());\n              console.log('scaleMap',scaleMap)\n              setMapColor(scaleMap);\n              console.log('vardata',promStatic[0].data);\n              // slice(115,274)\n              console.log('index of 13001', Object.keys(promStatic[0].data).indexOf(\"13001\"));\n              console.log('index of 13321', Object.keys(promStatic[0].data).indexOf(\"13321\"));\n              console.log(\"sqr \", mapColor);\n        //       promStatic.forEach(i=> {\n        //         if(i.tag === \"nationalrawfull\"){ //nationalraw\n        //           newDict = i.data;\n        //           setData(newDict); \n        //         }else if(i.tag === \"racedataAll\"){ //race data\n        //           setRaceData(i.racedataAll);       \n        //         }\n        //       });\n                    \n          \n        //       const stateSeriesQ = {tag: \"stateonly\"};\n        //       const promState = await CHED_series.find(stateSeriesQ,{projection:{}}).toArray();\n        //       let stateSeriesDict = promState[0].timeseriesAll[stateFips];\n        //       setStateTS(stateSeriesDict);\n\n        //       }\n              \n\n        //     let seriesDict = {};\n        //     let countyMost = '';\n        //     if( stateFips !== \"_nation\"){\n        //       //Timeseries data\n        //       const seriesQ = { $or: [ { state: \"_n\" } , { state: stateFips } ] }\n        //       const prom = await CHED_series.find(seriesQ, {projection: {}}).toArray();\n        //       _.map(prom, i=> {\n        //         seriesDict[i[Object.keys(i)[4]]] = i[Object.keys(i)[5]];\n        //         return seriesDict;\n        //       });\n        //       _.each(seriesDict, (v, k)=>{\n\n        //       });\n        //     }\n        //     setCountyFips(countyMost);\n        //     if(stateFips !== \"_nation\"){\n        //       setCountyName(fips2county[stateFips+countyMost]);\n        //       //setBarCountyName((fips2county[stateFips+countyMost]).match(/\\S+/)[0]);\n        //     }\n            \n        //     setDataTS(seriesDict);\n          };\n          fetchData();\n        }\n        \n        } else {\n          handleAnonymousLogin();\n        \n      }\n    //}\n  },[isLoggedIn]);\n\n\n\n\n\n\n\n  //set county list\n  useEffect(() => {\n\n    fetch(configURL)\n    .then(res => res.json())\n    .then(x => {\n      setCountyList(_.sortBy(_.map(_.map(x.objects.cb_2015_georgia_county_20m.geometries, 'properties'),\n      d => {\n        return {key:d.GEOID, value:d.NAME, text:d.NAME+' County'}\n      }), 'text'));\n      // setCountyList(_.map(_.map(x.objects.cb_2015_georgia_county_20m.geometries, 'properties'),'NAME'));\n  })\n\n  // fetch(zipURL)\n  // .then(res => res.json())\n  // .then(x => {\n    // setZipList(_.map(x, d => {\n    //   return {key:d, value:d, text:d}\n    // }));\n    // setCountyList(_.map(_.map(x.objects.cb_2015_georgia_county_20m.geometries, 'properties'),'NAME'));\n    // })\n\n    }\n    \n  , []);\n\n  console.log(\"zipList\", zipList)\n\n  // const markers = [\n  //   {\n  //     markerOffset: 0,\n  //     name: \"230\",\n  //     coordinates: [-81.4865, 31.1979]\n  //   },\n  //   { markerOffset: 0, name: \"111\", coordinates: [-83.8838, 32.5556] },\n  //   // { markerOffset: 0, name: \"233\", coordinates: [-83.8788, 32.5647] },\n  //   { markerOffset: 0, name: \"235\", coordinates: [-84.1549, 31.5906] },\n  //   { markerOffset: 0, name: \"115\", coordinates: [-83.2166, 34.3630] }\n  // ];\n\n  const Legend = () => {\n    let MinVal;\n    let MaxVal;\n\n      if(legendMin>999999){\n        MinVal = <text x={37} y={35} style={{fontSize: '0.7em'}}>{(legendMin/1000000).toFixed(1) + \"M\"} </text>;\n      }else if(legendMin>999){\n        MinVal = <text x={37} y={35} style={{fontSize: '0.7em'}}>{(legendMin/1000).toFixed(1) + \"K\"} </text>;\n      }else{\n        MinVal = <text x={37} y={35} style={{fontSize: '0.7em'}}>{legendMin}</text>;\n      }\n  \n      if(legendMax>999999){\n        MaxVal = <text x={80+20 * (colorPalette.length - 1)} y={35} style={{fontSize: '0.7em'}}>{(legendMax/1000000).toFixed(1) + \"M\"} </text>;\n      }else if(legendMax>999){\n        MaxVal = <text x={80+20 * (colorPalette.length - 1)} y={35} style={{fontSize: '0.7em'}}>{(legendMax/1000).toFixed(1) + \"K\"} </text>;\n      }else{\n        MaxVal = <text x={80+20 * (colorPalette.length - 1)} y={35} style={{fontSize: '0.7em'}}>{legendMax}</text>;\n      }\n\n      if(legendMin>999 && legendMax<999999){\n        MinVal = <text x={40} y={35} style={{fontSize: '0.7em'}}>{(legendMin/1000).toFixed(1)} </text>;\n        MaxVal = <text x={80+20 * (colorPalette.length - 1)} y={35} style={{fontSize: '0.7em'}}>{(legendMax/1000).toFixed(1)} </text>;\n      }\n\n      if (Object.keys(mapColor).length>0 && legendMin>999 && legendMax<999999) {    // income\n        return (\n        <svg width=\"280\" height=\"80\" transform=\"translate(-10,-20)\"> \n          {_.map(legendSplit, (splitpoint, i) => {\n            return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {(legendSplit[i]/1000).toFixed(1)}</text>                                      \n          })}\n  \n        {MinVal}\n        {MaxVal}\n          \n          {_.map(colorPalette, (color, i) => {\n            return <rect key={i} x={50+24*i} y={40} width=\"22\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n          })} \n          <text x={30} y={74} style={{fontSize: '0.7em'}}>Low </text>\n          <text x={80+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.7em'}}>High </text>\n  \n          <rect x={200} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n          <text x={225} y={48} style={{fontSize: '0.7em'}}> None </text>\n          <text x={225} y={58} style={{fontSize: '0.7em'}}> Reported </text>\n        </svg>);\n      } else if (Object.keys(mapColor).length>0) {\n        return (\n        <svg width=\"280\" height=\"80\" transform=\"translate(-10,-20)\"> \n          {_.map(legendSplit, (splitpoint, i) => {\n            if(legendSplit[i] < 1){\n              return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {legendSplit[i].toFixed(1)}</text>                    \n            }else if(legendSplit[i] > 999999){\n              return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {(legendSplit[i]/1000000).toFixed(1) + \"M\"}</text>                    \n            }else if(legendSplit[i] > 999){\n              return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {(legendSplit[i]/1000).toFixed(1) + \"K\"}</text>                    \n            }\n            return <text key = {i} x={64 + 24 * (i)} y={35} style={{fontSize: '0.6em'}}> {legendSplit[i].toFixed(1)}</text>                    \n          })}\n  \n        {MinVal}\n        {MaxVal}\n          \n          {_.map(colorPalette, (color, i) => {\n            return <rect key={i} x={50+24*i} y={40} width=\"22\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n          })} \n          <text x={30} y={74} style={{fontSize: '0.7em'}}>Low </text>\n          <text x={80+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.7em'}}>High </text>\n  \n          <rect x={200} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n          <text x={225} y={48} style={{fontSize: '0.7em'}}> None </text>\n          <text x={225} y={58} style={{fontSize: '0.7em'}}> Reported </text>\n        </svg>);\n      } else {\n        return;\n      }\n      \n  };\n\n  console.log('siteData', siteData);\n\n  const CardGroup = _.filter(siteData, function(o) { return countySelected.indexOf(o.county.replace(' County',''))>-1; }).map((obj, index) =>\n  // {'county':countySelected}\n  \n    <Card \n      href={\"https://maps.google.com?q=\"+obj.address}\n      target='_blank'\n      key={index}\n      header={obj.address}\n      meta={obj.county}\n      description='Click to view on Google Map'\n      onMouseEnter={()=>{setTooltipContent([obj.address, obj.county])}}\n      onMouseLeave={()=>{setTooltipContent(\"\")}}\n    />\n    )\n\n    if (siteData && countyList && countyData) {\n    \n    return(\n    <HEProvider>\n    <div>\n      \n        <AppBar menu='vaccinemap'/>\n        <Container style={{marginTop: '10em', minWidth: '1260px'}}>\n\n        <Grid>\n        <Header style={{fontWeight:600,fontSize:\"18pt\", paddingTop:16}}>\n          Vaccination Distribution Sites\n        </Header>\n        <Header.Subheader style={{fontWeight:400, lineHeight: 1.2, fontSize:\"14pt\", paddingTop:16, paddingLeft: '1rem', paddingRight: '1rem'}}>\n          There are {siteData.length} locations in Georgia currently offering at least one COVID-19 vaccine. \n          Before heading to any location for a vaccine, please consult their hours and websites, where available, \n          to make sure you know under what conditions you can receive a COVID-19 vaccine there. You may need an appointment. \n          All locations are current as of {Date().slice(4,10)}.\n        </Header.Subheader>\n        </Grid>\n        <Grid columns={2} style={{paddingTop:'3rem'}}>\n        <Grid.Column width={10}>\n            <ComposableMap projection=\"geoAlbersUsa\" \n            //projectionConfig={{scale:`${config.scale*0.7}`}} \n            projectionConfig={{\n                // rotate: [-100, 20, 0],\n                scale: 4500,\n              }}\n            width={500} \n            height={400} \n            strokeWidth = {0.3}\n            stroke = 'black'\n            data-tip=\"\"\n            // offsetx={config.offsetX}\n            // offsety={config.offsetY}\n            >\n            {/* <ZoomableGroup zoom={1}> */}\n            <Geographies geography={configURL} transform={\"translate(\"+transform[0]+\",\"+transform[1]+\")\"}>\n                {({geographies}) => geographies.map(geo =>\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo} \n                    fill = {countySelected.indexOf(fips2county[stateFips + geo.properties.COUNTYFP].replace(' County',''))>-1 ? '#f2a900' : 'white'}\n\n                    />\n                )}\n            </Geographies>\n            {siteData.map(({ coordinates, address, county, zipcode }) => (\n              tooltipContent[0] === address || zipSelected === zipcode ?\n                <Marker className=\"marker\" key={address} coordinates={coordinates} onClick={() => {\n                    // window.open(\"https://maps.google.com?q=\"+coordinates[1]+\",\"+coordinates[0]);\n                    window.open(\"https://maps.google.com?q=\"+address);\n                  }}\n                  onMouseEnter={() => {\n                    setTooltipContent([address,county]);\n                    // setHoverMarker(address);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                    // setHoverMarker(\"\");\n                  }}\n                  >\n                {/* <circle cx=\"0\" cy=\"0\" fill=\"#FF5533\" stroke=\"#FF5533\" r=\"3\" transform={transform}/> */}\n                {/* <g id=\"icon\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;\" transform=\"translate(-1.9444444444444287 -1.9444444444444287) scale(3.89 3.89)\" >\n                  <circle cx=\"44.75\" cy=\"34.61\" r=\"19\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(255,209,93); fill-rule: nonzero; opacity: 1;\" transform=\"  matrix(1 0 0 1 0 0) \"/>\n                  <path d=\"M 45 0 C 25.463 0 9.625 15.838 9.625 35.375 c 0 8.722 3.171 16.693 8.404 22.861 L 45 90 l 26.97 -31.765 c 5.233 -6.167 8.404 -14.139 8.404 -22.861 C 80.375 15.838 64.537 0 45 0 z M 45 48.705 c -8.035 0 -14.548 -6.513 -14.548 -14.548 c 0 -8.035 6.513 -14.548 14.548 -14.548 s 14.548 6.513 14.548 14.548 C 59.548 42.192 53.035 48.705 45 48.705 z\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(243,112,91); fill-rule: nonzero; opacity: 1;\" transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n                </g> */}\n              \n                  {/* <div> */}\n                <g\n                    fill=\"#FF5533\"\n                    stroke=\"white\"\n                    strokeWidth=\"1\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    opacity={0.8}\n                    // transform={transform}\n                    transform={\"translate(\"+(transform[0]-12)+\",\"+(transform[1]-20)+\")\"} \n                    // \"translate(-912, -420)\"\n                >\n                    <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                    \n                </g>\n                <circle r={2.5} z-index={10} fill=\"white\" stroke=\"white\" strokeWidth={1} transform={\"translate(\"+transform[0]+\",\"+(transform[1]-10)+\")\"}/>\n                {/* </div>   */}\n                </Marker>\n\n                :\n\n                <Marker className=\"marker\" key={address} coordinates={coordinates} onClick={() => {\n                  // window.open(\"https://maps.google.com?q=\"+coordinates[1]+\",\"+coordinates[0]);\n                  window.open(\"https://maps.google.com?q=\"+address);\n                }}\n                onMouseEnter={() => {\n                  setTooltipContent([address, county]);\n                  // setHoverMarker(address);\n                }}\n                onMouseLeave={() => {\n                  setTooltipContent(\"\");\n                  // setHoverMarker(\"\");\n                }}\n                >\n                <circle cx=\"0\" cy=\"0\" fill=\"#FF5533\" stroke=\"#FF5533\" r=\"1\" transform={\"translate(\"+transform[0]+\",\"+transform[1]+\")\"}/>\n                </Marker>\n                \n                // \"rgb(255,209,93)\"\n                // <text\n                //     textAnchor=\"middle\"\n                //     y={markerOffset}\n                //     transform={transform}\n                //     style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\", fontSize: 10 }}\n                // >\n                //     {name}\n                // </text>\n                \n            ))}\n            {/* </ZoomableGroup> */}\n            </ComposableMap>\n            </Grid.Column>\n        <Grid.Column width={5} style={{height:'600px'}}>\n          <Grid.Row >\n          <Dropdown\n                style={{background: '#fff', \n                        fontSize: \"16px\",\n                        fontWeight: 400, \n                        theme: '#000000',\n                        width: '350px',\n                        left: '0px',\n                        text: \"Select\",\n                        borderTop: '0.5px solid #bdbfc1',\n                        borderLeft: '0.5px solid #bdbfc1',\n                        borderRight: '0.5px solid #bdbfc1', \n                        borderBottom: '0.5px solid #bdbfc1',\n                        // borderRadius: 0,\n                        paddingBottom: '0em'}}\n                placeholder=\"Select County\"\n                // + (stateFips === \"_nation\" ? \"The United States\": stateName)\n                multiple\n                search\n                selection\n                pointing = 'top'\n                options={countyList}\n                onChange={(e, { value }) => {\n                  setCountySelected(value);\n              \n                }}\n\n              />\n              <Dropdown\n                style={{background: '#fff', \n                        fontSize: \"16px\",\n                        fontWeight: 400, \n                        theme: '#000000',\n                        width: '350px',\n                        left: '0px',\n                        text: \"Select\",\n                        borderTop: '0.5px solid #bdbfc1',\n                        borderLeft: '0.5px solid #bdbfc1',\n                        borderRight: '0.5px solid #bdbfc1', \n                        borderBottom: '0.5px solid #bdbfc1',\n                        marginTop: '1rem',\n                        paddingBottom: '0em'}}\n                placeholder=\"Select Zipcode\"\n                search\n                selection\n                clearable\n                pointing = 'top'\n                options={zipList}\n                onChange={(e, { value }) => {\n                  setZipSelected(value);\n                }}\n              />\n              </Grid.Row>\n              <Grid.Row style={{width:'290px', height:'500px', marginTop:'2rem', overflow:'auto'}}>\n              {/* <CountySites county={countySelected} siteData={siteData}/> */}\n              <Card.Group style={{width:'280px', paddingTop:'1rem', paddingLeft:'0.5rem'}}>{CardGroup}</Card.Group>\n              </Grid.Row>\n          </Grid.Column>\n          </Grid>{tooltipContent===\"\" ? null : <ReactTooltip place='right'> <font size=\"+1\"> <b> {tooltipContent[0]} </b> </font> <br/> {tooltipContent[1]} </ReactTooltip> }\n\n          <Grid columns={2}>\n        <Grid.Column width={10}>\n          <div>\n            {Legend()}\n          </div>\n            <ComposableMap projection=\"geoAlbersUsa\" \n            //projectionConfig={{scale:`${config.scale*0.7}`}} \n            projectionConfig={{\n                // rotate: [-100, 20, 0],\n                scale: 4500,\n              }}\n            width={500} \n            height={400} \n            strokeWidth = {0.3}\n            stroke = 'black'\n            data-tip=\"\"\n            // offsetx={config.offsetX}\n            // offsety={config.offsetY}\n            >\n            {/* <ZoomableGroup zoom={1}> */}\n            <Geographies geography={configURL} transform={\"translate(\"+transform[0]+\",\"+transform[1]+\")\"}>\n                {({geographies}) => geographies.map(geo =>\n                <Geography \n                    key={geo.rsmKey} \n                    geography={geo} \n\n                    onClick={()=>{\n                      setCountyFips(\"13\"+geo.properties.COUNTYFP);\n                      setCountyClicked(fips2county[stateFips + geo.properties.COUNTYFP]);\n                    }}\n\n                    onMouseEnter={()=>{\n                      setCountyTooltipContent(fips2county[stateFips + geo.properties.COUNTYFP]);\n                        // setBarCountyName((fips2county[stateFips + geo.properties.COUNTYFP]).match(/\\S+/)[0]);\n                    }}\n                    onMouseLeave={()=>{\n                      setCountyTooltipContent(\"\")\n                    }}\n                    fill = { countyTooltipContent === geo.properties.NAME+' County' ? '#f2a900' : mapColor[\"13\"+geo.properties.COUNTYFP]}\n                    // countyFips === \"13\"+geo.properties.COUNTYFP\n                    />\n                )}\n            </Geographies>\n            {siteData.map(({ coordinates, address, county }) => (\n                <Marker className=\"marker\" key={address} coordinates={coordinates} >\n                <circle cx=\"0\" cy=\"0\" fill=\"#FF5533\" stroke=\"#FF5533\" r=\"1\" transform={\"translate(\"+transform[0]+\",\"+transform[1]+\")\"}/>\n                </Marker>\n                 \n            ))}\n            {/* </ZoomableGroup> */}\n            </ComposableMap>\n            </Grid.Column>\n        <Grid.Column width={5} style={{height:'600px', paddingTop:'4rem'}}>\n          <Grid.Row >\n          <Table celled fixed style = {{width: 350}}>\n                  <Table.Header>\n\n                    <tr textalign = \"center\" colSpan = \"5\" style = {{backgroundImage : 'url(/Emory_COVID_header_LightBlue.jpg)'}}>\n                        <td colSpan='1' style={{width:130}}> </td>\n                        <td colSpan='1' style={{width:110, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> {countyClicked}</td>\n                        <td colSpan='1' style={{width:110, fontSize: '14px', textAlign : \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\"}}> GA </td>\n                    </tr>\n                    <Table.Row textAlign = 'center' style = {{height: 40}}>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {\"dailycases\"} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {countyFips === \"_nation\" ? \"\":numberWithCommas(countyData[countyFips][\"dailycases\"].toFixed(0))} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(countyData[13][\"dailycases\"].toFixed(0))} </Table.HeaderCell>\n\n                    </Table.Row>\n                    <Table.Row textAlign = 'center'>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {\"dailydeaths\"} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {countyFips === \"_nation\" ? \"\":numberWithCommas(countyData[countyFips][\"dailydeaths\"].toFixed(0))} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(countyData[13][\"dailydeaths\"].toFixed(0))} </Table.HeaderCell>\n\n                    </Table.Row>\n                    <Table.Row textAlign = 'center'>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {\"mean7daycases\"} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {countyFips === \"_nation\" ? \"\":numberWithCommas(countyData[countyFips][\"mean7daycases\"].toFixed(0))} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(countyData[13][\"mean7daycases\"].toFixed(0))} </Table.HeaderCell>\n\n                    </Table.Row>\n                    <Table.Row textAlign = 'center'>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {\"mean7daydeaths\"} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {countyFips === \"_nation\" ? \"\":numberWithCommas(countyData[countyFips][\"mean7daydeaths\"].toFixed(0))} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(countyData[13][\"mean7daydeaths\"].toFixed(0))} </Table.HeaderCell>\n\n                    </Table.Row>\n\n                    <Table.Row textAlign = 'center'>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {\"#sites\"} </Table.HeaderCell>\n                      <Table.HeaderCell  style={{fontSize: '14px'}}> {countyFips === \"_nation\" ? \"\":numberWithCommas(_.filter(siteData, ['county', countyClicked]).length)} </Table.HeaderCell>\n                      <Table.HeaderCell style={{fontSize: '14px'}}> {numberWithCommas(siteData.length)} </Table.HeaderCell>\n\n                    </Table.Row>\n                    \n                  </Table.Header>\n                </Table>\n              </Grid.Row>\n          </Grid.Column>\n          </Grid>{countyTooltipContent!==\"\" ?  <ReactTooltip place='right'> <font size=\"+1\"> <b> {countyTooltipContent} </b> </font> <br/> </ReactTooltip> : null}\n        </Container>\n        \n    </div>\n    </HEProvider>\n    );\n} else {\n        return <Loader active inline='centered' />\n    }\n}\n","import React from \"react\";\nimport ErrorBoundary from \"react-error-boundary\";\nimport { Container, Menu, Image, Divider } from 'semantic-ui-react';\n\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function AppBar(props) {\n\n  const history = useHistory();\n\n  return (\n    <ErrorBoundary>\n      <Menu borderless inverted fixed='top'\n        style={{backgroundImage: 'url(\"/Emory_COVID_header_LightBlue.jpg\")',\n                backgroundSize: 'cover',\n                fontSize: \"15pt\"}}>\n\n        <Container style={{width: '1305px'}}>\n        <Menu.Item as='a' header onClick={() => history.push('/')}>\n            <span style={{fontWeight: 400, color: '#fff', lineHeight: 1.3}}>\n            <strong>COVID-19 Health Equity</strong><br/><strong>Interactive Dashboard</strong>\n           </span>\n          </Menu.Item>\n          <Menu.Item as='a' header onClick={() => history.push('/Georgia')}>\n            <span style={{fontWeight: 400, color: '#fff', lineHeight: 1.3}}>\n           <strong>Georgia COVID-19</strong>\n           <br></br>\n           <strong>Health Equity Dashboard</strong>\n           </span>\n          </Menu.Item>\n          <Menu.Item \n            content='Home'\n            onClick={() => history.push('/Georgia')}\n            name='countyReport'/>\n            <Menu.Item \n            active={props.menu==='dataSources'} \n            content='Data Sources'\n            onClick={() => history.push('/Georgia/data-sources')}\n            name='dataSources'/>   \n          <Menu.Item \n            active={props.menu==='aboutUs'} \n            content='Contact Us'\n            onClick={() => history.push('/Georgia/about-team')}\n            name='aboutUs'/>   \n\n\n\n          <Menu.Menu position='right'>\n          <Menu.Item as='a' header>\n              <Image size='small' src='/logo_white.png' />\n            </Menu.Item>\n          <Menu.Item as='a' header>\n              <Image size='tiny' src='/data/GDPH/rols.png'/>\n            </Menu.Item>\n            </Menu.Menu>\n          \n        </Container>\n      </Menu>\n    </ErrorBoundary>\n  );\n}\n\n\n\n","\nimport React, {\n  createContext,\n  useMemo,\n  useCallback,\n} from \"react\"\nimport PropTypes from \"prop-types\"\nimport * as d3Geo from \"d3-geo\"\n\nconst { geoPath, ...projections } = d3Geo\n\nconst MapContext = createContext()\n\nconst makeProjection = ({\n  projectionConfig = {},\n  projection = \"geoEqualEarth\",\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0\n}) => {\n  const isFunc = typeof projection === \"function\"\n\n  if (isFunc) return projection\n\n  const scl = projectionConfig.scale || null;\n\n  let proj = projections[projection]().translate([width/2 + (offsetX)*scl/1000 ,\n                                              height/2 +(offsetY)*scl/1000]);\n\n  const supported = [\n    proj.center ? \"center\" : null,\n    proj.rotate ? \"rotate\" : null,\n    proj.scale ? \"scale\" : null,\n    proj.parallels ? \"parallels\" : null,\n  ]\n\n  supported.forEach(d => {\n    if (!d) return\n    proj = proj[d](projectionConfig[d] || proj[d]())\n  })\n\n  return proj\n}\n\nconst MapProvider = ({\n  width,\n  height,\n  offsetX,\n  offsetY,\n  projection,\n  projectionConfig,\n  ...restProps\n}) => {\n  const [cx, cy] = projectionConfig.center || []\n  const [rx, ry, rz] = projectionConfig.rotate || []\n  const [p1, p2] = projectionConfig.parallels || []\n  const s = projectionConfig.scale || null\n\n  const projMemo = useMemo(() => {\n    return makeProjection({\n      projectionConfig: {\n        center: (cx || cx === 0) || (cy || cy === 0) ? [cx, cy] : null,\n        rotate: (rx || rx === 0) || (ry || ry === 0) ? [rx, ry, rz] : null,\n        parallels: (p1 || p1 === 0) || (p2 || p2 === 0) ? [p1, p2] : null,\n        scale: s,\n      },\n      projection,\n      width,\n      height,\n      offsetX,\n      offsetY,\n    })\n  }, [ width, height, projection, cx, cy, rx, ry, rz, p1, p2, s, offsetX, offsetY ])\n\n  const proj = useCallback(projMemo, [projMemo])\n\n  const value = useMemo(() => {\n    return {\n      width,\n      height,\n      projection: proj,\n      path: geoPath().projection(proj),\n    }\n  }, [ width, height, proj ])\n\n  return (<MapContext.Provider value={value} {...restProps} />)\n}\n\nMapProvider.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  offsetX: PropTypes.number,\n  offsetY: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n}\n\nexport { MapProvider, MapContext }\n","\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapContext } from \"./MapProvider\"\nimport useGeographies from \"./useGeographies\"\n\nconst Geographies = ({\n  geography,\n  children,\n  parseGeographies,\n  className = \"\",\n  ...restProps\n}) => {\n  const { path, projection } = useContext(MapContext)\n  const { geographies } = useGeographies({ geography, parseGeographies })\n  // console.log(geographies)\n\n  return (\n    <g className={`rsm-geographies ${className}`} {...restProps}>\n      {\n        geographies && geographies.length > 0 &&\n        children({ geographies, path, projection })\n        \n      }\n    </g>\n  )\n}\n\nGeographies.propTypes = {\n  geography: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  children: PropTypes.func,\n  parseGeographies: PropTypes.func,\n  className: PropTypes.string,\n}\n\nexport default Geographies\n","\nimport { useMemo, useState, useEffect, useContext } from \"react\"\nimport { MapContext } from \"./MapProvider\"\n\nimport { fetchGeographies, getFeatures, prepareFeatures, isString } from \"../../utils\"\n\nexport default function useGeographies({ geography, parseGeographies }) {\n  const { path } = useContext(MapContext)\n  const [geographies, setGeographies] = useState()\n\n  useEffect(() => {\n    if (typeof window === `undefined`) return\n\n    if (isString(geography)) {\n      fetchGeographies(geography).then(geos => {\n        if (geos) setGeographies(getFeatures(geos, parseGeographies))\n      })\n    } else {\n      setGeographies(getFeatures(geography, parseGeographies))\n    }\n  }, [geography, parseGeographies])\n\n  const output = useMemo(() => {\n    return prepareFeatures(geographies, path)\n  }, [geographies, path])\n\n  return { geographies: output }\n}\n","\nimport React, { useState, memo } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Geography = ({\n  geography,\n  onMouseEnter,\n  onMouseLeave,\n  onMouseDown,\n  onMouseUp,\n  onFocus,\n  onBlur,\n  style = {},\n  className = \"\",\n  ...restProps\n}) => {\n  const [isPressed, setPressed] = useState(false)\n  const [isFocused, setFocus] = useState(false)\n\n  function handleMouseEnter(evt) {\n    setFocus(true)\n    if (onMouseEnter) onMouseEnter(evt)\n    // console.log(onMouseEnter)\n  }\n\n  function handleMouseLeave(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onMouseLeave) onMouseLeave(evt)\n  }\n\n  function handleFocus(evt) {\n    setFocus(true)\n    if (onFocus) onFocus(evt)\n  }\n\n  function handleBlur(evt) {\n    setFocus(false)\n    if (isPressed) setPressed(false)\n    if (onBlur) onBlur(evt)\n  }\n\n  function handleMouseDown(evt) {\n    setPressed(true)\n    if (onMouseDown) onMouseDown(evt)\n  }\n\n  function handleMouseUp(evt) {\n    setPressed(false)\n    if (onMouseUp) onMouseUp(evt)\n  }\n\n  return (\n    <path\n      tabIndex=\"0\"\n      className={`rsm-geography ${className}`}\n      d={geography.svgPath}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      style={style[isPressed || isFocused ? (isPressed ? \"pressed\" : \"hover\") : \"default\"]}\n      {...restProps}\n    />\n  )\n}\n\nGeography.propTypes = {\n  geography: PropTypes.object,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default memo(Geography)\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MapProvider } from \"./MapProvider\"\n\nconst ComposableMap = ({\n  width = 800,\n  height = 600,\n  offsetX = 0,\n  offsetY = 0,\n  projection = \"geoEqualEarth\",\n  projectionConfig = {},\n  className = \"\",\n  ...restProps\n}) => {\n  return (\n    <MapProvider\n      width={width}\n      height={height}\n      offsetX={offsetX}\n      offsetY={offsetY}\n      projection={projection}\n      projectionConfig={projectionConfig}\n    >\n      <svg\n        width={width}\n        height={height}\n        className={`rsm-svg ${className}`}\n        {...restProps}\n      />\n    </MapProvider>\n  )\n}\n\nComposableMap.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n  projection: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  projectionConfig: PropTypes.object,\n  className: PropTypes.string,\n}\n\nexport default ComposableMap\n","import React from 'react'\nimport { Grid, List, Divider, Image } from 'semantic-ui-react'\n\nexport default function Notes(props){\n\n  return (\n    <div style={{paddingTop: '2em', fontWeight: 300}}>\n    {/* <Divider/>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column style={{fontSize: '1em', lineHeight: '1.5em'}}>\n          Early data about COVID-19 suggests that communities are affected very differently due to social determinants of health like population density, poverty, residential segregation, underlying chronic health conditions, and availability of medical services. \n          In order to predict how the epidemic will continue to unfold and prepare for the future, it is critical to understand differences in underlying risk factors. \n          There is no one-size-fits all approach to combat the epidemic, but accurate and meaningful data is a key component of a robust public health response that is informed by contextual factors and prioritizes health equity.\n          <br/><br/>\n          The COVID-19 Health Equity Dashboard seeks to fill the gaps in county-level data about the virus and underlying social determinants of health. \n          Our goal is for this Dashboard to facilitate easy comparisons of counties with respect to COVID-19 outcomes and social determinants. \n          We hope this becomes a valuable resource for and critical component of tailored public health responses to COVID-19 across the wide range of environments that Americans inhabit.\n        </Grid.Column>\n      </Grid.Row>\n      <Divider hidden/>\n      <Grid.Row columns={2}>\n        <Grid.Column>          \n          <Image size='small' src='/logo.png' />\n          &copy; 2020 Emory University. All rights reserved.\n        </Grid.Column>\n        <Grid.Column>          \n          <small>\n            This dashboard is created using\n            <List as='ol'>\n              <List.Item as='li' value='-'><a href=\"https://www.react-simple-maps.io/\">React Simple Maps</a> by <a href=\"https://www.zcreativelabs.com/\">z creative labs</a></List.Item>\n              <List.Item as='li' value='-'><a href=\"https://formidable.com/open-source/victory/\">Victory</a> by <a href=\"https://formidable.com/\">Formidable</a></List.Item>\n              <List.Item as='li' value='-'><a href=\"https://github.com/Semantic-Org/Semantic-UI-React\">Semantic UI React</a> by <a href=\"https://github.com/levithomason\">@levithomason</a>and an amazing community of <a href=\"https://github.com/Semantic-Org/Semantic-UI-React/graphs/contributors\">contributors</a></List.Item> \n              <List.Item as='li' value='-'><a href=\"https://github.com/facebook/create-react-app\">Create React App</a> by <a href=\"https://about.fb.com/company-info/\">Facebook</a></List.Item> \n            </List>\n          </small>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid> */}\n    </div>);\n}\n","import React, { useEffect, Component, useState, createRef, useRef, Text } from 'react'\nimport { Container, Grid, Breadcrumb, Dropdown, Header, Loader, Divider, Rail, Sticky, Popup, Button, Menu, Modal, Accordion, Icon, List,Label,Tab } from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport {\n    VictoryChart,\n    VictoryTooltip,\n    VictoryVoronoiContainer,\n    VictoryContainer,\n    VictoryGroup,\n    VictoryBar,\n    VictoryTheme,\n    VictoryAxis,\n    VictoryLegend,\n    VictoryLine,\n    VictoryLabel,\n    VictoryScatter,\n    VictoryPie\n} from 'victory';\nimport Slider from \"@material-ui/core/Slider\";\nimport LazyHero from 'react-lazy-hero';\nimport { Waypoint } from 'react-waypoint'\n// import Background from '/CoronaVirus_LightBlue.jpg';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport _ from 'lodash';\nimport { scaleQuantile, scaleQuantize } from \"d3-scale\";\nimport { quantile, ascending } from 'd3';\nimport fips2county from './fips2county.json'\n// import configscounty from \"./county_config.json\";\n\nimport configs from \"./state_config.json\";\n\nconst casesColor = [\n    \"#72ABB1\",\n    \"#337fb5\"\n];\nconst mortalityColor = [\n    \"#0270A1\",\n    \"#024174\"\n];\nconst colorPalette = [\n    \"#e1dce2\",\n    \"#d3b6cd\",\n    \"#bf88b5\",\n    \"#af5194\",\n    \"#99528c\",\n    \"#633c70\",\n];\nconst colorPalette1 = [\n    \"#67335E\",\n    \"#6B2A4D\",\n    \"#70213B\",\n    \"#74182A\",\n    '#c6007e'\n];\nconst colorPalette2 = [\n    \"#e1dce2\",\n    \"#d3b6cd\",\n    \"#bf88b5\",\n    \"#af5194\",\n    \"#99528c\",\n\n];\n\nconst dataupColor = '#6899ce';\nconst colorOut = '#c6007e';\nconst contextRef = createRef()\nconst nameList = ['summary', 're', 'cvi', 'si', 'urbanrural', 'poverty', 'black', 'hispanic', 'diabetes', 'age', 'male'];\nvar scrollCount = 0;\n\nconst countyColor = '#f2a900';\nconst stateColor = '#bdbfc1';\nconst nationColor = '#d9d9d7';\nconst colorHighlight = '#f2a900';\nconst marks = [\n    {\n        value: 0,\n        label: 'Mar 1',\n    },\n    {\n        value: 10,\n        label: 'April 1',\n    },\n    {\n        value: 20,\n        label: 'May 1',\n    },\n    {\n        value: 30,\n        label: 'June 1',\n    },\n];\n\nconst sectionStyle1 = {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: '#f0fafe'\n};\nconst sectionStyle2 = {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundSize: 'cover',\n    backgroundImage: `url(\"/CoronaVirus_LightBlue.jpg\")`\n};\n\nfunction valuetext(value) {\n    return `${value}°C`;\n}\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\nfunction StickyExampleAdjacentContext(props) {\n    const [sTate, setsTate] = useState({ activeItem: 'Interactive Map' })\n    const { activeItem } = sTate\n    useEffect(() => {\n        setsTate(nameList[scrollCount])\n    }, [scrollCount])\n    // console.log(props.activeCharacter)\n    return (\n\n        <div style = {{width: 140}}>\n            <Rail attached size='mini' style = {{width: 210}}>\n                <Sticky offset={150}>\n                    <Menu\n                    style = {{fontSize:'12pt', width: 140}}\n                        size='small'\n                        compact\n                        pointing secondary vertical>\n                        <Menu.Item as='a' href=\"#summary\" name='Interactive Map' active={props.activeCharacter == 'Interactive Map' || activeItem === 'Interactive Map'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>Georgia Interactive Map</Header></Menu.Item>\n                        <Menu.Item as='a' href=\"#demog\" name='COVID-19 Demographics' active={props.activeCharacter === 'COVID-19 Demographics' || activeItem === 'COVID-19 Demographics'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>Georgia COVID-19 by Demographics</Header></Menu.Item>\n\n\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#age_g\" name='COVID-19 by Age' active={props.activeCharacter === 'COVID-19 by Age' || activeItem === 'COVID-19 by Age'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }}>Age</Menu.Item>\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#sex_g\" name='COVID-19 by Sex' active={props.activeCharacter === 'COVID-19 by Sex' || activeItem === 'COVID-19 by Sex'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }}>Sex</Menu.Item>\n                        <Menu.Item style={{ paddingLeft: '3em' }} as='a' href=\"#re\" name='COVID-19 by Race/Ethnicity' active={props.activeCharacter === 'COVID-19 by Race/Ethnicity' || activeItem === 'COVID-19 by Race/Ethnicity'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }}>Race and Ethnicity</Menu.Item>\n\n\n                        <Menu.Item as='a' href=\"#chara\" name='COVID-19 by County Characteristics' active={props.activeCharacter === 'COVID-19 by County Characteristics' || activeItem === 'COVID-19 by County Characteristics'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>County disparities in COVID-19 case rates and death rates</Header></Menu.Item>\n\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#cvi\" name='Community Vulnerability Index' active={props.activeCharacter === 'Community Vulnerability Index' || activeItem === 'Community Vulnerability Index'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} >Community COVID-19 Vulnerability Index</Menu.Item>\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#si\" name='Residential Segregation Index' active={props.activeCharacter === 'Residential Segregation Index' || activeItem === 'Residential Segregation Index'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }}>County Racial Segregation Index</Menu.Item>\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#urbanrural\" name='County Metropolitan Status' active={props.activeCharacter === 'County Metropolitan Status' || activeItem === 'County Metropolitan Status'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} />\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#poverty\" name='County Poverty' active={props.activeCharacter === 'County Povertyy' || activeItem === 'County Poverty'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} />\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#black\" name='County African American' active={props.activeCharacter === 'County African American' || activeItem === 'County African American'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} />\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#hispanic\" name='County Hispanic' active={props.activeCharacter === 'County Hispanic' || activeItem === 'County Hispanic'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} />\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#diabetes\" name='County Diabetes' active={props.activeCharacter === 'County Diabetes' || activeItem === 'County Diabetes'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} />\n                        <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#age\" name='County Age over 65' active={props.activeCharacter === 'County Age over 65' || activeItem === 'County Age over 65'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} />\n                        {/* <Menu.Item as='a' style={{ paddingLeft: '3em' }} href=\"#male\" name='County Male Percentage' active={props.activeCharacter === 'County Male Percentage' || activeItem === 'County Male Percentage'}\n                            onClick={(e, { name }) => { setsTate({ activeItem: name }) }} /> */}\n                    </Menu>\n                </Sticky>\n            </Rail>\n        </div>\n    )\n\n}\n\nfunction SvgMap(props) {\n    // var lengthSplit1 = props.lengthSplit1;\n    if (props.name === 'casescum') {\n        return (\n            <svg width=\"400\" height=\"70\">\n                {_.map(colorPalette, (color, i) => {\n                    return <rect key={i} x={50 + 25 * i} y={20} width=\"25\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                })}\n                {_.map(colorPalette1, (color, i) => {\n                    return <rect key={i} x={200 + 25 * i} y={20} width=\"25\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                })}\n\n                <text x={50} y={52} style={{ fontSize: '0.8em' }}>Low</text>\n                <text x={300} y={52} style={{ fontSize: '0.8em' }}>High</text>\n                {_.map(props.legendSplit['thr'][props.name], (splitpoint, i) => {\n                    if (props.legendSplit['thr'][props.name][i] < 1) {\n                        return <text key={i} x={57 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {props.legendSplit['thr'][props.name][i].toFixed(1)}</text>\n                    }\n                    if (props.legendSplit['thr'][props.name][i] >= 1000) {\n                        return <text key={i} x={70 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {(props.legendSplit['thr'][props.name][i] / 1000).toFixed(1) + \"K\"}</text>\n                    }\n                    return <text key={i} x={70 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {props.legendSplit['thr'][props.name][i].toFixed(0)}</text>\n                })}\n\n                {_.map(props.legendSplit['thr1'], (splitpoint, i) => {\n                    if (props.legendSplit['thr1'][i] >= 1000) {\n                        return <text key={i} x={220 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {(props.legendSplit['thr1'][i] / 1000).toFixed(1) + \"K\"}</text>\n                    }\n                    return <text key={i} x={220 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {props.legendSplit['thr1'][i].toFixed(0)}</text>\n                })}\n                <text x={325} y={15} style={{ fontSize: '0.7em' }}>{props.legendMax[props.name]>999?(props.legendMax[props.name]/1000).toFixed(0) + \"K\"\n                :props.legendMax[props.name].toFixed(0)}</text>\n                <text x={50} y={15} style={{ fontSize: '0.7em' }}> {(props.legendMin[props.name] / 100).toFixed(0)} </text>\n                <rect x={5} y={20} width=\"25\" height=\"20\" style={{ fill: \"#FFFFFF\", strokeWidth: 0.5, stroke: \"#000000\" }} />\n                <text x={8} y={52} style={{ fontSize: '0.7em' }}> N/A </text>\n                <text x={8} y={65} style={{fontSize: '0.8em'}}> Click on a county below for a detailed report.</text>\n          {/* <text x={370} y={40} style={{fontSize: '0.8em'}}>  </text> */}\n            </svg>\n\n        )\n    }\n    if (props.name === 'casescum14dayR') {\n        return (\n            <svg width=\"400\" height=\"70\">\n                {_.map(colorPalette, (color, i) => {\n                    return <rect key={i} x={55 + 25 * i} y={20} width=\"25\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                })}\n\n                <rect x={230} y={20} width=\"25\" height=\"20\" style={{ fill: colorOut, strokeWidth: 1, stroke: colorOut }} />\n                <text x={55} y={52} style={{ fontSize: '0.8em' }}>Low</text>\n                <text x={230} y={52} style={{ fontSize: '0.8em' }}>High</text>\n                {_.map(props.legendSplit['thr'][props.name], (splitpoint, i) => {\n                    if (props.legendSplit['thr'][props.name][i] < 1) {\n                        return <text key={i} x={62 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {props.legendSplit['thr'][props.name][i].toFixed(1)}</text>\n                    }\n                    if (props.legendSplit['thr'][props.name][i] >= 1000) {\n                        return <text key={i} x={72 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {(props.legendSplit['thr'][props.name][i] / 1000).toFixed(1) + \"K\"}</text>\n                    }\n                    return <text key={i} x={72 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {props.legendSplit['thr'][props.name][i].toFixed(0)}</text>\n                })}\n                {props.legendMin[props.name] < 100 ? <text x={55} y={15} style={{ fontSize: '0.7em' }}> {(props.legendMin[props.name] / 1).toFixed(0)} </text> :\n                    <text x={47} y={15} style={{ fontSize: '0.7em' }}> {(props.legendMin[props.name] / 1).toFixed(0)} </text>\n                }\n\n\n\n                <text x={224} y={15} style={{ fontSize: '0.7em' }}>{props.legendSplit['thr'][props.name][colorPalette.length - 1] < 1 ? props.legendSplit['thr'][props.name][colorPalette.length - 1].toFixed(1)\n                    : props.legendSplit['thr'][props.name][colorPalette.length - 1] > 1000 ?\n                        (props.legendSplit['thr'][props.name][colorPalette.length - 1] / 1000).toFixed(1) + \"K\" : props.legendSplit['thr'][props.name][colorPalette.length - 1].toFixed(0)\n                }</text>\n                {/* <text x={251} y={15} style={{ fontSize: '0.7em' }}>{props.legendMax}</text> */}\n                <rect x={5} y={20} width=\"25\" height=\"20\" style={{ fill: \"#FFFFFF\", strokeWidth: 0.5, stroke: \"#000000\" }} />\n                <text x={8} y={52} style={{ fontSize: '0.7em' }}> N/A </text>\n\n                {/* <text x={320} y={25} style={{fontSize: '0.8em'}}> Click on a county below </text>\n          <text x={320} y={40} style={{fontSize: '0.8em'}}> for a detailed report. </text> */}\n          <text x={8} y={65} style={{fontSize: '0.8em'}}> Click on a county below for a detailed report.</text>\n            </svg>\n\n        )\n    }\n    else {\n        return (\n            <svg width=\"400\" height=\"70\">\n                {_.map(colorPalette, (color, i) => {\n                    return <rect key={i} x={55 + 25 * i} y={20} width=\"25\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                })}\n\n                <rect x={230} y={20} width=\"25\" height=\"20\" style={{ fill: colorOut, strokeWidth: 1, stroke: colorOut }} />\n                <text x={55} y={52} style={{ fontSize: '0.8em' }}>Low</text>\n                <text x={230} y={52} style={{ fontSize: '0.8em' }}>High</text>\n                {_.map(props.legendSplit['thr'][props.name], (splitpoint, i) => {\n                    if (props.legendSplit['thr'][props.name][i] < 1) {\n                        return <text key={i} x={62 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {props.legendSplit['thr'][props.name][i].toFixed(1)}</text>\n                    }\n                    if (props.legendSplit['thr'][props.name][i] >= 1000) {\n                        return <text key={i} x={72 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {(props.legendSplit['thr'][props.name][i] / 1000).toFixed(1) + \"K\"}</text>\n                    }\n                    return <text key={i} x={72 + 25 * (i)} y={15} style={{ fontSize: '0.7em' }}> {props.legendSplit['thr'][props.name][i].toFixed(0)}</text>\n                })}\n                {props.legendMin[props.name] < 100 && props.legendMin[props.name]<props.legendSplit['thr'][props.name][0] ? <text x={55} y={15} style={{ fontSize: '0.7em' }}> {(props.legendMin[props.name] / 1).toFixed(0)} </text> :\n                    <text x={55} y={15} style={{ fontSize: '0.7em' }}> {0} </text>\n                }\n\n\n\n                <text x={224} y={15} style={{ fontSize: '0.7em' }}>{props.legendSplit['thr'][props.name][colorPalette.length - 1] < 1 ? props.legendSplit['thr'][props.name][colorPalette.length - 1].toFixed(1)\n                    : props.legendSplit['thr'][props.name][colorPalette.length - 1] > 1000 ?\n                        (props.legendSplit['thr'][props.name][colorPalette.length - 1] / 1000).toFixed(1) + \"K\" : props.legendSplit['thr'][props.name][colorPalette.length - 1].toFixed(0)\n                }</text>\n                <text x={251} y={15} style={{ fontSize: '0.7em' }}>{props.legendMax[props.name]>999?(props.legendMax[props.name]/1000).toFixed(0) + \"K\"\n                :props.legendMax[props.name].toFixed(0)}</text>\n                <rect x={5} y={20} width=\"25\" height=\"20\" style={{ fill: \"#FFFFFF\", strokeWidth: 0.5, stroke: \"#000000\" }} />\n                <text x={8} y={52} style={{ fontSize: '0.7em' }}> N/A </text>\n\n                <text x={8} y={65} style={{fontSize: '0.8em'}}> Click on a county below for a detailed report.</text>\n                {/* <text x={320} y={25} style={{fontSize: '0.8em'}}> Click on a county below </text>\n          <text x={320} y={40} style={{fontSize: '0.8em'}}> for a detailed report. </text> */}\n            </svg>\n\n        )\n    }\n}\n\n\nfunction ChartGraph(props) {\n    var varGraphPair = props.name;\n    var dataTS;\n    var dataTS1;\n    var metric = props.metric;\n    var stateFips = props.stateFips;\n    var countyFips = props.countyFips;\n    var countyname = props.countyname;\n\n    if (props.metric === \"casescum14dayR\") {\n        dataTS = _.takeRight(props.data2[stateFips + countyFips], 14);\n\n        return (\n            <VictoryChart theme={VictoryTheme.material}\n                containerComponent={\n                    <VictoryVoronoiContainer\n                        responsive={false}\n                        flyoutStyle={{ fill: \"white\" }}\n                    />\n                }\n                width={630}\n                height={480}\n                padding={{ left: 55, right: 70, top: 10, bottom: 50 }}>\n                <VictoryAxis\n                    style={{\n                        tickLabels: { fontSize: 17, padding: 5 }\n                    }}\n                    tickFormat={(t) => new Date(t * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric' })}\n\n                    tickValues={[\n                        dataTS[dataTS.length - Math.round(dataTS.length / 4) * 3 - 1].t,\n                        dataTS[dataTS.length - Math.round(dataTS.length / 4) * 2 - 1].t,\n                        dataTS[dataTS.length - Math.round(dataTS.length / 4) - 1].t,\n                        dataTS[dataTS.length - 1].t]}\n\n                />\n                <VictoryAxis dependentAxis tickCount={5}\n                    style={{\n                        tickLabels: { fontSize: 17, padding: 5 }\n                    }}\n                    tickFormat={(y) => (y < 1000 ? (Math.round(y, 2) === 0.00 ? \" \" : y) : (y / 1000 + 'k'))}\n                />\n                <VictoryBar style={{ data: { fill: stateColor } }} barWidth={8} alignment=\"start\" data={dataTS ? dataTS : props.data2[\"99999\"]}\n                    x='t' y={varGraphPair[metric]['name'][0]}\n\n                />\n                <VictoryLine name=\"Line1\" style={{ data: { stroke: countyColor, strokeWidth: ({ active }) => active ? 7 : 5 } }} data={dataTS ? dataTS : props.data2[\"99999\"]}\n                    x='t' y={varGraphPair[metric]['name'][1]}\n                    labels={({ datum }) => `${countyname}\\n` +\n                        `Date: ${new Date(datum.t * 1000).toLocaleDateString()}\\n` +\n                        `${varGraphPair[metric]['legend'][1]}: ${Math.round(datum[varGraphPair[metric]['name'][1]], 2)}\\n` +\n                        `${varGraphPair[metric]['legend'][0]}: ${Math.round(datum[varGraphPair[metric]['name'][0]], 2)}`\n                    }\n                    labelComponent={\n                        <VictoryTooltip\n                            orientation=\"top\"\n                            style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                            constrainToVisibleArea\n                            labelComponent={<VictoryLabel dx={-100} textAnchor='start' />}\n                            flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                        />\n                    }\n                />\n                {varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                    <VictoryAxis dependentAxis tickCount={5}\n                        style={{\n                            tickLabels: { fontSize: 25, padding: 5 }\n                        }}\n                        tickFormat={(y) => (y < 1000 ? (Math.round(y, 2) === 0.00 ? \" \" : y) : (y / 1000 + 'k'))}\n                    /> :\n                    <VictoryLine name=\"Line11\" style={{ data: { stroke: '#007dba', strokeWidth: ({ active }) => active ? 5 : 3 } }} data={_.takeRight(props.data2[stateFips], 14) ? _.takeRight(props.data2[stateFips], 14) : props.data2[\"99999\"]}\n                        x='t' y={varGraphPair[metric]['name'][1]}\n                        labels={({ datum }) => [`Georgia\\n`,\n                            `Date: ${new Date(datum.t * 1000).toLocaleDateString()}\\n`,\n                            `${varGraphPair[metric]['legend'][1]}: ${Math.round(datum[varGraphPair[metric]['name'][1]], 2)}\\n`,\n                            `${varGraphPair[metric]['legend'][0]}: ${Math.round(datum[varGraphPair[metric]['name'][0]], 2)}`\n                        ]}\n                        labelComponent={\n                            <VictoryTooltip\n                                orientation=\"top\"\n                                style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                                constrainToVisibleArea\n                                labelComponent={<VictoryLabel dx={-100} textAnchor='start' />}\n                                flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                            />\n                        }\n                    />}\n            </VictoryChart>)\n    }\n    else {\n        dataTS = props.data2;\n        return (\n            <VictoryChart theme={VictoryTheme.material}\n                containerComponent={\n                    <VictoryVoronoiContainer\n\n                        responsive={false}\n                        flyoutStyle={{ fill: \"black\" }}\n                    />\n                }\n                width={630}\n                height={480}\n                padding={{ left: 45, right: 70, top: 10, bottom: 50 }}>\n                <VictoryAxis\n                    style={{\n                        tickLabels: { fontSize: 17, padding: 6 }\n                    }}\n                    tickFormat={(t) => new Date(t * 1000).toLocaleDateString('en-Us', { month: 'numeric', day: 'numeric' })}\n                    tickValues={[\n                        // 1583035200, 1585713600, 1588305600, 1590984000, 1593576000\n                        dataTS['13001'][0].t,\n                        dataTS[\"13001\"][31].t,\n                        dataTS[\"13001\"][61].t,\n                        dataTS[\"13001\"][92].t,\n                        dataTS[\"13001\"][122].t,\n                        dataTS[\"13001\"][153].t,\n                        dataTS[\"13001\"][184].t,\n                        dataTS[\"13001\"][214].t,\n                        dataTS[\"13001\"][245].t,\n                        dataTS[\"13001\"][275].t,\n                        dataTS[\"13001\"][306].t,\n                        dataTS[\"13001\"][337].t,\n                        dataTS[\"13001\"][365].t,\n                        // dataTS[\"13001\"][365].t,\n                        dataTS[\"13001\"][dataTS[\"13001\"].length - 1].t\n                    ]}\n\n\n                />\n                <VictoryAxis dependentAxis tickCount={6}\n                    style={{\n                        tickLabels: { fontSize: 17, padding: 5 }\n                    }}\n                    tickFormat={(y) => (y < 1000 ? (Math.round(y, 2) === 0.00 ? \" \" : y) : (y / 1000 + 'k'))}\n                />\n                <VictoryBar style={{ data: { fill: stateColor } }} barWidth={4} data={dataTS[stateFips + countyFips] ? dataTS[stateFips + countyFips] : dataTS[\"99999\"]}\n                    x='t' y={varGraphPair[metric]['name'][0]}\n\n                />\n                {countyFips === '' ? <VictoryLine style={{ data: { stroke: '007dba', strokeWidth: 0 } }} data={dataTS[stateFips + countyFips] ? dataTS[stateFips + countyFips] : dataTS[\"99999\"]}\n                    x='t' y={varGraphPair[metric]['name'][1]}\n\n                /> :\n                    <VictoryLine name=\"Line1\" style={{ data: { stroke: countyColor, strokeWidth: ({ active }) => active ? 7 : 5 } }} data={dataTS[stateFips + countyFips] ? dataTS[stateFips + countyFips] : dataTS[\"99999\"]}\n                        x='t' y={varGraphPair[metric]['name'][1]}\n                        labels={({ datum }) => `${countyname}\\n` +\n                            `Date: ${new Date(datum.t * 1000).toLocaleDateString()}\\n` +\n                            `${varGraphPair[metric]['legend'][1]}: ${Math.round(datum[varGraphPair[metric]['name'][1]], 2)}\\n` +\n                            `${varGraphPair[metric]['legend'][0]}: ${Math.round(datum[varGraphPair[metric]['name'][0]], 2)}`\n                        }\n                        labelComponent={\n                            <VictoryTooltip\n                                orientation=\"top\"\n                                style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                                constrainToVisibleArea\n                                labelComponent={<VictoryLabel dx={-75} textAnchor='start' />}\n                                flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                            />\n                        }\n                    />}\n                {countyFips === '' ? (varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                    <VictoryLine name=\"Line11\" style={{ data: { stroke: '#007dba', strokeWidth: ({ active }) => active ? 5 : 3 } }} data={dataTS[stateFips] ? dataTS[stateFips] : dataTS[\"99999\"]}\n                        x='t' y={varGraphPair[metric]['name'][1]}\n                        labels={({ datum }) => [`Georgia\\n`,\n                            `Date: ${new Date(datum.t * 1000).toLocaleDateString()}    \\n`,\n                            `${varGraphPair[metric]['legend'][1]}: ${Math.round(datum[varGraphPair[metric]['name'][1]], 2)}\\n`,\n                            `${varGraphPair[metric]['legend'][0]}: ${Math.round(datum[varGraphPair[metric]['name'][0]], 2)}`\n                        ]}\n                        labelComponent={\n                            <VictoryTooltip\n                                // orientation=\"top\"\n                                style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                                constrainToVisibleArea\n                                // flyoutComponent={<CustomFlyout/>}\n                                labelComponent={<VictoryLabel dx={-80} textAnchor='start' />}\n                                flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                            />\n                        }\n                    /> :\n                    <VictoryLine name=\"Line11\" style={{ data: { stroke: '#007dba', strokeWidth: ({ active }) => active ? 5 : 3 } }} data={dataTS[stateFips] ? dataTS[stateFips] : dataTS[\"99999\"]}\n                        x='t' y={varGraphPair[metric]['name'][1]}\n                        labels={({ datum }) => [`Georgia\\n`,\n                            `Date: ${new Date(datum.t * 1000).toLocaleDateString()}    \\n`,\n                            `${varGraphPair[metric]['legend'][1]}: ${Math.round(datum[varGraphPair[metric]['name'][1]], 2)}\\n`,\n                            `${varGraphPair[metric]['legend'][0]}: ${Math.round(datum[varGraphPair[metric]['name'][0]], 2)}`\n                        ]}\n                        labelComponent={\n                            <VictoryTooltip\n                                // orientation=\"top\"\n                                style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                                constrainToVisibleArea\n                                // flyoutComponent={<CustomFlyout/>}\n                                labelComponent={<VictoryLabel dx={-80} textAnchor='start' />}\n                                flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                            />\n                        }\n\n                    />) :\n                    (varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                        <VictoryAxis dependentAxis tickCount={6}\n                            style={{\n                                tickLabels: { fontSize: 17, padding: 5 }\n                            }}\n                            tickFormat={(y) => (y < 1000 ? (Math.round(y, 2) === 0.00 ? \" \" : y) : (y / 1000 + 'k'))} /> :\n                        <VictoryLine name=\"Line11\" style={{ data: { stroke: '#007dba', strokeWidth: ({ active }) => active ? 5 : 3 } }} data={dataTS[stateFips] ? dataTS[stateFips] : dataTS[\"99999\"]}\n                            x='t' y={varGraphPair[metric]['name'][1]}\n                            labels={({ datum }) => [`Georgia\\n`,\n                                `Date: ${new Date(datum.t * 1000).toLocaleDateString()}    \\n`,\n                                `${varGraphPair[metric]['legend'][1]}: ${Math.round(datum[varGraphPair[metric]['name'][1]], 2)}\\n`,\n                                `${varGraphPair[metric]['legend'][0]}: ${Math.round(datum[varGraphPair[metric]['name'][0]], 2)}`\n                            ]}\n                            labelComponent={\n                                <VictoryTooltip\n                                    // orientation=\"top\"\n                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                                    constrainToVisibleArea\n                                    // flyoutComponent={<CustomFlyout/>}\n                                    labelComponent={<VictoryLabel dx={-80} textAnchor='start' />}\n                                    flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                />\n                            }\n                        />\n                    )}\n                \n            </VictoryChart>\n            \n            )\n            \n    }\n    \n}\n\n\n// [\"casescum\",\n// \"deathscum\",\n// \"casescumR\",\n// \"deathscumR\",\n// \"casescum14dayR\"] \n\n\nfunction DiscrpMap(props) {\n    if (props.name === 'casescum') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                The map shows the total number of COVID-19 cases recorded in each county. The darker shading indicates a greater number of cases.\n                This number represents confirmed cases only, defined as an individual with a positive molecular test. Only molecular test results\n                are used in identifying confirmed cases. These test results are reported through multiple sources including:\n                <br></br>\n\n                <List as='ul'>\n                    <List.Item as='li'>Electronic Lab Reporting (ELR)</List.Item>\n                    <List.Item as='li'>State Electronic Notifiable Disease Surveillance System (SendSS)</List.Item>\n                    <List.Item as='li'>Faxed case reports</List.Item>\n                    <List.Item as='li'>Calls from providers to DPH</List.Item>\n                </List>\n            </p>\n        )\n    }\n    if (props.name === 'deathscum') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                The map shows the total number of COVID-19 deaths recorded in each county. This number includes confirmed COVID-19 cases that were\n                either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by death certificates with COVID-19\n                indicated as the cause of death.\n            </p>\n        )\n    }\n    if (props.name === 'casescumR') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                The map shows the total number of COVID-19 cases per 100,000 residents recorded in each county. The darker shading indicates a greater number\n                of cases per 100,000 residents. This number represents confirmed cases only, defined as an individual with a positive molecular test. Only molecular\n                test results are used in identifying confirmed cases. These test results are reported through multiple sources including:\n                <br></br>\n                <List as='ul'>\n                    <List.Item as='li'>Electronic Lab Reporting (ELR)</List.Item>\n                    <List.Item as='li'>State Electronic Notifiable Disease Surveillance System (SendSS)</List.Item>\n                    <List.Item as='li'>Faxed case reports</List.Item>\n                    <List.Item as='li'>Calls from providers to DPH</List.Item>\n                </List>\n            </p>\n        )\n    }\n    if (props.name === 'deathscumR') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                The map shows the total number of COVID-19 deaths per 100,000 residents recorded in each county. This number includes confirmed COVID-19 cases that\n                were either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by death certificates with COVID-19 indicated as the cause of death.\n            </p>\n        )\n    }\n    if (props.name === 'casescum14dayR') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                The map shows the number of new COVID-19 cases per 100,000 residents recorded in the last two weeks for each county. The darker shading indicates a greater number of cases per 100,000\n                residents in the last two weeks. This number represents confirmed cases only, defined as an individual with a positive molecular test. Only molecular test results are used in identifying\n                confirmed cases. These test results are reported through multiple sources including:\n                <br></br>\n\n                <List as='ul'>\n                    <List.Item as='li'>Electronic Lab Reporting (ELR)</List.Item>\n                    <List.Item as='li'>State Electronic Notifiable Disease Surveillance System (SendSS)</List.Item>\n                    <List.Item as='li'>Faxed case reports</List.Item>\n                    <List.Item as='li'>Calls from providers to DPH</List.Item>\n                </List>\n            </p>\n        )\n    }\n}\n\nfunction DiscrpChart(props) {\n    if (props.name === 'casescum') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                This chart shows the daily number of new confirmed COVID-19 cases in {props.county}. The vertical bars show the\n                number of new daily cases while the line shows the 7-day moving average of new daily cases. The daily COVID-19\n                case numbers represent confirmed cases only, defined as an individual with a positive molecular test. Only molecular\n                test results are used in identifying confirmed cases. These test results are reported through multiple sources including:\n                <br></br>\n\n                <List as='ul'>\n                    <List.Item as='li'>Electronic Lab Reporting (ELR)</List.Item>\n                    <List.Item as='li'>State Electronic Notifiable Disease Surveillance System (SendSS)</List.Item>\n                    <List.Item as='li'>Faxed case reports</List.Item>\n                    <List.Item as='li'>Calls from providers to DPH</List.Item>\n                </List>\n                <br></br>\n                The date refers to the date the case was reported to DPH.\n                {/* The daily number reflects the date the case was first reported to DPH. */}\n            </p>\n        )\n    }\n    if (props.name === 'deathscum') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                This chart shows the daily number of new confirmed COVID-19 deaths in {props.county}. The vertical bars show the number of new daily\n                deaths while the line shows the 7-day moving average of new daily deaths. This number includes confirmed COVID-19 cases that were\n                either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by death certificates with COVID-19\n                indicated as the cause of death. The date refers to the date the death was reported to DPH.\n                {/* The daily number reflects the date the death was first reported to DPH. */}\n            </p>\n        )\n    }\n    if (props.name === 'casescumR') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                This chart shows the daily number of new confirmed COVID-19 cases per 100,000 residents in {props.county}. The vertical bars show the number of new\n                daily cases per 100,000 residents while the line shows the 7-day moving average of new daily cases. The daily COVID-19 case numbers represent\n                confirmed cases only, defined as an individual with a positive molecular test. Only molecular test results are used in identifying confirmed cases.\n                These test results are reported through multiple sources including:\n                <br></br>\n                <List as='ul'>\n                    <List.Item as='li'>Electronic Lab Reporting (ELR)</List.Item>\n                    <List.Item as='li'>State Electronic Notifiable Disease Surveillance System (SendSS)</List.Item>\n                    <List.Item as='li'>Faxed case reports</List.Item>\n                    <List.Item as='li'>Calls from providers to DPH</List.Item>\n                </List>\n                The date refers to the date the case was reported to DPH.\n                            {/* The daily number reflects the date the case was first reported to DPH. */}\n            </p>\n        )\n    }\n    if (props.name === 'deathscumR') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                This chart shows the daily number of new confirmed COVID-19 deaths per 100,000 residents in {props.county}. The vertical bars show the number of new daily deaths\n               per 100,000 residents while the line shows the 7-day moving average of new daily deaths per 100,000 residents. This number includes confirmed COVID-19 cases\n               that were either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by death certificates with COVID-19 indicated\n               as the cause of death. The date refers to the date the death was reported to DPH.\n               {/* The daily number reflects the date the death was first reported to DPH. */}\n            </p>\n        )\n    }\n    if (props.name === 'casescum14dayR') {\n        return (\n            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                    This chart shows the daily number of new confirmed COVID-19 cases in {props.county}. The vertical bars show the\n                number of new daily cases while the line shows the 7-day moving average of new daily cases. The daily COVID-19\n                case numbers represent confirmed cases only, defined as an individual with a positive molecular test. Only molecular\n                test results are used in identifying confirmed cases. These test results are reported through multiple sources including:\n                <br></br>\n\n                    <List as='ul'>\n                        <List.Item as='li'>Electronic Lab Reporting (ELR)</List.Item>\n                        <List.Item as='li'>State Electronic Notifiable Disease Surveillance System (SendSS)</List.Item>\n                        <List.Item as='li'>Faxed case reports</List.Item>\n                        <List.Item as='li'>Calls from providers to DPH</List.Item>\n                    </List>\n                    <br></br>\n                    The date refers to the date the case was reported to DPH.\n                {/* The daily number reflects the date the case was first reported to DPH. */}\n            </p>\n            </p>\n        )\n    }\n}\n\nexport default function StateMap(props) {\n\n    // let { stateFips } = useParams();\n    const stateFips = '13';\n    const [config, setConfig] = useState();\n    // const [stateName, setStateName] = useState('');\n    const countyFips1 = useRef('');\n    const countyName1 = useRef('Georgia');\n    var [countyFips, setCountyFips] = useState(() => {\n        const initialState ='';\n        return initialState;\n      });\n\n\n      const panes = [\n        { menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>COVID-19 Community<br></br>Vulnerability Index</p>}, render: () => \n        <Grid id=\"cvi\" style={{ paddingBottom: '2em' }}>\n        <Grid.Row>\n            <div id='cvi' style={{ width: \"100%\", height: \"100%\" }}>\n                <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                    <Header.Content>COVID-19 by Community Vulnerability Index</Header.Content>\n                </Header>\n            </div>\n        </Grid.Row>\n        <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n            <Grid.Row style={{ paddingTop: \"0\" }}>\n                <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                    <Header.Content>\n                        Georgia Community Vulnerability Index Map\n    </Header.Content>\n                </Header>\n            </Grid.Row>\n            <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                <svg width=\"400\" height=\"70\">\n                    {_.map(colorPalette2, (color, i) => {\n                        return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                    })}\n                    <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least vulnerable</text>\n                    <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                    <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most vulnerable</text>\n                    <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                    {_.map(thresh_chara['cvi'], (splitpoint, i) => {\n                        return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['cvi'][i]}</text>\n                    })}\n                </svg>\n                <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                    <Geographies data-tip='cvi' data-for='cvi' geography={config.url}>\n                        {({ geographies }) => geographies.map(geo =>\n                            <Geography\n                                key={geo.rsmKey}\n                                geography={geo}\n\n                                style={{\n                                    default: {\n                                        //  fill: \"#ECEFF1\",\n                                        stroke: \"#607D8B\",\n                                        strokeWidth: 0.95,\n                                        outline: \"none\",\n                                    },\n                                    pressed: {\n                                        outline: \"none\",\n                                    }\n                                }}\n                                onMouseEnter={() => {\n\n                                    setCountyFipscvi(geo.properties.COUNTYFP);\n                                    setCountyNamecvi(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                    setTooltipContentcvi(\n                                    <p>\n                                        {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['cvi'].toFixed(2) */}\n                                        <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                        <b>CCVI</b>: {dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'].toFixed(2)} <br />\n                                        <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                        <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                    </p>);\n\n                                }}\n                                onMouseLeave={() => {\n                                    setTooltipContentcvi(\"\")\n                                }}\n                                fill={countyFipscvi === geo.properties.COUNTYFP ? countyColor :\n                                    ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                        dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                        colortopic[stateFips + geo.properties.COUNTYFP]['cvi_index'] :\n                                        ( dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                            />\n                        )}\n                    </Geographies>\n                </ComposableMap>\n            </Grid.Row>\n            <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n            </Grid.Row>\n            <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                <Accordion defaultActiveIndex={1} panels={[\n                    {\n                        key: 'acquire-dog',\n                        title: {\n                            content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                            icon: 'dropdown',\n                        },\n                        content: {\n                            content: (\n                                // <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                //     This map shows each Georgia county according to its Community Vulnerability ranking. County rankings are based on CCVI quintile, which ranks each county in one of five groups depending on\n                                //     CCVI score. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                //     characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                // </p>\n                                <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                    This map shows each Georgia county according to its Community Vulnerability ranking. County rankings are based on quintiles of the CCVI. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic. \n                                </p>\n                            ),\n                        },\n                    }\n                ]\n\n                } />\n\n            </Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n        <Grid.Row columns={1}>\n            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                    <Header.Content>\n                        COVID-19 Case Rate by Community Vulnerability Index\n        </Header.Content>\n                </Header>\n                <VictoryChart\n                    theme={VictoryTheme.material}\n                    width={630}\n                    height={230}\n                    domainPadding={20}\n                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                    padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                    style={{ fontSize: \"14pt\" }}\n                    containerComponent={<VictoryContainer responsive={false} />}\n                >\n                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                    <VictoryAxis dependentAxis\n                        label='COVID-19 Cases per 100,000 Residents'\n                        style={{\n                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                        }} />\n                    <VictoryBar\n                        horizontal\n                        barRatio={0.75}\n                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                        data={[\n                            { key: \"Very low CCVI\", 'value': (data_index['cvi_index'][\"low20\"]['casescumR'] / data_index['cvi_index'][\"low20\"]['casescumR']) * data_index['cvi_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['cvi_index'][\"low20\"]['county_list'] },\n                            { key: \"Low CCVI\", 'value': (data_index['cvi_index'][\"Q2\"]['casescumR'] / data_index['cvi_index'][\"Q2\"]['casescumR']) * data_index['cvi_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['cvi_index'][\"Q2\"]['county_list'] },\n                            { key: \"Moderate CCVI\", 'value': (data_index['cvi_index'][\"Q3\"]['casescumR'] / data_index['cvi_index'][\"Q3\"]['casescumR']) * data_index['cvi_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['cvi_index'][\"Q3\"]['county_list'] },\n                            { key: \"High CCVI\", 'value': (data_index['cvi_index'][\"Q4\"]['casescumR'] / data_index['cvi_index'][\"Q4\"]['casescumR']) * data_index['cvi_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['cvi_index'][\"Q4\"]['county_list'] },\n                            { key: \"Very high CCVI\", 'value': (data_index['cvi_index'][\"high20\"]['casescumR'] / data_index['cvi_index'][\"high20\"]['casescumR']) * data_index['cvi_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['cvi_index'][\"high20\"]['county_list'] }\n                        ]}\n                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                        style={{\n                            data: {\n                                fill: ({ datum }) => datum.ez.includes(countyFipscvi) ? countyColor : casesColor[1]\n                            }\n                        }}\n                        // style={{\n                        //     data: {\n                        //         fill: casesColor[1]\n                        //     }\n                        // }}\n                        x=\"key\"\n                        y=\"value\"\n                    />\n                </VictoryChart>\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                    <Header.Content>\n                        COVID-19 Death Rate by Community Vulnerability Index\n    </Header.Content>\n                </Header>\n                <VictoryChart\n                    theme={VictoryTheme.material}\n                    width={630}\n                    height={230}\n                    domainPadding={20}\n                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                    padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                    style={{ fontSize: \"14pt\" }}\n                    containerComponent={<VictoryContainer responsive={false} />}\n                >\n                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                    <VictoryAxis dependentAxis\n                        label='COVID-19 Deaths per 100,000 Residents'\n                        style={{\n                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                        }} />\n                    <VictoryBar\n                        horizontal\n                        barRatio={0.75}\n                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                        data={[\n                            { key: \"Very low CCVI\", 'value': data_index['cvi_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['cvi_index'][\"low20\"]['county_list'] },\n                            { key: \"Low CCVI\", 'value': data_index['cvi_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['cvi_index'][\"Q2\"]['county_list'] },\n                            { key: \"Moderate CCVI\", 'value': data_index['cvi_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['cvi_index'][\"Q3\"]['county_list'] },\n                            { key: \"High CCVI\", 'value': data_index['cvi_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['cvi_index'][\"Q4\"]['county_list'] },\n                            { key: \"Very high CCVI\", 'value': data_index['cvi_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['cvi_index'][\"high20\"]['county_list'] }\n                        ]}\n                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                        style={{\n                            data: {\n                                fill: ({ datum }) => datum.ez.includes(countyFipscvi) ? countyColor : mortalityColor[1]\n                            }\n                        }}\n                        x=\"key\"\n                        y=\"value\"\n                    />\n                </VictoryChart>\n\n            </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n            </Grid.Row>\n        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n            <Accordion defaultActiveIndex={1} panels={[\n                {\n                    key: 'acquire-dog',\n                    title: {\n                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                        icon: 'dropdown',\n                    },\n                    content: {\n                        content: (\n                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by CCVI ranking.\n                                The y-axis displays CCVI rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by CCVI. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county characteristic, and the very high CCVI contains counties with values in the 80%-100% range for this county characteristic. Low CCVI indicates counties in the 20%-40% range, moderate CCVI indicates counties in the 40%-60% range, and high CCVI indecates counties in the 60%-80% range.\n                            </p>\n                        ),\n                    },\n                }\n            ]\n\n            } />\n\n        </Grid.Row>\n\n    </Grid.Column>\n\n                                        </Grid> },\n        { menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>Socioeconomic<br></br>Status</p>}, render: () => \n        <Grid id=\"th1\" style={{ paddingBottom: '2em' }}>\n        <Grid.Row>\n            <div style={{ width: \"100%\", height: \"100%\" }}>\n                <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                    <Header.Content>CCVI Theme 1 - Socioeconomic Status (SS)</Header.Content>\n                </Header>\n            </div>\n        </Grid.Row>\n        \n        <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n            <Grid.Row style={{ paddingTop: \"0\" }}>\n                <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                    <Header.Content>\n                        Georgia Socioeconomic Status Map\n    </Header.Content>\n                </Header>\n            </Grid.Row>\n            <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                <svg width=\"400\" height=\"70\">\n                    {_.map(colorPalette2, (color, i) => {\n                        return <rect key={i} x={80 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                    })}\n                    <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least SS</text>\n                    <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                    <text x={130 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most SS</text>\n                    <text x={130 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                    {_.map(thresh_chara['theme1'], (splitpoint, i) => {\n                        return <text key={i} x={80 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['theme1'][i]}</text>\n                    })}\n                </svg>\n                <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                    <Geographies data-tip='th1' data-for='th1' geography={config.url}>\n                        {({ geographies }) => geographies.map(geo =>\n                            <Geography\n                                key={geo.rsmKey}\n                                geography={geo}\n\n                                style={{\n                                    default: {\n                                        //  fill: \"#ECEFF1\",\n                                        stroke: \"#607D8B\",\n                                        strokeWidth: 0.95,\n                                        outline: \"none\",\n                                    },\n                                    pressed: {\n                                        outline: \"none\",\n                                    }\n                                }}\n                                onMouseEnter={() => {\n\n                                    setCountyFipsth1(geo.properties.COUNTYFP);\n                                    // setCountyNamecvi1(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                    \n                                    // setTooltipContentcvi(fips2county[stateFips + geo.properties.COUNTYFP] + \"'s SS: \" + dataUs[stateFips + geo.properties.COUNTYFP]['cvi'].toFixed(2));\n                                    setTooltipContentcvi(\n                                        <p>\n                                            {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['cvi'].toFixed(2) */}\n                                            <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                            <b>SS</b>: {dataCha[stateFips + geo.properties.COUNTYFP]['RPL_THEME1'].toFixed(2)} <br />\n                                            <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                            <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                        </p>);\n\n                                }}\n                                onMouseLeave={() => {\n                                    // console.log(countyFipsth1)\n                                    setTooltipContentcvi(\"\")\n                                }}\n                                fill={countyFipsth1 === geo.properties.COUNTYFP ? countyColor :\n                                    (( dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                        dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                        colortopic[stateFips + geo.properties.COUNTYFP]['theme1_index'] :\n                                        (dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                            />\n                        )}\n                    </Geographies>\n                </ComposableMap>\n\n            </Grid.Row>\n            <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n            </Grid.Row>\n            <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                <Accordion defaultActiveIndex={1} panels={[\n                    {\n                        key: 'acquire-dog',\n                        title: {\n                            content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                            icon: 'dropdown',\n                        },\n                        content: {\n                            content: (\n                                // <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                //     This map shows each Georgia county according to its Community Vulnerability ranking. County rankings are based on CCVI quintile, which ranks each county in one of five groups depending on\n                                //     CCVI score. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                //     characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                // </p>\n                                <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                    This map shows each Georgia county according to its Socioeconomic Status ranking. County rankings are based on quintiles of the Socioeconomic Status. The ranking classified counties into five groups designed to be of equal size, so that the lowest SS contains the counties with values in the 0%-20% range for this county characteristic, and the highest SS contains counties with values in the 80%-100% range for this county characteristic. \n                                </p>\n                            ),\n                        },\n                    }\n                ]\n\n                } />\n\n            </Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n        <Grid.Row columns={1}>\n            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                    <Header.Content>\n                        COVID-19 Case Rate by Socioeconomic Status\n        </Header.Content>\n                </Header>\n                <VictoryChart\n                    theme={VictoryTheme.material}\n                    width={630}\n                    height={230}\n                    domainPadding={20}\n                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                    padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                    style={{ fontSize: \"14pt\" }}\n                    containerComponent={<VictoryContainer responsive={false} />}\n                >\n                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                    <VictoryAxis dependentAxis\n                        label='COVID-19 Cases per 100,000 Residents'\n                        style={{\n                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                        }} />\n                    <VictoryBar\n                        horizontal\n                        barRatio={0.75}\n                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                        data={[\n                            { key: \"Very low SS\", 'value': (data_index['theme1_index'][\"low20\"]['casescumR'] / data_index['theme1_index'][\"low20\"]['casescumR']) * data_index['theme1_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['theme1_index'][\"low20\"]['county_list'] },\n                            { key: \"Low SS\", 'value': (data_index['theme1_index'][\"Q2\"]['casescumR'] / data_index['theme1_index'][\"Q2\"]['casescumR']) * data_index['theme1_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['theme1_index'][\"Q2\"]['county_list'] },\n                            { key: \"Moderate SS\", 'value': (data_index['theme1_index'][\"Q3\"]['casescumR'] / data_index['theme1_index'][\"Q3\"]['casescumR']) * data_index['theme1_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['theme1_index'][\"Q3\"]['county_list'] },\n                            { key: \"High SS\", 'value': (data_index['theme1_index'][\"Q4\"]['casescumR'] / data_index['theme1_index'][\"Q4\"]['casescumR']) * data_index['theme1_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['theme1_index'][\"Q4\"]['county_list'] },\n                            { key: \"Very high SS\", 'value': (data_index['theme1_index'][\"high20\"]['casescumR'] / data_index['theme1_index'][\"high20\"]['casescumR']) * data_index['theme1_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['theme1_index'][\"high20\"]['county_list'] }\n                        ]}\n                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                        style={{\n                            data: {\n                                fill: ({ datum }) => datum.ez.includes(countyFipsth1) ? countyColor : casesColor[1]\n                            }\n                        }}\n                        // style={{\n                        //     data: {\n                        //         fill: casesColor[1]\n                        //     }\n                        // }}\n                        x=\"key\"\n                        y=\"value\"\n                    />\n                </VictoryChart>\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                    <Header.Content>\n                        COVID-19 Death Rate by Socioeconomic Status\n    </Header.Content>\n                </Header>\n                <VictoryChart\n                    theme={VictoryTheme.material}\n                    width={630}\n                    height={230}\n                    domainPadding={20}\n                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                    padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                    style={{ fontSize: \"14pt\" }}\n                    containerComponent={<VictoryContainer responsive={false} />}\n                >\n                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                    <VictoryAxis dependentAxis\n                        label='COVID-19 Deaths per 100,000 Residents'\n                        style={{\n                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                        }} />\n                    <VictoryBar\n                        horizontal\n                        barRatio={0.75}\n                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                        data={[\n                            { key: \"Very low SS\", 'value': data_index['theme1_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['theme1_index'][\"low20\"]['county_list'] },\n                            { key: \"Low SS\", 'value': data_index['theme1_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['theme1_index'][\"Q2\"]['county_list'] },\n                            { key: \"Moderate SS\", 'value': data_index['theme1_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['theme1_index'][\"Q3\"]['county_list'] },\n                            { key: \"High SS\", 'value': data_index['theme1_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['theme1_index'][\"Q4\"]['county_list'] },\n                            { key: \"Very high SS\", 'value': data_index['theme1_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['theme1_index'][\"high20\"]['county_list'] }\n                        ]}\n                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                        style={{\n                            data: {\n                                fill: ({ datum }) => datum.ez.includes(countyFipsth1) ? countyColor : mortalityColor[1]\n                            }\n                        }}\n                        x=\"key\"\n                        y=\"value\"\n                    />\n                </VictoryChart>\n\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n            </Grid.Row>\n        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n            <Accordion defaultActiveIndex={1} panels={[\n                {\n                    key: 'acquire-dog',\n                    title: {\n                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                        icon: 'dropdown',\n                    },\n                    content: {\n                        content: (\n                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                Socioeconomic Status is a measure of county-level relative income, employment and education, and the rate of uninsured people (range: 0 to 1; higher values indicate more vulnerability).\n                                <br></br>\n                                <List as='ul'>\n                                        <List.Item as='li'>This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by Socioeconomic Status ranking.</List.Item>\n                                        <List.Item as='li'>The y-axis displays Socioeconomic Status rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by Socioeconomic Status.</List.Item>\n                                        <List.Item as='li'>The ranking classified counties into five groups designed to be of equal size, so that the very low SS contains the counties with values in the 0%-20% range for this county characteristic, and the very high SS contains counties with values in the 80%-100% range for this county characteristic. Low SS indicates counties in the 20%-40% range, moderate SS indicates counties in the 40%-60% range, and high SS indecates counties in the 60%-80% range.</List.Item>\n                                        <List.Item as='li'>Data and descriptions can be found <a href=\"https://www.precisionforcoviddata.org/\" target=\"_blank\">here</a></List.Item>\n\n                                    </List>\n                                    \n                            </p>\n                        ),\n                    },\n                }\n            ]\n\n            } />\n\n        </Grid.Row>\n\n        </Grid.Column>\n\n                                        </Grid> },\n        { menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>Minority Status<br></br>and Language</p>}, render: () => \n            <Grid id=\"th2\" style={{ paddingBottom: '2em' }}>\n                <Grid.Row>\n                    <div style={{ width: \"100%\", height: \"100%\" }}>\n                        <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                            <Header.Content>CCVI Theme 2 - Minority Status and Language (MSL)</Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Row>\n\n                <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                    <Grid.Row style={{ paddingTop: \"0\" }}>\n                        <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                            <Header.Content>\n                                Georgia Minority Status and Language Map\n    </Header.Content>\n                        </Header>\n                    </Grid.Row>\n                    <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                        <svg width=\"400\" height=\"70\">\n                            {_.map(colorPalette2, (color, i) => {\n                                return <rect key={i} x={80 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                            })}\n                            <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least MSL</text>\n                            <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                            <text x={130 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most MSL</text>\n                            <text x={130 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                            {_.map(thresh_chara['theme2'], (splitpoint, i) => {\n                                return <text key={i} x={80 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['theme2'][i]}</text>\n                            })}\n                        </svg>\n                        <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                            <Geographies data-tip='th2' data-for='th2' geography={config.url}>\n                                {({ geographies }) => geographies.map(geo =>\n                                    <Geography\n                                        key={geo.rsmKey}\n                                        geography={geo}\n\n                                        style={{\n                                            default: {\n                                                //  fill: \"#ECEFF1\",\n                                                stroke: \"#607D8B\",\n                                                strokeWidth: 0.95,\n                                                outline: \"none\",\n                                            },\n                                            pressed: {\n                                                outline: \"none\",\n                                            }\n                                        }}\n                                        onMouseEnter={() => {\n\n                                            setCountyFipsth2(geo.properties.COUNTYFP);\n                                            // setCountyNamecvi2(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                            setTooltipContentcvi(\n                                                <p>\n                                                    {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['cvi'].toFixed(2) */}\n                                                    <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                                    <b>MSL</b>: {dataCha[stateFips + geo.properties.COUNTYFP]['RPL_THEME2'].toFixed(2)} <br />\n                                                    <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                                    <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                                </p>);\n\n                                        }}\n                                        onMouseLeave={() => {\n                                            // console.log(countyFipsth1)\n                                            setTooltipContentcvi(\"\")\n                                        }}\n                                        fill={countyFipsth2 === geo.properties.COUNTYFP ? countyColor :\n                                            ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                                dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                                colortopic[stateFips + geo.properties.COUNTYFP]['theme2_index'] :\n                                                (dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['cvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                    />\n                                )}\n                            </Geographies>\n                        </ComposableMap>\n\n                    </Grid.Row>\n                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                    </Grid.Row>\n                    <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                        <Accordion defaultActiveIndex={1} panels={[\n                            {\n                                key: 'acquire-dog',\n                                title: {\n                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                    icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n                                        // <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                        //     This map shows each Georgia county according to its Community Vulnerability ranking. County rankings are based on CCVI quintile, which ranks each county in one of five groups depending on\n                                        //     CCVI score. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                        //     characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                        // </p>\n                                        <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                            This map shows each Georgia county according to its Minority Status and Language ranking. County rankings are based on quintiles of the Minority Status and Language. The ranking classified counties into five groups designed to be of equal size, so that the lowest MSL contains the counties with values in the 0%-20% range for this county characteristic, and the highest MSL contains counties with values in the 80%-100% range for this county characteristic.\n                                        </p>\n                                    ),\n                                },\n                            }\n                        ]\n\n                        } />\n\n                    </Grid.Row>\n                </Grid.Column>\n                <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                    <Grid.Row columns={1}>\n                        <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                            <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                <Header.Content>\n                                    COVID-19 Case Rate by Minority Status and Language\n        </Header.Content>\n                            </Header>\n                            <VictoryChart\n                                theme={VictoryTheme.material}\n                                width={630}\n                                height={230}\n                                domainPadding={20}\n                                minDomain={{ y: props.ylog ? 1 : 0 }}\n                                padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                                style={{ fontSize: \"14pt\" }}\n                                containerComponent={<VictoryContainer responsive={false} />}\n                            >\n                                <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                <VictoryAxis dependentAxis\n                                    label='COVID-19 Cases per 100,000 Residents'\n                                    style={{\n                                        ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                        labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                    }} />\n                                <VictoryBar\n                                    horizontal\n                                    barRatio={0.75}\n                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                    data={[\n                                        { key: \"Very low MSL\", 'value': (data_index['theme2_index'][\"low20\"]['casescumR'] / data_index['theme2_index'][\"low20\"]['casescumR']) * data_index['theme2_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['theme2_index'][\"low20\"]['county_list'] },\n                                        { key: \"Low MSL\", 'value': (data_index['theme2_index'][\"Q2\"]['casescumR'] / data_index['theme2_index'][\"Q2\"]['casescumR']) * data_index['theme2_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['theme2_index'][\"Q2\"]['county_list'] },\n                                        { key: \"Moderate MSL\", 'value': (data_index['theme2_index'][\"Q3\"]['casescumR'] / data_index['theme2_index'][\"Q3\"]['casescumR']) * data_index['theme2_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['theme2_index'][\"Q3\"]['county_list'] },\n                                        { key: \"High MSL\", 'value': (data_index['theme2_index'][\"Q4\"]['casescumR'] / data_index['theme2_index'][\"Q4\"]['casescumR']) * data_index['theme2_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['theme2_index'][\"Q4\"]['county_list'] },\n                                        { key: \"Very high MSL\", 'value': (data_index['theme2_index'][\"high20\"]['casescumR'] / data_index['theme2_index'][\"high20\"]['casescumR']) * data_index['theme2_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['theme2_index'][\"high20\"]['county_list'] }\n                                    ]}\n                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                    style={{\n                                        data: {\n                                            fill: ({ datum }) => datum.ez.includes(countyFipsth2) ? countyColor : casesColor[1]\n                                        }\n                                    }}\n                                    // style={{\n                                    //     data: {\n                                    //         fill: casesColor[1]\n                                    //     }\n                                    // }}\n                                    x=\"key\"\n                                    y=\"value\"\n                                />\n                            </VictoryChart>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n                        <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                            <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                <Header.Content>\n                                    COVID-19 Death Rate by Minority Status and Language\n    </Header.Content>\n                            </Header>\n                            <VictoryChart\n                                theme={VictoryTheme.material}\n                                width={630}\n                                height={230}\n                                domainPadding={20}\n                                minDomain={{ y: props.ylog ? 1 : 0 }}\n                                padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                                style={{ fontSize: \"14pt\" }}\n                                containerComponent={<VictoryContainer responsive={false} />}\n                            >\n                                <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                <VictoryAxis dependentAxis\n                                    label='COVID-19 Deaths per 100,000 Residents'\n                                    style={{\n                                        ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                        labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                    }} />\n                                <VictoryBar\n                                    horizontal\n                                    barRatio={0.75}\n                                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                    data={[\n                                        { key: \"Very low MSL\", 'value': data_index['theme2_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['theme2_index'][\"low20\"]['county_list'] },\n                                        { key: \"Low MSL\", 'value': data_index['theme2_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['theme2_index'][\"Q2\"]['county_list'] },\n                                        { key: \"Moderate MSL\", 'value': data_index['theme2_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['theme2_index'][\"Q3\"]['county_list'] },\n                                        { key: \"High MSL\", 'value': data_index['theme2_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['theme2_index'][\"Q4\"]['county_list'] },\n                                        { key: \"Very high MSL\", 'value': data_index['theme2_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['theme2_index'][\"high20\"]['county_list'] }\n                                    ]}\n                                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                    style={{\n                                        data: {\n                                            fill: ({ datum }) => datum.ez.includes(countyFipsth2) ? countyColor : mortalityColor[1]\n                                        }\n                                    }}\n                                    x=\"key\"\n                                    y=\"value\"\n                                />\n                            </VictoryChart>\n\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                    </Grid.Row>\n                    <Grid.Row style={{ paddingLeft: '4.9em', paddingRight: '2em' }}>\n                        <Accordion defaultActiveIndex={1} panels={[\n                            {\n                                key: 'acquire-dog',\n                                title: {\n                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                    icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n                                        <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                            Minority Status & Language is a measure of county-level relative minorities and non-English speaking people within a community (range: 0 to 1; higher values indicate more vulnerability).\n                                            <br></br>\n                                                                            <List as='ul'>\n                                                                            <List.Item as='li'>This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by Minority Status and Language ranking.</List.Item>\n                                                                            <List.Item as='li'>The y-axis displays Minority Status and Language rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                            of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by Minority Status and Language.</List.Item>\n                                                                            <List.Item as='li'>The ranking classified counties into five groups designed to be of equal size, so that the very low MSL contains the counties with values in the 0%-20% range for this county characteristic, and the very high MSL contains counties with values in the 80%-100% range for this county characteristic. Low MSL indicates counties in the 20%-40% range, moderate MSL indicates counties in the 40%-60% range, and high MSL indecates counties in the 60%-80% range.</List.Item>\n                                                                            <List.Item as='li'>Data and descriptions can be found <a href=\"https://www.precisionforcoviddata.org/\" target=\"_blank\">here</a></List.Item>\n\n                                                                        </List>\n                                            \n                                             \n                                        </p>\n                                    ),\n                                },\n                            }\n                        ]\n\n                        } />\n\n                    </Grid.Row>\n\n                </Grid.Column>\n\n            </Grid>                                       \n        },\n        { menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>Housing Type<br></br>Transportation</p>}, render: () => \n                <Grid id=\"th3\" style={{ paddingBottom: '2em' }}>\n                    <Grid.Row>\n                        <div style={{ width: \"100%\", height: \"100%\" }}>\n                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                <Header.Content>CCVI Theme 3 - Housing Type, Transportation, Household Composition & Disability (HTHD)</Header.Content>\n                            </Header>\n                        </div>\n                    </Grid.Row>\n\n                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                        <Grid.Row style={{ paddingTop: \"0\" }}>\n                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                <Header.Content>\n                                    Georgia Housing Type, Transportation, Household Composition & Disability Map\n        </Header.Content>\n                            </Header>\n                        </Grid.Row>\n                        <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                            <svg width=\"400\" height=\"70\">\n                                {_.map(colorPalette2, (color, i) => {\n                                    return <rect key={i} x={85 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                                })}\n                                <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least HTHD</text>\n                                <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                                <text x={130 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most HTHD</text>\n                                <text x={130 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                                {_.map(thresh_chara['theme3'], (splitpoint, i) => {\n                                    return <text key={i} x={85 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['theme3'][i]}</text>\n                                })}\n                            </svg>\n                            <ComposableMap projection=\"geoAlbersUsa\"\n                                projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                                width={400}\n                                height={460}\n                                data-tip=\"\"\n                                offsetX={config.offsetX1+7}\n                                offsetY={config.offsetY2}>\n                                <Geographies data-tip='th3' data-for='th3' geography={config.url}>\n                                    {({ geographies }) => geographies.map(geo =>\n                                        <Geography\n                                            key={geo.rsmKey}\n                                            geography={geo}\n\n                                            style={{\n                                                default: {\n                                                    //  fill: \"#ECEFF1\",\n                                                    stroke: \"#607D8B\",\n                                                    strokeWidth: 0.95,\n                                                    outline: \"none\",\n                                                },\n                                                pressed: {\n                                                    outline: \"none\",\n                                                }\n                                            }}\n                                            onMouseEnter={() => {\n\n                                                setCountyFipsth3(geo.properties.COUNTYFP);\n                                                // setCountyNamecvi3(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                setTooltipContentcvi(\n                                                    <p>\n                                                        {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['cvi'].toFixed(2) */}\n                                                        <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                                        <b>HTHD</b>: {dataCha[stateFips + geo.properties.COUNTYFP]['RPL_THEME3'].toFixed(2)} <br />\n                                                        <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                                        <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                                    </p>);\n\n                                            }}\n                                            onMouseLeave={() => {\n                                                // console.log(countyFipsth1)\n                                                setTooltipContentcvi(\"\")\n                                            }}\n                                            fill={countyFipsth3 === geo.properties.COUNTYFP ? countyColor :\n                                                ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                                    dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                                    colortopic[stateFips + geo.properties.COUNTYFP]['theme3_index'] :\n                                                    (dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                        />\n                                    )}\n                                </Geographies>\n                            </ComposableMap>\n\n                        </Grid.Row>\n                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '2em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                        </Grid.Row>\n                        <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                            <Accordion defaultActiveIndex={1} panels={[\n                                {\n                                    key: 'acquire-dog',\n                                    title: {\n                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                        icon: 'dropdown',\n                                    },\n                                    content: {\n                                        content: (\n                                            <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                                This map shows each Georgia county according to its Housing Type, Transportation, Household Composition & Disability ranking. County rankings are based on quintiles of the Housing Type, Transportation, Household Composition & Disability. The ranking classified counties into five groups designed to be of equal size, so that the lowest MSL contains the counties with values in the 0%-20% range for this county characteristic, and the highest MSL contains counties with values in the 80%-100% range for this county characteristic.\n                                            </p>\n                                        ),\n                                    },\n                                }\n                            ]\n\n                            } />\n\n                        </Grid.Row>\n                    </Grid.Column>\n                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                        <Grid.Row columns={1}>\n                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                    <Header.Content>\n                                        COVID-19 Case Rate by Housing Type, Transportation, Household Composition & Disability\n            </Header.Content>\n                                </Header>\n                                <VictoryChart\n                                    theme={VictoryTheme.material}\n                                    width={630}\n                                    height={230}\n                                    domainPadding={20}\n                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                    padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                                    style={{ fontSize: \"14pt\" }}\n                                    containerComponent={<VictoryContainer responsive={false} />}\n                                >\n                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                    <VictoryAxis dependentAxis\n                                        label='COVID-19 Cases per 100,000 Residents'\n                                        style={{\n                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                        }} />\n                                    <VictoryBar\n                                        horizontal\n                                        barRatio={0.75}\n                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                        data={[\n                                            { key: \"Very low HTHD\", 'value': (data_index['theme3_index'][\"low20\"]['casescumR'] / data_index['theme3_index'][\"low20\"]['casescumR']) * data_index['theme3_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['theme3_index'][\"low20\"]['county_list'] },\n                                            { key: \"Low HTHD\", 'value': (data_index['theme3_index'][\"Q2\"]['casescumR'] / data_index['theme3_index'][\"Q2\"]['casescumR']) * data_index['theme3_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['theme3_index'][\"Q2\"]['county_list'] },\n                                            { key: \"Moderate HTHD\", 'value': (data_index['theme3_index'][\"Q3\"]['casescumR'] / data_index['theme3_index'][\"Q3\"]['casescumR']) * data_index['theme3_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['theme3_index'][\"Q3\"]['county_list'] },\n                                            { key: \"High HTHD\", 'value': (data_index['theme3_index'][\"Q4\"]['casescumR'] / data_index['theme3_index'][\"Q4\"]['casescumR']) * data_index['theme3_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['theme3_index'][\"Q4\"]['county_list'] },\n                                            { key: \"Very high HTHD\", 'value': (data_index['theme3_index'][\"high20\"]['casescumR'] / data_index['theme3_index'][\"high20\"]['casescumR']) * data_index['theme3_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['theme3_index'][\"high20\"]['county_list'] }\n                                        ]}\n                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                        style={{\n                                            data: {\n                                                fill: ({ datum }) => datum.ez.includes(countyFipsth3) ? countyColor : casesColor[1]\n                                            }\n                                        }}\n                                        // style={{\n                                        //     data: {\n                                        //         fill: casesColor[1]\n                                        //     }\n                                        // }}\n                                        x=\"key\"\n                                        y=\"value\"\n                                    />\n                                </VictoryChart>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                    <Header.Content>\n                                        COVID-19 Death Rate by Housing Type, Transportation, Household Composition & Disability\n        </Header.Content>\n                                </Header>\n                                <VictoryChart\n                                    theme={VictoryTheme.material}\n                                    width={630}\n                                    height={230}\n                                    domainPadding={20}\n                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                    padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                                    style={{ fontSize: \"14pt\" }}\n                                    containerComponent={<VictoryContainer responsive={false} />}\n                                >\n                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                    <VictoryAxis dependentAxis\n                                        label='COVID-19 Deaths per 100,000 Residents'\n                                        style={{\n                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                        }} />\n                                    <VictoryBar\n                                        horizontal\n                                        barRatio={0.75}\n                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                        data={[\n                                            { key: \"Very low HTHD\", 'value': data_index['theme3_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['theme3_index'][\"low20\"]['county_list'] },\n                                            { key: \"Low HTHD\", 'value': data_index['theme3_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['theme3_index'][\"Q2\"]['county_list'] },\n                                            { key: \"Moderate HTHD\", 'value': data_index['theme3_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['theme3_index'][\"Q3\"]['county_list'] },\n                                            { key: \"High HTHD\", 'value': data_index['theme3_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['theme3_index'][\"Q4\"]['county_list'] },\n                                            { key: \"Very high HTHD\", 'value': data_index['theme3_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['theme3_index'][\"high20\"]['county_list'] }\n                                        ]}\n                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                        style={{\n                                            data: {\n                                                fill: ({ datum }) => datum.ez.includes(countyFipsth3) ? countyColor : mortalityColor[1]\n                                            }\n                                        }}\n                                        x=\"key\"\n                                        y=\"value\"\n                                    />\n                                </VictoryChart>\n\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                        </Grid.Row>\n                        <Grid.Row style={{ paddingLeft: '4.9em', paddingRight: '2em' }}>\n                            <Accordion defaultActiveIndex={1} panels={[\n                                {\n                                    key: 'acquire-dog',\n                                    title: {\n                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                        icon: 'dropdown',\n                                    },\n                                    content: {\n                                        content: (\n                                            <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                                                        Household & Transportation is a measure of county-level relative proportion of residents with crowded housing, access to indoor plumbing, vehicle ownership, and the presence of dependents (range: 0 to 1; higher values indicate more vulnerability).\n                                                                            <br></br>\n                                                                            <List as='ul'>\n                                                                            <List.Item as='li'>This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by Housing Type, Transportation, Household Composition & Disability ranking.</List.Item>\n                                                                            <List.Item as='li'>The y-axis displays Housing Type, Transportation, Household Composition & Disability rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by Housing Type, Transportation, Household Composition & Disability.</List.Item>\n                                                                            <List.Item as='li'>The ranking classified counties into five groups designed to be of equal size, so that the very low HTHD contains the counties with values in the 0%-20% range for this county characteristic, and the very high HTHD contains counties with values in the 80%-100% range for this county characteristic. Low HTHD indicates counties in the 20%-40% range, moderate HTHD indicates counties in the 40%-60% range, and high HTHD indecates counties in the 60%-80% range.</List.Item>\n                                                                            <List.Item as='li'>Data and descriptions can be found <a href=\"https://www.precisionforcoviddata.org/\" target=\"_blank\">here</a></List.Item>\n\n                                                                        </List>\n                                                \n                                                \n                                                 \n                                            </p>\n                                        ),\n                                    },\n                                }\n                            ]\n\n                            } />\n\n                        </Grid.Row>\n\n                    </Grid.Column>\n\n                </Grid>                                       \n        },\n        {menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>Epidemiological<br></br>Factors</p>}, render: () => \n        <Grid id=\"th4\" style={{ paddingBottom: '2em' }}>\n            <Grid.Row>\n                <div style={{ width: \"100%\", height: \"100%\" }}>\n                    <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                        <Header.Content>CCVI Theme 4 - Epidemiological Factors (EF)</Header.Content>\n                    </Header>\n                </div>\n            </Grid.Row>\n\n            <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                <Grid.Row style={{ paddingTop: \"0\" }}>\n                    <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                        <Header.Content>\n                            Georgia Epidemiological Factors Map\n    </Header.Content>\n                    </Header>\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                    <svg width=\"400\" height=\"70\">\n                        {_.map(colorPalette2, (color, i) => {\n                            return <rect key={i} x={80 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                        })}\n                        <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least FS</text>\n                        <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                        <text x={130 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most FS</text>\n                        <text x={130 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                        {_.map(thresh_chara['theme4'], (splitpoint, i) => {\n                            return <text key={i} x={80 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['theme4'][i]}</text>\n                        })}\n                    </svg>\n                    <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                        <Geographies data-tip='th4' data-for='th4' geography={config.url}>\n                            {({ geographies }) => geographies.map(geo =>\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n\n                                    style={{\n                                        default: {\n                                            //  fill: \"#ECEFF1\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.95,\n                                            outline: \"none\",\n                                        },\n                                        pressed: {\n                                            outline: \"none\",\n                                        }\n                                    }}\n                                    onMouseEnter={() => {\n\n                                        setCountyFipsth4(geo.properties.COUNTYFP);\n                                        // setCountyNamecvi4(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                        setTooltipContentcvi(\n                                            <p>\n                                                {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['cvi'].toFixed(2) */}\n                                                <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                                <b>EF</b>: {dataCha[stateFips + geo.properties.COUNTYFP]['RPL_THEME4'].toFixed(2)} <br />\n                                                <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                                <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                            </p>);\n\n                                    }}\n                                    onMouseLeave={() => {\n                                        // console.log(countyFipsth1)\n                                        setTooltipContentcvi(\"\")\n                                    }}\n                                    fill={countyFipsth4 === geo.properties.COUNTYFP ? countyColor :\n                                        ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                            dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                            colortopic[stateFips + geo.properties.COUNTYFP]['theme4_index'] :\n                                            (dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                />\n                            )}\n                        </Geographies>\n                    </ComposableMap>\n\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    \n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                        This map shows each Georgia county according to its Epidemiological Factors ranking. County rankings are based on quintiles of the Epidemiological Factors. The ranking classified counties into five groups designed to be of equal size, so that the lowest EF contains the counties with values in the 0%-20% range for this county characteristic, and the highest EF contains counties with values in the 80%-100% range for this county characteristic.\n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n            </Grid.Column>\n            <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                <Grid.Row columns={1}>\n                    <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                            <Header.Content>\n                                COVID-19 Case Rate by Epidemiological Factors\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Cases per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low EF\", 'value': (data_index['theme4_index'][\"low20\"]['casescumR'] / data_index['theme4_index'][\"low20\"]['casescumR']) * data_index['theme4_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['theme4_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low EF\", 'value': (data_index['theme4_index'][\"Q2\"]['casescumR'] / data_index['theme4_index'][\"Q2\"]['casescumR']) * data_index['theme4_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['theme4_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate EF\", 'value': (data_index['theme4_index'][\"Q3\"]['casescumR'] / data_index['theme4_index'][\"Q3\"]['casescumR']) * data_index['theme4_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['theme4_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High EF\", 'value': (data_index['theme4_index'][\"Q4\"]['casescumR'] / data_index['theme4_index'][\"Q4\"]['casescumR']) * data_index['theme4_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['theme4_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high EF\", 'value': (data_index['theme4_index'][\"high20\"]['casescumR'] / data_index['theme4_index'][\"high20\"]['casescumR']) * data_index['theme4_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['theme4_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth4) ? countyColor : casesColor[1]\n                                    }\n                                }}\n                                // style={{\n                                //     data: {\n                                //         fill: casesColor[1]\n                                //     }\n                                // }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n                    <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                            <Header.Content>\n                                COVID-19 Death Rate by Minority Status and Language\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Deaths per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low EF\", 'value': data_index['theme4_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['theme4_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low EF\", 'value': data_index['theme4_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['theme4_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate EF\", 'value': data_index['theme4_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['theme4_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High EF\", 'value': data_index['theme4_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['theme4_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high EF\", 'value': data_index['theme4_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['theme4_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth4) ? countyColor : mortalityColor[1]\n                                    }\n                                }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                            Epidemiological Factors is a measure of county-level relative proportion of individuals with underlying conditions including respiratory conditions, heart conditions, obesity, diabetes, and conditions related to immunodeficiency (range: 0 to 1; higher values indicate more vulnerability).\n                                        <br></br>\n                                                                            <List as='ul'>\n                                                                            <List.Item as='li'>This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by Epidemiological Factors ranking.</List.Item>\n                                                                            <List.Item as='li'>The y-axis displays Epidemiological Factors rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                        of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by Epidemiological Factors.</List.Item>\n                                                                            <List.Item as='li'>The ranking classified counties into five groups designed to be of equal size, so that the very low EF contains the counties with values in the 0%-20% range for this county characteristic, and the very high EF contains counties with values in the 80%-100% range for this county characteristic. Low EF indicates counties in the 20%-40% range, moderate EF indicates counties in the 40%-60% range, and high EF indecates counties in the 60%-80% range.</List.Item>\n                                                                            <List.Item as='li'>Data and descriptions can be found <a href=\"https://www.precisionforcoviddata.org/\" target=\"_blank\">here</a></List.Item>\n\n                                                                        </List>\n                                        \n                                         \n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n\n            </Grid.Column>\n\n        </Grid>                                       \n        },\n        {menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>Healthcare<br></br>System</p>}, render: () => \n        <Grid id=\"th5\" style={{ paddingBottom: '2em' }}>\n            <Grid.Row>\n                <div style={{ width: \"100%\", height: \"100%\" }}>\n                    <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                        <Header.Content>CCVI Theme 5 - Healthcare System Factors (HSF)</Header.Content>\n                    </Header>\n                </div>\n            </Grid.Row>\n\n            <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                <Grid.Row style={{ paddingTop: \"0\" }}>\n                    <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                        <Header.Content>\n                            Georgia Healthcare System Factors Map\n    </Header.Content>\n                    </Header>\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                    <svg width=\"400\" height=\"70\">\n                        {_.map(colorPalette2, (color, i) => {\n                            return <rect key={i} x={80 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                        })}\n                        <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least HSF</text>\n                        <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                        <text x={130 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most HSF</text>\n                        <text x={130 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                        {_.map(thresh_chara['theme5'], (splitpoint, i) => {\n                            return <text key={i} x={80 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['theme5'][i]}</text>\n                        })}\n                    </svg>\n                    <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                        <Geographies data-tip='th5' data-for='th5' geography={config.url}>\n                            {({ geographies }) => geographies.map(geo =>\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n\n                                    style={{\n                                        default: {\n                                            //  fill: \"#ECEFF1\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.95,\n                                            outline: \"none\",\n                                        },\n                                        pressed: {\n                                            outline: \"none\",\n                                        }\n                                    }}\n                                    onMouseEnter={() => {\n\n                                        setCountyFipsth5(geo.properties.COUNTYFP);\n                                        // setCountyNamecvi5(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                        setTooltipContentcvi(\n                                            <p>\n                                                {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['cvi'].toFixed(2) */}\n                                                <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                                <b>HSF</b>: {dataCha[stateFips + geo.properties.COUNTYFP]['RPL_THEME5'].toFixed(2)} <br />\n                                                <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                                <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                            </p>);\n\n                                    }}\n                                    onMouseLeave={() => {\n                                        // console.log(countyFipsth1)\n                                        setTooltipContentcvi(\"\")\n                                    }}\n                                    fill={countyFipsth5 === geo.properties.COUNTYFP ? countyColor :\n                                        ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                            dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                            colortopic[stateFips + geo.properties.COUNTYFP]['theme5_index'] :\n                                            (dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                />\n                            )}\n                        </Geographies>\n                    </ComposableMap>\n\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    \n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                        This map shows each Georgia county according to its Healthcare System Factors ranking. County rankings are based on quintiles of the Healthcare System Factors. The ranking classified counties into five groups designed to be of equal size, so that the lowest HSF contains the counties with values in the 0%-20% range for this county characteristic, and the highest HSF contains counties with values in the 80%-100% range for this county characteristic.\n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n            </Grid.Column>\n            <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                <Grid.Row columns={1}>\n                    <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                            <Header.Content>\n                                COVID-19 Case Rate by Healthcare System Factors\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Cases per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low HSF\", 'value': (data_index['theme5_index'][\"low20\"]['casescumR'] / data_index['theme5_index'][\"low20\"]['casescumR']) * data_index['theme5_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['theme5_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low HSF\", 'value': (data_index['theme5_index'][\"Q2\"]['casescumR'] / data_index['theme5_index'][\"Q2\"]['casescumR']) * data_index['theme5_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['theme5_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate HSF\", 'value': (data_index['theme5_index'][\"Q3\"]['casescumR'] / data_index['theme5_index'][\"Q3\"]['casescumR']) * data_index['theme5_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['theme5_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High HSF\", 'value': (data_index['theme5_index'][\"Q4\"]['casescumR'] / data_index['theme5_index'][\"Q4\"]['casescumR']) * data_index['theme5_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['theme5_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high HSF\", 'value': (data_index['theme5_index'][\"high20\"]['casescumR'] / data_index['theme5_index'][\"high20\"]['casescumR']) * data_index['theme5_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['theme5_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth5) ? countyColor : casesColor[1]\n                                    }\n                                }}\n                                // style={{\n                                //     data: {\n                                //         fill: casesColor[1]\n                                //     }\n                                // }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n                    <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                            <Header.Content>\n                                COVID-19 Death Rate by Healthcare System Factors\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Deaths per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low HSF\", 'value': data_index['theme5_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['theme5_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low HSF\", 'value': data_index['theme5_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['theme5_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate HSF\", 'value': data_index['theme5_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['theme5_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High HSF\", 'value': data_index['theme5_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['theme5_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high HSF\", 'value': data_index['theme5_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['theme5_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth5) ? countyColor : mortalityColor[1]\n                                    }\n                                }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                            Healthcare System Factors is a measure of county-level relative hospital beds availability, pharmacies, and healthcare spending per capita within a region, and other variables (range: 0 to 1; higher values indicate more vulnerability). \n<br></br>\n                                                                            <List as='ul'>\n                                                                            <List.Item as='li'>This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by Healthcare System Factors ranking.</List.Item>\n                                                                            <List.Item as='li'> The y-axis displays Healthcare System Factors rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                        of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by Healthcare System Factors.</List.Item>\n                                                                            <List.Item as='li'>The ranking classified counties into five groups designed to be of equal size, so that the very low HSF contains the counties with values in the 0%-20% range for this county characteristic, and the very high HSF contains counties with values in the 80%-100% range for this county characteristic. Low HSF indicates counties in the 20%-40% range, moderate HSF indicates counties in the 40%-60% range, and high HSF indecates counties in the 60%-80% range.</List.Item>\n                                                                            <List.Item as='li'>Data and descriptions can be found <a href=\"https://www.precisionforcoviddata.org/\" target=\"_blank\">here</a></List.Item>\n\n                                                                        </List>\n                                        \n                                        \n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n\n            </Grid.Column>\n\n        </Grid>                                       \n        },\n        {menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>High Risk<br></br>Environments</p>}, render: () => \n        <Grid style={{ paddingBottom: '2em' }}>\n            <Grid.Row>\n                <div style={{ width: \"100%\", height: \"100%\" }}>\n                    <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                        <Header.Content>CCVI Theme 6 - High Risk Environments (HRE)</Header.Content>\n                    </Header>\n                </div>\n            </Grid.Row>\n\n            <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                <Grid.Row style={{ paddingTop: \"0\" }}>\n                    <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                        <Header.Content>\n                            Georgia High Risk Environments Map\n    </Header.Content>\n                    </Header>\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                    <svg width=\"400\" height=\"70\">\n                        {_.map(colorPalette2, (color, i) => {\n                            return <rect key={i} x={80 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                        })}\n                        <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least HRE</text>\n                        <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                        <text x={130 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most HRE</text>\n                        <text x={130 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                        {_.map(thresh_chara['theme6'], (splitpoint, i) => {\n                            return <text key={i} x={80 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['theme6'][i]}</text>\n                        })}\n                    </svg>\n                    <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                        <Geographies data-tip='th6' data-for='th6' geography={config.url}>\n                            {({ geographies }) => geographies.map(geo =>\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n\n                                    style={{\n                                        default: {\n                                            //  fill: \"#ECEFF1\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.95,\n                                            outline: \"none\",\n                                        },\n                                        pressed: {\n                                            outline: \"none\",\n                                        }\n                                    }}\n                                    onMouseEnter={() => {\n\n                                        setCountyFipsth6(geo.properties.COUNTYFP);\n                                        // setCountyNamecvi6(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                        setTooltipContentcvi(\n                                            <p>\n                                                {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'].toFixed(2) */}\n                                                <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                                <b>HRE</b>: {dataCha[stateFips + geo.properties.COUNTYFP]['RPL_THEME6'].toFixed(2)} <br />\n                                                <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                                <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                            </p>);\n\n                                    }}\n                                    onMouseLeave={() => {\n                                        // console.log(countyFipsth1)\n                                        setTooltipContentcvi(\"\")\n                                    }}\n                                    fill={countyFipsth6 === geo.properties.COUNTYFP ? countyColor :\n                                        ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                            dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                            colortopic[stateFips + geo.properties.COUNTYFP]['theme6_index'] :\n                                            (dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                />\n                            )}\n                        </Geographies>\n                    </ComposableMap>\n\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    \n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                        This map shows each Georgia county according to its High Risk Environments ranking. County rankings are based on quintiles of the High Risk Environments. The ranking classified counties into five groups designed to be of equal size, so that the lowest HRE contains the counties with values in the 0%-20% range for this county characteristic, and the highest HRE contains counties with values in the 80%-100% range for this county characteristic.\n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n            </Grid.Column>\n            <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                <Grid.Row columns={1}>\n                    <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                            <Header.Content>\n                                COVID-19 Case Rate by High Risk Environments\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Cases per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low HRE\", 'value': (data_index['theme6_index'][\"low20\"]['casescumR'] / data_index['theme6_index'][\"low20\"]['casescumR']) * data_index['theme6_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['theme6_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low HRE\", 'value': (data_index['theme6_index'][\"Q2\"]['casescumR'] / data_index['theme6_index'][\"Q2\"]['casescumR']) * data_index['theme6_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['theme6_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate HRE\", 'value': (data_index['theme6_index'][\"Q3\"]['casescumR'] / data_index['theme6_index'][\"Q3\"]['casescumR']) * data_index['theme6_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['theme6_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High HRE\", 'value': (data_index['theme6_index'][\"Q4\"]['casescumR'] / data_index['theme6_index'][\"Q4\"]['casescumR']) * data_index['theme6_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['theme6_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high HRE\", 'value': (data_index['theme6_index'][\"high20\"]['casescumR'] / data_index['theme6_index'][\"high20\"]['casescumR']) * data_index['theme6_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['theme6_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth6) ? countyColor : casesColor[1]\n                                    }\n                                }}\n                                // style={{\n                                //     data: {\n                                //         fill: casesColor[1]\n                                //     }\n                                // }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n                    <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                            <Header.Content>\n                                COVID-19 Death Rate by High Risk Environments\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Deaths per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low HRE\", 'value': data_index['theme6_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['theme6_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low HRE\", 'value': data_index['theme6_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['theme6_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate HRE\", 'value': data_index['theme6_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['theme6_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High HRE\", 'value': data_index['theme6_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['theme6_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high HRE\", 'value': data_index['theme6_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['theme6_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth6) ? countyColor : mortalityColor[1]\n                                    }\n                                }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                            High Risk Environments is a measure of county-level relative proportion working in a high risk industry or living in a nursing home or prison (range: 0 to 1; higher values indicate more vulnerability).\n<br></br>\n                                                                            <List as='ul'>\n                                                                            <List.Item as='li'>This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by High Risk Environments ranking.</List.Item>\n                                                                            <List.Item as='li'>The y-axis displays High Risk Environments rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                        of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by High Risk Environments.</List.Item>\n                                                                            <List.Item as='li'>The ranking classified counties into five groups designed to be of equal size, so that the very low HRE contains the counties with values in the 0%-20% range for this county characteristic, and the very high HRE contains counties with values in the 80%-100% range for this county characteristic. Low HRE indicates counties in the 20%-40% range, moderate HRE indicates counties in the 40%-60% range, and high HRE indecates counties in the 60%-80% range.</List.Item>\n                                                                            <List.Item as='li'>Data and descriptions can be found <a href=\"https://www.precisionforcoviddata.org/\" target=\"_blank\">here</a></List.Item>\n\n                                                                        </List>\n                                        \n                                        \n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n\n            </Grid.Column>\n\n        </Grid>                                       \n        },\n        {menuItem: {content:<p style={{fontSize: \"9.5pt\"}}>Population<br></br>Density</p>}, render: () => \n        <Grid style={{ paddingBottom: '2em' }}>\n            <Grid.Row>\n                <div style={{ width: \"100%\", height: \"100%\" }}>\n                    <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                        <Header.Content>CCVI Theme 7 - Population Density (PD)</Header.Content>\n                    </Header>\n                </div>\n            </Grid.Row>\n\n            <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                <Grid.Row style={{ paddingTop: \"0\" }}>\n                    <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                        <Header.Content>\n                            Georgia Population Density Map\n    </Header.Content>\n                    </Header>\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                    <svg width=\"400\" height=\"70\">\n                        {_.map(colorPalette2, (color, i) => {\n                            return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                        })}\n                        <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least population</text>\n                        <text x={20} y={59} style={{ fontSize: '0.8em' }}>density counties</text>\n                        <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most population</text>\n                        <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>density counties</text>\n                        {_.map(thresh_chara['theme7'], (splitpoint, i) => {\n                            return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['theme7'][i]}</text>\n                        })}\n                    </svg>\n                    <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                        <Geographies data-tip='th7' data-for='th7' geography={config.url}>\n                            {({ geographies }) => geographies.map(geo =>\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n\n                                    style={{\n                                        default: {\n                                            //  fill: \"#ECEFF1\",\n                                            stroke: \"#607D8B\",\n                                            strokeWidth: 0.95,\n                                            outline: \"none\",\n                                        },\n                                        pressed: {\n                                            outline: \"none\",\n                                        }\n                                    }}\n                                    onMouseEnter={() => {\n\n                                        setCountyFipsth7(geo.properties.COUNTYFP);\n                                        // setCountyNamecvi7(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                        setTooltipContentcvi(\n                                            <p>\n                                                {/* fips2county[stateFips + geo.properties.COUNTYFP] + \"'s CCVI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'].toFixed(2) */}\n                                                <font size=\"+2\"><b >{fips2county[stateFips + geo.properties.COUNTYFP]}</b> </font> <br />\n                                                <b>PD</b>: {dataCha[stateFips + geo.properties.COUNTYFP]['RPL_THEME7'].toFixed(2)} <br />\n                                                <b>Total Cases</b>: {data[stateFips + geo.properties.COUNTYFP]['casescum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['casescum'].toFixed(0) : \"N/A\"} <br />\n                                                <b>Total Deaths</b>: {data[stateFips + geo.properties.COUNTYFP]['deathscum'] >= 0 ? data[stateFips + geo.properties.COUNTYFP]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                                            </p>);\n\n                                    }}\n                                    onMouseLeave={() => {\n                                        // console.log(countyFipsth1)\n                                        setTooltipContentcvi(\"\")\n                                    }}\n                                    fill={countyFipsth7 === geo.properties.COUNTYFP ? countyColor :\n                                        ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                            dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] > 0) ?\n                                            colortopic[stateFips + geo.properties.COUNTYFP]['theme7_index'] :\n                                            (dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP]['ccvi'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                />\n                            )}\n                        </Geographies>\n                    </ComposableMap>\n\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    \n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                        This map shows each Georgia county according to its Population Density ranking. County rankings are based on quintiles of the Population Density. The ranking classified counties into five groups designed to be of equal size, so that the lowest population density contains the counties with values in the 0%-20% range for this county characteristic, and the highest population density contains counties with values in the 80%-100% range for this county characteristic.\n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n            </Grid.Column>\n            <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                <Grid.Row columns={1}>\n                    <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                            <Header.Content>\n                                COVID-19 Case Rate by Population Density\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 10, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Cases per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low PD\", 'value': (data_index['theme7_index'][\"low20\"]['casescumR'] / data_index['theme7_index'][\"low20\"]['casescumR']) * data_index['theme7_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['theme7_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low PD\", 'value': (data_index['theme7_index'][\"Q2\"]['casescumR'] / data_index['theme7_index'][\"Q2\"]['casescumR']) * data_index['theme7_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['theme7_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate PD\", 'value': (data_index['theme7_index'][\"Q3\"]['casescumR'] / data_index['theme7_index'][\"Q3\"]['casescumR']) * data_index['theme7_index'][\"Q3\"]['casescumR'] || 0, 'ez': data_index['theme7_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High PD\", 'value': (data_index['theme7_index'][\"Q4\"]['casescumR'] / data_index['theme7_index'][\"Q4\"]['casescumR']) * data_index['theme7_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['theme7_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high PD\", 'value': (data_index['theme7_index'][\"high20\"]['casescumR'] / data_index['theme7_index'][\"high20\"]['casescumR']) * data_index['theme7_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['theme7_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth7) ? countyColor : casesColor[1]\n                                    }\n                                }}\n                                // style={{\n                                //     data: {\n                                //         fill: casesColor[1]\n                                //     }\n                                // }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n                    <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                        <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                            <Header.Content>\n                                COVID-19 Death Rate by Population Density\n    </Header.Content>\n                        </Header>\n                        <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={630}\n                            height={230}\n                            domainPadding={20}\n                            minDomain={{ y: props.ylog ? 1 : 0 }}\n                            padding={{ left: 160, right: 100, top: 4, bottom: 10 }}\n                            style={{ fontSize: \"14pt\" }}\n                            containerComponent={<VictoryContainer responsive={false} />}\n                        >\n                            <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                            <VictoryAxis dependentAxis\n                                label='COVID-19 Deaths per 100,000 Residents'\n                                style={{\n                                    ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                    labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                }} />\n                            <VictoryBar\n                                horizontal\n                                barRatio={0.75}\n                                labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                data={[\n                                    { key: \"Very low PD\", 'value': data_index['theme7_index'][\"low20\"]['deathscumR'] || 0, 'ez': data_index['theme7_index'][\"low20\"]['county_list'] },\n                                    { key: \"Low PD\", 'value': data_index['theme7_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['theme7_index'][\"Q2\"]['county_list'] },\n                                    { key: \"Moderate PD\", 'value': data_index['theme7_index'][\"Q3\"]['deathscumR'] || 0, 'ez': data_index['theme7_index'][\"Q3\"]['county_list'] },\n                                    { key: \"High PD\", 'value': data_index['theme7_index'][\"Q4\"]['deathscumR'] || 0, 'ez': data_index['theme7_index'][\"Q4\"]['county_list'] },\n                                    { key: \"Very high PD\", 'value': data_index['theme7_index'][\"high20\"]['deathscumR'] || 0, 'ez': data_index['theme7_index'][\"high20\"]['county_list'] }\n                                ]}\n                                labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                style={{\n                                    data: {\n                                        fill: ({ datum }) => datum.ez.includes(countyFipsth7) ? countyColor : mortalityColor[1]\n                                    }\n                                }}\n                                x=\"key\"\n                                y=\"value\"\n                            />\n                        </VictoryChart>\n\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                </Grid.Row>\n                <Grid.Row style={{ paddingLeft: '4.9em', paddingRight: '2em' }}>\n                    <Accordion defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <p style={{ fontFamily: 'lato', fontSize: 18 }}>\n                                                Populations Density (range: 0 to 1; higher values indicate more vulnerability).\n<br></br>\n                                                                            <List as='ul'>\n                                                                            <List.Item as='li'>This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by PD ranking.</List.Item>\n                                                                            <List.Item as='li'>The y-axis displays PD rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                        of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by PD.</List.Item>\n                                                                            <List.Item as='li'>The ranking classified counties into five groups designed to be of equal size, so that the very low PD contains the counties with values in the 0%-20% range for this county characteristic, and the very high PD contains counties with values in the 80%-100% range for this county characteristic. Low PD indicates counties in the 20%-40% range, moderate PD indicates counties in the 40%-60% range, and high PD indecates counties in the 60%-80% range.</List.Item>\n                                                                            <List.Item as='li'>Data and descriptions can be found <a href=\"https://www.precisionforcoviddata.org/\" target=\"_blank\">here</a></List.Item>\n\n                                                                        </List>\n                                        \n                                         \n                                    </p>\n                                ),\n                            },\n                        }\n                    ]\n\n                    } />\n\n                </Grid.Row>\n\n            </Grid.Column>\n\n        </Grid>                                       \n        },\n      ]\n\n\n\n\n\n\n\n    const [countyFipscvi, setCountyFipscvi] = useState('');\n    const [countyFipsth1, setCountyFipsth1] = useState('');\n    const [countyFipsth2, setCountyFipsth2] = useState('');\n    const [countyFipsth3, setCountyFipsth3] = useState('');\n    const [countyFipsth4, setCountyFipsth4] = useState('');\n    const [countyFipsth5, setCountyFipsth5] = useState('');\n    const [countyFipsth6, setCountyFipsth6] = useState('');\n    const [countyFipsth7, setCountyFipsth7] = useState('');\n    \n    const [countyFipssi, setCountyFipssi] = useState('');\n    const [countyFipsubr, setCountyFipsubr] = useState('');\n    const [countyFipsblack, setCountyFipsblack] = useState('');\n    const [countyFipshis, setCountyFipshis] = useState('');\n    const [countyFipspov, setCountyFipspov] = useState('');\n    const [countyFipsdia, setCountyFipsdia] = useState('');\n    const [countyFipsa65, setCountyFipsa65] = useState('');\n    // const [countyFipsmale, setCountyFipsmale] = useState('');\n    const [countyName, setCountyName] = useState('Georgia');\n    const [countyNamecvi, setCountyNamecvi] = useState('Fulton County');\n\n\n    const [countyNamesi, setCountyNamesi] = useState('Fulton County');\n    const [countyNameubr, setCountyNameubr] = useState('Fulton County');\n    const [countyNameblack, setCountyNameblack] = useState('Fulton County');\n    const [countyNamehis, setCountyNamehis] = useState('Fulton County');\n    const [countyNamepov, setCountyNamepov] = useState('Fulton County');\n    const [countyNamedia, setCountyNamedia] = useState('Fulton County');\n    const [countyNamea65, setCountyNamea65] = useState('Fulton County');\n    // const [countyNamemale, setCountyNamemale] = useState('Fulton County');\n\n    const history = useHistory();\n    // const [fips, setFips] = useState('13');\n    const [activeCharacter, setActiveCharacter] = useState('')\n    const activeClass = 'character-block--active';\n    const characterRef = createRef();\n    \n\n    const [data, setData] = useState();\n    const [dataUs, setDataUs] = useState();\n    const [data_index, setIndexData] = useState();\n    const [dataCha, setDataCha] = useState();\n    const [colortopic, setColortopic] = useState();\n\n    const [dateCur, setDateCur] = useState();\n    // const [colorCVI, setColorCVI] = useState();\n    // const [colorSI, setColorSI] = useState();\n    const [colorUbr, setColorUbr] = useState();\n    // const [colorBlack, setColorBlack] = useState();\n    const [colorHis, setColorHis] = useState();\n    // const [colorPov, setColorPov] = useState();\n    // const [colorDia, setColorDia] = useState();\n    // const [colorA65, setColorA65] = useState();\n    // const [colorMale, setColorMale] = useState();\n    // const [covidMetric, setCovidMetric] = useState({ casesdaily: 'N/A', casesdailymean14: 'N/A', t: 'n/a' });\n    // const [covidMetric14, setCovidMetric14] = useState({ casesdaily: 'N/A', casesdailymean14: 'N/A', t: 'n/a' });\n    // const covidMetric141 = useRef({ casesdaily: 'N/A', casesdailymean14: 'N/A', t: 'n/a' });\n    const colors = {\n        \"3\": '#024174',\n        '2': \"#99bbcf\",\n        '1': '#337fb5'\n    };\n    const [dataTS, setDataTS] = useState();\n  \n    const [tooltipContentccvi, setTooltipContentcvi] = useState('')\n    // const [tooltipContentccvi1, setTooltipContentcvi1] = useState('')\n\n    const [tooltipContent, setTooltipContent] = useState('')\n\n    const [colorScale, setColorScale] = useState();\n    const [data_cases, setDataCG] = useState();\n    const [data_deaths, setDataDG] = useState();\n    const [datades_cases, setDatadesCG] = useState();\n    const [datades_deaths, setDatadesDG] = useState();\n\n    const [legendMax, setLegendMax] = useState([]);\n    // const [legendMax1, setLegendMax1] = useState([]);\n    const [legendMin, setLegendMin] = useState([]);\n    const [legendMax_graph, setLegendMaxGraph] = useState({});\n    const [legendSplit, setLegendSplit] = useState([]);\n    const [legendSplit1, setLegendSplit1] = useState([]);\n\n    const [metric, setMetric] = useState('casescumR');\n    // const [metric_graph, setMetricGraph] = useState(['casesdaily', 'casesdailymean14']);\n    // const [open, setOpen] = useState(false)\n\n    const thresh_chara = {\n        'cvi': [0, 0.59, 0.77, 0.88, 0.95, 1],\n        'theme1':[0,0.61, 0.77, 0.86, 0.93,1],\n        'theme2':[0, 0.48, 0.62, 0.74, 0.83,1],\n        'theme3':[0,0.27, 0.60, 0.74, 0.88,1],\n        'theme4':[0, 0.19, 0.33, 0.46, 0.63,1],\n        'theme5':[0,0.83, 0.90, 0.94, 0.97,1],\n        'theme6':[0,0.25, 0.48, 0.64, 0.78,1],\n        'theme7':[0,0.36, 0.49, 0.67, 0.81,1],\n        'si': [0, 22, 29, 34, 43, 73],\n        'poverty': [0, 14, 20, 24, 27, 42],\n        'black': [0, 11, 19, 29, 42,73],\n        'hispanic': [0, 3, 5, 7, 11, 35],\n        'diabetes': [0, 10, 12, 13, 17, 33],\n        'age65over': [0,13, 15, 17, 18, 35]\n        // 'male': [0, 48, 49, 50, 51, 67]\n    }\n\n    const metricOptions1 = [{ key: 'cacum', value: 'casescum', text: 'Total COVID-19 cases' },\n    { key: 'decum', value: 'deathscum', text: 'Total COVID-19 deaths' },\n    { key: 'cacumr', value: 'casescumR', text: 'COVID-19 cases per 100,000 population' },\n    { key: 'decumr', value: 'deathscumR', text: 'COVID-19 deaths per 100,000 population' },\n    { key: 'cacum14R', value: 'casescum14dayR', text: 'Last 14 days cases per 100,000 population' }];\n\n    const metricOptions2 = [{ key: 'cs', value: 'cs', text: 'Confirmed cases per 100,000 population' },\n    { key: 'hp', value: 'hp', text: 'Hospitalizations per 100,000 population' },\n    { key: 'ds', value: 'ds', text: 'Deaths per 100,000 population' }];\n    const dropdownopt = {\n        'casescum': 'Total COVID-19 cases',\n        'deathscum': 'Total COVID-19 deaths',\n        'casescumR': 'COVID-19 cases per 100,000 population',\n        'deathscumR': 'COVID-19 deaths per 100,000 population'\n    };\n\n    const varGraphPair = {\n        \"casescum\": { \"name\": ['casesdaily', 'casesdailymean7'], \"legend\": ['Daily cases', '7-d rolling average '] },\n        \"deathscum\": { \"name\": ['deathsdaily', 'deathsdailymean7'], \"legend\": ['Daily deaths', '7-d rolling average '] },\n        \"casescumR\": { \"name\": ['casesdailyR', 'casesdailymean7R'], \"legend\": ['Daily cases per 100,000', '7-d rolling average'] },\n        \"deathscumR\": { \"name\": ['deathsdailyR', 'deathsdailymean7R'], \"legend\": ['Daily deaths per 100,000', '7-d rolling average'] },\n        \"casescum14dayR\": { \"name\": ['casesdailyR', 'casesdailymean7R'], \"legend\": ['Last 14 days cases per 100,000', '7-d rolling average'] }\n    };\n    const [metricName, setMetricName] = useState('COVID-19 cases per 100,000 population');\n    const varNameMap = {\n        \"casescum\": { \"name\": 'cases', \"text\": \"The map shows the total number of confirmed COVID-19 cases in each county as of \", \"cat\": 'case' },\n        \"casescum14dayR\": { \"name\": 'cases per 100,000 residents', \"text\": \"The map shows the number of confirmed COVID-19 cases for past two weeks in each county as of \", \"cat\": 'case' },\n        \"deathscum\": { \"name\": 'deaths', \"text\": \"The map shows the total number of confirmed COVID-19 deaths in each county as of \", \"cat\": 'death' },\n        \"casescumR\": { \"name\": 'cases per 100,000 residents', \"text\": \"The map shows the total number of confirmed COVID-19 cases per 100,000 residents in each county as of \", \"cat\": 'case' },\n        \"deathscumR\": { \"name\": 'deaths per 100,000 residents', \"text\": \"The map shows the total number of confirmed COVID-19 deaths per 100,000 residents in each county as of \", \"cat\": 'death' }\n    };\n    const varMap = { \"cacum\": metricOptions2[0], \"decum\": metricOptions2[1], \"cacumr\": metricOptions2[2], \"decumr\": metricOptions1[1] };\n    const [open, setOpen] = useState(false)\n    const [countyOption, setCountyOption] = useState();\n\n    useEffect(() => {\n        \n        const configMatched = configs.find(s => s.fips === stateFips);\n        // console.log(configMatched.fips);\n        if (!configMatched) {\n            history.push('/');\n        } else {\n\n            setConfig(configMatched);\n            // console.log(countyFips);\n            fetch('/data/GDPH/data_cases_ga.json').then(res => res.json())\n                .then(x => setDataCG(x)\n                );\n            fetch('/data/GDPH/data_deaths_ga.json').then(res => res.json())\n                .then(x => setDataDG(x));\n            fetch('/data/GDPH/data_describe_cases.json').then(res => res.json())\n                .then(x => setDatadesCG(x));\n            fetch('/data/GDPH/data_describe_deaths.json').then(res => res.json())\n                .then(x => setDatadesDG(x));\n            fetch('/data/GDPH/topic_color.json').then(res => res.json())\n            .then(x => setColortopic(x));\n            fetch('/data/GDPH/data.json').then(res => res.json())\n                .then(x => {\n                    setData(x);\n                    setDataUs(x);\n                    setDateCur(x)\n                });\n\n            fetch('/data/GDPH/timeseries13' + '.json').then(res => res.json())\n                .then(\n                    x => {\n                        setDataTS(x);\n                        // var max = 0\n                        var dicto = {}\n                        for (var key in x) {\n                            var max = 0\n                            _.each(x[key], m => {\n                                if (m[varGraphPair[metric]['name'][0]] > max) {\n                                    max = m[varGraphPair[metric]['name'][0]];\n                                }\n                            });\n                            dicto[key] = max;\n                            // console.log(varNameMap['cacum'].text);\n                        }\n                        // console.log(dicto);\n                        setLegendMaxGraph(dicto);\n                    });\n                    \n            fetch('/data/GDPH/index_data.json').then(res => res.json())\n                .then(x => {\n                    setIndexData(x)\n\n                });\n\n               \n            fetch('/data/GDPH/data_us.json').then(res => res.json())\n                .then(x => {\n                    setDataCha(x)\n                    \n\n                    let scaleMap = {}\n                    _.each(x, d => {\n                        if (d['_013_Urbanization_Code'] === 1.0) {\n                            scaleMap[d['_013_Urbanization_Code']] = colorPalette[0]\n                        }\n                        if (d['_013_Urbanization_Code'] === 2.0) {\n                            scaleMap[d['_013_Urbanization_Code']] = colorPalette[1]\n                        }\n                        if (d['_013_Urbanization_Code'] === 3.0) {\n                            scaleMap[d['_013_Urbanization_Code']] = colorPalette[2]\n                        }\n                        if (d['_013_Urbanization_Code'] === 4.0) {\n                            scaleMap[d['_013_Urbanization_Code']] = colorPalette[3]\n                        }\n                        if (d['_013_Urbanization_Code'] === 5.0) {\n                            scaleMap[d['_013_Urbanization_Code']] = colorPalette[4]\n                        }\n                        if (d['_013_Urbanization_Code'] === 6.0) {\n                            scaleMap[d['_013_Urbanization_Code']] = colorPalette[5]\n                        }\n                    });\n\n                    setColorUbr(scaleMap);\n                    \n                });\n                \n        }\n\n        fetch('data/GDPH/casescum.json').then(res=>res.json())\n        .then(x=>{\n            setColorScale(x['csUs']);\n            setLegendMax(x['max']);\n            setLegendMin(x['min']);\n            setLegendSplit({'thr':x['thr'],'thr1':x['thr1'].slice(0, 4)})\n        });\n        fetch('/data/GDPH/ga_f2c.json').then(res => res.json())\n        .then(x => {\n          setCountyOption(_.filter(_.map(x, d=> {\n            return {key: d.id, value: d.value, text: d.text, group: d.state};\n          }), d => (d.group === '13')));\n        });\n        \n    }, []);\n\n\n    if (dataTS && dataUs) {\n\n        return (\n\n            <div\n                className={`character-block ${activeClass}`}\n                id=\"mycontent\"\n                ref={characterRef}>\n                    \n                <div>\n                    <LazyHero\n                        imageSrc={\"/CoronaVirus_LightBlue.jpg\"}\n                        color={'#E0F5FF'}\n                        isCentered={true}\n                        opacity={0}\n                        parallaxOffset={0}\n                        minHeight={'40vh'}\n                        //chidren={}\n                        style={{\n                            height: \"450px\"\n                        }}\n                    >\n                        <Grid column={2} style={{ paddingTop: '4em', paddingLeft: '0em', paddingBottom: '1em', width: \"1260px\" }} divided>\n                            <Grid.Column width={5}>\n                                <Grid.Row>\n                                    <Header as='h1' style={{fontWeight: 300 }}>\n                                        <Header.Content style={{\n                                            paddingTop:'1em',\n                                            fontSize: \"36pt\",\n                                            color: '#024174',\n                                            fontWeight: 1000,\n                                            textAlign: \"left\",\n                                            paddingRight:'6em'\n                                            \n                                        }}>\n                                            <b>Georgia</b>\n                                        </Header.Content>\n                                    </Header>\n                                </Grid.Row>\n                                <Grid.Row style={{paddingTop:'1.5em'}}>\n                                    <Header as=\"h1\" style={{\n                                        fontSize: \"28pt\",\n                                        color:'#4a4948',\n                                        fontWeight: 1000,\n                                        textAlign: \"left\"\n                                    }}>\n                                        COVID-19 Health \n                                        <br></br>Equity Dashboard\n                            </Header>\n                                </Grid.Row>\n                            </Grid.Column>\n\n                            <Grid.Column width={11}>\n                                <Header as='h2' style={{\n                                    fontWeight: 400,\n                                    fontSize: \"16pt\",\n                                    paddingRight: 0,\n                                    textAlign:'left'\n                                }}>\n                                    <Header.Content>\n                                        The Georgia COVID-19 Health Equity dashboard is a tool to dynamically track and compare the burden of cases and deaths across counties in Georgia.\n                                        <br></br>\n                                        <br></br>\n                                        We pair data on COVID-19 cases and deaths collected by the Georgia Department of Public Health with county characteristics to document the\n                                        differential impact of the epidemic across the state. These data are made available to the public in an effort to inform planning, policy development,\n                                        and decision making by county health officials and individual residents. Additional information on the data used on this website can be found <a href='https://ga-covid19.ondemand.sas.com/docs/GA_COVID19_Dashboard_Guide.pdf' target=\"_blank\">here</a>.\n                                        For more information on COVID-19 in Georgia, please see the Georgia Department of Public Health's <a href=\"https://dph.georgia.gov/covid-19-daily-status-report \" target=\"_blank\">COVID-19 Status Report</a>.\n                                    </Header.Content>\n                                </Header>\n                            </Grid.Column>\n                        </Grid>\n                    </LazyHero>\n                </div>\n                <AppBar />\n\n                <Container style={{ marginTop: '8em', minWidth: '1260px'}}>\n\n                    {config &&\n                        <div>\n\n                            {/* <Breadcrumb>\n                                <Breadcrumb.Section link onClick={() => history.push('/')}></Breadcrumb.Section>\n            <Breadcrumb.Divider />\n                                <Breadcrumb.Section active>{stateName}</Breadcrumb.Section>\n                                <Breadcrumb.Divider />\n                            </Breadcrumb> */}\n                            <Grid stackable columns={3} style={{ width: \"100%\", height: \"100%\" }} >\n                                \n                            <Grid.Column style={{paddingLeft:20, width:140}}>\n                                    <StickyExampleAdjacentContext activeCharacter={activeCharacter} />\n                                </Grid.Column>\n\n                                <Grid.Column width={16} style={{paddingLeft:250, width: \"100%\", height: \"100%\" }}>\n                                    {/* <Divider id='summary' hidden /> */}\n                                    <Grid.Row>\n                                        <div id='summary' style={sectionStyle2}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"22pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content>\n                                                    Georgia Interactive Map\n                                    </Header.Content>\n                                            </Header>\n                                        </div>\n                                    </Grid.Row>\n                                    \n\n\n                                    <Grid columns={2} style={{ paddingBottom: '0em' }}>\n                                        <Grid.Row>\n                                            <Grid.Column width={8}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                    {\n                                                        key: 'acquire-dog',\n                                                        title: {\n                                                            content: <Label color={dataupColor} content={<u style={{ fontFamily: 'lato', fontSize: 18, color:'black' }}>User Instructions</u>} />,\n                                                            // content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                            icon: 'hand point right',\n                                                        },\n                                                        content: {\n                                                            content: (\n                                                                <Header as='h2' style={{ fontFamily: 'lato', fontSize: \"16px\", paddingRight: 0, color: 'black' }}>\n                                                    <Header.Content>\n                                                        <Header.Subheader style={{ fontFamily: 'lato', fontSize: \"16px\", paddingRight: 0, paddingTop: '1em', color: 'black' }}>\n                                                            <List as='ul'>\n                                                                <List.Item as='li'>Select an indicator from the dropdown menu</List.Item>\n                                                                <List.Item as='li'>Hover on map to see the summary of county-level data</List.Item>\n                                                                <List.Item as='li'>Click map below to see county-level data</List.Item>\n                                                                {/* <List.Item as='li'>If you want to find your county, click <u style={{ fontFamily: 'lato', fontSize: 18, color:'black' }}>County Interactive Selection</u> on right for detail</List.Item> */}\n                                                            </List>\n                                                        </Header.Subheader>\n                                                    </Header.Content>\n                                                </Header>\n                                                            ),\n                                                        },\n                                                    }\n                                                ]\n\n                                                } />\n                                                \n                                            </Grid.Column>\n                                            </Grid.Row>\n                                        <Grid.Row >\n                                            <Header as='h2' style={{ fontWeight: 600 }}>\n                                                <Header.Content style={{ paddingTop:'-1',paddingLeft: \"0.6em\"}}>\n                                                    <Dropdown\n                                                        style={{\n                                                            paddingBottom:'1em',\n                                                            fontSize: \"14pt\",\n                                                            fontWeight: 600,\n                                                            width: '430px',\n                                                            text: \"Select\",\n                                                            borderTop: '1px solid #bdbfc1',\n                                                            borderLeft: '1px solid #bdbfc1',\n                                                            borderRight: '1px solid #bdbfc1',\n                                                            borderBottom: '1px solid #bdbfc1',\n                                                            borderRadius: 0,\n                                                        }}\n                                                        text={ countyName !== \"Georgia\" ? countyName : \"Select County\"}\n                                                        search\n                                                        selection\n                                                        pointing = 'top'\n                                                        options={countyOption}\n                                                        onChange={(e, { value }) => {\n                                                            countyFips1.current = value\n                                                            console.log(value)\n                                                            countyName1.current = fips2county['13' + value]\n                                                            setCountyName(fips2county['13' + value])\n                                                            setCountyFips(value);\n                                                            // setMetric(value);\n                                                            // setMetricName(dropdownopt[value]);\n                                                        }}\n                                                    />\n                                                </Header.Content>\n                                            </Header>\n                                            </Grid.Row>\n                                        <Grid.Column width={7} style={{ paddingLeft: \"2\"}}>\n                                            \n                                            <Header as='h2' style={{ fontWeight: 600 }}>\n                                                <Header.Content style={{ paddingTop:'-1'}}>\n                                                    <Dropdown\n                                                        style={{\n                                                            paddingBottom:'1em',\n                                                            fontSize: \"14pt\",\n                                                            fontWeight: 600,\n                                                            width: '430px',\n                                                            borderTop: '1px solid #bdbfc1',\n                                                            borderLeft: '1px solid #bdbfc1',\n                                                            borderRight: '1px solid #bdbfc1',\n                                                            borderBottom: '1px solid #bdbfc1',\n                                                            borderRadius: 0,\n                                                            // minHeight: '1.0em',\n                                                            // paddingBottom: '0.2em'\n                                                        }}\n                                                        text={metricName}\n                                                        search\n                                                        selection\n                                                        options={metricOptions1}\n                                                        onChange={(e, { value }) => {\n                                                            setMetric(value);\n                                                            setMetricName(dropdownopt[value]);\n                                                        }}\n                                                    />\n\n                                                </Header.Content>\n                                            </Header>\n                                            <SvgMap name={metric}\n                                                legendSplit={legendSplit}\n                                                legendSplit1={legendSplit1}\n                                                legendMin={legendMin}\n                                                legendMax={legendMax}\n                                            />\n                                            {/* <Header.Subheader style={{paddingLeft:'1em', fontFamily: 'lato', fontSize: \"10pt\", paddingTop: 1, color: 'black' }}>\n                                                        Click map below to see county-level data.\n                                        </Header.Subheader> */}\n                                            <ComposableMap projection=\"geoAlbersUsa\"\n                                                projectionConfig={{ scale: `${config.scale*0.86}` }}\n                                                width={400}\n                                                height={500}\n                                                data-tip=\"\"\n                                                offsetX={config.offsetX+2}\n                                                offsetY={config.offsetY}>\n                                                <Geographies data-tip='ga' data-for='ga' geography={config.url} >\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n                                                            onClick={() => {\n                                                                history.push(\"/Georgia/\" + geo.properties.COUNTYFP);\n                                                                // console.log(geo.properties.COUNTYFP);\n                                                            }}\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n                                                               \n                                                                countyFips1.current = geo.properties.COUNTYFP\n                                                                countyName1.current = fips2county[stateFips + geo.properties.COUNTYFP]\n                                                                \n                                                                    // setDelayHandler(setTimeout(() => {\n                                                                        setCountyFips(geo.properties.COUNTYFP);\n                                                                        setCountyName(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                    //     // setTooltipContent('Click to see more county data');\n                                                                    // }, 0.1))\n                                                                \n                                                                \n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                countyFips1.current = ''\n                                                                setCountyFips(countyFips1.current)\n                                                                countyFips1.current = countyFips\n                                                                countyName1.current = 'Georgia'\n                                                                console.log(countyFips1.current)\n                                                                // clearTimeout(delayHandler)\n                                                                setCountyName('Georgia');\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFips === geo.properties.COUNTYFP? countyColor :\n                                                                ((data[stateFips + geo.properties.COUNTYFP][metric] >=0) ?\n                                                                    colorScale[stateFips + geo.properties.COUNTYFP][metric] :\n                                                                    (data[stateFips + geo.properties.COUNTYFP] && data[stateFips + geo.properties.COUNTYFP][metric] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n\n                                            <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingLeft: '0.3em', paddingTop: '0.5em', paddingRight: '2em' }} >\n                                                Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                            </Grid.Row>\n                                            <Grid.Row>\n                                                <Accordion defaultActiveIndex={1} panels={[\n                                                    {\n                                                        key: 'acquire-dog',\n                                                        title: {\n                                                            content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                            icon: 'dropdown',\n                                                        },\n                                                        content: {\n                                                            content: (\n                                                                <DiscrpMap\n                                                                    name={metric}\n                                                                />\n                                                            ),\n                                                        },\n                                                    }\n                                                ]\n\n                                                } />\n\n                                            </Grid.Row>\n\n                                        </Grid.Column>\n                                        <Grid.Column width={7} style={{ paddingLeft: \"0.5em\" }}>\n                                            <Header as='h2' style={{ fontWeight: 400, paddingLeft: \"1em\", paddingTop:'0.7em' }}>\n                                                <Header.Content>\n                                                    {/* {varGraphPair[metric]['legend'][0]} for <span style={{ color: countyColor }}>{countyName}</span> */}\n                                                    {varGraphPair[metric]['legend'][0]} for <b>{countyName1.current}</b>\n                                                    <Header.Subheader style={{ fontWeight: 300 }}>\n                                                    </Header.Subheader>\n                                                </Header.Content>\n                                            </Header>\n                                            <Grid>\n                                                <Grid.Column>\n                                                    <Grid.Row style={{ paddingLeft: \"1.5\", paddingTop: \"1\", paddingBottom: 0 }} centered>\n\n                                                        <svg width=\"630\" height='80'>\n                                                            {countyName1.current === 'Georgia' ? <text x={75} y={20} style={{ fontSize: 16 }}></text> : <text x={75} y={20} style={{ fontSize: 16 }}>7-day rolling average in {countyName1.current}</text>}\n                                                            {countyName1.current === 'Georgia' ? <rect x={50} y={12} width=\"0\" height=\"0\" /> : <rect x={50} y={12} width=\"15\" height=\"2\" style={{ fill: countyColor, strokeWidth: 1, stroke: countyColor }} />}\n                                                            {/* {console.log(countyName1.current)} */}\n\n\n                                                            {varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                                                                <rect x={50} y={40} width=\"15\" height=\"15\" style={{ fill: stateColor, strokeWidth: 1, stroke: stateColor }} /> :\n                                                                <rect x={50} y={35} width=\"15\" height=\"1\" style={{ fill: '#007dba', strokeWidth: 1, stroke: '#007dba' }} />}\n\n                                                            {varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                                                                <text x={75} y={52} style={{ fontSize: 16 }}> {varGraphPair[metric]['legend'][0]} </text> :\n                                                                <rect x={50} y={35} width=\"15\" height=\"1\" style={{ fill: '#007dba', strokeWidth: 1, stroke: '#007dba' }} />}\n\n                                                            {countyName1.current === 'Georgia' ? (varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                                                                <text x={75} y={20} style={{ fontSize: 16 }}>7-day rolling average in Georgia</text> :\n                                                                <text x={75} y={43} style={{ fontSize: 16 }}>7-day rolling average in Georgia</text>) :\n\n                                                                (varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                                                                    <text x={250} y={12} style={{ fontSize: 0 }}></text> :\n                                                                    <text x={75} y={43} style={{ fontSize: 16 }}>7-day rolling average in Georgia</text>)}\n\n                                                            {countyName1.current === 'Georgia' ? (varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                                                                <rect x={50} y={12} width=\"15\" height=\"1\" style={{ fill: '#007dba', strokeWidth: 1, stroke: '#007dba' }} /> :\n                                                                <rect x={50} y={55} width=\"15\" height=\"15\" style={{ fill: stateColor, strokeWidth: 1, stroke: stateColor }} />)\n                                                                :\n                                                                (varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                                                                    <rect x={0} y={0} width=\"0\" height=\"0\" style={{ fill: 'white', strokeWidth: 0, stroke: 'white' }} /> :\n                                                                    <rect x={50} y={55} width=\"15\" height=\"15\" style={{ fill: stateColor, strokeWidth: 1, stroke: stateColor }} />)}\n\n                                                            {varGraphPair[metric]['name'][1] === 'casesdailymean7' || varGraphPair[metric]['name'][1] === 'deathsdailymean7' ?\n                                                                <rect x={0} y={0} width=\"0\" height=\"0\" style={{ fill: 'white', strokeWidth: 0, stroke: 'white' }} /> :\n                                                                <text x={75} y={68} style={{ fontSize: 16 }}> {varGraphPair[metric]['legend'][0]} </text>}\n\n                                                        </svg>\n                                                        <ChartGraph\n                                                            name={varGraphPair}\n                                                            metric={metric}\n                                                            stateFips={stateFips}\n                                                            countyFips={countyFips}\n                                                            // data1={ _.takeRight(dataTS[stateFips + countyFips1.current], 14)}\n                                                            data2={dataTS}\n                                                            \n                                                            countyname={countyName1.current}\n                                                        />\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '2.9em', paddingRight: '2.9em' }} centered>\n                                                        {/* <p style ={{fontFamily: 'lato', fontSize: 18, color:dataupColor, paddingLeft:'0.5em'}}> */}\n                                                    Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                        {/* </p> */}\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ paddingLeft: '3.4em', paddingRight: '2.9em' }} centered>\n                                                        <Accordion defaultActiveIndex={1} panels={[\n                                                            {\n                                                                key: 'acquire-dog',\n                                                                title: {\n                                                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                                    icon: 'dropdown',\n                                                                },\n                                                                content: {\n                                                                    content: (\n                                                                        <DiscrpChart\n                                                                            name={metric}\n                                                                            county={countyName}\n                                                                        />\n                                                                    ),\n                                                                },\n                                                            }\n                                                        ]\n\n                                                        } />\n\n                                                    </Grid.Row>\n                                                </Grid.Column>\n                                            </Grid>\n                                        </Grid.Column>\n\n                                    </Grid>\n                                    <div id=\"demog\" style = {{height: 100}}> </div>                   \n                                    <Grid style={{paddingLeft:'1em', paddingBottom: '0em' }}>\n                                        <Grid.Row>\n                                            <div id='demog' style={sectionStyle2}>\n                                                <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"22pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                    <Header.Content>\n                                                       Georgia COVID-19 by Demographics\n                                                       {/* County disparities in COVID-19 case rates and death rates */}\n                                    </Header.Content>\n                                                </Header>\n                                            </div>\n                                        </Grid.Row>\n                                        <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"18pt\", paddingTop: 0 }}>\n\n                                                <Header.Subheader style={{ color: '#000000', textAlign: 'left', fontSize: \"16pt\", paddingTop: 16, paddingBottom: 0, paddingLeft: 0, paddingRight: 0 }}>\n                                                    {/* <center> <b style={{ fontSize: \"18pt\" }}>COVID-19 cases per 100,000 across the population characteristics of all the counties in the United States </b> </center> */}\n                                                    The next plots show the percentage of cases by age, race, and sex and the percentage of the GA population by age, race, and sex.\n                                                        </Header.Subheader>\n                                            </Header>\n\n                                    </Grid>\n                                    <Grid style={{paddingLeft:'1em' }}>\n                                    <div id=\"age_g\" style = {{height: 70}}> </div>                   \n\n                                        <div id='age_g' style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content>\n                                                    COVID-19 by Age\n                                    </Header.Content>\n                                            </Header>\n                                        </div>\n                                        <Grid style={{paddingLeft:'2em',  paddingTop: '0em', paddingRight: \"7em\", width: \"100%\", height: \"100%\" }}>\n                                            <Grid.Row columns={2} style={{paddingLeft:'2em', paddingTop: 11 }}>\n                                                <Grid.Column style={{ paddingLeft:'1em',paddingTop: '1em', paddingBottom: 18 }}>\n                                                    <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingRight: '2em', paddingLeft:'2em' }}>\n                                                        <Header.Content>\n                                                            COVID-19 Cases in Georgia by Age\n            \t\t                                    </Header.Content>\n                                                    </Header>\n                                                    <VictoryChart\n                                                        theme={VictoryTheme.material}\n                                                        width={500}\n                                                        height={300}\n                                                        domainPadding={10}\n                                                        scale={{ y: props.ylog ? 'log' : 'linear' }}\n                                                        minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                        padding={{ left: 40, right: 70, top: 60, bottom: 50 }}\n                                                        containerComponent={<VictoryContainer responsive={false} />}\n                                                    >\n\n                                                        <VictoryAxis label='Age group'\n                                                            style={{\n                                                                axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato', padding: 25 },\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }} />\n                                                        <VictoryAxis dependentAxis\n                                                            domain={[0, 1]}\n                                                            style={{\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }}\n                                                            tickFormat={(y) => (y <= 1 ? y * 100 : (y / 1000 + 'k'))} />\n                                                        <VictoryLegend x={70} y={35}\n                                                            orientation=\"horizontal\"\n                                                            gutter={1}\n                                                            data={[\n                                                                { name: 'Percentage of GA Cases', symbol: { fill: colors['1'], type: \"square\" } },\n                                                                { name: \"Percentage of GA Population\", symbol: { fill: colors['2'], type: \"square\" } },\n                                                            ]}\n                                                        />\n                                                        <VictoryGroup offset={20}\n                                                            colorScale={\"qualitative\"}\n                                                        >\n\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                labels={({ datum }) => `Percentage of GA Cases:  ${(datum.value * 100).toFixed(0)}%`}\n                                                                data={[{ key: \"< 20\", 'value': data_cases['13'][\"019ageC_P\"] || 0, 'colors': '1' },\n                                                                { key: \"20-44\", 'value': data_cases['13'][\"2044ageC_P\"] || 0, 'colors': '1' },\n                                                                { key: \"45-64\", 'value': data_cases['13'][\"4564ageC_P\"] || 0, 'colors': '1' },\n                                                                { key: \"65+\", 'value': data_cases['13'][\"65ageC_P\"] || 0, 'colors': '1' }]}\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-90} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 2\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                data={[{ key: \"< 20\", 'value': data_cases['13'][\"019ageP\"] || 0, 'colors': '2' },\n                                                                { key: \"20-44\", 'value': data_cases['13'][\"2044ageP\"] || 0, 'colors': '2' },\n                                                                { key: \"45-64\", 'value': data_cases['13'][\"4564ageP\"] || 0, 'colors': '2' },\n                                                                { key: \"65+\", 'value': data_cases['13'][\"65ageP\"] || 0, 'colors': '2' }]}\n                                                                labels={({ datum }) =>\n                                                                    `Percentage of GA Population: ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`\n                                                                }\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-50} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 0.7\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                        </VictoryGroup>\n                                                    </VictoryChart>\n                                                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '1em', paddingRight: '2em' }} centered>\n                                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ paddingTop: '0em', paddingLeft: '1em', paddingRight: '2em' }}>\n                                                        <Accordion defaultActiveIndex={1} panels={[\n                                                            {\n                                                                key: 'acquire-dog',\n                                                                title: {\n                                                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                                    icon: 'dropdown',\n                                                                },\n                                                                content: {\n                                                                    content: (\n                                                                        <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                            \n                                                                            This chart shows the percentage of cases and percentage of the population by age for Georgia.   \n                                                            <br></br>\n\n                                                                        <List as='ul'>\n                                                                            <List.Item as='li'>The chart excludes data from {datades_cases['13']['age4catPmiss'].toFixed(2)}% of\n                                                                                                                    confirmed cases who were missing information on age.</List.Item>\n                                                                            <List.Item as='li'>The COVID-19 case numbers represent confirmed cases only, defined as an individual with a positive\n                                                                                                                    molecular test. </List.Item>\n                                                                            <List.Item as='li'>Only molecular test results are used in identifying confirmed cases.</List.Item>\n                                                                        </List>\n                                                                        </p>\n                //                                                         <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                            \n                //                                                             This chart shows the percentage of cases and percentage of the population by age for Georgia. The chart excludes data from {datades_cases['13']['age4catPmiss'].toFixed(2)}% of\n                //                                             confirmed cases who were missing information on age.  The COVID-19 case numbers represent confirmed cases only, defined as an individual with a positive\n                //                                             molecular test. Only molecular test results are used in identifying confirmed cases.\n\n\n\n\n                //                                             <br></br>\n\n                // <List as='ul'>\n                //     <List.Item as='li'>Electronic Lab Reporting (ELR)</List.Item>\n                //     <List.Item as='li'>State Electronic Notifiable Disease Surveillance System (SendSS)</List.Item>\n                //     <List.Item as='li'>Faxed case reports</List.Item>\n                //     <List.Item as='li'>Calls from providers to DPH</List.Item>\n                // </List>\n                //                                                         </p>\n                                                                    ),\n                                                                },\n                                                            }\n                                                        ]\n\n                                                        } />\n\n                                                    </Grid.Row>\n                                                </Grid.Column>\n                                                <Grid.Column style={{paddingLeft:'3em', paddingTop: '1em', paddingBottom: 18 }}>\n                                                    <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingRight: '0em',paddingLeft:'2em' }}>\n                                                        <Header.Content>\n                                                            COVID-19 Deaths in Georgia by Age\n            \t\t                        </Header.Content>\n                                                    </Header>\n                                                    <VictoryChart\n                                                        theme={VictoryTheme.material}\n                                                        width={500}\n                                                        height={300}\n                                                        domainPadding={10}\n                                                        scale={{ y: props.ylog ? 'log' : 'linear' }}\n                                                        minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                        padding={{ left: 79, right: 40, top: 60, bottom: 50 }}\n                                                        containerComponent={<VictoryContainer responsive={false} />}\n                                                    >\n                                                        <VictoryAxis\n                                                            label='Age group'\n                                                            style={{\n                                                                axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato', padding: 25 },\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }} />\n                                                        <VictoryAxis dependentAxis\n                                                            domain={[0, 1]}\n                                                            style={{\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }}\n                                                            tickFormat={(y) => (y <= 1 ? y * 100 : (y / 1000 + 'k'))} />\n                                                        <VictoryLegend x={70} y={35}\n                                                            orientation=\"horizontal\"\n                                                            gutter={1}\n                                                            data={[\n                                                                { name: 'Percentage of GA Deaths ', symbol: { fill: colors['3'], type: \"square\" } },\n                                                                { name: \"Percentage of GA Population\", symbol: { fill: colors['2'], type: \"square\" } },\n                                                            ]}\n                                                        />\n                                                        <VictoryGroup offset={20}\n                                                            colorScale={\"qualitative\"}\n                                                        >\n\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                // labels={({ datum }) => (Math.round(datum.value * 100) / 100)}\n                                                                labels={({ datum }) => `Percentage of Deaths : ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`}\n                                                                data={[{ key: \"< 20\", 'value': data_deaths['13'][\"019ageC_P\"] || 0, 'colors': '3' },\n                                                                { key: \"20-44\", 'value': data_deaths['13'][\"2044ageC_P\"] || 0, 'colors': '3' },\n                                                                { key: \"45-64\", 'value': data_deaths['13'][\"4564ageC_P\"] || 0, 'colors': '3' },\n                                                                { key: \"65+\", 'value': data_deaths['13'][\"65ageC_P\"] || 0, 'colors': '3' }]}\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-60} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 2\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                data={[{ key: \"< 20\", 'value': data_deaths['13'][\"019ageP\"] || 0, 'colors': '2' },\n                                                                { key: \"20-44\", 'value': data_deaths['13'][\"2044ageP\"] || 0, 'colors': '2' },\n                                                                { key: \"45-64\", 'value': data_deaths['13'][\"4564ageP\"] || 0, 'colors': '2' },\n                                                                { key: \"65+\", 'value': data_deaths['13'][\"65ageP\"] || 0, 'colors': '2' }]}\n                                                                labels={({ datum }) =>\n                                                                    `Percentage of GA Population: ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`\n                                                                }\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 0.7\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                        </VictoryGroup>\n                                                    </VictoryChart>\n                                                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                                        <Accordion defaultActiveIndex={1} panels={[\n                                                            {\n                                                                key: 'acquire-dog',\n                                                                title: {\n                                                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                                    icon: 'dropdown',\n                                                                },\n                                                                content: {\n                                                                    content: (\n                                                                        <p style={{  fontFamily: 'lato', fontSize: 18 }}>\n                                                                            This chart shows the percentage of deaths and percentage of the population by age for Georgia.  \n                                                            <br></br>\n\n                                                                        <List as='ul'>\n                                                                            <List.Item as='li'>The chart excludes data from {datades_deaths['13']['age4catPmiss'].toFixed(2)}% of confirmed deaths who were missing information on age.</List.Item>\n                                                                            <List.Item as='li'>The number of deaths includes\n                                                            confirmed COVID-19 cases that were either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by\n                                                            death certificates with COVID-19 indicated as the cause of death. </List.Item>\n                                                                        </List>\n                                                                        </p>\n                                                            //             <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                            //                 This chart shows the percentage of deaths and percentage of the population by age for Georgia. The chart excludes data from {datades_deaths['13']['age4catPmiss'].toFixed(2)}% of confirmed deaths who were missing information on age. The number of deaths includes\n                                                            // confirmed COVID-19 cases that were either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by\n                                                            // death certificates with COVID-19 indicated as the cause of death.\n                                                            \n                                                            //             </p>\n                                                                        \n                                                                    ),\n                                                                },\n                                                            }\n                                                        ]\n\n                                                        } />\n\n                                                    </Grid.Row>\n                                                </Grid.Column>\n                                            </Grid.Row>\n                                        </Grid>\n\n\n                                        <hr\n                                            style={{\n                                                color: '#44a0e2',\n                                                backgroundColor: '#44a0e2',\n                                                height: 5,\n                                                width: '100%'\n                                            }}\n                                        />\n                                        <div id='sex_g' style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content>\n                                                    COVID-19 by Sex\n                                    </Header.Content>\n                                            </Header>\n                                        </div>\n                                        <Grid style={{ paddingLeft: \"2em\", paddingTop: '0.5em', paddingRight: \"7em\", width: \"100%\", height: \"100%\" }}>\n                                            <Grid.Row columns={2} style={{paddingLeft:'2em', paddingTop: 11 }}>\n                                                <Grid.Column style={{paddingLeft:'1em', paddingTop: '1em', paddingBottom: 18 }}>\n                                                    <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingRight: '2em' }}>\n                                                        <Header.Content>\n                                                            COVID-19 Cases in Georgia by Sex\n            \t\t                        </Header.Content>\n                                                    </Header>\n                                                    <VictoryChart\n                                                        theme={VictoryTheme.material}\n                                                        width={500}\n                                                        height={300}\n                                                        domainPadding={100}\n                                                        scale={{ y: props.ylog ? 'log' : 'linear' }}\n                                                        // minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                        maxDomain={{ y: 1 }}\n                                                        padding={{ left: 40, right: 70, top: 60, bottom: 50 }}\n                                                        containerComponent={<VictoryContainer responsive={false} />}\n                                                    >\n                                                        {/* <VictoryLabel style={{\n                                                fontSize: 20, paddingBottom: '0.5em'\n                                            }} text={props.title} x={(560) / 2} y={20} textAnchor=\"middle\" /> */}\n                                                        <VictoryAxis\n                                                            label='Sex'\n                                                            style={{\n                                                                axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato', padding: 25 },\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }} />\n                                                        <VictoryAxis dependentAxis\n                                                            domain={[0, 1]}\n                                                            style={{\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }}\n                                                            tickFormat={(y) => (y <= 1 ? y * 100 : (y / 1000 + 'k'))} />\n                                                        <VictoryLegend x={70} y={35}\n                                                            orientation=\"horizontal\"\n                                                            gutter={1}\n                                                            // style={{ border: { stroke: \"black\" } }}\n                                                            data={[\n                                                                { name: 'Percentage of GA Cases', symbol: { fill: colors['1'], type: \"square\" } },\n                                                                { name: \"Percentage of GA Population\", symbol: { fill: colors['2'], type: \"square\" } },\n                                                            ]}\n                                                        />\n                                                        <VictoryGroup offset={20}\n                                                            colorScale={\"qualitative\"}\n                                                        >\n\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                // labels={({ datum }) => (Math.round(datum.value * 100) / 100)}\n                                                                labels={({ datum }) => `Percentage of GA Cases:  ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`}\n                                                                data={[\n                                                                    { key: \"Male\", 'value': data_cases['13'][\"maleC_P\"] || 0, 'colors': '1' },\n                                                                    { key: \"Female\", 'value': data_cases['13'][\"femaleC_P\"] || 0, 'colors': '1' }]}\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-60} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 2\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                data={[\n                                                                    { key: \"Male\", 'value': data_cases['13'][\"maleP\"] || 0, 'colors': '2' },\n                                                                    { key: \"Female\", 'value': data_cases['13'][\"femaleP\"] || 0, 'colors': '2' }]}\n                                                                labels={({ datum }) =>\n                                                                    `Percentage of GA Population: ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`\n                                                                }\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 0.7\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                        </VictoryGroup>\n                                                    </VictoryChart>\n                                                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '2em', paddingRight: '2em' }} centered>\n                                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ paddingTop: '0em', paddingLeft: '2em', paddingRight: '2em' }}>\n                                                        <Accordion defaultActiveIndex={1} panels={[\n                                                            {\n                                                                key: 'acquire-dog',\n                                                                title: {\n                                                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                                    icon: 'dropdown',\n                                                                },\n                                                                content: {\n                                                                    content: (\n                                                                        <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                            This chart shows the percentage of cases and percentage of the population by sex for Georgia.\n                                                            <br></br>\n\n                                                                        <List as='ul'>\n                                                                            <List.Item as='li'>The chart excludes data from {datades_cases['13']['femalePmiss'].toFixed(2)}% of confirmed cases who were missing information on sex.</List.Item>\n                                                                            <List.Item as='li'>The COVID-19 case numbers represent confirmed cases only, defined as an individual with a positive molecular test.</List.Item>\n                                                                            <List.Item as='li'>Only molecular test results are used in identifying confirmed cases.</List.Item>\n                                                                        </List>\n                                                                        </p>\n                                                                    ),\n                                                                },\n                                                            }\n                                                        ]\n\n                                                        } />\n\n                                                    </Grid.Row>\n\n                                                </Grid.Column>\n                                                <Grid.Column style={{paddingLeft:'2em', paddingTop: '1em', paddingBottom: 18 }}>\n                                                    <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingRight: '0em',paddingLeft:'1em' }}>\n                                                        <Header.Content>\n                                                            COVID-19 Deaths in Georgia by Sex\n            \t\t                        </Header.Content>\n                                                    </Header>\n                                                    <VictoryChart\n                                                        theme={VictoryTheme.material}\n                                                        width={500}\n                                                        height={300}\n                                                        domainPadding={100}\n                                                        scale={{ y: props.ylog ? 'log' : 'linear' }}\n                                                        // minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                        maxDomain={{ y: 1 }}\n                                                        padding={{ left: 79, right: 40, top: 60, bottom: 50 }}\n                                                        containerComponent={<VictoryContainer responsive={false} />}\n                                                    >\n                                                        <VictoryAxis label='Sex'\n                                                            style={{\n                                                                axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato', padding: 25 },\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }} />\n                                                        <VictoryAxis dependentAxis\n                                                            domain={[0, 1]}\n                                                            style={{\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }}\n                                                            tickFormat={(y) => (y <= 1 ? y * 100 : (y / 1000 + 'k'))} />\n                                                        <VictoryLegend x={70} y={35}\n                                                            orientation=\"horizontal\"\n                                                            gutter={1}\n                                                            // style={{ border: { stroke: \"black\" } }}\n                                                            data={[\n                                                                { name: 'Percentage of GA Deaths ', symbol: { fill: colors['3'], type: \"square\" } },\n                                                                { name: \"Percentage of GA Population\", symbol: { fill: colors['2'], type: \"square\" } },\n                                                            ]}\n                                                        />\n                                                        <VictoryGroup offset={20}\n                                                            colorScale={\"qualitative\"}\n                                                        >\n\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                // labels={({ datum }) => (Math.round(datum.value * 100) / 100)}\n                                                                labels={({ datum }) => `Percentage of Deaths : ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`}\n                                                                data={[\n                                                                    { key: \"Male\", 'value': data_deaths['13'][\"maleC_P\"] || 0, 'colors': '3' },\n                                                                    { key: \"Female\", 'value': data_deaths['13'][\"femaleC_P\"] || 0, 'colors': '3' }]}\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-60} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 2\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                data={[\n                                                                    { key: \"Male\", 'value': data_deaths['13'][\"maleP\"] || 0, 'colors': '2' },\n                                                                    { key: \"Female\", 'value': data_deaths['13'][\"femaleP\"] || 0, 'colors': '2' }]}\n                                                                labels={({ datum }) =>\n                                                                    `Percentage of GA Population: ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`\n                                                                }\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-50} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 0.7\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                        </VictoryGroup>\n                                                    </VictoryChart>\n                                                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                                        <Accordion defaultActiveIndex={1} panels={[\n                                                            {\n                                                                key: 'acquire-dog',\n                                                                title: {\n                                                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                                    icon: 'dropdown',\n                                                                },\n                                                                content: {\n                                                                    content: (\n                                                                        <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                            This chart shows the percentage of deaths and percentage of the population by sex for Georgia. \n                                                                            <br></br>\n                                                            \n                                                            <List as='ul'>\n                                                                            <List.Item as='li'>The chart excludes data from {datades_deaths['13']['femalePmiss'].toFixed(2)}% of confirmed deaths who were missing information on sex.</List.Item>\n                                                                            <List.Item as='li'>The number of deaths includes confirmed COVID-19 cases that were either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by\n                                                            death certificates with COVID-19 indicated as the cause of death.</List.Item>\n                                                                        </List>\n                                                                        </p>\n                                                                    ),\n                                                                },\n                                                            }\n                                                        ]\n\n                                                        } />\n\n                                                    </Grid.Row>\n                                                </Grid.Column>\n                                            </Grid.Row>\n                                        </Grid>\n\n                                        <hr\n                                            style={{\n                                                color: '#44a0e2',\n                                                backgroundColor: '#44a0e2',\n                                                height: 5,\n                                                width: '100%'\n                                            }}\n                                        />\n                                        <div id='re' style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content>\n                                                    COVID-19 by Race/Ethnicity\n                                    </Header.Content>\n                                            </Header>\n                                        </div>\n\n                                        <Grid style={{ paddingLeft: \"2em\", paddingTop: '0.5em', paddingRight: \"7em\", width: \"100%\", height: \"100%\" }}>\n                                            <Grid.Row columns={2} style={{paddingLeft:'2em', paddingTop: 11 }}>\n                                                <Grid.Column style={{ paddingTop: '1em', paddingBottom: 18 }}>\n                                                    <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingRight: '2em' }}>\n                                                        <Header.Content>\n                                                            COVID-19 Cases in Georgia by Race and Ethnicity\n            \t\t                        </Header.Content>\n                                                    </Header>\n                                                    <VictoryChart\n                                                        theme={VictoryTheme.material}\n                                                        width={500}\n                                                        height={300}\n                                                        domainPadding={10}\n                                                        scale={{ y: props.ylog ? 'log' : 'linear' }}\n                                                        minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                        padding={{ left: 40, right: 70, top: 60, bottom: 50 }}\n                                                        containerComponent={<VictoryContainer responsive={false} />}\n                                                    >\n                                                        {/* <VictoryLabel style={{\n                                                fontSize: 20, paddingBottom: '0.5em'\n                                            }} text={props.title} x={(560) / 2} y={20} textAnchor=\"middle\" /> */}\n                                                        <VictoryAxis label='Race/Ethnicity'\n                                                            style={{\n                                                                axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato', padding: 25 },\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }} />\n                                                        <VictoryAxis dependentAxis\n                                                            domain={[0, 1]}\n                                                            style={{\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }}\n                                                            tickFormat={(y) => (y <= 1 ? y * 100 : (y / 1000 + 'k'))} />\n                                                        <VictoryLegend x={70} y={35}\n                                                            orientation=\"horizontal\"\n                                                            gutter={1}\n                                                            // style={{ border: { stroke: \"black\" } }}\n                                                            data={[\n                                                                { name: 'Percentage of GA Cases', symbol: { fill: colors['1'], type: \"square\" } },\n                                                                { name: \"Percentage of GA Population\", symbol: { fill: colors['2'], type: \"square\" } },\n                                                            ]}\n                                                        />\n                                                        <VictoryGroup offset={20}\n                                                            colorScale={\"qualitative\"}\n                                                        >\n\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                // labels={({ datum }) => (Math.round(datum.value * 100) / 100)}\n                                                                labels={({ datum }) => `Percentage of GA Cases:  ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`}\n                                                                data={[{ key: \"NH White\", 'value': data_cases['13'][\"whiteC_P\"] || 0, 'colors': '1' },\n                                                                { key: \"NH Black\", 'value': data_cases['13'][\"blackC_P\"] || 0, 'colors': '1' },\n                                                                { key: \"Hispanic\", 'value': data_cases['13'][\"hispanicC_P\"] || 0, 'colors': '1' },\n                                                                { key: \"NH Other\", 'value': data_cases['13'][\"otherNHC_P\"] || 0, 'colors': '1' }]}\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-60} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 2\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                data={[{ key: \"NH White\", 'value': data_cases['13'][\"whiteP\"] || 0, 'colors': '2' },\n                                                                { key: \"NH Black\", 'value': data_cases['13'][\"blackP\"] || 0, 'colors': '2' },\n                                                                { key: \"Hispanic\", 'value': data_cases['13'][\"hispanicP\"] || 0, 'colors': '2' },\n                                                                { key: \"NH Other\", 'value': data_cases['13'][\"otherNHP\"] || 0, 'colors': '2' }]}\n                                                                labels={({ datum }) =>\n                                                                    `Percentage of GA Population: ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`\n                                                                }\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-50} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 0.7\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                        </VictoryGroup>\n                                                    </VictoryChart>\n                                                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '2em', paddingRight: '2em' }} centered>\n                                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ paddingTop: '0em', paddingLeft: '2em', paddingRight: '2em' }}>\n                                                        <Accordion defaultActiveIndex={1} panels={[\n                                                            {\n                                                                key: 'acquire-dog',\n                                                                title: {\n                                                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                                    icon: 'dropdown',\n                                                                },\n                                                                content: {\n                                                                    content: (\n                                                                        <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                            This chart shows the percentage of cases and percentage of the population by race/ethnicity for Georgia.   \n                                                            <br></br>\n                                                            \n                                                            <List as='ul'>\n                                                                            <List.Item as='li'>NH = non-Hispanic </List.Item>\n                                                                            <List.Item as='li'>The chart excludes data from {datades_cases['13']['race_3Pmiss'].toFixed(2)}% of confirmed cases who were missing information on race/ethnicity.</List.Item>\n                                                                            <List.Item as='li'>The COVID-19 case numbers represent confirmed cases only, defined as an individual with a positive molecular test.</List.Item>\n                                                                            <List.Item as='li'>Only molecular test results are used in identifying confirmed cases.</List.Item>\n                                                                        </List>\n                                                                        </p>\n                                                                    ),\n                                                                },\n                                                            }\n                                                        ]\n\n                                                        } />\n\n                                                    </Grid.Row>\n\n                                                </Grid.Column>\n                                                <Grid.Column style={{ paddingTop: '1em', paddingBottom: 18 }}>\n                                                    <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingRight: '0em',paddingLeft:'1em' }}>\n                                                        <Header.Content>\n                                                            COVID-19 Deaths in Georgia by Race and Ethnicity\n\n            \t\t                        </Header.Content>\n                                                    </Header>\n                                                    <VictoryChart\n                                                        theme={VictoryTheme.material}\n                                                        width={500}\n                                                        height={300}\n                                                        domainPadding={10}\n                                                        scale={{ y: props.ylog ? 'log' : 'linear' }}\n                                                        minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                        padding={{ left: 79, right: 40, top: 60, bottom: 50 }}\n                                                        containerComponent={<VictoryContainer responsive={false} />}\n                                                    >\n                                                        {/* <VictoryLabel style={{\n                                                fontSize: 20, paddingBottom: '0.5em'\n                                            }} text={props.title} x={(560) / 2} y={20} textAnchor=\"middle\" /> */}\n                                                        <VictoryAxis label='Race/Ethnicity'\n                                                            style={{\n                                                                axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato', padding: 25 },\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }} />\n                                                        <VictoryAxis dependentAxis\n                                                            domain={[0, 1]}\n                                                            style={{\n                                                                tickLabels: { fontSize: 18, padding: 2 }\n                                                            }}\n                                                            tickFormat={(y) => (y <= 1 ? y * 100 : (y / 1000 + 'k'))} />\n                                                        <VictoryLegend x={70} y={35}\n                                                            orientation=\"horizontal\"\n                                                            gutter={1}\n                                                            // style={{ border: { stroke: \"black\" } }}\n                                                            data={[\n                                                                { name: 'Percentage of GA Deaths ', symbol: { fill: colors['3'], type: \"square\" } },\n                                                                { name: \"Percentage of GA Population\", symbol: { fill: colors['2'], type: \"square\" } },\n                                                            ]}\n                                                        />\n                                                        <VictoryGroup offset={20}\n                                                            colorScale={\"qualitative\"}\n                                                        >\n\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                // labels={({ datum }) => (Math.round(datum.value * 100) / 100)}\n                                                                labels={({ datum }) => `Percentage of Deaths : ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`}\n                                                                data={[{ key: \"NH White\", 'value': data_deaths['13'][\"whiteC_P\"] || 0, 'colors': '3' },\n                                                                { key: \"NH Black\", 'value': data_deaths['13'][\"blackC_P\"] || 0, 'colors': '3' },\n                                                                { key: \"Hispanic\", 'value': data_deaths['13'][\"hispanicC_P\"] || 0, 'colors': '3' },\n                                                                { key: \"NH Other\", 'value': data_deaths['13'][\"otherNHC_P\"] || 0, 'colors': '3' }]}\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-60} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 2\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                            <VictoryBar\n                                                                alignment=\"start\"\n                                                                barWidth={20}\n                                                                data={[{ key: \"NH White\", 'value': data_deaths['13'][\"whiteP\"] || 0, 'colors': '2' },\n                                                                { key: \"NH Black\", 'value': data_deaths['13'][\"blackP\"] || 0, 'colors': '2' },\n                                                                { key: \"Hispanic\", 'value': data_deaths['13'][\"hispanicP\"] || 0, 'colors': '2' },\n                                                                { key: \"NH Other\", 'value': data_deaths['13'][\"otherNHP\"] || 0, 'colors': '2' }]}\n                                                                labels={({ datum }) =>\n                                                                    `Percentage of GA Population: ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`\n                                                                }\n                                                                labelComponent={<VictoryTooltip\n                                                                    orientation=\"top\"\n                                                                    style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n                                                                    constrainToVisibleArea\n                                                                    // labelComponent={<VictoryLabel dx={-50} textAnchor='start' />}\n                                                                    flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                                                                />}\n                                                                style={{\n                                                                    data: {\n                                                                        fill: ({ datum }) => colors[datum.colors],\n                                                                        fillOpacity: 0.7\n                                                                    }\n                                                                }}\n                                                                x=\"key\"\n                                                                y=\"value\"\n                                                            />\n                                                        </VictoryGroup>\n                                                    </VictoryChart>\n                                                    <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                    </Grid.Row>\n                                                    <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                                        <Accordion defaultActiveIndex={1} panels={[\n                                                            {\n                                                                key: 'acquire-dog',\n                                                                title: {\n                                                                    content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                                    icon: 'dropdown',\n                                                                },\n                                                                content: {\n                                                                    content: (\n                                                                        <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                            This chart shows the percentage of deaths and percentage of the population by race/ethnicity for Georgia. \n                                                            \n                                                            <br></br>\n                                                            \n                                                            <List as='ul'>\n                                                            <List.Item as='li'>NH = non-Hispanic </List.Item>\n                                                                            <List.Item as='li'>The chart excludes data from {datades_deaths['13']['race_3Pmiss'].toFixed(2)}% of confirmed deaths who were missing information on race/ethnicity.</List.Item>\n                                                                            <List.Item as='li'>The number of deaths includes confirmed COVID-19 cases that were either reported to DPH as deceased by healthcare providers, medical examiners/coroners, or identified by\n                                                            death certificates with COVID-19 indicated as the cause of death.</List.Item>\n                                                                        </List>\n                                                                        </p>\n                                                                    ),\n                                                                },\n                                                            }\n                                                        ]\n\n                                                        } />\n\n                                                    </Grid.Row>\n\n\n                                                </Grid.Column>\n                                            </Grid.Row>\n                                        </Grid>\n\n\n\n                                        <Grid  style={{ paddingBottom: '2em' }}>\n                                            <Grid.Row>\n                                                <div id='chara' style={sectionStyle2}>\n                                                    <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"22pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                        <Header.Content>\n                                                        County disparities in COVID-19 case rates and death rates\n                                    </Header.Content>\n                                                    </Header>\n                                                </div>\n                                            </Grid.Row>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"18pt\", paddingTop: 0 }}>\n\n                                                <Header.Subheader style={{ color: '#000000', textAlign: 'left', fontSize: \"16pt\", paddingTop: 16, paddingBottom: 10, paddingLeft: 0, paddingRight: 0 }}>\n                                                    {/* <center> <b style={{ fontSize: \"18pt\" }}>COVID-19 cases per 100,000 across the population characteristics of all the counties in the United States </b> </center> */}\n                                                        {/* COVID-19 affects communities differently. Underlying medical conditions;\n                                                        racial, gender, and age demographics; income levels; and population density are\n                                                        all contributing factors that determine the rate of COVID-19 in different counties.\n                                                        Some of the many county characteristics that may have a large impact on disparate rates\n                                                        of infection are displayed below, with counties divided into quintiles based on each characteristic,\n                                                        unless otherwise noted. */}\n                                                        COVID-19 affects communities differently. Underlying medical conditions;\n                                                        racial, gender, and age demographics; income levels; and population density are\n                                                        all factors that affect the burden of COVID-19 cases and deaths across counties.\n                                                        Some of the county characteristics that may drive disparities in COVID-19 cases and deaths are displayed below, with counties divided into quintiles based on each characteristic,\n                                                        unless otherwise noted.\n                                                        </Header.Subheader>\n                                            </Header>\n                                        </Grid>\n                                        <hr\n                                            style={{\n                                                color: '#44a0e2',\n                                                backgroundColor: '#44a0e2',\n                                                height: 5,\n                                                width: '100%'\n                                            }}\n                                        />\n\n                                        <Grid id=\"cvi\" style={{ paddingBottom: '2em' }}>\n                                        <Grid.Row>\n                                                <div id='cvi' style={{ width: \"100%\", height: \"100%\" }}>\n                                                    <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                        <Header.Content>COVID-19 Community Vulnerability Index</Header.Content>\n                                                    </Header>\n                                                </div>\n                                            </Grid.Row>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"18pt\", paddingTop: 1 }}>\n                                                <Header.Subheader style={{ color: '#000000', textAlign: 'left', fontSize: \"16pt\", paddingTop: 1, paddingBottom: 28, paddingLeft: 0, paddingRight: 0 }}>\n                                                    The COVID-19 Community Vulnerability Index (CCVI) measures the expected negative impact that a community may face in the context of the COVID-19 epidemic.\n                                                    Identifying counties at risk for worse COVID-19 health outcomes can help inform policies and distribution of resources. The COVID-19 Community Vulnerability\n                                                    Index (CCVI) was created by the Surgo Foundation. CCVI incorporates 40 county characteristics, with seven core themes: socioeconomic status; minority status and language; housing type, transportation, household\n                                                    composition & disability; epidemiological factors; healthcare system factors; high risk environments; and population density. More information about the COVID-19 Community Vulnerability Index can be found <a href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\">here</a>.\n\n<br />\n                                                    <br />\n\n                                                </Header.Subheader>\n                                            </Header>\n                                            \n                                    <Tab panes={panes} renderActiveOnly />\n                                    {/* <TabExampleBasicAll panes = {panes}/> */}\n\n           \n                                        </Grid>\n                                        <hr\n                                            style={{\n                                                color: '#44a0e2',\n                                                backgroundColor: '#44a0e2',\n                                                height: 5,\n                                                width: '100%'\n                                            }}\n                                        />\n                                        {/* SI */}\n                                        {/* <center> <Waypoint\n                                            onEnter={() => {\n                                                setActiveCharacter('Residential Segregation Index')\n                                                console.log(activeCharacter)\n                                            }}>\n                                        </Waypoint> </center> */}\n                                <Grid id='si' style={{ paddingBottom: '2em' }} >\n                                    <Grid.Row>\n                                        <div id='si' style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content>\n                                                    COVID-19 by Residential Segregation Index\n                            </Header.Content>\n                                            </Header>\n                                        </div>\n\n                                    </Grid.Row>\n\n                                    <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"18pt\", paddingTop: 0 }}>\n\n                                        <Header.Subheader style={{ fontFamily: 'lato', color: '#000000', textAlign: 'left', fontSize: \"16pt\", paddingTop: 0, paddingBottom: 28, paddingLeft: 0, paddingRight: 0 }}>\n\n                                            Racial residential segregation refers to the phenomenon of racial and ethnic groups living in separate neighborhoods. Residing in separate neighborhoods leads to the experience\n                                            of differing living conditions across racial and ethnic groups. In the United States, African American/Black populations in particular have been forced into living in areas with\n                                            worse housing quality, educational opportunities, and employment prospects through various policies that have promoted residential segregation. The Residential Segregation Index\n                                            is a measure of the degree to which Black and white Americans reside in separate neighborhoods, with 100 indicating total separation and 0 indicating total integration. In the figures below, we show the case and death rates of COVID-19 across Georgia counties with different levels of residential segregation index.\n\n        <br />\n                                            <br />\n\n                                        </Header.Subheader>\n                                    </Header>\n                                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n\n                                        <Grid.Row style={{ paddingLeft: \"2\", paddingLeft: \"1\", paddingBottom: '1.5em' }}>\n                                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                <Header.Content>\n                                                    Georgia Residential Segregation Index Map\n                                </Header.Content>\n                                            </Header>\n                                            <svg width=\"410\" height=\"70\">\n                                                {_.map(colorPalette2, (color, i) => {\n                                                    return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                                                })}\n                                                <text x={20} y={50} style={{ fontSize: '0.8em' }}>Least segregated</text>\n                                                <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Most segregated</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                                                {_.map(thresh_chara['si'], (splitpoint, i) => {\n                                                    return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['si'][i]}</text>\n                                                })}\n                                            </svg>\n                                            <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                                                <Geographies data-tip='si' data-for='si' geography={config.url}>\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n\n                                                                setCountyFipssi(geo.properties.COUNTYFP);\n                                                                setCountyNamesi(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                // setTooltipContentsi(fips2county[stateFips + geo.properties.COUNTYFP] + \"'s SI: \" + dataUs[stateFips + geo.properties.COUNTYFP]['si'].toFixed(0));\n\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFipssi === geo.properties.COUNTYFP ? countyColor :\n                                                                ((dataUs[stateFips + geo.properties.COUNTYFP] &&\n                                                                    dataUs[stateFips + geo.properties.COUNTYFP]['si'] && dataUs[stateFips + geo.properties.COUNTYFP]['si'] > 0) ?\n                                                                    colortopic[stateFips + geo.properties.COUNTYFP]['s_index'] :\n                                                                    (colorScale && dataUs[stateFips + geo.properties.COUNTYFP] && dataUs[stateFips + geo.properties.COUNTYFP][metric] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n\n\n                                        </Grid.Row>\n                                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This map shows each Georgia county according to its residential segregation ranking.\n                                                                County rankings are based on quintiles of the residential segregation index. The ranking classified counties into five groups designed to be of equal size, so that very low segreagation contains the counties with values in the 0%-20% range for this county characteristic, and the very high segregation contains counties with values in the 80%-100% range for this county characteristic. Low segregation indicates counties in the 20%-40% range, moderate segregation indicates counties in the 40%-60% range, and high segregation indecates counties in the 60%-80% range.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n                                    </Grid.Column>\n                                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                                        <Grid.Row columns={1}>\n                                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Case Rate by Residential Segregation Index\n                                            </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 220, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Cases per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low segregation\", 'value':\n                                                                    data_index['s_index'][\"low20\"]['casescumR'] || 0, 'ez': data_index['s_index'][\"low20\"]['county_list']\n                                                            },\n                                                            { key: \"Low segregation\", 'value': data_index['s_index'][\"Q2\"]['casescumR'] || 0, 'ez': data_index['s_index'][\"Q2\"]['county_list'] },\n                                                            {\n                                                                key: \"Moderate segregation\", 'value': data_index['s_index'][\"Q3\"]['casescumR']\n                                                                    || 0, 'ez': data_index['s_index'][\"Q3\"]['county_list']\n                                                            },\n                                                            { key: \"High segregation\", 'value': data_index['s_index'][\"Q4\"]['casescumR'] || 0, 'ez': data_index['s_index'][\"Q4\"]['county_list'] },\n                                                            {\n                                                                key: \"Very high segregation\",\n                                                                'value': data_index['s_index'][\"high20\"]['casescumR'] || 0, 'ez': data_index['s_index'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipssi) ? countyColor : casesColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row columns={1} style={{ paddingTop: \"1em\" }}>\n                                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Death Rate by Residential Segregation Index\n                                            </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 220, right: 100, top: 4, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Deaths per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low Segregation\", 'value':\n                                                                    (data_index['s_index'][\"low20\"]['deathscumR'] / data_index['s_index'][\"Q2\"]['deathscumR'])\n                                                                    * data_index['s_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['s_index'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low segregation\", 'value': (data_index['s_index'][\"Q2\"]['deathscumR']\n                                                                    / data_index['s_index'][\"Q2\"]['deathscumR']) *\n                                                                    data_index['s_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['s_index'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate segregation\", 'value': (data_index['s_index'][\"Q3\"]['deathscumR']\n                                                                    / data_index['s_index'][\"Q2\"]['deathscumR'])\n                                                                    * data_index['s_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['s_index'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High segregation\", 'value': (data_index['s_index'][\"Q4\"]['deathscumR']\n                                                                    / data_index['s_index'][\"Q2\"]['deathscumR'])\n                                                                    * data_index['s_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['s_index'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high segregation\", 'value': (data_index['s_index'][\"high20\"]['deathscumR']\n                                                                    / data_index['s_index'][\"Q2\"]['deathscumR'])\n                                                                    * data_index['s_index'][\"Q2\"]['deathscumR'] || 0, 'ez': data_index['s_index'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipssi) ? countyColor : mortalityColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                                Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                                <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by residential segregation index.\n                                                                The y-axis displays residential segregation rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by residential segregation. The ranking classified counties into five groups designed to be of equal size, so that the very low segregation contains the counties with values in the 0%-20% range for this county characteristic, and the very high segregation contains counties with values in the 80%-100% range for this county characteristic. Low segregation indicates counties in the 20%-40% range, moderate segregation indicates counties in the 40%-60% range, and high segregation indecates counties in the 60%-80% range.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n\n                                    </Grid.Column>\n                                </Grid>\n                                <hr\n                                    style={{\n                                        color: '#44a0e2',\n                                        backgroundColor: '#44a0e2',\n                                        height: 5,\n                                        width: '100%'\n                                    }}\n                                />\n\n\n\n                                <Grid id=\"urbanrural\" style={{ paddingBottom: '2em' }}>\n                                    <Grid.Row>\n                                        <div  style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content>COVID-19 by Metropolitan Status</Header.Content>\n                                            </Header>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                                        <Grid.Row style={{ paddingTop: \"0\" }}>\n                                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                <Header.Content>\n                                                    Georgia Metropolitan Status Map\n                                </Header.Content>\n                                            </Header>\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '0em' }}>\n                                        <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                                                <Geographies data-tip='urb' data-for='urb' geography={config.url}>\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n\n                                                                setCountyFipsubr(geo.properties.COUNTYFP);\n                                                                setCountyNameubr(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                // setTooltipContentubr(fips2county[stateFips + geo.properties.COUNTYFP] + \"'s status: \" + dataCha[stateFips + geo.properties.COUNTYFP]['_013_Urbanization']);\n\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFipsubr === geo.properties.COUNTYFP ? countyColor :\n                                                                ((colorUbr && dataCha[stateFips + geo.properties.COUNTYFP] &&\n                                                                    dataCha[stateFips + geo.properties.COUNTYFP]['_013_Urbanization_Code'] && dataCha[stateFips + geo.properties.COUNTYFP]['_013_Urbanization_Code'] > 0) ?\n                                                                    colorUbr[dataCha[stateFips + geo.properties.COUNTYFP]['_013_Urbanization_Code']] :\n                                                                    (colorUbr && dataCha[stateFips + geo.properties.COUNTYFP] && dataCha[stateFips + geo.properties.COUNTYFP]['_013_Urbanization_Code'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n                                            <svg width=\"400\" height=\"150\">\n                                                <rect key={0} x={50} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[0], strokeWidth: 1, stroke: colorPalette[0] }} />\n                                                <text x={80} y={55} style={{ fontSize: '0.8em' }}>Remote rural areas</text>\n\n                                                <rect key={1} x={200} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[1], strokeWidth: 1, stroke: colorPalette[1] }} />\n                                                <text x={230} y={55} style={{ fontSize: '0.8em' }}>Rural areas near cities</text>\n\n                                                <rect key={2} x={50} y={80} width=\"20\" height=\"20\" style={{ fill: colorPalette[2], strokeWidth: 1, stroke: colorPalette[2] }} />\n                                                <text x={80} y={95} style={{ fontSize: '0.8em' }}>Small cities</text>\n\n                                                <rect key={3} x={200} y={80} width=\"20\" height=\"20\" style={{ fill: colorPalette[3], strokeWidth: 1, stroke: colorPalette[3] }} />\n                                                <text x={230} y={95} style={{ fontSize: '0.8em' }}>Small suburbs</text>\n                                                \n                                                <rect key={4} x={50} y={120} width=\"20\" height=\"20\" style={{ fill: colorPalette[4], strokeWidth: 1, stroke: colorPalette[4] }} />\n                                                <text x={80} y={135} style={{ fontSize: '0.8em' }}>Large suburbs</text>\n                                                \n                                                <rect key={5} x={200} y={120} width=\"20\" height=\"20\" style={{ fill: colorPalette[5], strokeWidth: 1, stroke: colorPalette[5] }} />\n                                                <text x={230} y={135} style={{ fontSize: '0.8em' }}>Inner city</text>\n                                            </svg>\n                                        </Grid.Row>\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0em', paddingLeft: '2em', paddingRight: '2em' }} centered>\n                                                Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                                </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '2.9em', paddingRight: '2em' }}>\n                                                <Accordion defaultActiveIndex={1} panels={[\n\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This map shows each Georgia county according to its metropolitan status.\n                                                                \n                                                            </p>\n                                                            // <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                            //     This map shows each Georgia county according to its metropolitan status.\n                                                            //     County rankings are based on metropolitan status, which ranks each county in one of six\n                                                            //     groups depending on population.\n                                                            // </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n                                    </Grid.Column>\n\n                                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                                        <Grid.Row columns={1} style={{ paddingBottom: \"2\" }}>\n                                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Cases Rate by Urban-Rural Classification\n                                        </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 220, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label={\"COVID-19 Cases per 100,000 Residents\"}\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Inner city\", 'value': data_index['urbanrural'][\"LargeCentralMetro\"]['casescumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"LargeCentralMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Large suburbs\", 'value': data_index['urbanrural'][\"LargeFringeMetro\"]['casescumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"LargeFringeMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Small suburbs\", 'value': data_index['urbanrural'][\"MediumMetro\"]['casescumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"MediumMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Small cities\", 'value': data_index['urbanrural'][\"SmallMetro\"]['casescumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"SmallMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Rural areas near\\n cities\", 'value': data_index['urbanrural'][\"Micropolitan(Nonmetro)\"]['casescumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"Micropolitan(Nonmetro)\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Remote rural areas\", 'value': data_index['urbanrural'][\"NonCore(Nonmetro)\"]['casescumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"NonCore(Nonmetro)\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsubr) ? countyColor : casesColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row columns={1} style={{ paddingTop: '2em' }}>\n                                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Death Rate by Urban-Rural Classification\n                                    </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 200, right: 100, top: 4, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Deaths per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Inner city\", 'value': data_index['urbanrural'][\"LargeCentralMetro\"]['deathscumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"LargeCentralMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Large suburbs\", 'value': data_index['urbanrural'][\"LargeFringeMetro\"]['deathscumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"LargeFringeMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Small suburbs\", 'value': data_index['urbanrural'][\"MediumMetro\"]['deathscumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"MediumMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Small cities\", 'value': data_index['urbanrural'][\"SmallMetro\"]['deathscumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"SmallMetro\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Rural areas near\\n cities\", 'value': data_index['urbanrural'][\"Micropolitan(Nonmetro)\"]['deathscumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"Micropolitan(Nonmetro)\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Remote rural areas\", 'value': data_index['urbanrural'][\"NonCore(Nonmetro)\"]['deathscumR'] || 0,\n                                                                'ez': data_index['urbanrural'][\"NonCore(Nonmetro)\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsubr) ? countyColor : mortalityColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '2.8em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                        <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by metropolitan status (y-axis).\n                                                        Inner city counties have {'>'} 1 million population or contain the entire or large part of the population of the largest principle city.\n                                        Large suburban counties have a population {'>'} 1 million, but do not qualify as inner city. Small suburban counties have a population of 250,000-999,999.\n                                        Small cities have populations {'<'} 250,000 and are near large cities. Rural areas near cities have an urbanized area with population between 10,000-49,999.\n                                        Remote rural counties have populations less than 10,000 individuals. This urban-rural classification scheme is from the National Center for Health Statistics.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n                                    </Grid.Column>\n                                </Grid>\n\n                                <hr\n                                    style={{\n                                        color: '#44a0e2',\n                                        backgroundColor: '#44a0e2',\n                                        height: 5,\n                                        width: '100%'\n                                    }}\n                                />\n\n                                <Grid id=\"poverty\" style={{ paddingBottom: '2em' }}>\n                                    <Grid.Row>\n                                        <div  style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content> COVID-19 by Percentage Population in Poverty</Header.Content>\n                                            </Header>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                                        <Grid.Row style={{ paddingTop: \"0\" }}>\n                                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                <Header.Content>\n                                                    Georgia Percentage Population in Poverty Map\n                                </Header.Content>\n                                            </Header>\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                                            <svg width=\"420\" height=\"70\">\n                                                {_.map(colorPalette2, (color, i) => {\n                                                    return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                                                })}\n                                                <text x={20} y={50} style={{ fontSize: '0.8em' }}>Lowest poverty</text>\n                                                <text x={20} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>Highest poverty</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>counties</text>\n                                                {_.map(thresh_chara['poverty'], (splitpoint, i) => {\n                                                    return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['poverty'][i]}</text>\n                                                })}\n                                            </svg>\n                                            <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                                                <Geographies data-tip='pov' data-for='pov' geography={config.url}>\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n\n                                                                setCountyFipspov(geo.properties.COUNTYFP);\n                                                                setCountyNamepov(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                // setTooltipContentpov(fips2county[stateFips + geo.properties.COUNTYFP]);\n\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFipspov === geo.properties.COUNTYFP ? countyColor :\n                                                                ((dataCha[stateFips + geo.properties.COUNTYFP] &&\n                                                                    dataCha[stateFips + geo.properties.COUNTYFP]['poverty'] && dataCha[stateFips + geo.properties.COUNTYFP]['poverty'] > 0) ?\n                                                                    colortopic[stateFips + geo.properties.COUNTYFP]['poverty'] :\n                                                                    (dataCha[stateFips + geo.properties.COUNTYFP] && dataCha[stateFips + geo.properties.COUNTYFP]['poverty'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n\n                                        </Grid.Row>\n                                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This map shows each Georgia county according to its percentage population in poverty.\n                                                                County rankings are based on  percentage of population in poverty. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                                                characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n                                    </Grid.Column>\n\n                                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                                        <Grid.Row columns={1}>\n                                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Case Rate by Percentage of Population in Poverty\n                                        </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label={\"COVID-19 Cases per 100,000 Residents\"}\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % in poverty\", 'value': data_index['poverty'][\"low20\"]['casescumR'] || 0,\n                                                                'ez': data_index['poverty'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % in poverty\", 'value': data_index['poverty'][\"Q2\"]['casescumR'] || 0,\n                                                                'ez': data_index['poverty'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % in poverty\", 'value': data_index['poverty'][\"Q3\"]['casescumR'] || 0,\n                                                                'ez': data_index['poverty'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % in poverty\", 'value': data_index['poverty'][\"Q4\"]['casescumR'] || 0,\n                                                                'ez': data_index['poverty'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high % in poverty\", 'value': data_index['poverty'][\"high20\"]['casescumR'] || 0,\n                                                                'ez': data_index['poverty'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipspov) ? countyColor : casesColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row columns={1} style={{ paddingTop: '1em' }}>\n                                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Death Rate by Percentage of Population in Poverty\n                                    </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Deaths per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % in poverty\", 'value': data_index['poverty'][\"low20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['poverty'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % in poverty\", 'value': data_index['poverty'][\"Q2\"]['deathscumR'] || 0,\n                                                                'ez': data_index['poverty'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % in poverty\", 'value': data_index['poverty'][\"Q3\"]['deathscumR'] || 0,\n                                                                'ez': data_index['poverty'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % in poverty\", 'value': data_index['poverty'][\"Q4\"]['deathscumR'] || 0,\n                                                                'ez': data_index['poverty'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high % in poverty\", 'value': data_index['poverty'][\"high20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['poverty'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipspov) ? countyColor : mortalityColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                            </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by county ranking on percentage of population in poverty.\n                                                                The y-axis displays percentage population in poverty rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by percentage population in poverty. The ranking classified counties into five groups designed to be of equal size, so that the very low % in poverty contains the counties with values in the 0%-20% range for this county characteristic, and the very high % in poverty contains counties with values in the 80%-100% range for this county characteristic. Low % in poverty indicates counties in the 20%-40% range, moderate % in poverty indicates counties in the 40%-60% range, and high % in poverty indecates counties in the 60%-80% range.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n                                    </Grid.Column>\n                                </Grid>\n\n                                <hr\n                                    style={{\n                                        color: '#44a0e2',\n                                        backgroundColor: '#44a0e2',\n                                        height: 5,\n                                        width: '100%'\n                                    }}\n                                />\n                                <Grid id=\"black\" style={{ paddingBottom: '2em' }}>\n                                    <Grid.Row>\n                                        <div  style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content> COVID-19 by Percentage African American Population</Header.Content>\n                                            </Header>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                                        <Grid.Row style={{ paddingTop: \"0\" }}>\n                                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                <Header.Content>\n                                                    Georgia Percentage African American Population Map\n                                </Header.Content>\n                                            </Header>\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                                            <svg width=\"420\" height=\"70\">\n                                                {_.map(colorPalette2, (color, i) => {\n                                                    return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                                                })}\n                                                <text x={18} y={50} style={{ fontSize: '0.8em' }}>Low percentage</text>\n                                                <text x={18} y={59} style={{ fontSize: '0.8em' }}>African American</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>High percentage</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>African American</text>\n                                                {_.map(thresh_chara['black'], (splitpoint, i) => {\n                                                    return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['black'][i]}</text>\n                                                })}\n                                            </svg>\n                                            <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                                                <Geographies data-tip='black' data-for='black' geography={config.url}>\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n\n                                                                setCountyFipsblack(geo.properties.COUNTYFP);\n                                                                setCountyNameblack(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                // setTooltipContentblack(fips2county[stateFips + geo.properties.COUNTYFP]);\n\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFipsblack === geo.properties.COUNTYFP ? countyColor :\n                                                                ((dataCha[stateFips + geo.properties.COUNTYFP] &&\n                                                                    dataCha[stateFips + geo.properties.COUNTYFP]['black'] && dataCha[stateFips + geo.properties.COUNTYFP]['black'] > 0) ?\n                                                                    colortopic[stateFips + geo.properties.COUNTYFP]['black'] :\n                                                                    (dataCha[stateFips + geo.properties.COUNTYFP] && dataCha[stateFips + geo.properties.COUNTYFP]['black'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n\n                                        </Grid.Row>\n                                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.8em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This map shows each Georgia county according to its percentage African American population.\n                                                                County rankings are based on percentage African American population quintile. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                                                characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n                                    </Grid.Column>\n\n                                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                                        <Grid.Row columns={1}>\n                                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Case Rate by Percentage of African American Population\n                                        </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                   theme={VictoryTheme.material}\n                                                   width={630}\n                                                   height={230}\n                                                   domainPadding={20}\n                                                   minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label={\"COVID-19 Cases per 100,000 Residents\"}\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % African American\", 'value': data_index['black'][\"low20\"]['casescumR'] || 0,\n                                                                'ez': data_index['black'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % African American\", 'value': data_index['black'][\"Q2\"]['casescumR'] || 0,\n                                                                'ez': data_index['black'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % African American\", 'value': data_index['black'][\"Q3\"]['casescumR'] || 0,\n                                                                'ez': data_index['black'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % African American\", 'value': data_index['black'][\"Q4\"]['casescumR'] || 0,\n                                                                'ez': data_index['black'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high % African American\", 'value': data_index['black'][\"high20\"]['casescumR'] || 0,\n                                                                'ez': data_index['black'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsblack) ? countyColor : casesColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row columns={1} style={{ paddingTop: '1em' }}>\n                                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Death Rate by Percentage of African American Population\n                                    </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Deaths per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % African American\", 'value': data_index['black'][\"low20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['black'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % African American\", 'value': data_index['black'][\"Q2\"]['deathscumR'] || 0,\n                                                                'ez': data_index['black'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % African American\", 'value': data_index['black'][\"Q3\"]['deathscumR'] || 0,\n                                                                'ez': data_index['black'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % African American\", 'value': data_index['black'][\"Q4\"]['deathscumR'] || 0,\n                                                                'ez': data_index['black'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high % African American\", 'value': data_index['black'][\"high20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['black'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsblack) ? countyColor : mortalityColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                            </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by percentage African American population ranking.\n                                                                The y-axis displays percentage African American population rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by percentage percentage African American. The ranking classified counties into five groups designed to be of equal size, so that the very low % African American contains the counties with values in the 0%-20% range for this county characteristic, and the very high % African American contains counties with values in the 80%-100% range for this county characteristic. Low % African American indicates counties in the 20%-40% range, moderate % African American indicates counties in the 40%-60% range, and high % African American indecates counties in the 60%-80% range.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n                                    </Grid.Column>\n                                </Grid>\n\n                                <hr\n                                    style={{\n                                        color: '#44a0e2',\n                                        backgroundColor: '#44a0e2',\n                                        height: 5,\n                                        width: '100%'\n                                    }}\n                                />\n                                <Grid id=\"hispanic\" style={{ paddingBottom: '2em' }}>\n                                    <Grid.Row>\n                                        <div  style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content> COVID-19 by Percentage Hispanic Population</Header.Content>\n                                            </Header>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                                        <Grid.Row style={{ paddingTop: \"0\" }}>\n                                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                <Header.Content>\n                                                    Georgia Percentage Hispanic Population Map\n                                </Header.Content>\n                                            </Header>\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                                            <svg width=\"420\" height=\"70\">\n                                                {_.map(colorPalette2, (color, i) => {\n                                                    return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                                                })}\n                                                <text x={12} y={50} style={{ fontSize: '0.8em' }}>Low percentage</text>\n                                                <text x={12} y={59} style={{ fontSize: '0.8em' }}>Hispanic</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>High percentage</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>Hispanic</text>\n                                                {_.map(thresh_chara['hispanic'], (splitpoint, i) => {\n                                                    return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['hispanic'][i]}</text>\n                                                })}\n                                            </svg>\n                                            <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                                                <Geographies data-tip='his' data-for='his' geography={config.url}>\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n\n                                                                setCountyFipshis(geo.properties.COUNTYFP);\n                                                                setCountyNamehis(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                // setTooltipContenthis(fips2county[stateFips + geo.properties.COUNTYFP]);\n\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFipshis === geo.properties.COUNTYFP ? countyColor :\n                                                                (( data_cases[stateFips + geo.properties.COUNTYFP] &&\n                                                                    data_cases[stateFips + geo.properties.COUNTYFP]['hispanicP'] && data_cases[stateFips + geo.properties.COUNTYFP]['hispanicP'] > 0) ?\n                                                                    colortopic[stateFips + geo.properties.COUNTYFP]['hispanic'] :\n                                                                    (data_cases[stateFips + geo.properties.COUNTYFP] && data_cases[stateFips + geo.properties.COUNTYFP]['hispanicP'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n                                            {/* <svg width=\"600\" height=\"80\">\n                                                <rect key={0} x={50} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[0], strokeWidth: 1, stroke: colorPalette[0] }} />\n                                                <text x={80} y={15} style={{ fontSize: '1em' }}>0 {'-'} 2.28</text>\n                                                <rect key={1} x={200} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[1], strokeWidth: 1, stroke: colorPalette[1] }} />\n                                                <text x={230} y={15} style={{ fontSize: '1em' }}>2.28 {'-'} 3.86</text>\n                                                <rect key={2} x={360} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[2], strokeWidth: 1, stroke: colorPalette[2] }} />\n                                                <text x={390} y={15} style={{ fontSize: '1em' }}>3.86 {'-'} 5.73</text>\n\n                                                <rect key={3} x={130} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[3], strokeWidth: 1, stroke: colorPalette[3] }} />\n                                                <text x={160} y={55} style={{ fontSize: '1em' }}>5.73 {'-'} 8.57</text>\n                                                <rect key={4} x={280} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[4], strokeWidth: 1, stroke: colorPalette[4] }} />\n                                                <text x={310} y={55} style={{ fontSize: '1em' }}>8.57 {'+'}</text>\n\n                                            </svg> */}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This map shows each Georgia county according to its percentage Hispanic population.\n                                                                County rankings are based on percentage Hispanic population quintile. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                                                characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n                                    </Grid.Column>\n\n                                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                                        <Grid.Row columns={1} >\n                                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                    <Header.Content>\n                                                    COVID-19 Case Rate by Percentage of Hispanic Population\n                                        </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label={\"COVID-19 Cases per 100,000 Residents\"}\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % Hispanic\", 'value': data_index['hispanic'][\"low20\"]['casescumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % Hispanic\", 'value': data_index['hispanic'][\"Q2\"]['casescumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % Hispanic\", 'value': data_index['hispanic'][\"Q3\"]['casescumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % Hispanic\", 'value': data_index['hispanic'][\"Q4\"]['casescumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very High % Hispanic\", 'value': data_index['hispanic'][\"high20\"]['casescumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipshis) ? countyColor : casesColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row columns={1} style={{ paddingBottom: \"1em\" }}>\n                                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Death Rate by Percentage of Hispanic Population\n                                    </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Deaths per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % Hispanic\", 'value': data_index['hispanic'][\"low20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % Hispanic\", 'value': data_index['hispanic'][\"Q2\"]['deathscumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % Hispanic\", 'value': data_index['hispanic'][\"Q3\"]['deathscumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % Hispanic\", 'value': data_index['hispanic'][\"Q4\"]['deathscumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high % Hispanic\", 'value': data_index['hispanic'][\"high20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['hispanic'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipshis) ? countyColor : mortalityColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '0.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                        <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by percentage Hispanic population ranking.\n                                                                The y-axis displays percentage Hispanic population rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by percentage Hispanic population. The ranking classified counties into five groups designed to be of equal size, so that the very low % Hispanic contains the counties with values in the 0%-20% range for this county characteristic, and the very high % Hispanic contains counties with values in the 80%-100% range for this county characteristic. Low % Hispanic indicates counties in the 20%-40% range, moderate % Hispanic indicates counties in the 40%-60% range, and high % Hispanic indecates counties in the 60%-80% range.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n                                    </Grid.Column>\n                                </Grid>\n\n                                <hr\n                                    style={{\n                                        color: '#44a0e2',\n                                        backgroundColor: '#44a0e2',\n                                        height: 5,\n                                        width: '100%'\n                                    }}\n                                />\n                                <Grid id=\"diabetes\" style={{ paddingBottom: '2em' }}>\n                                    <Grid.Row>\n                                        <div  style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content> COVID-19 by Percentage of Population with Diabetes</Header.Content>\n                                            </Header>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                                        <Grid.Row style={{ paddingTop: \"0\" }}>\n                                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                <Header.Content>\n                                                    Georgia Percentage of Population with Diabetes Map\n                                </Header.Content>\n                                            </Header>\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                                            <svg width=\"420\" height=\"70\">\n                                                {_.map(colorPalette2, (color, i) => {\n                                                    return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                                                })}\n                                                <text x={5} y={50} style={{ fontSize: '0.8em' }}>Low percentage </text>\n                                                <text x={5} y={59} style={{ fontSize: '0.8em' }}>diabetic</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>High percentage</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>diabetic</text>\n                                                {_.map(thresh_chara['diabetes'], (splitpoint, i) => {\n                                                    return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['diabetes'][i]}</text>\n                                                })}\n                                            </svg>\n                                            <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                                                <Geographies data-tip='dia' data-for='dia' geography={config.url}>\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n\n                                                                setCountyFipsdia(geo.properties.COUNTYFP);\n                                                                setCountyNamedia(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                // setTooltipContentdia(fips2county[stateFips + geo.properties.COUNTYFP]);\n\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFipsdia === geo.properties.COUNTYFP ? countyColor :\n                                                                ((dataCha[stateFips + geo.properties.COUNTYFP] &&\n                                                                    dataCha[stateFips + geo.properties.COUNTYFP]['diabetes'] && dataCha[stateFips + geo.properties.COUNTYFP]['diabetes'] > 0) ?\n                                                                    colortopic[stateFips + geo.properties.COUNTYFP]['diabetes'] :\n                                                                    ( dataCha[stateFips + geo.properties.COUNTYFP] && dataCha[stateFips + geo.properties.COUNTYFP]['diabetes'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n                                            {/* <svg width=\"600\" height=\"80\">\n                                                <rect key={0} x={50} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[0], strokeWidth: 1, stroke: colorPalette[0] }} />\n                                                <text x={80} y={15} style={{ fontSize: '1em' }}>0 {'-'} 9.6</text>\n                                                <rect key={1} x={200} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[1], strokeWidth: 1, stroke: colorPalette[1] }} />\n                                                <text x={230} y={15} style={{ fontSize: '1em' }}>9.6 {'-'} 11.5</text>\n                                                <rect key={2} x={360} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[2], strokeWidth: 1, stroke: colorPalette[2] }} />\n                                                <text x={390} y={15} style={{ fontSize: '1em' }}>11.5 {'-'} 13.2</text>\n\n                                                <rect key={3} x={130} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[3], strokeWidth: 1, stroke: colorPalette[3] }} />\n                                                <text x={160} y={55} style={{ fontSize: '1em' }}>13.2 {'-'} 16.6</text>\n                                                <rect key={4} x={280} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[4], strokeWidth: 1, stroke: colorPalette[4] }} />\n                                                <text x={310} y={55} style={{ fontSize: '1em' }}>16.6 {'+'}</text>\n\n                                            </svg> */}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This map shows each Georgia county according to its percentage of population with diabetes.\n                                                                County rankings are based on percentage of population with diabetes quintile. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                                                characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n                                    </Grid.Column>\n\n                                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                                        <Grid.Row columns={1}>\n                                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Case Rate by Percentage of Population with Diabetes\n                                        </Header.Content>\n                                                </Header>\n                                                <VictoryChart                       \ntheme={VictoryTheme.material}\nwidth={630}\nheight={230}\ndomainPadding={20}\nminDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label={\"COVID-19 Cases per 100,000 Residents\"}\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % with diabetes\", 'value': data_index['diabetes'][\"low20\"]['casescumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % with diabetes\", 'value': data_index['diabetes'][\"Q2\"]['casescumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % with diabetes\", 'value': data_index['diabetes'][\"Q3\"]['casescumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % with diabetes\", 'value': data_index['diabetes'][\"Q4\"]['casescumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very % with diabetes\", 'value': data_index['diabetes'][\"high20\"]['casescumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsdia) ? countyColor : casesColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row columns={1} style={{ paddingTop: '1em' }}>\n                                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Death Rate by Percentage of Population with Diabetes\n                                    </Header.Content>\n                                                </Header>\n                                                <VictoryChart\ntheme={VictoryTheme.material}\nwidth={630}\nheight={230}\ndomainPadding={20}\nminDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Deaths per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low % with diabetes\", 'value': data_index['diabetes'][\"low20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low % with diabetes\", 'value': data_index['diabetes'][\"Q2\"]['deathscumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate % with diabetes\", 'value': data_index['diabetes'][\"Q3\"]['deathscumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High % with diabetes\", 'value': data_index['diabetes'][\"Q4\"]['deathscumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high % with diabetes\", 'value': data_index['diabetes'][\"high20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['diabetes'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsdia) ? countyColor : mortalityColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                        Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                        <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by county ranking on percentage of population with diabetes.\n                                                                The y-axis displays percentage population with diabetes rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by percentage population with diabetes. The ranking classified counties into five groups designed to be of equal size, so that the very low % with diabetes contains the counties with values in the 0%-20% range for this county characteristic, and the very high % with diabetes contains counties with values in the 80%-100% range for this county characteristic. Low % with diabetes indicates counties in the 20%-40% range, moderate % with diabetes indicates counties in the 40%-60% range, and high % with diabetes indecates counties in the 60%-80% range.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n                                    </Grid.Column>\n                                </Grid>\n\n                                <hr\n                                    style={{\n                                        color: '#44a0e2',\n                                        backgroundColor: '#44a0e2',\n                                        height: 5,\n                                        width: '100%'\n                                    }}\n                                />\n                                <Grid id=\"age\" style={{ paddingBottom: '2em' }}>\n                                    <Grid.Row>\n                                        <div style={{ width: \"100%\", height: \"100%\" }}>\n                                            <Header as='h2' style={{ textAlign: 'center', color: 'black', fontSize: \"19pt\", paddingTop: '1em', paddingBottom: '1em' }}>\n                                                <Header.Content> COVID-19 by Percentage of Population Aged Over 65</Header.Content>\n                                            </Header>\n                                        </div>\n                                    </Grid.Row>\n                                    <Grid.Column width={7} style={{ paddingLeft: \"2\", paddingLeft: \"1\" }}>\n                                        <Grid.Row style={{ paddingTop: \"0\" }}>\n                                            <Header as='h2' style={{ fontWeight: 600, fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                <Header.Content>\n                                                    Georgia Percentage of Population Aged Over 65 Map\n                                </Header.Content>\n                                            </Header>\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: \"0\", paddingBottom: '1em' }}>\n                                            <svg width=\"420\" height=\"70\">\n                                                {_.map(colorPalette2, (color, i) => {\n                                                    return <rect key={i} x={110 + 40 * i} y={40} width=\"40\" height=\"20\" style={{ fill: color, strokeWidth: 1, stroke: color }} />\n                                                })}\n                                                <text x={20} y={50} style={{ fontSize: '0.8em' }}>Low percentage</text>\n                                                <text x={20} y={59} style={{ fontSize: '0.8em' }}>aged over 65</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={50} style={{ fontSize: '0.8em' }}>High percentage</text>\n                                                <text x={160 + 40 * (colorPalette2.length - 1)} y={59} style={{ fontSize: '0.8em' }}>aged over 65</text>\n                                                {_.map(thresh_chara['age65over'], (splitpoint, i) => {\n                                                    return <text key={i} x={105 + 40 * (i)} y={35} style={{ fontSize: '0.7em' }}> {thresh_chara['age65over'][i]}</text>\n                                                })}\n                                            </svg>\n                                            <ComposableMap projection=\"geoAlbersUsa\"\n                    projectionConfig={{ scale: `${config.scale1*0.78}` }}\n                    width={400}\n                    height={460}\n                    data-tip=\"\"\n                    offsetX={config.offsetX1+7}\n                    offsetY={config.offsetY2}>\n                                                <Geographies data-tip='age' data-for='age' geography={config.url}>\n                                                    {({ geographies }) => geographies.map(geo =>\n                                                        <Geography\n                                                            key={geo.rsmKey}\n                                                            geography={geo}\n\n                                                            style={{\n                                                                default: {\n                                                                    //  fill: \"#ECEFF1\",\n                                                                    stroke: \"#607D8B\",\n                                                                    strokeWidth: 0.95,\n                                                                    outline: \"none\",\n                                                                },\n                                                                pressed: {\n                                                                    outline: \"none\",\n                                                                }\n                                                            }}\n                                                            onMouseEnter={() => {\n\n                                                                setCountyFipsa65(geo.properties.COUNTYFP);\n                                                                setCountyNamea65(fips2county[stateFips + geo.properties.COUNTYFP]);\n                                                                // setTooltipContenta65(fips2county[stateFips + geo.properties.COUNTYFP]);\n\n                                                            }}\n                                                            onMouseLeave={() => {\n                                                                setTooltipContent(\"\")\n                                                            }}\n                                                            fill={countyFipsa65 === geo.properties.COUNTYFP ? countyColor :\n                                                                ((dataCha[stateFips + geo.properties.COUNTYFP] &&\n                                                                    dataCha[stateFips + geo.properties.COUNTYFP]['age65over'] && dataCha[stateFips + geo.properties.COUNTYFP]['age65over'] > 0) ?\n                                                                    colortopic[stateFips + geo.properties.COUNTYFP]['age65over'] :\n                                                                    ( dataCha[stateFips + geo.properties.COUNTYFP] && dataCha[stateFips + geo.properties.COUNTYFP]['age65over'] === 0) ? '#e1dce2' : '#FFFFFF')}\n                                                        />\n                                                    )}\n                                                </Geographies>\n                                            </ComposableMap>\n                                            {/* <svg width=\"600\" height=\"80\">\n                                                <rect key={0} x={50} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[0], strokeWidth: 1, stroke: colorPalette[0] }} />\n                                                <text x={80} y={15} style={{ fontSize: '1em' }}>0 {'-'} 13.33</text>\n                                                <rect key={1} x={200} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[1], strokeWidth: 1, stroke: colorPalette[1] }} />\n                                                <text x={230} y={15} style={{ fontSize: '1em' }}>13.33 {'-'} 15.37</text>\n                                                <rect key={2} x={360} y={0} width=\"20\" height=\"20\" style={{ fill: colorPalette[2], strokeWidth: 1, stroke: colorPalette[2] }} />\n                                                <text x={390} y={15} style={{ fontSize: '1em' }}>15.37 {'-'} 16.86</text>\n\n                                                <rect key={3} x={130} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[3], strokeWidth: 1, stroke: colorPalette[3] }} />\n                                                <text x={160} y={55} style={{ fontSize: '1em' }}>16.86 {'-'} 18.80</text>\n                                                <rect key={4} x={280} y={40} width=\"20\" height=\"20\" style={{ fill: colorPalette[4], strokeWidth: 1, stroke: colorPalette[4] }} />\n                                                <text x={310} y={55} style={{ fontSize: '1em' }}>18.80 {'+'}</text>\n\n                                            </svg> */}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                        </Grid.Row>\n                                        <Grid.Row style={{ paddingTop: '0em', paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This map shows each Georgia county according to its percentage of population over 65 years.\n                                                                County rankings are based on percentage of population over 65 years quintile. The ranking classified counties into five groups designed to be of equal size, so that the lowest quintile contains the counties with values in the 0%-20% range for this county\n                                                                characteristic, and the highest quintile contains counties with values in the 80%-100% range for this county characteristic.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n                                    </Grid.Column>\n\n                                    <Grid.Column width={9} style={{ paddingLeft: \"0em\" }}>\n                                        <Grid.Row columns={1} >\n                                            <Grid.Column style={{ paddingTop: 0, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Case Rate by Percentage of Population over the Age 65 Years\n                                        </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label={\"COVID-19 Cases per 100,000 Residents\"}\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low percentage over 65\", 'value': data_index['age65over'][\"low20\"]['casescumR'] || 0,\n                                                                'ez': data_index['age65over'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low percentage over 65\", 'value': data_index['age65over'][\"Q2\"]['casescumR'] || 0,\n                                                                'ez': data_index['age65over'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate percentage over 65\", 'value': data_index['age65over'][\"Q3\"]['casescumR'] || 0,\n                                                                'ez': data_index['age65over'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High percentage over 65\", 'value': data_index['age65over'][\"Q4\"]['casescumR'] || 0,\n                                                                'ez': data_index['age65over'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high percentage over 65\", 'value': data_index['age65over'][\"high20\"]['casescumR'] || 0,\n                                                                'ez': data_index['age65over'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsa65) ? countyColor : casesColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row columns={1} style={{ paddingTop: '1em' }}>\n                                            <Grid.Column style={{ paddingTop: 15, paddingBottom: 3 }}>\n                                                <Header as='h2' style={{ textAlign: 'center', fontSize: \"16pt\", lineHeight: \"16pt\", paddingLeft: \"1em\" }}>\n                                                    <Header.Content>\n                                                        COVID-19 Death Rate by Percentage of Population over the Age 65 Years\n                                    </Header.Content>\n                                                </Header>\n                                                <VictoryChart\n                                                    theme={VictoryTheme.material}\n                                                    width={630}\n                                                    height={230}\n                                                    domainPadding={20}\n                                                    minDomain={{ y: props.ylog ? 1 : 0 }}\n                                                    padding={{ left: 305, right: 100, top: 10, bottom: 10 }}\n                                                    style={{ fontSize: \"14pt\" }}\n                                                    containerComponent={<VictoryContainer responsive={false} />}\n                                                >\n                                                    <VictoryAxis style={{ ticks: { stroke: \"#FFFFFF\" }, axis: { stroke: \"#000000\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, labels: { fill: '#000000', fontSize: \"20px\" }, tickLabels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' } }} />\n                                                    <VictoryAxis dependentAxis\n                                                        label='COVID-19 Deaths per 100,000 Residents'\n                                                        style={{\n                                                            ticks: { stroke: \"transparent\" }, grid: { stroke: \"transparent\" }, axis: { stroke: \"#000000\" }, axisLabel: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' },\n                                                            labels: { fontSize: \"20px\", fill: '#000000', fontFamily: 'lato' }, tickLabels: { fontSize: \"0px\", fill: '#000000', padding: 10, fontFamily: 'lato' }\n                                                        }} />\n                                                    <VictoryBar\n                                                        horizontal\n                                                        barRatio={0.75}\n                                                        labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                                                        data={[\n                                                            {\n                                                                key: \"Very low percentage over 65\", 'value': data_index['age65over'][\"low20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['age65over'][\"low20\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Low percentage over 65\", 'value': data_index['age65over'][\"Q2\"]['deathscumR'] || 0,\n                                                                'ez': data_index['age65over'][\"Q2\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Moderate percentage over 65\", 'value': data_index['age65over'][\"Q3\"]['deathscumR'] || 0,\n                                                                'ez': data_index['age65over'][\"Q3\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"High percentage over 65\", 'value': data_index['age65over'][\"Q4\"]['deathscumR'] || 0,\n                                                                'ez': data_index['age65over'][\"Q4\"]['county_list']\n                                                            },\n                                                            {\n                                                                key: \"Very high percentage over 65\", 'value': data_index['age65over'][\"high20\"]['deathscumR'] || 0,\n                                                                'ez': data_index['age65over'][\"high20\"]['county_list']\n                                                            }\n                                                        ]}\n                                                        labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"18px\", fill: \"#000000\" }} />}\n                                                        style={{\n                                                            data: {\n                                                                fill: ({ datum }) => datum.ez.includes(countyFipsa65) ? countyColor : mortalityColor[1]\n                                                            }\n                                                        }}\n                                                        x=\"key\"\n                                                        y=\"value\"\n                                                    />\n                                                </VictoryChart>\n\n                                            </Grid.Column>\n                                        </Grid.Row>\n\n                                        <Grid.Row style={{fontFamily: 'lato', fontSize: 18, color: dataupColor, paddingTop: '1.5em', paddingLeft: '4em', paddingRight: '2em' }} centered>\n                                            Data updated: {dateCur[stateFips].todaydate === 'n/a' ? 'N/A' : (new Date(dateCur[stateFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}\n                                            </Grid.Row>\n                                        <Grid.Row style={{paddingLeft: '4.9em', paddingRight: '2em' }}>\n                                            <Accordion defaultActiveIndex={1} panels={[\n                                                {\n                                                    key: 'acquire-dog',\n                                                    title: {\n                                                        content: <u style={{ fontFamily: 'lato', fontSize: 18, color: dataupColor }}>About the data</u>,\n                                                        icon: 'dropdown',\n                                                    },\n                                                    content: {\n                                                        content: (\n                                                            <p style={{   fontFamily: 'lato', fontSize: 18 }}>\n                                                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100,000 residents by county ranking on percentage of population over 65 years.\n                                                                The y-axis displays percentage population over 65 rankings based on quintiles (groups of 20%). The x-axis displays the average number\n                                                                of COVID-19 cases (top chart) or deaths (bottom chart) per 100,000 that occurred in each group of counties ranked by percentage population over 65 years. The ranking classified counties into five groups designed to be of equal size, so that the very low percentage over 65 contains the counties with values in the 0%-20% range for this county characteristic, and the very high percentage over 65 contains counties with values in the 80%-100% range for this county characteristic. Low percentage over 65 indicates counties in the 20%-40% range, moderate percentage over 65 indicates counties in the 40%-60% range, and high percentage over 65 indecates counties in the 60%-80% range.\n                                                            </p>\n                                                        ),\n                                                    },\n                                                }\n                                            ]\n\n                                            } />\n\n                                        </Grid.Row>\n\n\n                                    </Grid.Column>\n                                </Grid>\n\n                                <hr\n                                    style={{\n                                        color: '#44a0e2',\n                                        backgroundColor: '#44a0e2',\n                                        height: 5,\n                                        width: '100%'\n                                    }}\n                                />\n                                        \n                                    </Grid>\n                                </Grid.Column>\n                                \n\n                            </Grid>\n\n                        </div>\n                    }\n                    <Notes />\n                </Container>\n                <ReactTooltip id='ga'> <font size=\"+2\"><b >{countyName1.current}</b> </font> <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFips1.current]['casescum'] >= 0 ? data[stateFips + countyFips1.current]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFips1.current]['deathscum'] >= 0 ? data[stateFips + countyFips1.current]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total case per 100k</b>: {data[stateFips + countyFips1.current]['casescumR'] >= 0 ? data[stateFips + countyFips1.current]['casescumR'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths per 100k</b>: {data[stateFips + countyFips1.current]['deathscumR'] >= 0 ? data[stateFips + countyFips1.current]['deathscumR'].toFixed(0) : 'N/A'} <br />\n                    <b>Last 14-day Cases per 100k</b>: {data[stateFips + countyFips1.current]['casescum14dayR'] >= 0 ? data[stateFips + countyFips1.current]['casescum14dayR'].toFixed(0) : \"N/A\"} <br />\n                    <b>Click to see county-level data.</b> </ReactTooltip>\n\n                    \n                    {/* <ReactTooltip id='ga_pop'>{tooltipContent}</ReactTooltip> */}\n\n                {/* <ReactTooltip id='cvi'><font size=\"+2\"><b >{countyNamecvi}</b> </font> <br />\n                    <b>CCVI</b>: {dataUs[stateFips + countyFipscvi]['cvi'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipscvi]['casescum'] >= 0 ? data[stateFips + countyFipscvi]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipscvi]['deathscum'] >= 0 ? data[stateFips + countyFipscvi]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip> */}\n                <ReactTooltip>{tooltipContentccvi}</ReactTooltip>\n\n                {/* <ReactTooltip>{tooltipContentccvi}</ReactTooltip> */}\n                {/* <ReactTooltip id='th1'><font size=\"+2\"><b >{countyNamecvi1}</b> </font> <br />\n                    <b>SS</b>: {dataCha[stateFips + countyFipsth1]['RPL_THEME1'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsth1]['casescum'] >= 0 ? data[stateFips + countyFipsth1]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsth1]['deathscum'] >= 0 ? data[stateFips + countyFipsth1]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip> */}\n                {/* <ReactTooltip id='th2'><font size=\"+2\"><b >{countyNamecvi2}</b> </font> <br />\n                    <b>MSL</b>: {dataCha[stateFips + countyFipsth2]['RPL_THEME2'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsth2]['casescum'] >= 0 ? data[stateFips + countyFipsth2]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsth2]['deathscum'] >= 0 ? data[stateFips + countyFipsth2]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='th3'><font size=\"+2\"><b >{countyNamecvi3}</b> </font> <br />\n                    <b>HTHD</b>: {dataCha[stateFips + countyFipsth3]['RPL_THEME3'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsth3]['casescum'] >= 0 ? data[stateFips + countyFipsth3]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsth3]['deathscum'] >= 0 ? data[stateFips + countyFipsth3]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='th4'><font size=\"+2\"><b >{countyNamecvi4}</b> </font> <br />\n                    <b>EF</b>: {dataCha[stateFips + countyFipsth4]['RPL_THEME4'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsth4]['casescum'] >= 0 ? data[stateFips + countyFipsth4]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsth4]['deathscum'] >= 0 ? data[stateFips + countyFipsth4]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='th5'><font size=\"+2\"><b >{countyNamecvi5}</b> </font> <br />\n                    <b>HSF</b>: {dataCha[stateFips + countyFipsth5]['RPL_THEME5'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsth5]['casescum'] >= 0 ? data[stateFips + countyFipsth5]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsth5]['deathscum'] >= 0 ? data[stateFips + countyFipsth5]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='th6'><font size=\"+2\"><b >{countyNamecvi6}</b> </font> <br />\n                    <b>HRE</b>: {dataCha[stateFips + countyFipsth6]['RPL_THEME6'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsth6]['casescum'] >= 0 ? data[stateFips + countyFipsth6]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsth6]['deathscum'] >= 0 ? data[stateFips + countyFipsth6]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='th7'><font size=\"+2\"><b >{countyNamecvi7}</b> </font> <br />\n                    <b>PD</b>: {dataCha[stateFips + countyFipsth7]['RPL_THEME7'].toFixed(2)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsth7]['casescum'] >= 0 ? data[stateFips + countyFipsth7]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsth7]['deathscum'] >= 0 ? data[stateFips + countyFipsth7]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip> */}\n\n                <ReactTooltip id='si'><font size=\"+2\"><b >{countyNamesi}</b> </font> <br />\n                    <b>SI</b>: {dataUs[stateFips + countyFipssi]['si'].toFixed(0)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipssi]['casescum'] >= 0 ? data[stateFips + countyFipssi]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipssi]['deathscum'] >= 0 ? data[stateFips + countyFipssi]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n\n                <ReactTooltip id='urb'><font size=\"+2\"><b >{countyNameubr}</b> </font> <br />\n                    <b>Metropolitan Status</b>: {dataCha[stateFips + countyFipsubr]['_013_Urbanization']} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsubr]['casescum'] >= 0 ? data[stateFips + countyFipsubr]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsubr]['deathscum'] >= 0 ? data[stateFips + countyFipsubr]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n\n                <ReactTooltip id='black'><font size=\"+2\"><b >{countyNameblack}</b> </font> <br />\n                    <b>Percentage African American</b>: {dataCha[stateFips + countyFipsblack]['black'].toFixed(0)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsblack]['casescum'] >= 0 ? data[stateFips + countyFipsblack]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsblack]['deathscum'] >= 0 ? data[stateFips + countyFipsblack]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n\n                <ReactTooltip id='his'><font size=\"+2\"><b >{countyNamehis}</b> </font> <br />\n                    <b>Percentage hispanic</b>: {dataCha[stateFips + countyFipshis]['minority'].toFixed(0)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipshis]['casescum'] >= 0 ? data[stateFips + countyFipshis]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipshis]['deathscum'] >= 0 ? data[stateFips + countyFipshis]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='pov'><font size=\"+2\"><b >{countyNamepov}</b> </font> <br />\n                    <b>Percentage population in poverty</b>: {dataCha[stateFips + countyFipspov]['poverty'].toFixed(0)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipspov]['casescum'] >= 0 ? data[stateFips + countyFipspov]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipspov]['deathscum'] >= 0 ? data[stateFips + countyFipspov]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='dia'><font size=\"+2\"><b >{countyNamedia}</b> </font> <br />\n                    <b>Percentage population with diabetes</b>: {dataCha[stateFips + countyFipsdia]['diabetes'].toFixed(0)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsdia]['casescum'] >= 0 ? data[stateFips + countyFipsdia]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsdia]['deathscum'] >= 0 ? data[stateFips + countyFipsdia]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                <ReactTooltip id='age'><font size=\"+2\"><b >{countyNamea65}</b> </font> <br />\n                    <b>Percentage population age over 65</b>: {dataCha[stateFips + countyFipsa65]['age65over'].toFixed(0)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsa65]['casescum'] >= 0 ? data[stateFips + countyFipsa65]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsa65]['deathscum'] >= 0 ? data[stateFips + countyFipsa65]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip>\n                {/* <ReactTooltip id='male'><font size=\"+2\"><b >{countyNamemale}</b> </font> <br />\n                    <b>Percentage male</b>: {dataCha[stateFips + countyFipsmale]['male'].toFixed(0)} <br />\n                    <b>Total Cases</b>: {data[stateFips + countyFipsmale]['casescum'] >= 0 ? data[stateFips + countyFipsmale]['casescum'].toFixed(0) : \"N/A\"} <br />\n                    <b>Total Deaths</b>: {data[stateFips + countyFipsmale]['deathscum'] >= 0 ? data[stateFips + countyFipsmale]['deathscum'].toFixed(0) : \"N/A\"} <br />\n                </ReactTooltip> */}\n                \n            </div>\n        );\n    }\n    else {\n        return <Loader active inline='centered' />\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { Container, Grid, Breadcrumb, Header, Loader, List, Table, Divider, Popup,Accordion, Label } from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport Geographies from './Geographies';\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\n// import SearchField from \"react-search-field\";\nimport {\n  VictoryChart,\n  VictoryTooltip,\n  VictoryVoronoiContainer,\n  VictoryContainer,\n  VictoryGroup,\n  VictoryBar,\n  VictoryTheme,\n  VictoryAxis,\n  VictoryLegend,\n  VictoryLine,\n  VictoryLabel,\n  VictoryScatter,\n  VictoryPie\n} from 'victory';\n\nimport { useParams, useHistory } from 'react-router-dom';\nimport LazyHero from 'react-lazy-hero';\n\nimport Notes from './Notes';\nimport ReactTooltip from \"react-tooltip\";\nimport fips2county from './fips2county.json'\nimport configs from \"./state_config.json\";\nimport configscounty from \"./county_config.json\";\nimport _ from 'lodash';\nimport { scaleQuantile, scaleQuantize } from \"d3-scale\";\n\nconst countyColor = '#f2a900';\nconst stateColor = '#bdbfc1';\nconst nationColor = '#d9d9d7';\nconst colorPalette = [\n  \"#e1dce2\",\n  \"#d3b6cd\",\n  \"#bf88b5\",\n  \"#af5194\",\n  \"#99528c\",\n  \"#633c70\",\n];\n\n\nfunction ScatterChart(props) {\n\n  return (\n    <VictoryChart\n      width={400}\n      height={300}\n      scale={{ x: props.xlog ? 'log' : 'linear', y: props.ylog ? 'log' : 'linear' }}\n      minDomain={{ y: props.ylog ? 1 : 0 }}\n      padding={{ left: 80, right: 10, top: 50, bottom: 50 }}>\n      {props.showLegend && <VictoryLegend\n        x={10} y={10}\n        orientation=\"horizontal\"\n        colorScale={[stateColor, countyColor]}\n        data={[\n          { name: ('Other counties in ' + props.stateName) }, { name: props.countyName }\n        ]}\n      />}\n      <VictoryScatter\n        data={_.filter(_.map(props.data, (d, k) => { d.fips = k; return d; }), (d) => (\n          d.fips.length === 5 &&\n          d.fips.substring(0, 2) === props.stateFips &&\n          d[props.x] && d[props.y]))}\n        sortKey={(d) => d.fips === (props.stateFips + props.countyFips)}\n        style={{\n          data: {\n            fill: ({ datum }) => datum.fips === (props.stateFips + props.countyFips) ? countyColor : stateColor,\n            fillOpacity: ({ datum }) => datum.fips === (props.stateFips + props.countyFips) ? 1.0 : 0.7\n          }\n        }}\n        size={4}\n        x={props.x}\n        y={props.y}\n      />\n      <VictoryAxis label={props.varMap[props.x] ? props.varMap[props.x].name : props.x}\n        tickCount={4}\n        tickFormat={(y) => (props.rescaleX ? (Math.round(y / 1000) + 'k') : (Math.round(y * 100) / 100))} />\n      <VictoryAxis dependentAxis label={props.varMap[props.y] ? props.varMap[props.y].name : props.y}\n        style={{ axisLabel: { padding: 40 } }}\n        tickCount={5}\n        tickFormat={(y) => (Math.round(y * 100) / 100)} />\n    </VictoryChart>);\n\n}\n\nfunction numberWithCommas(x) {\n  x = x.toString();\n  var pattern = /(-?\\d+)(\\d{3})/;\n  while (pattern.test(x))\n    x = x.replace(pattern, \"$1,$2\");\n  return x;\n}\nconst sectionStyle1 = {\n  width: \"100%\",\n  height: \"100%\",\n  backgroundSize: 'auto auto',\n  backgroundImage: `url(\"/Emory_COVID_header_LightBlue_original.jpg\")`\n};\nconst sectionStyle2 = {\n  width: \"100%\",\n  height: \"100%\",\n  backgroundSize: 'cover',\n  backgroundImage: `url(\"/CoronaVirus_LightBlue.jpg\")`\n};\n\nfunction BarChart(props) {\n  const colors = {\n    \"3\": '#024174',\n    '2': \"#99bbcf\",\n    '1': '#337fb5'\n  };\n  var numm\n  if (props.cate === 'Cases') {\n    numm = '1'\n  }\n  else {\n    numm = '3'\n  }\n  if (props.var_num === 4) {\n    return (\n      <VictoryChart\n        theme={VictoryTheme.material}\n        width={props.width || 650}\n        height={300}\n        domainPadding={props.pad || 10}\n        scale={{ y: props.ylog ? 'log' : 'linear' }}\n        minDomain={{ y: props.ylog ? 1 : 0 }}\n        padding={{ left: 79, right: 40, top: 60, bottom: 50 }}\n        containerComponent={<VictoryContainer responsive={false} />}\n      >\n        <VictoryLabel style={{\n          fontSize: 20, paddingBottom: '0.5em'\n        }} text={props.title} x={(props.width || 560) / 2} y={20} textAnchor=\"middle\" />\n        <VictoryAxis style={{\n          tickLabels: { fontSize: 18, padding: 2 }\n        }} />\n        <VictoryAxis dependentAxis\n          domain={[0, 1]}\n          style={{\n            tickLabels: { fontSize: 18, padding: 2 }\n          }}\n          tickFormat={(y) => (y <= 1 ? y * 100 : (y / 1000 + 'k'))} />\n        <VictoryLegend x={80} y={40}\n          orientation=\"horizontal\"\n          gutter={1}\n          // style={{ border: { stroke: \"black\" } }}\n          data={[\n            { name: `Percentage of ${props.cate}`, symbol: { fill: colors[numm], type: \"square\" } },\n            { name: \"Percentage of Population\", symbol: { fill: colors['2'], type: \"square\" } },\n          ]}\n        />\n        <VictoryGroup offset={20}\n          colorScale={\"qualitative\"}\n        >\n\n          <VictoryBar\n            alignment=\"start\"\n            barWidth={20}\n            // labels={({ datum }) => (Math.round(datum.value * 100) / 100)}\n            labels={({ datum }) => `${props.cate} Percent: ${(datum.value * 100).toFixed(0)}%`}\n            data={[{ key: props.keyv[0], 'value': props.data[props.stateFips + props.countyFips][props.var[0]] || 0, 'colors': props.co },\n            { key: props.keyv[1], 'value': props.data[props.stateFips + props.countyFips][props.var[1]] || 0, 'colors': props.co },\n            { key: props.keyv[2], 'value': props.data[props.stateFips + props.countyFips][props.var[2]] || 0, 'colors': props.co },\n            { key: props.keyv[3], 'value': props.data[props.stateFips + props.countyFips][props.var[3]] || 0, 'colors': props.co }]}\n            labelComponent={<VictoryTooltip\n              orientation=\"top\"\n              style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n              constrainToVisibleArea\n              // labelComponent={<VictoryLabel dx={-60} textAnchor='start' />}\n              flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n            />}\n            style={{\n              data: {\n                fill: ({ datum }) => colors[datum.colors],\n                fillOpacity: 2\n              }\n            }}\n            x=\"key\"\n            y=\"value\"\n          />\n          <VictoryBar\n            alignment=\"start\"\n            barWidth={20}\n            data={[{ key: props.keyv[0], 'value': props.data[props.stateFips + props.countyFips][props.var1[0]] || 0, 'colors': '2' },\n            { key: props.keyv[1], 'value': props.data[props.stateFips + props.countyFips][props.var1[1]] || 0, 'colors': '2' },\n            { key: props.keyv[2], 'value': props.data[props.stateFips + props.countyFips][props.var1[2]] || 0, 'colors': '2' },\n            { key: props.keyv[3], 'value': props.data[props.stateFips + props.countyFips][props.var1[3]] || 0, 'colors': '2' }]}\n            labels={({ datum }) =>\n              `Population Percent: ${(datum.value * 100).toFixed(0)}%`\n            }\n            labelComponent={<VictoryTooltip\n              orientation=\"top\"\n              style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n              constrainToVisibleArea\n              // labelComponent={<VictoryLabel dx={-50} textAnchor='start' />}\n              flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n            />}\n            style={{\n              data: {\n                fill: ({ datum }) => colors[datum.colors],\n                fillOpacity: 0.7\n              }\n            }}\n            x=\"key\"\n            y=\"value\"\n          />\n        </VictoryGroup>\n      </VictoryChart>);\n  }\n  else {\n    return (\n      <VictoryChart\n        theme={VictoryTheme.material}\n        width={props.width || 650}\n        height={300}\n        domainPadding={props.pad || 100}\n\n        scale={{ y: props.ylog ? 'log' : 'linear' }}\n        // minDomain={{ y: props.ylog ? 1 : 0 }}\n        maxDomain={{ y: 1 }}\n        // domain={{ y: [0, 1] }}\n        padding={{ left: 79, right: 40, top: 60, bottom: 50 }}\n        containerComponent={<VictoryContainer responsive={false} />}\n      >\n        <VictoryLabel style={{\n          fontSize: 20, paddingBottom: '5em'\n        }} text={props.title} x={(props.width || 560) / 2} y={20} textAnchor=\"middle\" />\n        <VictoryAxis style={{\n          tickLabels: { fontSize: 18, padding: 2 }\n        }} />\n        <VictoryAxis dependentAxis\n          // domain={{x: [0, 1]}}\n          style={{\n            tickLabels: { fontSize: 18, padding: 2 }\n          }}\n          tickFormat={(y) => (y <= 1 ? y * 100 : console.log(y))}\n        />\n        <VictoryLegend x={80} y={40}\n          orientation=\"horizontal\"\n          gutter={1}\n          // style={{ border: { stroke: \"black\" } }}\n          data={[\n            { name: `Percentage of ${props.cate}`, symbol: { fill: colors[numm], type: \"square\" } },\n            { name: \"Percentage of Population\", symbol: { fill: colors['2'], type: \"square\" } },\n          ]}\n        />\n        <VictoryGroup offset={20}\n          colorScale={\"qualitative\"}\n        >\n          <VictoryBar\n\n            barWidth={20}\n            // labels={({ datum }) => (Math.round(datum.value * 100) / 100)}\n            labels={({ datum }) => `${props.cate} Percent: ${(parseFloat(datum.value) * 100).toFixed(0)}%`}\n            data={[{ key: props.keyv[0], 'value': props.data[props.stateFips + props.countyFips][props.var[0]] || 0, 'colors': props.co },\n            { key: props.keyv[1], 'value': props.data[props.stateFips + props.countyFips][props.var[1]] || 0, 'colors': props.co }]}\n            labelComponent={<VictoryTooltip\n              orientation=\"top\"\n              style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n              constrainToVisibleArea\n              // labelComponent={<VictoryLabel dx={-60} textAnchor='start' />}\n              flyoutStyle={{ fill: colors['1'], fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n            />}\n            style={{\n              data: {\n                fill: ({ datum }) => colors[datum.colors],\n                fillOpacity: 2\n              }\n            }}\n            x=\"key\"\n            y=\"value\"\n          />\n          <VictoryBar\n\n            barWidth={20}\n            data={[{ key: props.keyv[0], 'value': props.data[props.stateFips + props.countyFips][props.var1[0]] || 0, 'colors': '2' },\n            { key: props.keyv[1], 'value': props.data[props.stateFips + props.countyFips][props.var1[1]] || 0, 'colors': '2' }]}\n\n            labels={({ datum }) =>\n              `Population Percent: ${numberWithCommas(parseFloat(datum.value * 100).toFixed(0))}%`\n            }\n            labelComponent={<VictoryTooltip\n              orientation=\"top\"\n              style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'black' }}\n              constrainToVisibleArea\n              // labelComponent={<VictoryLabel dx={-70} textAnchor='start' />}\n              flyoutStyle={{ fill: \"grey\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n            />}\n            style={{\n              data: {\n                fill: ({ datum }) => colors[datum.colors],\n                fillOpacity: 0.7\n              }\n            }}\n            x=\"key\"\n            y=\"value\"\n          />\n        </VictoryGroup>\n      </VictoryChart>);\n  }\n  // console.log(props.data)\n\n}\n\nexport default function CountyReport() {\n  const [stateFips, setStateFip] = useState('13')\n  let {countyFips} = useParams();\n  const allZero = arr => arr.every(v => Math.round(v, 2) === 0.00)\n\n  // const [countyFips, setCountyFips] = useState('121');\n  const [configsCounty, setConfig] = useState();\n  const [stateName, setStateName] = useState('Georgia');\n  const [countyName, setCountyName] = useState('');\n  const [dataCur, setDataCur] = useState();\n  const [zipCode, setZipCode] = useState('30268');\n  const [zipCodeH, setZipCodeH] = useState('30328');\n  const [zipCodeD, setZipCodeD] = useState('30328');\n  const [zipCodeFinal, setZipCodeFinal] = useState('30328');\n  const history = useHistory();\n  const [data, setData] = useState();\n  const [data_cases, setDataCG] = useState();\n  const [data_deaths, setDataDG] = useState();\n  const [datades_cases, setDatadesCG] = useState();\n  const [datades_deaths, setDatadesDG] = useState();\n  // const [dataG, setDataG] = useState();\n  const [dataZip, setDataZip] = useState();\n  const [dataTS, setDataTS] = useState();\n  const [mapOut, setDataMapOut] = useState();\n\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMaxD, setLegendMaxD] = useState([]);\n\n  const [legendMax_graph, setLegendMaxGraph] = useState(0);\n\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendMinD, setLegendMinD] = useState([]);\n\n  const [legendSplit, setLegendSplit] = useState([]);\n  const [legendSplitD, setLegendSplitD] = useState([]);\n  const [colorScale, setColorScale] = useState();\n  const [colorScaleD, setColorScaleD] = useState();\n\n\n  // const [metric, setMetric] = useState('mean7daycases');\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [covidMetric, setCovidMetric] = useState({\n    casescum: 'N/A', deathscum: 'N/A', casescumR: 'N/A', deathscumR: 'N/A',\n    casesdailymean14: 'N/A', deathsdailymean14: 'N/A', casesdailymean14R: 'N/A', deathsdailymean14R: 'N/A', \"cfr\": 'N/A', \"cfrcompare\": '', t: 'n/a'\n  });\n  const [covidMetricLast, setCovidMetricLast] = useState({\n    casescum: 'N/A', deathscum: 'N/A', casescumR: 'N/A', deathscumR: 'N/A',\n    casesdailymean14: 'N/A', deathsdailymean14: 'N/A', casesdailymean14R: 'N/A', deathsdailymean14R: 'N/A', \"cfr\": 'N/A', \"cfrcompare\": '', t: 'n/a'\n  });\n  const [covidMetricGa, setCovidMetricGa] = useState({\n    casescum: 'N/A', deathscum: 'N/A', casescumR: 'N/A', deathscumR: 'N/A',\n    casesdailymean14: 'N/A', deathsdailymean14: 'N/A', casesdailymean14R: 'N/A', deathsdailymean14R: 'N/A', \"cfr\": 'N/A', \"cfrcompare\": '', t: 'n/a'\n  });\n  const [covidMetric14, setCovidMetric14] = useState({\n    casescum: 'N/A', deathscum: 'N/A', casescumR: 'N/A', deathscumR: 'N/A',\n    casesdailymean14: 'N/A', deathsdailymean14: 'N/A', casesdailymean14R: 'N/A', deathsdailymean14R: 'N/A', \"cfr\": 'N/A', \"cfrcompare\": '', t: 'n/a'\n  });\n  const [varMap, setVarMap] = useState({});\n  // const [countyFips, setCountyFips] = useState('');\n\n\n  const varNameMap = {\n    \"casescum\": { \"name\": 'cases', \"text\": \"The map shows the total number of confirmed COVID-19 cases in each zip code as of \" },\n    \"deathscum\": { \"name\": 'deaths', \"text\": \"The map shows the total number of confirmed COVID-19 deaths in each zip code as of \" },\n    \"casescumR\": { \"name\": 'cases per 100,000 residents', \"text\": \"The map shows the total number of confirmed COVID-19 cases per 100,000 residents in each zip code as of \" },\n    \"deathscumR\": { \"name\": 'deaths per 100,000 residents', \"text\": \"The map shows the total number of confirmed COVID-19 deaths per 100,000 residents in each zip code as of \" }\n  };\n\n  const [delayHandler, setDelayHandler] = useState(null)\n\n  useEffect(() => {\n\n    const configMatched = configscounty.find(s => s.countyfips === countyFips);\n\n    // // let projection = d3.geoAlbersUsa();\n    // // // let gps = [-85.504701, 34.855196]\n    // // let gps = [-0.6, 38.7]\n    // // console.log(projection.center)\n    // console.log(stateFips);\n    // console.log(countyFips);\n\n    // console.log(configMatched);\n    if (!configMatched || !fips2county[stateFips + countyFips]) {\n      history.push('/');\n    } else {\n      setConfig(configMatched);\n      // setStateName(configMatched.name);\n      setCountyName(fips2county[stateFips + countyFips]);\n\n      fetch('/data/GDPH/variable_mapping.json').then(res => res.json())\n        .then(x => setVarMap(x));\n\n      fetch('/data/GDPH/data_us.json').then(res => res.json())\n        .then(x => setData(x));\n      fetch('/data/GDPH/data.json').then(res => res.json())\n        .then(x => setDataCur(x));\n      fetch('/data/GDPH/data_cases_ga.json').then(res => res.json())\n        .then(x => setDataCG(x)\n        );\n      fetch('/data/GDPH/data_deaths_ga.json').then(res => res.json())\n        .then(x => setDataDG(x));\n      fetch('/data/GDPH/data_describe_cases.json').then(res => res.json())\n        .then(x => setDatadesCG(x));\n      fetch('/data/GDPH/data_describe_deaths.json').then(res => res.json())\n        .then(x => setDatadesDG(x));\n      // fetch('/data/data.json').then(res => res.json())\n      //   .then(x => setDataG(x));\n\n      fetch('/data/GDPH/zipcode.json').then(res => res.json())\n        .then(x => setDataZip(x));\n\n      fetch('/data/GDPH/timeseries13' + '.json').then(res => res.json())\n        .then(x => setDataTS(x));\n\n      fetch('/data/GDPH/mapout' + '.json').then(res => res.json())\n        .then(x => setDataMapOut(x));\n\n      fetch('/data/GDPH/timeseries13' + '.json').then(res => res.json())\n        .then(\n          x => {\n            var max = 0\n            var length = 0\n            _.each(x[stateFips + countyFips], d => {\n              length = length + 1\n              // console.log(d);\n              if (d['cases'] > max) {\n                max = d['cases'];\n              }\n\n            });\n            setLegendMaxGraph(max.toFixed(0));\n            // console.log(max.toFixed(0));\n          });\n\n      fetch('/data/GDPH/zipcode.json').then(res => res.json())\n        .then(x => {\n          // setDataZip(x);\n\n          const cs = scaleQuantile()\n            .domain(_.map(_.filter(_.map(x, (d, k) => {\n              d.fips = k\n              return d\n            }),\n              d => (\n                (d.casescum >= 0 &&\n                  d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) || (d.casescum >= 0 &&\n                    d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999))),\n              d => d['casescum']))\n            .range(colorPalette);\n\n          let scaleMap = {}\n          _.each(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d\n          }),\n            d => (\n              (d.casescum >= 0 &&\n                d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) || (d.casescum >= 0 &&\n                  d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999)))\n            , d => {\n              scaleMap[d['casescum']] = cs(d['casescum'])\n            });\n          setColorScale(scaleMap);\n\n          var max = 0\n          var min = 100\n          var length = 0\n          _.each(x, d => {\n            // console.log(d.fips[0]);\n            if ((d['casescum'] > max && d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) ||\n              (d['casescum'] > max && d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999)\n            ) {\n              max = d['casescum'];\n              // console.log(d.fips)\n            } else if ((d.fips.length === 5 && d['casescum'] < min && d['casescum'] >= 0 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) ||\n              (d.fips.length === 5 && d['casescum'] < min && d['casescum'] >= 0 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999)\n            ) {\n              min = d['casescum']\n              // console.log(d.fips)\n            }\n\n          });\n          if (max > 999) {\n            max = (max / 1000).toFixed(0) + \"K\";\n            setLegendMax(max);\n          } else {\n            setLegendMax(max.toFixed(0));\n\n          }\n          setLegendMin(min.toFixed(0));\n\n          var split = scaleQuantile()\n            .domain(_.map(_.filter(_.map(x, (d, k) => {\n              d.fips = k\n              return d\n            }),\n              d => (\n                (d.casescum >= 0 &&\n                  d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) || (d.casescum >= 0 &&\n                    d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999))),\n              d => d['casescum']))\n            .range(colorPalette);\n\n          setLegendSplit(split.quantiles());\n          // console.log(split.quantiles());\n        });\n\n\n    }\n  }, [countyFips]);\n\n  useEffect(() => {\n    fetch('/data/GDPH/zipcode.json').then(res => res.json())\n      .then(x => {\n        const csD = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d\n          }),\n            d => (\n              (d.deathscum >= 0 &&\n                d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) || (d.deathscum >= 0 &&\n                  d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999))),\n            d => d['deathscum']))\n          .range(colorPalette);\n\n        let scaleMap = {}\n        _.each(_.filter(_.map(x, (d, k) => {\n          d.fips = k\n          return d\n        }),\n          d => (\n            (d.deathscum >= 0 &&\n              d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) || (d.deathscum >= 0 &&\n                d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999)))\n          , d => {\n            scaleMap[d['deathscum']] = csD(d['deathscum'])\n          });\n        setColorScaleD(scaleMap);\n\n        var max = 0\n        var min = 100\n        _.each(x, d => {\n          // console.log(d.fips[0]);\n          if ((d['deathscum'] > max && d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) ||\n            (d['deathscum'] > max && d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999)\n          ) {\n            max = d['deathscum'];\n            // console.log(max)\n          } else if ((d.fips.length === 5 && d['deathscum'] < min && d['deathscum'] >= 0 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) ||\n            (d.fips.length === 5 && d['deathscum'] < min && d['deathscum'] >= 0 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999)\n          ) {\n            min = d['deathscum']\n            // console.log(d.fips)\n          }\n\n\n        });\n        if (max > 999) {\n          max = (max / 1000).toFixed(0) + \"K\";\n          setLegendMaxD(max);\n        } else {\n          setLegendMaxD(max.toFixed(0));\n\n        }\n        setLegendMinD(min.toFixed(0));\n\n        var split = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d\n          }),\n            d => (\n              (d.deathscum >= 0 &&\n                d.fips.length === 5 && Number(d.fips) >= 30001 && Number(d.fips) <= 31999) || (d.deathscum >= 0 &&\n                  d.fips.length === 5 && Number(d.fips) >= 39800 && Number(d.fips) <= 39999))),\n            d => d['deathscum']))\n          .range(colorPalette);\n\n        setLegendSplitD(split.quantiles());\n        // console.log(split.thresholds().reverse());\n      });\n  }, [])\n\n  useEffect(() => {\n    if (dataTS && dataTS[stateFips + countyFips]) {\n      setCovidMetric(dataCur[stateFips + countyFips]);\n      setCovidMetricGa(dataCur[stateFips]);\n      // setCovidMetric(dataG[stateFips + countyFips]);\n      setCovidMetric14(_.takeRight(dataTS[stateFips + countyFips], 14)[0]);\n      setCovidMetricLast(_.takeRight(dataTS[stateFips + countyFips])[0]);\n    }\n  }, [dataTS])\n\n  if (data && dataTS && varMap) {\n\n    return (\n      <div>\n\n        <AppBar menu='countyReport' />\n        <Container fluid style={{ marginTop: '8em' , minWidth: '1260px'}}>\n          <Breadcrumb style={{ paddingBottom: '2em', paddingLeft: '30em' }}>\n            <Breadcrumb.Section link onClick={() => history.push('/Georgia')}>{stateName}</Breadcrumb.Section>\n            <Breadcrumb.Divider />\n            <Breadcrumb.Section active>{countyName}</Breadcrumb.Section>\n            <Breadcrumb.Divider />\n          </Breadcrumb>\n\n          <div style={sectionStyle2}>\n            <Header as='h2' style={{\n              textAlign: 'center', color: 'black', fontSize: \"28pt\",\n              paddingTop: '1em', paddingBottom: '1em'\n            }}>\n              <Header.Content>\n                Summary of COVID-19 in <b>{countyName}</b>, GA\n              </Header.Content>\n            </Header>\n          </div>\n        </Container>\n        <Container style={{ marginTop: '4em', minWidth: '1260px', paddingRight: 0 }}>\n          {configsCounty &&\n            <div>\n              {/* <Header as='h1' style={{ fontWeight: 300 }}>\n                <Header.Content>\n                  \n                  <b>{countyName}</b>\n                  <Header.Subheader style={{fontWeight: 300}}>\n              See how health determinants impact COVID-19 outcomes. \n              </Header.Subheader>\n                </Header.Content>\n              </Header> */}\n              <Divider horizontal style={{ minWidth: '1260px', fontWeight: 600, color: '#232423', fontSize: '18pt', paddingTop: '0.5em' }}> COVID-19 <b>cases</b> in {countyName}</Divider>\n              <Accordion defaultActiveIndex={1} panels={[\n                                                    {\n                                                        key: 'acquire-dog',\n                                                        title: {\n                                                            content: <Label content={<p style={{ fontFamily: 'lato', fontSize: 18, color:'black' }}>User Instructions</p>} />,\n                                                            icon: 'hand point right',\n                                                        },\n                                                        content: {\n                                                            content: (\n                                                                <Header as='h2' style={{ fontFamily: 'lato', fontSize: \"16px\", paddingRight: 0, color: 'black' }}>\n                                                    <Header.Content>\n                                                        <Header.Subheader style={{ fontFamily: 'lato', fontSize: \"16px\", paddingRight: 0, paddingTop: '1em', color: 'black' }}>\n                                                            <List as='ul'>\n                                                                <List.Item as='li'>Hover on column names to obtain variable descriptions.</List.Item>\n                                                            </List>\n                                                        </Header.Subheader>\n                                                    </Header.Content>\n                                                </Header>\n                                                            ),\n                                                        },\n                                                    }\n                                                ]\n\n                                                } />\n              <Grid style={{ paddingTop: '2em', width: \"1260px\", paddingLeft: '1.5em' }} centered>\n                {/* <Header as='h2' style={{ fontWeight: 300, textAlign: 'center' }} >\n                  <Header.Content>\n                    COVID-19 <b>cases</b> in {countyName}\n                  </Header.Content>\n                </Header> */}\n                <Grid.Row style={{ paddingTop: '1em' }}>\n                  <Grid.Column width={16} style={{ paddingLeft: '0', paddingRight: '0' }}>\n\n                    <Table celled fixed >\n                      <Table.Header >\n                        <tr textAlign=\"center\" colSpan=\"6\" style={sectionStyle1}>\n                          <td colSpan='1' style={{ width: 150 }}> </td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}> <Popup\n                            trigger={<p>ALL CASES TO DATE</p>\n                            }\n                            content={\"All confirmed cases reported to DPH as of \" + new Date(dataCur[stateFips + countyFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' })}\n                            basic /></td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}> <Popup\n                            trigger={<p>CASES IN PAST 14 DAYS</p>\n                            }\n                            content={\"All confirmed cases reported to DPH during the 14 days preceding the report publication date.\"}\n                            basic /></td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}> <Popup\n                            trigger={<p >CASES PER 100K (PAST 14 DAYS)</p>\n                            }\n                            content={\"14-day case count/100K residents based on 2020 population projects derived from census data.\"}\n                            basic /></td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}><Popup\n                            trigger={<p>14-DAY RATE CATEGORY</p>\n                            } flowing hoverable>\n                            Based on the 14-day case rate\n                          <List as='ul'>\n                              <List.Item as='li'>High: {'>'} 100 cases/100K</List.Item>\n                              <List.Item as='li'>Moderately high: {\">\"} 50-100 cases/100K</List.Item>\n                              <List.Item as='li'>Moderate: {\">\"} 10-50 cases/100K</List.Item>\n                              <List.Item as='li'>Low: {\">\"} 0-10 cases/100K</List.Item>\n                              <List.Item as='li'>Less than 5 cases reported, rate not calculated</List.Item>\n                            </List>\n                          </Popup></td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}> <Popup\n                            trigger={<p>CHANGE IN LAST 2 WEEKS</p>\n                            } flowing hoverable>\n                            Change in case count during the previous 14 days, comparing<br></br> the second 7-day period to the first 7-day period.\n                          <List as='ul'>\n                              <List.Item as='li'>Increasing: 5% or greater change</List.Item>\n                              <List.Item as='li'>Decreasing: -5% or less change</List.Item>\n                              <List.Item as='li'>Less than 5% change</List.Item>\n                            </List>\n                          </Popup></td>\n                        </tr>\n                        <Table.Row textAlign='center'>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}> {countyName} </Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetric.casescum === null || covidMetric.casescum < 0 ? '0' : covidMetric.casescum.toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetric.casescum14day === null || covidMetric.casescum14day < 0 ? '0' : numberWithCommas(parseFloat(covidMetric.casescum14day).toFixed(0)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetric.casescum14dayR === null || covidMetric.casescum14dayR < 0 ? '0' : numberWithCommas(parseFloat(covidMetric.casescum14dayR).toFixed(0)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}>{covidMetric.category14day === null || covidMetric.category14day < 0 ? '0' : covidMetric.category14day}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}>{covidMetric.change14day === null ? '0' : covidMetric.change14day}</Table.HeaderCell>\n                        </Table.Row>\n                        <Table.Row textAlign='center'>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}>Georgia</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetricGa.casescum === null || covidMetricGa.casescum < 0 ? '0' : covidMetricGa.casescum.toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetricGa.casescum14day === null || covidMetricGa.casescum14day < 0 ? '0' : numberWithCommas(parseFloat(covidMetricGa.casescum14day).toFixed(0)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetricGa.casescum14dayR === null || covidMetricGa.casescum14dayR < 0 ? '0' : numberWithCommas(parseFloat(covidMetricGa.casescum14dayR).toFixed(0)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}>{covidMetricGa.category14day === null || covidMetricGa.category14day < 0 ? '0' : covidMetricGa.category14day}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}>{covidMetricGa.change14day === null || covidMetricGa.change14day < 0 ? '0' : covidMetricGa.change14day}</Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n                    </Table>\n                  </Grid.Column>\n\n                </Grid.Row>\n              </Grid>\n\n              <Divider horizontal style={{ fontWeight: 600, color: '#232423', fontSize: '18pt', paddingTop: '1em' }}> COVID-19 <b>deaths</b> in {countyName}</Divider>\n              <Grid style={{ paddingTop: '2em', width: \"1260px\", paddingLeft: '1.5em' }} centered>\n                <Grid.Row style={{ paddingTop: '1em' }}>\n                  <Grid.Column width={16} style={{ paddingLeft: '0', paddingRight: '0' }}>\n\n                    <Table celled fixed singleLine>\n                      <Table.Header>\n                        <tr textAlign=\"center\" colSpan=\"5\" style={sectionStyle1}>\n                          <td colSpan='1' style={{ width: 150 }}> </td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}> <Popup\n                            trigger={<p>ALL DEATHS TO DATE</p>\n                            }\n                            content={\"All confirmed deaths reported to DPH as of \" + new Date(dataCur[stateFips + countyFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' })}\n                            basic /></td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}> <Popup\n                            trigger={<p > DEATHS IN PAST 14 DAYS</p>\n                            }\n                            content={\"All confirmed deaths reported to DPH during the 14 days preceding the report publication date.\"}\n                            basic /></td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}> <Popup\n                            trigger={<p > DEATHS PER 100K (PAST 14 DAYS)</p>\n                            }\n                            content={\"14-day deaths count/100K residents based on 2020 population projects derived from census data.\"}\n                            basic /></td>\n                          <td colSpan='1' style={{ width: 200, fontSize: '14px', textAlign: \"center\", font: \"lato\", fontWeight: 600, color: \"#FFFFFF\" }}><Popup\n                            trigger={<p>CASE FATALITY RATIO (%)</p>\n                            }\n                            content={\"The case fatality ratio is the percent of all confirmed cases who have been reported as having died. While this is used as a measure of disease severity, the ratio may also be affected by the level of testing and quality of follow-up data on cases.\"}\n                            basic /></td>\n\n                        </tr>\n\n                        <Table.Row textAlign='center'>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}> {countyName} </Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetric.deathscum === null || covidMetric.deathscum < 0 ? '0' : covidMetric.deathscum.toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetric.deathscum14day === null || covidMetric.deathscum14day < 0 ? '0' : numberWithCommas(parseFloat(covidMetric.deathscum14day).toFixed(0)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetric.deathscum14dayR === null || covidMetric.deathscum14dayR < 0 ? '0' : numberWithCommas(parseFloat(covidMetric.deathscum14dayR).toFixed(2)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetric.cfr === null || covidMetric.cfr < 0 ? '0' : numberWithCommas(parseFloat(covidMetric.cfr).toFixed(2)).toLocaleString() + '%'}</Table.HeaderCell>\n                        </Table.Row>\n                        <Table.Row textAlign='center'>\n                          <Table.HeaderCell style={{ fontSize: '18px' }}>Georgia</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetricGa.deathscum === null || covidMetricGa.deathscum < 0 ? '0' : covidMetricGa.deathscum.toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetricGa.deathscum14day === null || covidMetricGa.deathscum14day < 0 ? '0' : numberWithCommas(parseFloat(covidMetricGa.deathscum14day).toFixed(0)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetricGa.deathscum14dayR === null || covidMetricGa.deathscum14dayR < 0 ? '0' : numberWithCommas(parseFloat(covidMetricGa.deathscum14dayR).toFixed(2)).toLocaleString()}</Table.HeaderCell>\n                          <Table.HeaderCell style={{ fontSize: '27px', color: '#337fb5' }}>{covidMetricGa.cfr === null || covidMetricGa.cfr < 0 ? '0' : numberWithCommas(parseFloat(covidMetricGa.cfr).toFixed(2)).toLocaleString() + '%'}</Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n                    </Table>\n                  </Grid.Column>\n\n                </Grid.Row>\n\n                <Grid.Row style={{ paddingTop: 0 }}>\n                  <Grid.Column style={{ paddingLeft: '0.01', paddingRight: '0' }}>\n                    <small style={{ fontWeight: 300, fontSize: 16, color: 'black' }} align=\"justify\">\n                      As of {dataCur[stateFips + countyFips].todaydate === 'n/a' ? 'N/A' : (new Date(dataCur[stateFips + countyFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}, there were a total of {covidMetric.casescum.toLocaleString()} confirmed cases of COVID-19 and {covidMetric.deathscum.toLocaleString()} deaths due to COVID-19 reported to DPH for {countyName}. In {countyName}, this translates to {numberWithCommas(parseFloat(covidMetric.casescumR).toFixed(0)).toLocaleString()} case(s) per 100,000 residents and {numberWithCommas(parseFloat(covidMetric.deathscumR).toFixed(0)).toLocaleString()} death(s) per 100,000 residents.\n                        On a day-to-day basis, {numberWithCommas(parseFloat(covidMetric.casescum14dayR).toFixed(0)).toLocaleString()} new case(s) and {numberWithCommas(parseFloat(covidMetric.deathscum14dayR).toFixed(0)).toLocaleString()} new death(s) are reported to DPH on average (based on a 14-day rolling average). The case-fatality ratio measures\n                          the proportion of confirmed COVID-19 cases that die due to the disease. This is used by epidemiologists to gauge the severity of disease in a particular locale.  In {countyName}, the case-fatality ratio was {covidMetric.cfr === null || covidMetric.cfr < 0 ? '0' : numberWithCommas(parseFloat(covidMetric.cfr).toFixed(2)).toLocaleString() + '%'}, which is {covidMetric.cfrcompare === null || covidMetric.cfrcompare < 0 ? '0' : covidMetric.cfrcompare} than the national average of 4%. All of these data must be interpreted in light of constraints on testing, follow-up quality of data, and reporting lags in the county.\n                  </small>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n\n              <Divider horizontal style={{ fontWeight: 300, color: '#b1b3b3', fontSize: '1.2em', paddingTop: '1em' }}></Divider>\n              <Grid column={2} style={{ paddingTop: '2em', paddingBottom: '2em', width: \"1260px\" }}>\n                <Grid.Row style={{ paddingTop: '2em' }}>\n\n                  <Grid.Column width={8}>\n                    <Header as='h2' style={{ fontWeight: \"bold\", fontSize: \"27px\", paddingLeft: \".5em\" }}>\n                      <Header.Content>\n                        Daily cases in {countyName}\n                        <Header.Subheader style={{ fontWeight: 300 }}>\n                        </Header.Subheader>\n                      </Header.Content>\n                    </Header>\n                    <svg width=\"550\" height=\"90\">\n                      <rect x={50} y={50} width=\"15\" height=\"15\" style={{ fill: stateColor, strokeWidth: 1, stroke: stateColor }} />\n                      <rect x={50} y={22} width=\"15\" height=\"1\" style={{ fill: countyColor, strokeWidth: 1, stroke: countyColor }} />\n                      <text x={75} y={64} style={{ fontSize: 18 }}> Daily new cases </text>\n                      <text x={75} y={30} style={{ fontSize: 18 }}>7-D Rolling average</text>\n                    </svg>\n                    <VictoryChart theme={VictoryTheme.material}\n                      containerComponent={\n                        <VictoryVoronoiContainer\n                          responsive={false}\n                          flyoutStyle={{ fill: \"black\" }}\n\n                        />\n                      }\n                      width={550}\n                      height={450}\n                      padding={{ left: 45, right: 60, top: 10, bottom: 60 }}>\n                      <VictoryAxis\n                        style={{\n                          tickLabels: { fontSize: 17, padding: 5 }\n                        }}\n                        tickFormat={(t) => new Date(t * 1000).toLocaleDateString('en-Us', { month: 'numeric', day: 'numeric' })}\n                        tickValues={[\n                          // 1583035200, 1585713600, 1588305600, 1590984000, 1593576000\n                          dataTS['13001'][0].t,\n                        dataTS[\"13001\"][31].t,\n                        dataTS[\"13001\"][61].t,\n                        dataTS[\"13001\"][92].t,\n                        dataTS[\"13001\"][122].t,\n                        dataTS[\"13001\"][153].t,\n                        dataTS[\"13001\"][184].t,\n                        dataTS[\"13001\"][214].t,\n                        dataTS[\"13001\"][245].t,\n                        dataTS[\"13001\"][275].t,\n                        dataTS[\"13001\"][306].t,\n                        dataTS[\"13001\"][337].t,\n                        dataTS[\"13001\"][365].t,\n\n                        // dataTS[\"13001\"][365].t,\n                        dataTS[\"13001\"][dataTS[\"13001\"].length - 1].t\n                        ]}\n\n                      />\n                      <VictoryAxis dependentAxis tickCount={5}\n                        style={{\n                          tickLabels: { fontSize: 17, paddingLeft: '0em' }\n                        }}\n                        tickFormat={(y) => (y < 1000 ? y : (y / 1000 + 'k'))}\n                      />\n\n                      <VictoryBar style={{ data: { fill: stateColor } }} barWidth={4} data={dataTS[stateFips + countyFips] ? dataTS[stateFips + countyFips] : dataTS[\"99999\"]}\n                        x='t' y='casesdaily'\n                      />\n                      <VictoryLine name=\"Line\" style={{ data: { stroke: countyColor } }} data={dataTS[stateFips + countyFips] ? dataTS[stateFips + countyFips] : dataTS[\"99999\"]}\n                        x='t' y='casesdailymean7'\n                        labels={({ datum }) => `${countyName}\\n` +\n                          `Date: ${new Date(datum.t * 1000).toLocaleDateString()}\\n` +\n                          `Daily new cases: ${Math.round(datum.casesdaily, 2)}\\n` +\n                          `7-d Rolling average of daily new cases: ${Math.round(datum.casesdailymean7, 2)}`\n                        }\n                        labelComponent={\n                          <VictoryTooltip\n                            orientation=\"top\"\n                            style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                            constrainToVisibleArea\n                            labelComponent={<VictoryLabel dx={-130} textAnchor='start' />}\n                            flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                          />\n                        }\n                      />\n\n                    </VictoryChart>\n                  </Grid.Column>\n                  <Grid.Column width={8}>\n                    <Header as='h2' style={{ fontWeight: \"bold\", fontSize: \"27px\", paddingLeft: \".5em\" }}>\n                      <Header.Content>\n                        Daily deaths in {countyName}\n                        <Header.Subheader style={{ fontWeight: 300 }}>\n                        </Header.Subheader>\n                      </Header.Content>\n                    </Header>\n                    <svg width=\"550\" height=\"90\">\n                      <rect x={50} y={50} width=\"15\" height=\"15\" style={{ fill: stateColor, strokeWidth: 1, stroke: stateColor }} />\n                      <rect x={50} y={22} width=\"15\" height=\"1\" style={{ fill: countyColor, strokeWidth: 1, stroke: countyColor }} />\n                      <text x={75} y={64} style={{ fontSize: 18 }}> Daily new deaths </text>\n                      <text x={75} y={30} style={{ fontSize: 18 }}>7-D Rolling average</text>\n                    </svg>\n                    <VictoryChart theme={VictoryTheme.material}\n                      containerComponent={\n                        <VictoryVoronoiContainer\n                          responsive={false}\n                          flyoutStyle={{ fill: \"black\" }}\n                        />\n                      }\n                      width={550}\n                      height={450}\n                      padding={{ left: 50, right: 60, top: 10, bottom: 60 }}>\n\n                      <VictoryAxis\n                        style={{\n                          tickLabels: { fontSize: 17, padding: 7 }\n                        }}\n                        tickFormat={(t) => new Date(t * 1000).toLocaleDateString('en-Us', { month: 'numeric', day: 'numeric' })}\n                        tickValues={[\n                          dataTS['13001'][0].t,\n                        dataTS[\"13001\"][31].t,\n                        dataTS[\"13001\"][61].t,\n                        dataTS[\"13001\"][92].t,\n                        dataTS[\"13001\"][122].t,\n                        dataTS[\"13001\"][153].t,\n                        dataTS[\"13001\"][184].t,\n                        dataTS[\"13001\"][214].t,\n                        dataTS[\"13001\"][245].t,\n                        dataTS[\"13001\"][275].t,\n                        dataTS[\"13001\"][306].t,\n                        dataTS[\"13001\"][337].t,\n                        dataTS[\"13001\"][365].t,\n\n                        // dataTS[\"13001\"][365].t,\n                        dataTS[\"13001\"][dataTS[\"13001\"].length - 1].t\n                        ]}\n\n                      />\n                      <VictoryAxis dependentAxis tickCount={5}\n                        style={{\n                          tickLabels: { fontSize: 20, padding: 5 }\n                        }}\n                        tickFormat={(y) => (y < 1000 ? (Math.round(y, 2) === 0.00 ? \" \" : y) : (y / 1000 + 'k'))}\n                      />\n\n                      <VictoryBar style={{ data: { fill: stateColor } }} barWidth={4} data={dataTS[stateFips + countyFips] ? dataTS[stateFips + countyFips] : dataTS[\"99999\"]}\n                        x='t' y='deathsdaily'\n                      />\n                      <VictoryLine name=\"Line\" style={{ data: { stroke: countyColor } }} data={dataTS[stateFips + countyFips] ? dataTS[stateFips + countyFips] : dataTS[\"99999\"]}\n                        x='t' y='deathsdailymean7'\n                        labels={({ datum }) =>\n                          `${countyName}\\n` +\n                          `Date: ${new Date(datum.t * 1000).toLocaleDateString()}\\n` +\n                          `Daily new deaths: ${Math.round(datum.deathsdaily, 2)}\\n` +\n                          `7-d Rolling average of daily new deaths: ${Math.round(datum.deathsdailymean7, 2)}`}\n                        labelComponent={\n                          <VictoryTooltip\n                            orientation=\"top\"\n                            style={{ fontWeight: 600, fontFamily: 'lato', fontSize: 14, fill: 'white' }}\n                            constrainToVisibleArea\n                            labelComponent={<VictoryLabel dx={-130} textAnchor='start' />}\n                            flyoutStyle={{ fill: \"black\", fillOpacity: 0.75, stroke: \"#FFFFFF\", strokeWidth: 0 }}\n                          />\n                        }\n                      />\n\n                    </VictoryChart>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: '2em', paddingLeft: '0em', paddingRight: '2em' }} >\n                  <Grid.Column width={8} style={{ paddingLeft: '1em', paddingRight: '3em' }}>\n                    <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                      As of {covidMetricLast.t === 'n/a' ? 'N/A' : (new Date(covidMetricLast.t * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}, this chart shows the daily number of new cases of confirmed COVID-19 in <b>{countyName}</b>. The daily number reflects the date the case was first reported to DPH.\n                  The vertical bars show the number of new daily cases while the line shows the 7-day moving average of new daily cases.\n                  </small>\n                  </Grid.Column>\n                  <Grid.Column width={8} style={{ paddingLeft: '3em', paddingRight: '3em' }}>\n                    <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                      As of {covidMetricLast.t === 'n/a' ? 'N/A' : (new Date(covidMetricLast.t * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))}, this chart shows the daily number of new deaths of confirmed COVID-19 in <b>{countyName}</b>. The daily number reflects the date the death was first reported to DPH.\n                  The vertical bars show the number of new daily deaths while the line shows the 7-day moving average of new daily deaths.\n                  </small>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: '8em' }}>\n                  <Grid.Column width={9}>\n                    <Header as='h2' style={{ fontWeight: 400, paddingLeft: '1em' }}>\n                      <Header.Content >\n                        <strong>Confirmed COVID-19 cases {countyName} by zip code</strong>\n                        {/* <Header.Subheader style={{fontWeight: 300}}>.</Header.Subheader> */}\n                      </Header.Content>\n                    </Header>\n                    {/* <SearchField\n                      placeholder= {zipCode} \n                      onEnter={(e, value) => {\n                        console.log(e)\n                        console.log(value)\n                        setZipCode(e)\n                      }}\n                      \n                    /> */}\n                    <svg width=\"180\" height=\"300\" style={{ paddingLeft: '3.5em', paddingTop: '1em' }}>\n                      {_.map(colorPalette, (color, i) => {\n                        return <rect key={i} y={30 + 20 * i} x={25} width=\"20\" height=\"20\" style={{ fill: colorPalette[(colorPalette.length - 1 - i).toString()], strokeWidth: 1, stroke: colorPalette[(colorPalette.length - 1 - i).toString()] }} />\n                      })}\n                      {/* <text y={15} x={47} style={{fontSize: '0.8em'}}>High</text>\n                  <text y={20 * (colorPalette.length)} x={47} style={{fontSize: '0.8em'}}>Low</text> */}\n                      {/* {_.map(legendSplit, (splitpoint, i) => {\n                        if (legendSplit[i] < 1) {\n                          return <text key={i} y={21 * (legendSplit.length - i)} x={47} style={{ fontSize: '0.8em' }}> {legendSplit[i].toFixed(1)}</text>\n                        }\n                        return <text key={i} y={21 * ((legendSplit.length - i))} x={47} style={{ fontSize: '0.8em' }}> {legendSplit[i].toFixed(0)}</text>\n                      })} */}\n                      <text y={15} x={10} style={{ fontSize: '0.8em' }}>Total confirmed cases</text>\n                      <text y={30 + 20 * (colorPalette.length)} x={47} style={{ fontSize: '0.8em' }}> {legendMin} </text>\n                      <text y={40} x={47} style={{ fontSize: '0.8em' }}>{legendMax}+</text>\n                    </svg>\n\n                    <ComposableMap projection=\"geoAlbersUsa\"\n                      style={{ paddingLeft: '2em' }}\n                      projectionConfig={{ scale: `${configsCounty.scale}` }}\n                      width={500}\n                      height={350}\n                      data-tip=\"\"\n                      offsetX={configsCounty.offsetX}\n                      offsetY={configsCounty.offsetY}>\n                      <Geographies geography={configsCounty.url}>\n                        {({ geographies }) => geographies.map(geo =>{\n                        console.log(geo.properties.ZCTA5CE10)\n                        // data.find(s => s.id === geo.id)\n                        return(\n                          <Geography\n                            key={geo.rsmKey}\n                            geography={geo}\n                            style={{\n                              default: {\n                                stroke: \"#607D8B\",\n                                strokeWidth: 0.95,\n                                outline: \"none\",\n                              }\n                            }}\n                            \n                            onMouseEnter={(event) => {\n                              // console.log(event);\n                              setCountyName(fips2county[stateFips + geo.properties.COUNTYFP]);\n                              setZipCode(geo.properties.ZCTA5CE10);\n                              // setZipCodeFinal(geo.properties.ZCTA5CE10);\n                              setTooltipContent(<div><font size=\"+2\"><b >Zip Code: {geo.properties.ZCTA5CE10}</b> </font> <br />\n                                {/* <b>Total Cases</b>: {dataZip[geo.properties.ZCTA5CE10]['casescum']} <br />\n                                <b>Total Deaths</b>: {dataZip[geo.properties.ZCTA5CE10]['deathscum']} <br /> */}\n                              </div>);\n                            }}\n                            onMouseLeave={(event) => {\n                              setZipCode('');\n                              setTooltipContent(\"\")\n                              console.log(geo)\n                            }}\n                            \n                            fill={zipCode === geo.properties.ZCTA5CE10 ? countyColor :\n                              ((colorScale && dataZip[geo.properties.ZCTA5CE10] && dataZip[geo.properties.ZCTA5CE10]['casescum']) ?\n                                colorScale[dataZip[geo.properties.ZCTA5CE10]['casescum']] : colorPalette[0])}\n                          />)}\n                        )}\n                      </Geographies>\n                    </ComposableMap>\n                    {console.log(zipCode)}\n                  </Grid.Column>\n\n                </Grid.Row>\n\n\n                <Grid.Row style={{ paddingTop: '2em', paddingLeft: '0em', paddingRight: '2em' }} >\n\n                  <Grid.Column width={9} style={{ paddingLeft: '2em', paddingRight: '5em' }}>\n                    <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                      {varNameMap['casescum'].text}{dataCur[stateFips + countyFips].todaydate === 'n/a' ? 'N/A' : (new Date(dataCur[stateFips + countyFips].todaydate * 1000).toLocaleDateString('en-Us', { month: 'short', day: 'numeric', year: 'numeric' }))} . The darker shading indicates a larger number of {varNameMap['casescum'].name}.</small>\n                  </Grid.Column>\n\n                </Grid.Row>\n                <Grid.Row style={{ paddingTop: 0, paddingLeft: '1.5em' }}>\n                  <small style={{ fontWeight: 300, color: 'black' }}>\n                  Note: Data are provisional and subject to change. Some zip codes cross county boundaries. Therefore, the cases shown in some zip codes may include cases that occurred outside of {countyName} but fall into that particular zip code.\n                    </small>\n                </Grid.Row>\n              </Grid>\n              <Divider horizontal style={{ fontWeight: 600, color: '#232423', fontSize: '16pt', paddingTop: '1em' }}>Characteristics of confirmed COVID-19 cases for {countyName}</Divider>\n              <Grid columns={2} style={{ width: \"1260px\" }} centered>\n                <Grid.Row >\n                  <Grid.Column>\n                    <svg width=\"400\" height=\"500\" >\n                      <VictoryPie\n                        colorScale={['#024174', '#337fb5']}\n                        standalone={false}\n                        style={{ labels: { fill: \"white\", fontSize:'25' } }}\n                        // labelPosition='centroid'\n                        labelRadius={65}\n                        width={400} height={400}\n                        padAngle={2}\n                        data={[\n                          { x: 1, y: 100 - datades_cases[stateFips + countyFips]['cdc_underlying2Percent'], label: `${(100 - datades_cases[stateFips + countyFips]['cdc_underlying2Percent']).toFixed(2)}%` },\n                          { x: 2, y: datades_cases[stateFips + countyFips]['cdc_underlying2Percent'], label: `${datades_cases[stateFips + countyFips]['cdc_underlying2Percent'].toFixed(2)}%` },\n                        ]}\n                      />\n                      <VictoryLegend\n                        standalone={false}\n                        colorScale={['#024174', '#337fb5']}\n                        x={150} y={350}\n                        data={[{ name: \"No underlying conditions\", labels: { fontSize: 18 } },\n                        { name: \"Underlying health condition\", labels: { fontSize: 18 } }\n                        ]}\n                      />\n                    </svg>\n                  </Grid.Column>\n                  <Grid.Column style={{ paddingLeft: '0em', paddingRight: '1em', paddingTop: '4em' }}>\n                    <Grid.Row style={{ paddingLeft: '1em' }}>\n                      <Header as='h2' style={{ textAlign: 'left', color: 'black', fontSize: \"18pt\", paddingTop: '0em', paddingBottom: '0em' }}>\n                        <Header.Content>\n                          Proportion of cases with a comorbidity\n                                    </Header.Content>\n                      </Header>\n                    </Grid.Row>\n                    <Divider />\n                    <Grid.Row style={{ paddingLeft: '1em' }}>\n\n                      <small style={{ fontWeight: 300, fontSize: 20, color: 'black' }} align=\"justify\">\n                        The pie chart shows the proportion of confirmed COVID-19 cases in <b>{countyName}</b> who\n                  presented with an underlying medical condition. Underlying medical conditions\n                  increase the risk of experiencing severe disease which may lead to hospitalization\n                  and death. Of the {datades_cases[stateFips + countyFips]['cdc_underlying2_N'] ? datades_cases[stateFips + countyFips]['cdc_underlying2_N'] : \"N/A\"} confirmed cases with data available, {datades_cases[stateFips + countyFips]['cdc_underlying2Percent'] ? datades_cases[stateFips + countyFips]['cdc_underlying2Percent'].toFixed(2) : \"N/A\"}% had an underlying medical condition that increases risk of severe outcomes according to the CDC. These underlying medical conditions include: lung disease, diabetes, cardiovascular disease, renal disease, and/or an immunocompromised state. The chart excludes data from {datades_cases[stateFips + countyFips]['cdc_underlying2Pmiss'] ? datades_cases[stateFips + countyFips]['cdc_underlying2Pmiss'].toFixed(2) : \"N/A\"}% of confirmed COVID-19 cases whose medical history was unknown.\n                    </small>\n                    </Grid.Row>\n\n                  </Grid.Column>\n\n                </Grid.Row>\n              </Grid>\n              <Divider horizontal style={{ fontWeight: 600, color: '#232423', fontSize: '16pt', paddingTop: '1em', paddingBottom: \"0em\" }}>Percentage of Confirmed Cases by Demographic Group in {countyName}</Divider>\n              <Grid style={{ width: \"1260px\" }}>\n                {datades_cases[stateFips + countyFips]['NObs'] < 50 && datades_cases[stateFips + countyFips]['outcome'] === 'COVID Death' ?\n                  <Header as='h2' style={{ fontWeight: 400 }}>\n                    <Header.Content>\n                      <Header.Subheader style={{ fontWeight: 300, fontSize: '16pt', color: 'black' }}>\n                        Rates broken down by age, sex, and race are not shown for {countyName} because there are fewer than 50 confirmed COVID-19 cases with complete information.\n                </Header.Subheader>\n                    </Header.Content>\n\n                  </Header>\n                  :\n                  <Grid.Row columns={3} style={{ paddingTop: 0 }}>\n                    <Grid.Column>\n                      <BarChart\n                        cate={\"Cases\"}\n                        var_num={4}\n                        title=\"Age Group\"\n                        keyv={[\"< 20\", \"20-44\", \"45-64\", \"65+\"]}\n                        var={[\"019ageC_P\", \"2044ageC_P\", \"4564ageC_P\", \"65ageC_P\"]}\n                        var1={[\"019ageP\", \"2044ageP\", \"4564ageP\", \"65ageP\"]}\n                        width={400}\n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        data={data_cases}\n                        co='1' />\n\n                    </Grid.Column>\n                    <Grid.Column>\n                      <BarChart\n                        cate={\"Cases\"}\n                        var_num={2}\n                        title=\"Sex\"\n                        keyv={[\"Female\", \"Male\"]}\n                        var={[\"femaleC_P\", \"maleC_P\"]}\n                        var1={[\"femaleP\", \"maleP\"]}\n                        pad={80}\n                        width={400}\n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        data={data_cases}\n                        co='1' />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <BarChart\n                        cate={\"Cases\"}\n                        var_num={4}\n                        title=\"Race-Ethnicity\"\n                        keyv={[\"NH Other\", \"Hispanic\", \"NH Black\", \"NH White\"]}\n                        var={[\"otherNHC_P\", \"hispanicC_P\", \"blackC_P\", \"whiteC_P\"]}\n                        var1={[\"otherNHP\", \"hispanicP\", \"blackP\", \"whiteP\"]}\n                        width={400}\n                        stateFips={stateFips}\n                        countyFips={countyFips}\n                        data={data_cases}\n                        co='1' />\n                    </Grid.Column>\n                  </Grid.Row>\n                }\n                {datades_cases[stateFips + countyFips]['NObs'] < 50 && datades_cases[stateFips + countyFips]['outcome'] === 'COVID Death' ? ' ' :\n                  <Grid.Row columns={3} style={{ padding: 0 }}>\n                    <Grid.Column style={{ paddingLeft: '4em', paddingRight: '0em' }}>\n                      <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                        This chart shows the percentage of cases and percentage of the population by age for <b>{countyName}</b>. The chart excludes data from {datades_cases[stateFips + countyFips]['age4catPmiss'].toFixed(2)}% of confirmed cases who were missing information on age.\n                    </small>\n                    </Grid.Column>\n                    <Grid.Column style={{ paddingLeft: '4em', paddingRight: '0em' }}>\n                      <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                        This chart shows the percentage of cases and percentage of the population by sex for <b>{countyName}</b>. The chart excludes data from {datades_cases[stateFips + countyFips]['femalePmiss'].toFixed(2)}% of confirmed cases who were missing information on sex.\n                    </small>\n                    </Grid.Column>\n                    <Grid.Column style={{ paddingLeft: '4em', paddingRight: '0em' }}>\n                      <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                        This chart shows the percentage of cases and percentage of the population by race and ethnicity for <b>{countyName}</b>, where NH represents non-Hispanic. The chart excludes data from {datades_cases[stateFips + countyFips]['race_3Pmiss'].toFixed(2)}% of confirmed cases who were missing information on race/ethnicity.                    </small>\n                    </Grid.Column>\n                  </Grid.Row>}\n              </Grid>\n\n              <Divider horizontal style={{ fontWeight: 600, color: '#232423', fontSize: '16pt', paddingTop: '1em', paddingBottom: \"0em\" }}>Percentage of Deaths by Demographic Group in {countyName}</Divider>\n              <Grid style={{ width: \"1260px\" }}>\n                {!(datades_deaths[stateFips + countyFips]) ? <Header as='h2' style={{ fontWeight: 400, paddingTop: '0.5em' }}>\n                  <Header.Content>\n                    <Header.Subheader style={{ fontWeight: 300, fontSize: '16pt' }}>\n                      Rates broken down by age, sex, and race are not shown for {countyName} because there are fewer than 50 confirmed COVID-19 deaths with complete information.\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n                  :\n                  datades_deaths[stateFips + countyFips]['NObs'] < 50 && datades_deaths[stateFips + countyFips]['outcome'] === 'COVID Death' ?\n                    <Header as='h2' style={{ fontWeight: 400, paddingTop: '0.5em' }}>\n                      <Header.Content>\n                        <Header.Subheader style={{ fontWeight: 300, fontSize: '16pt' }}>\n                          Rates broken down by age, sex, and race are not shown for {countyName} because there are fewer than 50 confirmed COVID-19 deaths with complete information.\n                    </Header.Subheader>\n                      </Header.Content>\n                    </Header>\n                    :\n                    <Grid.Row columns={3} style={{ paddingTop: 0 }}>\n                      <Grid.Column>\n                        <BarChart\n                          cate={\"Deaths\"}\n                          var_num={4}\n                          title=\"Age Group\"\n                          keyv={[\"< 20\", \"20-44\", \"45-64\", \"65+\"]}\n                          var={[\"019ageC_P\", \"2044ageC_P\", \"4564ageC_P\", \"65ageC_P\"]}\n                          var1={[\"019ageP\", \"2044ageP\", \"4564ageP\", \"65ageP\"]}\n                          width={400}\n                          stateFips={stateFips}\n                          countyFips={countyFips}\n                          data={data_deaths}\n                          co='3' />\n                      </Grid.Column>\n                      <Grid.Column>\n                        <BarChart\n                          cate={\"Deaths\"}\n                          var_num={2}\n                          title=\"Sex\"\n                          keyv={[\"Female\", \"Male\"]}\n                          var={[\"femaleC_P\", \"maleC_P\"]}\n                          var1={[\"femaleP\", \"maleP\"]}\n                          width={400}\n                          pad={80}\n                          stateFips={stateFips}\n                          countyFips={countyFips}\n                          data={data_deaths}\n                          co='3' />\n                      </Grid.Column>\n                      <Grid.Column>\n                        <BarChart\n                          cate={\"Deaths\"}\n                          var_num={4}\n                          title=\"Race-Ethnicity\"\n                          keyv={[\"NH Other\", \"Hispanic\", \"NH Black\", \"NH White\"]}\n                          var={[\"otherNHC_P\", \"hispanicC_P\", \"blackC_P\", \"whiteC_P\"]}\n                          var1={[\"otherNHP\", \"hispanicP\", \"blackP\", \"whiteP\"]}\n                          width={400}\n                          stateFips={stateFips}\n                          countyFips={countyFips}\n                          data={data_deaths}\n                          co='3' />\n                      </Grid.Column>\n                    </Grid.Row>}\n                {!(datades_deaths[stateFips + countyFips]) ? ' ' :\n\n\n                  datades_deaths[stateFips + countyFips]['NObs'] < 50 && datades_deaths[stateFips + countyFips]['outcome'] === 'COVID Death' ? ' ' :\n                    <Grid.Row columns={3} style={{ padding: 0 }}>\n                      <Grid.Column style={{ paddingLeft: '4em', paddingRight: '0em' }}>\n                        <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                          This chart shows the percentage of deaths and percentage of the population by age group for <b>{countyName}</b>. The chart excludes data from {datades_deaths[stateFips + countyFips]['age4catPmiss'].toFixed(2)}% of deaths who were missing information on age.\n                    </small>\n                      </Grid.Column>\n                      <Grid.Column style={{ paddingLeft: '4em', paddingRight: '0em' }}>\n                        <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                          This chart shows the percentage of deaths and percentage of the population by sex for <b>{countyName}</b>. The chart excludes data from {datades_deaths[stateFips + countyFips]['femalePmiss'].toFixed(2)}% of deaths who were missing information on sex.\n                    </small>\n                      </Grid.Column>\n                      <Grid.Column style={{ paddingLeft: '4em', paddingRight: '0em' }}>\n                        <small style={{ fontWeight: 300, fontSize: 18, color: 'black' }} align=\"justify\">\n                          This chart shows the percentage of deaths and percentage of the population by race and ethnicity for <b>{countyName}</b>, where NH represents non-Hispanic. The chart excludes data from {datades_deaths[stateFips + countyFips]['race_3Pmiss'].toFixed(2)}% of deaths who were missing information on race/ethnicity.                    </small>\n                      </Grid.Column>\n                    </Grid.Row>}\n              </Grid>\n              <Divider horizontal style={{ fontWeight: 600, color: '#232423', fontSize: '16pt', paddingTop: '1em' }}>General characteristics of {countyName} residents</Divider>\n              <Header as='h2' style={{ fontWeight: 400 }}>\n                <Header.Content>\n                  <Header.Subheader style={{ fontWeight: 300, fontSize: '16pt', color: 'black' }}>\n                    Social, economic, health and environmental factors impact an individual’s risk of infection and COVID-19 severity.\n                    Counties with large groups of vulnerable people may be disproportionately impacted by COVID-19. The table below characterizes the overall population characteristics of residents of <b>{countyName}</b>, Georgia, and the United States.\n                    </Header.Subheader>\n                </Header.Content>\n              </Header>\n              <small style={{ fontWeight: 300, color: 'black' }}>\n                <div>Note: These are not characteristics specific to COVID-19.</div>\n              </small>\n              <Table striped compact basic='very'>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Characteristic</Table.HeaderCell>\n                    <Table.HeaderCell textAlign='center'>{countyName}</Table.HeaderCell>\n                    <Table.HeaderCell textAlign='center'>{stateName}</Table.HeaderCell>\n                    <Table.HeaderCell textAlign='center'>United States</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                {/* <Table.Row key={k}>\n                            <Table.Cell>{varMap[k] ? varMap[k].name : k}</Table.Cell>\n                            <Table.Cell>{isNaN(v) ? v : (Math.round(v * 100) / 100)}</Table.Cell>\n                            <Table.Cell>{isNaN(data[stateFips][k]) ? data[stateFips][k] : (Math.round(data[stateFips][k] * 100) / 100)}</Table.Cell>\n                            <Table.Cell>{isNaN(data['_nation'][k]) ? data['_nation'][k] : (Math.round(data['_nation'][k] * 100) / 100)}</Table.Cell>\n                          </Table.Row> */}\n                  {_.map(data[stateFips + countyFips],\n                    (v, k) => {\n                      var rmList = [\"cases\", \"deaths\", \"dailycases\", \"dailydeaths\", \"mean7daycases\", \"mean7daydeaths\", \"covidmortality\"\n                        , \"caserate\", \"covidmortality7day\", \"caserate7day\", \"_013_Urbanization_Code\"];\n                        var spList = [\"RPL_THEME1\", \"RPL_THEME2\", \"RPL_THEME3\", \"RPL_THEME4\", \"RPL_THEME5\", \"RPL_THEME6\", \"RPL_THEME7\"];\n                      if (!rmList.includes(k)) {\n                        if(!spList.includes(k)) {\n                          return (\n                            <Table.Row key={k}>\n                              <Table.Cell>{varMap[k] ? varMap[k].name : k}</Table.Cell>\n                              <Table.Cell textAlign='center'>{isNaN(v) ? v : (Math.round(v * 100) / 100)}</Table.Cell>\n                              <Table.Cell textAlign='center'>{isNaN(data[stateFips][k]) ? data[stateFips][k] : (Math.round(data[stateFips][k] * 100) / 100)}</Table.Cell>\n                              <Table.Cell textAlign='center'>{isNaN(data['_nation'][k]) ? data['_nation'][k] : (Math.round(data['_nation'][k] * 100) / 100)}</Table.Cell>\n                            </Table.Row>\n                          )\n                        }\n                        else{\n                          return (\n                            <Table.Row key={k}>\n                              <Table.Cell><p>{varMap[k] ? varMap[k].name : k}\n                              <br></br>(range: 0-1; 1 indicates highest vulnerability)</p></Table.Cell>\n                              <Table.Cell textAlign='center'>{isNaN(v) ? v : (Math.round(v * 100) / 100)}</Table.Cell>\n                              <Table.Cell textAlign='center'>{isNaN(data[stateFips][k]) ? data[stateFips][k] : (Math.round(data[stateFips][k] * 100) / 100)}</Table.Cell>\n                              <Table.Cell textAlign='center'>{isNaN(data['_nation'][k]) ? data['_nation'][k] : (Math.round(data['_nation'][k] * 100) / 100)}</Table.Cell>\n                            </Table.Row>\n                          )\n                        }\n                        \n                      }\n                    })}\n                </Table.Body>\n              </Table>\n            </div>\n          }\n          {/* <Divider horizontal style={{ fontWeight: 300, color: '#b1b3b3', fontSize: '1.2em', paddingTop: '1em' }}></Divider> */}\n          <small>\n            <div style={{ paddingTop: '1em', paddingBottom: '1em' }}><a href=\"/Georgia/data-sources\">Data sources</a></div>\n          </small>\n        </Container>\n        <ReactTooltip>{tooltipContent}</ReactTooltip>\n\n      </div>\n    );\n  } else {\n    return <Loader active inline='centered' />\n  }\n\n\n\n}","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, List, Divider, Image, Header, Segment } from 'semantic-ui-react'\n\nexport default function AboutUs(props){\n\n  return (\n    <div>\n      <AppBar menu='aboutUs'/>\n      <Container style={{marginTop: '8em'}}>\n        <Header as='h1' style={{fontWeight: 400}}>\n          <Header.Content>\n            Contact Us\n            <Header.Subheader style={{fontWeight: 400}}>\n              <br></br>\n  We strive to make this a user-friendly resource for policy makers, public health actors, the public, researchers, and the media.\n  <br></br>\n  Please share your feedback by mailing us at: covid19dashboard@emory.edu\n</Header.Subheader>\n          </Header.Content>\n        </Header>\n      </Container>\n    </div>);\n}\n","import React from 'react'\nimport AppBar from './AppBar';\nimport Notes from './Notes';\nimport { Container, Grid, List, Divider, Image, Header, Table } from 'semantic-ui-react'\n\nexport default function DataSources(props){\n\n  return (\n    <div>\n      <AppBar menu='dataSources'/>\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n        <Header as='h1' style={{paddingTop: 16, fontWeight: 400, fontSize: \"24pt\"}}>\n\n          <Header.Content>\n            Data Sources\n          </Header.Content>\n        </Header>\n        <Table basic='very' style={{fontWeight: 400, fontSize: \"14pt\"}}>\n          <Table.Header>\n          <Table.Row>\n              <Table.HeaderCell colSpan='2' width={15}>Individual-level data (presented as aggregated summaries)</Table.HeaderCell>\n            </Table.Row>\n            <Table.Row>\n              <Table.HeaderCell width={3}>Measure</Table.HeaderCell>\n              <Table.HeaderCell width={5}>Data Source</Table.HeaderCell>\n            </Table.Row>\n            \n            </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Covid-19 case and death data</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> The Covid-19 outcome data for this dashboard were supplied by the Georgia Department of Public Health. The contents herein do not necessarily represent the official views of, nor an endorsement by, the Georgia Department of Public Health\n               </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n        <Table basic='very' style={{fontWeight: 400, fontSize: \"14pt\"}}>\n          <Table.Header>\n          <Table.Row>\n              <Table.HeaderCell colSpan='2' width={15}>County level data</Table.HeaderCell>\n            </Table.Row>\n            <Table.Row>\n              <Table.HeaderCell width={3}>Measure</Table.HeaderCell>\n              <Table.HeaderCell width={5}>Data Source</Table.HeaderCell>\n            </Table.Row>\n            </Table.Header>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Socioeconomic Vulnerability\n              <br></br>\n            (range: 0-1; 1 indicates highest vulnerability)\n            </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a> </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Minority/Language Vulnerability\n              <br></br>\n            (range: 0-1; 1 indicates highest vulnerability)\n            </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>  <a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Housing/Transportaion & Household Composition & Disability Vulnerability\n              <br></br>\n            (range: 0-1; 1 indicates highest vulnerability)\n            </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>  <a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Epidemiological Factors\n              <br></br>\n            (range: 0-1; 1 indicates highest vulnerability)\n            </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>  <a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Healthcare System Factors\n              <br></br>\n            (range: 0-1; 1 indicates highest vulnerability)\n            </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>  <a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>High Risk Environments\n              <br></br>\n            (range: 0-1; 1 indicates highest vulnerability)\n            </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>  <a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Population Density Factors\n              <br></br>\n            (range: 0-1; 1 indicates highest vulnerability)\n            </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>  <a style ={{color: \"#397AB9\"}} href=\"https://precisionforcovid.org/ccvi\" target=\"_blank\" rel=\"noopener noreferrer\">Surgo Foundation </a></Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% American Natives </Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Minority</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% in Poverty</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Uninsured</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Diabetes</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>CDC's<a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/diabetes/data/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Division of Diabetes Translation </a> </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Obesity</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>CDC's <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/diabetes/data/index.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Division of Diabetes Translation </a></Table.Cell>\n              </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% over 65 y/o</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% in Group Quarters</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>% Male</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau  </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Population</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}> <a style ={{color: \"#397AB9\"}} href=\"https://www.cdc.gov/nchs/nvss/bridged_race.htm#Newest%20Data%20Release\" target=\"_blank\" rel=\"noopener noreferrer\">Bridged-race population estimates </a> by The National Center for Health Statistics </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Population Density</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell style={{lineHeight: \"16pt\"}}>Household Income</Table.Cell>\n              <Table.Cell style={{lineHeight: \"16pt\"}}><a style ={{color: \"#397AB9\"}} href=\"https://www.census.gov/acs/www/data/data-tables-and-tools/data-profiles/\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey </a> by the U.S. Census Bureau </Table.Cell>\n            </Table.Row>           \n          </Table.Body>\n        </Table>\n        \n       \n      </Container>\n    </div>);\n}\n","import React, { useEffect, useState, Component, createRef, useRef, useContext, useMemo, PureComponent} from 'react'\nimport { Container, Header, Grid, Loader, Divider, Button, Progress, Dropdown, Image, Rail, Sticky, Ref, Accordion, Menu, Message, Transition, List} from 'semantic-ui-react'\nimport AppBar from './AppBar';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { geoCentroid } from \"d3-geo\";\nimport Geography from './Geography';\nimport ComposableMap from './ComposableMap';\nimport { scaleQuantile } from \"d3-scale\";\nimport configs from \"./state_config.json\";\nimport demog_descriptives from \"./Pre-Processed Data/demogDescriptives.json\";\nimport PropTypes from \"prop-types\"\nimport { Waypoint } from 'react-waypoint'\nimport { MapContext } from \"./MapProvider\"\n// import useGeographies from \"./useGeographies\"\nimport {CHED_static, CHED_series} from \"../stitch/mongodb\";\nimport {useStitchAuth} from \"./StitchAuth\";\n\nimport {HEProvider, useHE} from './HEProvider';\n\nimport {getFeatures, prepareFeatures, isString } from \"../utils\"\nimport Notes from './Notes';\nimport _ from 'lodash';\nimport { VictoryChart, \n  VictoryContainer,\n  VictoryGroup, \n  VictoryBar, \n  VictoryTheme, \n  VictoryAxis, \n  VictoryLine,\n  VictoryLabel, \n  VictoryScatter,\n  VictoryTooltip,\n  VictoryVoronoiContainer\n} from 'victory';\nimport { render } from 'react-dom';\nimport {ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell,  PieChart, Pie, Sector, Label, Legend, ResponsiveContainer} from \"recharts\";\nimport {ArrowSvg} from 'react-simple-arrows';\nimport { CSSTransition } from 'react-transition-group';\n\nvar obj, stobj;\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\"\nconst stBoundUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3.0.0/states-10m.json\"\n\n\nexport function fetchGeographies(url) {\n  return fetch(url)\n    .then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText)\n      }\n      return res.json()\n    }).catch(error => {\n      console.log(\"There was a problem when fetching the data: \", error)\n    })\n}\n\nobj = fetchGeographies(geoUrl);\nstobj = fetchGeographies(stBoundUrl);\n// \n\nexport function useGeographies({ geography, stateBoundary, parseGeographies }) {\n  const { path } = useContext(MapContext)\n  const [geographies, setGeographies] = useState()\n\n  useEffect(() => {\n    if (typeof window === `undefined`) return\n\n    if (isString(geography)) {\n      if(stateBoundary === true){\n        stobj.then(geos => {\n          if (geos) setGeographies(getFeatures(geos, parseGeographies))\n        })\n      }else{\n        obj.then(geos => {\n          if (geos) setGeographies(getFeatures(geos, parseGeographies))\n        })\n      }\n    } else {\n      setGeographies(getFeatures(geography, stateBoundary, parseGeographies))\n    }\n  }, [geography, stateBoundary, parseGeographies])\n\n  const output = useMemo(() => {\n    return prepareFeatures(geographies, path)\n  }, [geographies, path])\n\n  return { geographies: output }\n}\n\nconst Geographies = ({\n  geography,\n  stateBoundary, \n  children,\n  parseGeographies,\n  className = \"\",\n  ...restProps\n}) => {\n  const { path, projection } = useContext(MapContext)\n  const { geographies } = useGeographies({ geography, stateBoundary, parseGeographies })\n\n  return (\n    <g className={`rsm-geographies ${className}`} {...restProps}>\n      {\n        geographies && geographies.length > 0 &&\n        children({ geographies, path, projection })\n      }\n    </g>\n  )\n}\n\nGeographies.propTypes = {\n  geography: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  stateBoundary: PropTypes.oneOfType([\n    PropTypes.bool\n  ]),\n  children: PropTypes.func,\n  parseGeographies: PropTypes.func,\n  className: PropTypes.string,\n}\n\nconst style = <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.min.css'/>\n\nconst Placeholder = () => <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n\nfunction goToAnchor(anchor) {\n  var loc = document.location.toString().split('#')[0];\n  document.location = loc + '#' + anchor;\n  return false;\n}\nconst contextRef = createRef()\nconst nameList = ['COVID-19 National Health Equity Report', 'Cases & Deaths in the U.S. Over Time', \n '50% of Cases Comes From These States', 'Cases & Deaths by race, age, and sex', 'COVID-19 Across U.S. Communities',\n 'COVID-19 by Community Vulnerability Index', 'COVID-19 by Percent in Poverty', 'COVID-19 by Metropolitan Status', \n 'COVID-19 by Region', 'COVID-19 by Percent African American', 'COVID-19 by Residential Segregation Index',\n \"COVID-19 by Underlying Comorbidity\", \"COVID-19 by Percent COPD\", 'COVID-19 by Percent CKD',\n 'COVID-19 by Percent Diabetes', 'COVID-19 by Percent Heart Disease', \"Obesity\", \"COVID-19 Vaccination Tracker\"];\nvar scrollCount = 0;\n\nfunction StickyExampleAdjacentContext(props) {\n    const contextRef = createRef();\n    const [sTate, setsTate] = useState({ activeItem: 'Interactive Map' })\n    const { activeItem } = sTate\n    useEffect(() => {\n        setsTate(nameList[scrollCount])\n    }, [scrollCount])\n    \n    return (\n\n        <div >\n          <Ref innerRef={contextRef}>\n            <Rail attached size='mini' >\n              <Sticky offset={180} position= \"fixed\" context={contextRef}>\n                <div style={{width:312, overflow: \"hidden\"}}>\n                  <div style= {{height:600, width: 320, overflowY: \"hidden\", overflowX:\"hidden\"}}> \n                    <div style={{height: \"130%\", width: 330}}>\n                      <Menu\n                          size='small'\n                          compact\n                          pointing secondary vertical>\n                          <Menu.Item as='a' href=\"#\" name={nameList[0]} active={props.activeCharacter == nameList[0] || activeItem === nameList[0]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>{nameList[0]}</Header></Menu.Item>\n                                \n                          <Menu.Item as='a' href=\"#tracker\" name={nameList[16]} active={props.activeCharacter == nameList[16] || activeItem === nameList[16]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'> COVID-19 Vaccination Tracker </Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#cases\" name={nameList[1]} active={props.activeCharacter == nameList[1] || activeItem === nameList[1]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>{nameList[1]}</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#half\" name={nameList[2]} active={props.activeCharacter == nameList[2] || activeItem === nameList[2]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>{nameList[2]}</Header></Menu.Item>\n                          \n                          <Menu.Item as='a' href=\"#who\" name={nameList[3]} active={props.activeCharacter == nameList[3] || activeItem === nameList[3]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>{nameList[3]}</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#commu\" name={nameList[4]} active={props.activeCharacter == nameList[4] || activeItem === nameList[4]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h4'>{nameList[4]}</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#ccvi\" name={nameList[5]} active={props.activeCharacter == nameList[5] || activeItem === nameList[5]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Community Vulnerability Index</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#poverty\" name={nameList[6]} active={props.activeCharacter == nameList[6] || activeItem === nameList[6]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Percent in Poverty</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#metro\" name={nameList[7]} active={props.activeCharacter == nameList[7] || activeItem === nameList[7]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Metropolitan Status</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#region\" name={nameList[8]} active={props.activeCharacter == nameList[8] || activeItem === nameList[8]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Region</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#black\" name={nameList[9]} active={props.activeCharacter == nameList[9] || activeItem === nameList[9]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Percent African American </Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#resseg\" name={nameList[10]} active={props.activeCharacter == nameList[10] || activeItem === nameList[10]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Residential Segregation Index</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#comorb\" name={nameList[11]} active={props.activeCharacter == nameList[11] || activeItem === nameList[11]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Underlying Comorbidity</Header></Menu.Item>\n                          \n                          {/* <Menu.Item as='a' href=\"#copd\" name={nameList[12]} active={props.activeCharacter == nameList[12] || activeItem === nameList[12]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Percent with COPD</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#ckd\" name={nameList[13]} active={props.activeCharacter == nameList[13] || activeItem === nameList[13]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Percent with CKD</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#diabetes\" name={nameList[14]} active={props.activeCharacter == nameList[14] || activeItem === nameList[14]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Percent with Diabetes</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#heart\" name={nameList[15]} active={props.activeCharacter == nameList[15] || activeItem === nameList[15]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Percent with Heart Disease</Header></Menu.Item>\n\n                          <Menu.Item as='a' href=\"#obesity\" name={nameList[16]} active={props.activeCharacter == nameList[16] || activeItem === nameList[16]}\n                                onClick={(e, { name }) => { setsTate({ activeItem: name }) }}><Header as='h5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by Percent with Obesity</Header></Menu.Item>\n                           */}\n                      </Menu>\n                    </div>\n                  </div>\n                </div>\n              </Sticky>\n            </Rail>\n          </Ref> \n        </div>\n    )\n  // }\n\n}\n\n\n\nconst casesColor = [\n  \"#72ABB1\",\n  \"#337fb5\"\n];\nconst mortalityColor = [\n  \"#0270A1\",\n  \"#024174\"\n];\nconst colorPalette = [\n  \"#e1dce2\",\n  \"#d3b6cd\",\n  \"#bf88b5\", \n  \"#af5194\", \n  \"#99528c\", \n  \"#633c70\", \n];\n\nconst colorPalett = [\n  \"#633c70\", \n  \"#99528c\", \n  \"#af5194\", \n  \"#bf88b5\", \n  \"#d3b6cd\",\n  \"#e1dce2\",\n  \n];\nconst pieChartRace = ['#007dba', '#a45791', '#e8ab3b', '#000000', '#b1b3b3'];\n\n\nfunction numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n\nconst monthNames = [\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\",\n  \"Jul.\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\"\n];\nconst fullMonthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\n//const nationColor = '#487f84';\n\n\nfunction ChartSection(props){\n  //const [activeItem, setActiveItem] = useState('All');\n  const [chartNo, setChartNo] = useState(-1);\n  const data = props.data;\n  const dailyCases = props.dailyCases;\n  const dailyDeaths = props.dailyDeaths;\n  const monthNames = props.monthNames;\n  const mean7dayCases = props.mean7dayCases;\n  const mortalityMean = props.mortalityMean;\n  const percentChangeCases = props.percentChangeCases;\n  const percentChangeMortality = props.percentChangeMortality;\n  //const chart = props.chart;\n  const [barName, setBarName] = useState('dailyCases');\n  const [lineName, setLineName] = useState('caseRateMean');\n  const [caseTicks, setCaseTicks] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [headerTime, setHeaderTime] = useState('');\n\nuseEffect(()=>{\n  if(chartNo < 3){\n    setBarName('dailyCases');\n    setLineName('caseRateMean');\n  } else {\n    setBarName('dailyMortality');\n    setLineName('mortalityMean');\n  }\n\n  if(chartNo===-1){\n    setCaseTicks([data[0].t,\n    data[30].t,\n    data[61].t,\n    data[91].t,\n    data[122].t,\n    data[153].t,\n    data[183].t,\n    data[214].t,\n    data[244].t,\n    data[275].t,\n    data[306].t,\n    data[334].t,\n    data[data.length-1].t]);\n  }else if(chartNo===0 || chartNo===3) {\n    setCaseTicks([data[0].t,\n    data[30].t,\n    data[61].t,\n    data[91].t,\n    data[122].t,\n    data[153].t,\n    data[183].t,\n    data[214].t,\n    data[244].t,\n    data[275].t,\n    data[306].t,\n    data[334].t,\n    data[data.length-1].t]);\n    setHeaderTime('');\n    if(chartNo===0){\n      setDisabled(true);\n      setTimeout(()=>setChartNo(chartNo+1), 12000); //10000\n    } else {\n      setTimeout(()=>setChartNo(chartNo+1), 10000);   //8000\n    }\n  } else if(chartNo===1 || chartNo===4){\n    setCaseTicks([data[214].t,\n    data[244].t,\n    data[275].t,\n    data[306].t,\n    data[334].t,\n    data[data.length-1].t]);\n    setHeaderTime('in Past 90 Days');\n    setTimeout(()=>setChartNo(chartNo+1), 7000);   //5000\n  } else if(chartNo===2 || chartNo===5){\n    setCaseTicks([\n      data[data.length-14].t,\n      data[data.length-7].t,\n      data[data.length-1].t]);\n    setHeaderTime('in Past 14 Days');\n    setTimeout(()=>setChartNo(chartNo+1), 7000);\n    if(chartNo===5){\n      setTimeout(()=>setDisabled(false), 7000);\n    }\n  }\n}, [chartNo]);\n\n  // console.log('chartNo', chartNo);\n\n  return(\n  <Grid.Row style={{paddingLeft: 20, paddingBottom: '0rem'}}>  \n  <Header as='h2' style={{paddingTop: 30, paddingLeft: 60, color: mortalityColor[1], textAlign:'center',fontSize:\"22pt\"}}>\n    <Header.Content>\n      How have {chartNo<3 ? 'cases' : 'deaths'} in the U.S. changed over time?\n    </Header.Content>\n  </Header>\n  <Grid.Row column = {1} style={{textAlign:'center', width: 800, paddingTop: '2rem', paddingLeft: '10rem'}}>\n    <Header.Content x={0} y={20} style={{ fontSize: '18pt', marginLeft: 0, paddingBottom: '1rem', fontWeight: 600}}>Average Daily COVID-19 {chartNo<3 ? 'Cases' : 'Deaths'} {headerTime}</Header.Content>\n  </ Grid.Row>\n  {/* <Grid.Row style={{paddingTop: '1rem', paddingLeft: '23rem'}}>\n    <Menu pointing secondary widths={3} style={{width: '16rem'}}> \n    <Menu.Item name='All' active={activeItem==='All'} onClick={()=>setActiveItem('All')}/>\n    <Menu.Item name='90 Days' active={activeItem==='90 Days'} onClick={()=>setActiveItem('90 Days')}/>\n    <Menu.Item name='14 Days' active={activeItem==='14 Days'} onClick={()=>setActiveItem('14 Days')}/>\n    </ Menu>\n    </Grid.Row> */}\n\n    {(()=>{\n    if (chartNo===-1){\n      return (<Grid.Column>\n              <CaseChartStatic data={data} barColor={props.barColor} lineColor={props.lineColor} \n              tick={caseTicks} tickFormatter={props.tickFormatter} />\n              </Grid.Column>)\n    }else if (chartNo===0){\n      return (<Grid.Column>\n              <CaseChartAll data={data} barColor={props.barColor} lineColor={props.lineColor}\n              tick={caseTicks} tickFormatter={props.tickFormatter} />\n              </Grid.Column>)\n    } else if(chartNo===3){\n      return <DeathChartAll data={data} barColor={props.barColor} lineColor={props.lineColor} \n              tick={caseTicks} tickFormatter={props.tickFormatter} />\n    } else if(chartNo===1 || chartNo===4){\n      return <CaseChart90 data={data} barColor={props.barColor} lineColor={props.lineColor} \n              tick={caseTicks} tickFormatter={props.tickFormatter}\n              barName={barName} lineName={lineName}/>\n    } else {\n      return <CaseChart14 data={data} barColor={props.barColor} lineColor={props.lineColor} \n              tick={caseTicks} tickFormatter={props.tickFormatter}\n              barName={barName} lineName={lineName}/>\n    }\n  })()}\n    \n    <Button style={{marginLeft: 780}} content='Play' icon='play' disabled={disabled} onClick={() => {setChartNo(0);}}/>\n   \n    {(()=>{\n      if (chartNo<3){\n        return (<Accordion style = {{paddingLeft: 18}} defaultActiveIndex={1} panels={[\n        {\n            key: 'acquire-dog',\n            title: {\n                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                icon: 'dropdown',\n            },\n            content: {\n                content: (\n                  <Header as='h2' style={{fontWeight: 400, paddingTop: 0, paddingBottom: 20}}>\n                  <Header.Content  style={{fontSize: \"14pt\"}}>\n                    <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\", paddingLeft: '2rem', paddingRight:65}}>\n                      This figure shows the trend of daily COVID-19 cases in the U.S.. The bar height reflects the number of \n                      new cases per day and the line depicts the 7-day moving average of daily cases in the U.S.. There were {numberWithCommas(dailyCases)} new COVID-19 cases reported on {monthNames[new Date(data[data.length - 1].t*1000).getMonth()] + \" \" + new Date(data[data.length - 1].t*1000).getDate() + \", \" + new Date(data[data.length - 1].t*1000).getFullYear()}, with \n                      an average of {numberWithCommas(mean7dayCases)} new cases per day reported over the past 7 days. \n                      We see a {percentChangeCases.includes(\"-\")? \"decrease of approximately \" + percentChangeCases.substring(1): \"increase of approximately \" + percentChangeCases} in \n                      the average new cases over the past 14-day period. \n                      <br/>\n                      <br/>\n                      *14-day period includes {monthNames[new Date(data[data.length - 15].t*1000).getMonth()] + \" \" + new Date(data[data.length - 15].t*1000).getDate() + \", \" + new Date(data[data.length - 15].t*1000).getFullYear()} to {monthNames[new Date(data[data.length - 1].t*1000).getMonth()] + \" \" + new Date(data[data.length - 1].t*1000).getDate() + \", \" + new Date(data[data.length - 1].t*1000).getFullYear()}.\n\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              ),\n            },\n        }\n    ]\n          } />)}\n      else{\n        return (<Accordion style = {{paddingLeft: 20}} defaultActiveIndex={1} panels={[\n        {\n            key: 'acquire-dog',\n            title: {\n                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                icon: 'dropdown',\n            },\n            content: {\n                content: (\n                  <Header as='h2' style={{fontWeight: 400, paddingTop: 0, paddingBottom: 20}}>\n                  <Header.Content  style={{fontSize: \"14pt\"}}>\n                    <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\", paddingLeft: '2rem', paddingRight:65}}>\n                          This figure shows the trend of daily COVID-19 deaths in the U.S.. The bar height reflects the number of new deaths \n                          per day and the line depicts the 7-day moving average of daily deaths in the U.S.. There were {dailyDeaths} new deaths \n                          associated with COVID-19 reported on {monthNames[new Date(data[data.length - 1].t*1000).getMonth()] + \" \" + new Date(data[data.length - 1].t*1000).getDate() + \", \" + new Date(data[data.length - 1].t*1000).getFullYear()}, with \n                          an average of {mortalityMean} new deaths per day reported over the past 7 days. \n                          We see {percentChangeMortality.includes(\"-\")? \"a decrease of approximately \" + percentChangeMortality.substring(1): \"an increase of approximately \" + percentChangeMortality} in the average new deaths over the past 14-day period. \n                          <br/>\n                          <br/>\n                          *14-day period includes {monthNames[new Date(data[data.length - 15].t*1000).getMonth()] + \" \" + new Date(data[data.length - 15].t*1000).getDate() + \", \" + new Date(data[data.length - 15].t*1000).getFullYear()} to {monthNames[new Date(data[data.length - 1].t*1000).getMonth()] + \" \" + new Date(data[data.length - 1].t*1000).getDate() + \", \" + new Date(data[data.length - 1].t*1000).getFullYear()}.\n                        \n                        </Header.Subheader>\n                      </Header.Content>\n                    </Header>\n                ),\n              },\n          }\n      ]\n\n      } />)}\n    }\n    )()\n    }\n\n  </ Grid.Row>\n  )\n}\n\nfunction CaseChartStatic(props){\n  const [highlightIndex, setHighlightIndex] = useState([-1, 9, 71, 109, 260]);\n  const data = props.data;\n  const barColor = props.barColor;\n  const lineColor = props.lineColor;\n  const ticks = props.tick;\n  const tickFormatter = props.tickFormatter;\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n  \n  return(\n    <Grid.Column style={{paddingTop:'1rem', paddingLeft: 35, width: 850, height: 450, position:'relative'}}>\n\n      <ComposedChart width={850} height={420} data={data}\n        margin={{top: 30, right: 60, bottom: 20, left: 30}}>\n      <CartesianGrid stroke='#f5f5f5'/>\n      <XAxis dataKey=\"t\" ticks={ticks} domain={[1585713600, 1610859600]} tick={{fontSize: 16}} tickFormatter={tickFormatter}/>\n      <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n      <Bar name=\"New cases\" dataKey='dailyCases' barSize={10}\n            isAnimationActive={false} \n            animationEasing='ease'\n            animationDuration={3500} \n             barSize={2} fill={barColor} >\n            {\n              data.map((entry, index) => (\n                <Cell id={index} key={`cell-${index}`} fill={highlightIndex.indexOf(index)>0 ? \"red\" : barColor}/>\n              ))\n            }\n      </ Bar>\n      <Line name=\"7-day average\" id='all-line' type='monotone' dataKey='caseRateMean' dot={false} \n            isAnimationActive={false} \n            stroke={lineColor}\n            strokeWidth=\"2\" />\n      <Tooltip labelFormatter={tickFormatter} formatter={(value) => numberWithCommas(value.toFixed(0))} wrapperStyle={{zIndex: 10}}/>\n      </ComposedChart>\n      {/* <Button content='Play' icon='play' floated=\"right\" disabled={disabled} onClick={() => {setPlayCount(playCount+1);}}/> */}\n      <Transition visible={true} animation='scale' duration={200}>\n      <Message compact id='Jan' style={{ width: '18rem', top:'-28rem', left:'8rem', padding: '1rem', fontSize: '0.8rem'}}> Jan. 21: <br /> 1st case in the U.S. confirmed in Washington</Message>\n      </Transition>\n      <Transition visible={true} animation='scale' duration={200}>\n      <Message compact id='message2' style={{ width: '10rem', top:'-27rem', left:'7.5rem', padding: '1rem', fontSize: '0.8rem'}}> Apr. 10: <br /> First wave peaked at 31,709 new cases <br />(7-day avg.) </Message>\n      {/* <Arrow1/> */}\n      </Transition> \n      {/* <ArrowSvg start={{ x: 200, y: 340 }} end={{ x: 200, y: 430 }}/> */}\n      <Transition visible={true} animation='scale' duration={200}>\n      <Message compact style={{ width: '8rem', top:'-27rem', left:'11.5rem', padding: '1rem', fontSize: '0.8rem'}}> June. 11: <br /> 2M confirmed cases in the U.S. </Message>\n      </Transition> \n      <Transition visible={true} animation='scale' duration={200}>\n      <Message compact style={{ width: '10rem', top:'-37rem', left:'20.5rem', padding: '1rem', fontSize: '0.8rem'}}> July. 19: <br /> Second wave peaked at 66,692 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      <Transition visible={true} animation='scale' duration={200}>\n      <Message compact style={{ width: '10rem', top:'-53rem', left:'28rem', padding: '1rem', fontSize: '0.8rem'}}> Dec. 17: <br /> Third wave peaked at 222,822 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      <ArrowSvg start={{ x: 185, y: 240 }} end={{ x: 145, y: 336 }} strokeWidth='0.8'/>\n      <ArrowSvg start={{ x: 240, y: 320 }} end={{ x: 252, y: 350 }} strokeWidth='0.8'/>\n      <ArrowSvg start={{ x: 360, y: 280 }} end={{ x: 335, y: 300 }} strokeWidth='0.8'/>\n      <ArrowSvg start={{ x: 570, y: 110 }} end={{ x: 592, y: 125 }} strokeWidth='0.8'/>\n      </Grid.Column>\n  );\n}\n\n\nfunction CaseChartAll(props){\n  const [playCount, setPlayCount] = useState(0);\n  const [visible1, setVisible1] = useState(false);\n  const [visible2, setVisible2] = useState(false);\n  const [visible3, setVisible3] = useState(false);\n  const [visible4, setVisible4] = useState(false);\n  const [visible5, setVisible5] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [highlightIndex, setHighlightIndex] = useState([-1]);\n  const data = props.data;\n  const barColor = props.barColor;\n  const lineColor = props.lineColor;\n  const ticks = props.tick;\n  const tickFormatter = props.tickFormatter;\n\n  // const ytickFormatter = props.ytickFormatter;\n  const [animationBool, setAnimationBool] = useState(true);\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n\n  useEffect(() =>{\n    setHighlightIndex([-1]);\n    \n  },[props.history])\n\n  var wait=0;\n\n  // console.log(\"data[0].t\", data[0].t);\n  // console.log(\"data[data.length-1].t\", data[data.length-1].t);\n  \n  return(\n    <Grid.Column style={{paddingTop:'1rem', paddingLeft: 35, width: 850, height: 450, position:'relative'}}>\n\n      <ComposedChart width={850} height={420} data={data}\n        margin={{top: 30, right: 60, bottom: 20, left: 30}}>\n      <CartesianGrid stroke='#f5f5f5'/>\n      <XAxis dataKey=\"t\" ticks={ticks} domain={[1585713600, 1610859600]} tick={{fontSize: 16}} tickFormatter={tickFormatter}/>\n      <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n      <Bar name=\"New cases\" dataKey='dailyCases' barSize={10}\n            isAnimationActive={animationBool} \n            animationEasing='ease'\n            onAnimationStart={() => {setDisabled(true); setVisible1(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); \n                                    setHighlightIndex([-1]);\n            }} \n            onAnimationEnd={()=> {\n              setAnimationBool(false);\n              setTimeout(()=>setVisible1(true), wait); \n              setTimeout(()=>setVisible2(true), wait+1000); \n              setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 9]), wait+1000);\n              setTimeout(()=>setVisible3(true), wait+2000);\n              setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 71]), wait+2000);  \n              setTimeout(()=>setVisible4(true), wait+3000); \n              setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 109]), wait+3000);  \n              setTimeout(()=>setVisible5(true), wait+4000);\n              setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 260]), wait+4000);  \n              setTimeout(()=>setDisabled(false),wait+5000);\n              // setTimeout(()=>setHighlightIndex(-1), wait+5000);\n            }}\n            animationDuration={3500} \n             barSize={2} fill={barColor} >\n            {\n              data.map((entry, index) => (\n                <Cell id={index} key={`cell-${index}`} fill={highlightIndex.indexOf(index)>0 ? \"red\" : barColor}/>\n              ))\n              \n              // fill={index === highlightIndex ? \"red\" : barColor}\n            }\n      </ Bar>\n      <Line name=\"7-day average\" id='all-line' type='monotone' dataKey='caseRateMean' dot={false} \n            isAnimationActive={animationBool} \n            animationDuration={3500} \n            stroke={lineColor}\n            strokeWidth=\"2\" />\n      <Tooltip labelFormatter={tickFormatter} formatter={(value) => numberWithCommas(value.toFixed(0))} wrapperStyle={{zIndex: 10}}/>\n      </ComposedChart>\n      {/* <Button content='Play' icon='play' floated=\"right\" disabled={disabled} onClick={() => {setPlayCount(playCount+1);}}/> */}\n      <Transition visible={visible1} animation='scale' duration={200}>\n      <Message compact id='Jan' style={{ width: '18rem', top:'-28rem', left:'8rem', padding: '1rem', fontSize: '0.8rem'}}> Jan. 21: <br /> 1st case in the U.S. confirmed in Washington</Message>\n      </Transition>\n      <Transition visible={visible2} animation='scale' duration={200}>\n      <Message compact id='message2' style={{ width: '10rem', top:'-27rem', left:'7.5rem', padding: '1rem', fontSize: '0.8rem'}}> Apr. 10: <br /> First wave peaked at 31,709 new cases <br />(7-day avg.) </Message>\n      {/* <Arrow1/> */}\n      </Transition> \n      {/* <ArrowSvg start={{ x: 200, y: 340 }} end={{ x: 200, y: 430 }}/> */}\n      <Transition visible={visible3} animation='scale' duration={200}>\n      <Message compact style={{ width: '8rem', top:'-27rem', left:'11.5rem', padding: '1rem', fontSize: '0.8rem'}}> June. 11: <br /> 2M confirmed cases in the U.S. </Message>\n      </Transition> \n      <Transition visible={visible4} animation='scale' duration={200}>\n      <Message compact style={{ width: '10rem', top:'-37rem', left:'21rem', padding: '1rem', fontSize: '0.8rem'}}> July. 19: <br /> Second wave peaked at 66,692 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      <Transition visible={visible5} animation='scale' duration={200}>\n      <Message compact style={{ width: '10rem', top:'-53rem', left:'28rem', padding: '1rem', fontSize: '0.8rem'}}> Dec. 17: <br /> Third wave peaked at 222,822 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      \n      {visible2 ? <ArrowSvg start={{ x: 185, y: 240 }} end={{ x: 145, y: 336 }} strokeWidth='0.8'/> : null}\n      {visible3 ? <ArrowSvg start={{ x: 240, y: 320 }} end={{ x: 252, y: 350 }} strokeWidth='0.8'/> : null}\n      {visible4 ? <ArrowSvg start={{ x: 360, y: 280 }} end={{ x: 335, y: 300 }} strokeWidth='0.8'/> : null}\n      {visible5 ? <ArrowSvg start={{ x: 570, y: 110 }} end={{ x: 592, y: 125 }} strokeWidth='0.8'/> : null}\n      </Grid.Column>\n  );\n}\n\n// function CaseChartAll1(props){\n//   const [playCount, setPlayCount] = useState(0);\n//   const [visible1, setVisible1] = useState(false);\n//   const [visible2, setVisible2] = useState(false);\n//   const [visible3, setVisible3] = useState(false);\n//   const [visible4, setVisible4] = useState(false);\n//   const [visible5, setVisible5] = useState(false);\n//   const [disabled, setDisabled] = useState(true);\n//   const [highlightIndex, setHighlightIndex] = useState([-1]);\n//   const data = props.data;\n//   const barColor = props.barColor;\n//   const lineColor = props.lineColor;\n//   const ticks = props.tick;\n//   const tickFormatter = props.tickFormatter;\n\n//   // const ytickFormatter = props.ytickFormatter;\n//   const [animationBool, setAnimationBool] = useState(true);\n\n//   const caseYTickFmt = (y) => {\n//     return y<1000?y:(y/1000+'k');\n//   };\n\n//   useEffect(() =>{\n//     setAnimationBool(playCount>-1);\n//   },[playCount])\n\n//   useEffect(() =>{\n//     setHighlightIndex([-1]);\n    \n//   },[props.history])\n\n//   var wait=0;\n\n//   console.log(\"data[0].t\", data[0].t);\n//   console.log(\"data[data.length-1].t\", data[data.length-1].t);\n  \n//   return(\n//     <Grid.Column style={{paddingTop:'1rem', paddingLeft: '1rem', width: 850, height: 500, position:'relative'}}>\n//         {/* <CSSTransition\n//                   in={true}\n//                   timeout={400}\n//                   classNames=\"list-transition\"\n//                   unmountOnExit\n//                   appear\n//                   // onEntered={this.listSwitch}\n//                   // onExit={this.listSwitch}\n//                 > */}\n//       <ComposedChart width={830} height={420} data={data}\n//         margin={{top: 30, right: 60, bottom: 20, left: 30}}>\n//       <CartesianGrid stroke='#f5f5f5'/>\n//       <XAxis dataKey=\"t\" ticks={ticks} domain={[1585713600, 1610859600]} tick={{fontSize: 16}} tickFormatter={tickFormatter}/>\n//       <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n//       <Bar name=\"New cases\" dataKey='dailyCases' barSize={10}\n//             isAnimationActive={false} //animationBool\n//             animationEasing='ease'\n//             // onAnimationStart={() => {setDisabled(true); setVisible1(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); \n//             //                         setHighlightIndex([-1]);\n//             // }} \n//             // onAnimationEnd={()=> {\n//             //   setAnimationBool(false);\n//             //   setTimeout(()=>setVisible1(true), wait); \n//             //   setTimeout(()=>setVisible2(true), wait+1000); \n//             //   setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 9]), wait+1000);\n//             //   setTimeout(()=>setVisible3(true), wait+2000);\n//             //   setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 71]), wait+2000);  \n//             //   setTimeout(()=>setVisible4(true), wait+3000); \n//             //   setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 109]), wait+3000);  \n//             //   setTimeout(()=>setVisible5(true), wait+4000);\n//             //   setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 260]), wait+4000);  \n//             //   setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 1000]), wait+5000);  \n//             //   setTimeout(()=>setDisabled(false),wait+5000);\n//             //   // setTimeout(()=>setHighlightIndex(-1), wait+5000);\n//             // }}\n//             animationDuration={3500} \n//             barSize={2} fill='grey' > \n//              {/* barColor */}\n//             {\n//               data.map((entry, index) => (\n//                 <Cell id={index} key={`cell-${index}`} fill={highlightIndex.indexOf(index)>0 ? \"red\" : (index>highlightIndex[highlightIndex.length-1] ? \"grey\" : barColor)}/>\n//               ))\n              \n//               // fill={index === highlightIndex ? \"red\" : barColor}\n//             }\n//       </ Bar>\n//       <Line name=\"7-day average\" id='all-line' type='monotone' dataKey='caseRateMean' dot={false} \n//             isAnimationActive={animationBool} animationDuration={5500} \n//             onAnimationStart={() => {setDisabled(true); setVisible1(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); \n//               setHighlightIndex([-1]);\n//             // }} \n            \n//             // onAnimationEnd={()=> {\n              \n//               setTimeout(()=>setVisible1(true), wait); \n//               setTimeout(()=>setVisible2(true), wait+1000); \n//               setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 9]), wait+1000);\n//               setTimeout(()=>setVisible3(true), wait+2000);\n//               setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 71]), wait+2000);  \n//               setTimeout(()=>setVisible4(true), wait+3000); \n//               setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 109]), wait+3000);  \n//               setTimeout(()=>setVisible5(true), wait+4000);\n//               setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 260]), wait+4000);  \n//               setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 1000]), wait+5000);  \n//               }} \n            \n//             onAnimationEnd={()=> {\n//               setAnimationBool(false);\n//               setTimeout(()=>setDisabled(false),wait+500);\n//               // setTimeout(()=>setHighlightIndex(-1), wait+5000);\n//             }}\n//             stroke={lineColor}\n//             strokeWidth=\"2\" />\n//       <Tooltip labelFormatter={tickFormatter} formatter={(value) => numberWithCommas(value.toFixed(0))} wrapperStyle={{zIndex: 10}}/>\n//       </ComposedChart>\n//       {/* </CSSTransition> */}\n//       <Button content='Play' icon='play' floated=\"right\" disabled={disabled} onClick={() => {setPlayCount(playCount+1);}}/>\n//       <Transition visible={visible1} animation='scale' duration={200}>\n//       <Message compact id='Jan' style={{ width: '18rem', top:'-28rem', left:'8rem', padding: '1rem', fontSize: '0.8rem'}}> Jan. 21: <br /> 1st case in the U.S. confirmed in Washington</Message>\n//       </Transition>\n//       <Transition visible={visible2} animation='scale' duration={200}>\n//       <Message compact id='message2' style={{ width: '10rem', top:'-26rem', left:'8rem', padding: '1rem', fontSize: '0.8rem'}}> Apr. 10: <br /> First wave peaked at 31,709 new cases <br />(7-day avg.) </Message>\n//       {/* <Arrow1/> */}\n//       </Transition> \n//       {/* <ArrowSvg start={{ x: 200, y: 340 }} end={{ x: 200, y: 430 }}/> */}\n//       <Transition visible={visible3} animation='scale' duration={200}>\n//       <Message compact style={{ width: '8rem', top:'-26rem', left:'13.5rem', padding: '1rem', fontSize: '0.8rem'}}> June. 11: <br /> 2M confirmed cases in the U.S. </Message>\n//       </Transition> \n//       <Transition visible={visible4} animation='scale' duration={200}>\n//       <Message compact style={{ width: '10rem', top:'-36rem', left:'23rem', padding: '1rem', fontSize: '0.8rem'}}> July. 19: <br /> Second wave peaked at 66,692 new cases <br />(7-day avg.) </Message>\n//       </Transition> \n//       <Transition visible={visible5} animation='scale' duration={200}>\n//       <Message compact style={{ width: '10rem', top:'-53rem', left:'37rem', padding: '1rem', fontSize: '0.8rem'}}> Dec. 17: <br /> Third wave peaked at 222,822 new cases <br />(7-day avg.) </Message>\n//       </Transition> \n//       {visible2 ? <ArrowSvg start={{ x: 175, y: 243 }} end={{ x: 131, y: 336 }} strokeWidth='0.8'/> : null}\n//       {visible3 ? <ArrowSvg start={{ x: 255, y: 327 }} end={{ x: 267, y: 350 }} strokeWidth='0.8'/> : null}\n//       {visible4 ? <ArrowSvg start={{ x: 370, y: 285 }} end={{ x: 362, y: 302 }} strokeWidth='0.8'/> : null}\n//       {visible5 ? <ArrowSvg start={{ x: 675, y: 110 }} end={{ x: 690, y: 125 }} strokeWidth='0.8'/> : null}\n//       </Grid.Column>\n//   );\n// }\n\n\n\nfunction CaseChart90(props){\n  const [playCount, setPlayCount] = useState(0);\n  const [visible1, setVisible1] = useState(false);\n  // const [visible2, setVisible2] = useState(false);\n  // const [visible3, setVisible3] = useState(false);\n  // const [visible4, setVisible4] = useState(false);\n  // const [visible5, setVisible5] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [highlightIndex, setHighlightIndex] = useState([-1]);\n  const [totalCase, setTotalCase] = useState(0);\n  const data = props.data;\n  const barColor = props.barColor;\n  const lineColor = props.lineColor;\n  const ticks = props.tick;\n  const tickFormatter = props.tickFormatter;\n  const barName = props.barName;\n  const lineName = props.lineName;\n\n  const [animationBool, setAnimationBool] = useState(true);\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n  useEffect(() =>{\n    var sum = 0;\n    for(var i=data.length-90; i<data.length; i++) { \n      sum += data[i][barName]; \n      console.log(i);\n    }\n    setTotalCase(sum);\n  },[])\n\n  // useEffect(() =>{\n  //   setAnimationBool(playCount>-1);\n  // },[playCount])\n\n  // useEffect(() =>{\n  //   setHighlightIndex([-1]);\n  // },[props.history])\n\n  var wait = 0;\n  \n\n  return(\n    <Grid.Column style={{paddingTop: '1em', paddingLeft: 35, width: 850, height: 450}}>\n\n      <ComposedChart width={850} height={420} data={data}\n        margin={{top: 30, right: 60, bottom: 20, left: 30}}>\n      <CartesianGrid stroke='#f5f5f5'/>\n      <XAxis dataKey=\"t\" type=\"number\" domain={[data[data.length-90].t,'dataMax']} padding={{ left: 3, right: 3 }}\n      ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter} allowDataOverflow={true}/>\n      {/* ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter} data[data.length-1].t-90*/}\n      <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}} domain={['auto','dataMax']}/>\n      <Bar name=\"New cases\" dataKey={barName} barSize={18} \n            isAnimationActive={animationBool} \n            animationEasing='ease'\n            onAnimationStart={() => {setDisabled(true); setVisible1(false);\n              //  setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); \n                                    setHighlightIndex([-1]);\n            }} \n            onAnimationEnd={()=> {\n              setAnimationBool(false);\n              setTimeout(()=>setVisible1(true), wait); \n              // setTimeout(()=>setVisible2(true), wait+1000); \n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 9]), wait+1000);\n              // setTimeout(()=>setVisible3(true), wait+2000);\n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 71]), wait+2000);  \n              // setTimeout(()=>setVisible4(true), wait+3000); \n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 109]), wait+3000);  \n              // setTimeout(()=>setVisible5(true), wait+4000);\n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 260]), wait+4000);  \n              setTimeout(()=>setDisabled(false),wait);\n              // setTimeout(()=>setHighlightIndex(-1), wait+5000);\n            }}\n            animationDuration={3500} \n            fill={barColor}\n            barSize={3} >\n            {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={highlightIndex.indexOf(index)>0 ? \"red\" : barColor}/>\n              ))\n            }\n      </ Bar>\n      <Line name=\"7-day average\" id='90-line' type='monotone' dataKey={lineName} dot={false} \n            isAnimationActive={animationBool} \n            animationDuration={3500} \n            stroke={lineColor} strokeWidth=\"2\" />\n      <Tooltip labelFormatter={tickFormatter} formatter={(value) => numberWithCommas(value.toFixed(0))} wrapperStyle={{zIndex: 10}}/>\n      </ComposedChart>\n      {/* <Button content='Play' icon='play' floated=\"right\" disabled={disabled} onClick={() => {setPlayCount(playCount+1);}}/> */}\n      <Transition visible={visible1} animation='scale' duration={200}>\n      <Message compact style={{ width: '15rem', top: '-29rem', left:'40rem', padding: '1rem', fontSize: '0.8rem'}}> Cumulative Confirmed New {barName==='dailyCases' ? 'Cases' : 'Deaths'} in Past 90 Days: {numberWithCommas(totalCase)}</Message>\n      </Transition>\n      {/* <Transition visible={visible2} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-28rem', left:'10rem', padding: '1rem', fontSize: '0.8rem'}}> Apr. 10: <br /> First wave peaked at 31,709 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      <Transition visible={visible3} animation='scale' duration={300}>\n      <Message compact style={{ width: '8rem', top:'-32rem', left:'21rem', padding: '1rem', fontSize: '0.8rem'}}> June. 11: <br /> 2M confirmed cases in the U.S. </Message>\n      </Transition> \n      <Transition visible={visible4} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-41.5rem', left:'30rem', padding: '1rem', fontSize: '0.8rem'}}> July. 19: <br /> Second wave peaked at 66,692 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      <Transition visible={visible5} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-55.5rem', left:'38rem', padding: '1rem', fontSize: '0.8rem'}}> Dec. 17: <br /> Third wave peaked at 222,822 new cases <br />(7-day avg.) </Message>\n      </Transition>  */}\n      \n      {/* <renderArrow /> */}\n      </Grid.Column>\n  );\n}\n\n\nfunction CaseChart14(props){\n  const [playCount, setPlayCount] = useState(0);\n  const [totalCase, setTotalCase] = useState(0);\n  const [visible1, setVisible1] = useState(false);\n  // const [visible2, setVisible2] = useState(false);\n  // const [visible3, setVisible3] = useState(false);\n  // const [visible4, setVisible4] = useState(false);\n  // const [visible5, setVisible5] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [highlightIndex, setHighlightIndex] = useState([-1]);\n  const data = props.data;\n  const barColor = props.barColor;\n  const lineColor = props.lineColor;\n  const ticks = props.tick;\n  const tickFormatter = props.tickFormatter;\n  const barName = props.barName;\n  const lineName = props.lineName;\n\n  // const ytickFormatter = props.ytickFormatter;\n  const [animationBool, setAnimationBool] = useState(true);\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n  useEffect(() =>{\n    var sum = 0;\n    for(var i=data.length-14; i<data.length; i++) { \n      sum += data[i][barName]; \n      console.log(i);\n    }\n    setTotalCase(sum);\n  },[])\n\n  // useEffect(() =>{\n  //   setAnimationBool(playCount>-1);\n  // },[playCount])\n\n  var wait=0;\n\n  return(\n    <Grid.Column style={{paddingTop:'1rem', paddingLeft: 35, width: 850, height: 450}}>\n\n      <ComposedChart width={850} height={420} data={data}\n        margin={{top: 30, right: 60, bottom: 20, left: 30}}>\n      <CartesianGrid stroke='#f5f5f5'/>\n      <XAxis dataKey=\"t\" type=\"number\" domain={[data[data.length-14].t,'dataMax']} padding={{ left: 5, right: 5 }}\n      ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter} allowDataOverflow={true}/>\n      {/* ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter} data[data.length-1].t-90*/}\n      <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n      <Bar name=\"New cases\" dataKey={barName} \n            isAnimationActive={animationBool} \n            animationEasing='ease'\n            onAnimationStart={() => {setDisabled(true); setVisible1(false);\n              //  setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); \n                                    setHighlightIndex([-1]); \n            }} \n            onAnimationEnd={()=> {\n              setAnimationBool(false);\n              setTimeout(()=>setVisible1(true), wait); \n              // setTimeout(()=>setVisible2(true), wait+1000); \n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 9]), wait+1000);\n              // setTimeout(()=>setVisible3(true), wait+2000);\n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 71]), wait+2000);  \n              // setTimeout(()=>setVisible4(true), wait+3000); \n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 109]), wait+3000);  \n              // setTimeout(()=>setVisible5(true), wait+4000);\n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 260]), wait+4000);  \n              setTimeout(()=>setDisabled(false),wait);\n              // setTimeout(()=>setHighlightIndex(-1), wait+5000);\n            }}\n            animationDuration={3500} \n            barSize={10} fill={barColor}>\n            {\n              data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={highlightIndex.indexOf(index)>0 ? \"red\" : barColor}/>\n              ))\n              // fill={index === highlightIndex ? \"red\" : barColor}\n            }\n      </ Bar>\n      <Line name=\"7-day average\" id='14-line' type='monotone' dataKey={lineName} dot={false} \n            isAnimationActive={animationBool} \n            animationDuration={3500} \n            stroke={lineColor} strokeWidth=\"2\" />\n      <Tooltip labelFormatter={tickFormatter} formatter={(value) => numberWithCommas(value.toFixed(0))} wrapperStyle={{zIndex: 10}}/>\n      {/* <Brush dataKey='t'/> */}\n      </ComposedChart>\n      {/* <Button content='Play' icon='play' floated=\"right\" disabled={disabled} onClick={() => {setPlayCount(playCount+1);}}/> */}\n      <Transition visible={visible1} animation='scale' duration={300}>\n      <Message compact style={{ width: '15rem', top:'-29rem', left:'40rem', padding: '1rem', fontSize: '0.8rem'}}> Cumulative Confirmed New {barName==='dailyCases' ? 'Cases' : 'Deaths'} in Past 14 Days: {numberWithCommas(totalCase)}</Message>\n      </Transition>\n      {/* <Transition visible={visible2} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-28rem', left:'10rem', padding: '1rem', fontSize: '0.8rem'}}> Apr. 10: <br /> First wave peaked at 31,709 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      <Transition visible={visible3} animation='scale' duration={300}>\n      <Message compact style={{ width: '8rem', top:'-32rem', left:'21rem', padding: '1rem', fontSize: '0.8rem'}}> June. 11: <br /> 2M confirmed cases in the U.S. </Message>\n      </Transition> \n      <Transition visible={visible4} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-41.5rem', left:'30rem', padding: '1rem', fontSize: '0.8rem'}}> July. 19: <br /> Second wave peaked at 66,692 new cases <br />(7-day avg.) </Message>\n      </Transition> \n      <Transition visible={visible5} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-55.5rem', left:'38rem', padding: '1rem', fontSize: '0.8rem'}}> Dec. 17: <br /> Third wave peaked at 222,822 new cases <br />(7-day avg.) </Message>\n      </Transition>  */}\n      \n      {/* <renderArrow /> */}\n      </Grid.Column>\n  );\n}\n\nfunction DeathChartAll(props){\n  const [playCount, setPlayCount] = useState(0);\n  const [visible1, setVisible1] = useState(false);\n  const [visible2, setVisible2] = useState(false);\n  const [visible3, setVisible3] = useState(false);\n  const [visible4, setVisible4] = useState(false);\n  const [visible5, setVisible5] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [highlightIndex, setHighlightIndex] = useState([-1]);\n  const data = props.data;\n  const barColor = props.barColor;\n  const lineColor = props.lineColor;\n  const ticks = props.tick;\n  const tickFormatter = props.tickFormatter;\n\n  // const ytickFormatter = props.ytickFormatter;\n  const [animationBool, setAnimationBool] = useState(true);\n\n  const caseYTickFmt = (y) => {\n    return y<1000?y:(y/1000+'k');\n  };\n\n  // useEffect(() =>{\n  //   setAnimationBool(playCount>-1);\n  // },[playCount])\n  //console.log(data);\n\n  var wait=0;\n\n  return(\n    <Grid.Column style={{paddingTop:'1rem', paddingLeft: 35, width: 850, height: 450}}>\n\n\n      <ComposedChart height={420} width={850} data={data}\n        margin={{top: 30, right: 60, bottom: 20, left: 30}}>\n      <CartesianGrid stroke='#f5f5f5'/>\n      <XAxis dataKey=\"t\" ticks={ticks} tick={{fontSize: 16}} tickFormatter={tickFormatter}/>\n      <YAxis tickFormatter={caseYTickFmt} tick={{fontSize: 16}}/>\n      <Bar name=\"New cases\" dataKey='dailyMortality' barSize={18} \n            isAnimationActive={animationBool} \n            animationEasing='ease'\n            onAnimationStart={() => {setDisabled(true); setVisible1(false); setVisible2(false); setVisible3(false); setVisible4(false); setVisible5(false); \n                                    setHighlightIndex([-1]);\n            }} \n            onAnimationEnd={()=> {\n              setAnimationBool(false);\n              setTimeout(()=>setVisible1(true), wait); \n              setTimeout(()=>setVisible2(true), wait+1000); \n              setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 56]), wait+1000);\n              setTimeout(()=>setVisible3(true), wait+2000);\n              setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 174]), wait+2000);  \n              // setTimeout(()=>setVisible4(true), wait+3000); \n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 109]), wait+3000);  \n              // setTimeout(()=>setVisible5(true), wait+4000);\n              // setTimeout(()=>setHighlightIndex(highlightIndex => [...highlightIndex, 260]), wait+4000);  \n              setTimeout(()=>setDisabled(false),wait+3000);\n              // setTimeout(()=>setHighlightIndex(-1), wait+5000);\n            }}\n            animationDuration={3500} \n            barSize={2} fill={barColor}>\n            {\n              data.map((entry, index) => (\n                <Cell id={index} key={`cell-${index}`} fill={highlightIndex.indexOf(index)>0 ? \"red\" : barColor}/>\n              ))\n            }\n      </ Bar>\n      <Line name=\"7-day average\" type='monotone' dataKey='mortalityMean' dot={false} \n            isAnimationActive={animationBool} \n            animationDuration={3500} \n            stroke={lineColor}\n            strokeWidth=\"2\" />\n      <Tooltip labelFormatter={tickFormatter} formatter={(value) => numberWithCommas(value.toFixed(0))} wrapperStyle={{zIndex: 10}}/>\n      </ComposedChart>\n      {/* <Button content='Play' icon='play' floated=\"right\" disabled={disabled} onClick={() => {setPlayCount(playCount+1);}}/> */}\n      <Transition visible={visible1} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-28rem', left:'8rem', padding: '1rem', fontSize: '0.8rem'}}> Feb. 6: <br /> First death in US </Message>\n      </Transition>\n      <Transition visible={visible2} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-27.5rem', left:'12rem', padding: '1rem', fontSize: '0.8rem'}}> May. 27: <br /> Coronavirus deaths in the U.S. passed 100K </Message>\n      </Transition> \n      <Transition visible={visible3} animation='scale' duration={300}>\n      <Message compact style={{ width: '10rem', top:'-30.5rem', left:'27rem', padding: '1rem', fontSize: '0.8rem'}}> Sep. 22: <br /> Coronavirus deaths in the U.S. passed 200K </Message>\n      </Transition> \n      {visible2 ? <ArrowSvg start={{ x: 285, y: 365 }} end={{ x: 253, y: 442 }} strokeWidth='0.8'/> : null}\n      {visible3 ? <ArrowSvg start={{ x: 490, y: 410 }} end={{ x: 476, y: 465 }} strokeWidth='0.8'/> : null}\n      \n      </Grid.Column>   \n\n  );\n}\n\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value, dataKey } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill=\"#000000\">\n        {dataKey == \"percentPop\" ? \"Percent of Population\" : \"Percent of Cases\"}\n        \n      </text>\n      {/* <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      /> */}\n      {/* <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} fill=\"#333\">{`${payload.demogLabel} ${(percent * 100).toFixed(0)}%`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey - payload.percentCases/100 * 10} dy={18} textAnchor={'end'} fill=\"#999\">\n        {`(${payload.demogLabel})(${(percent * 100).toFixed(2)}%)`}\n      </text> */}\n    </g>\n  );\n};\n\nconst COLORSex = ['#0088FE', '#00C49F'];\nconst COLORRace = ['#e8ab3b' , '#000000', '#b1b3b3', '#a45791', '#007dba'];\n\nconst RADIAN = Math.PI / 180;\n\n\nconst renderCustomizedLabelCases = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, payload, index, }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 0) * cos;\n  const sy = cy + (outerRadius + 0) * sin;\n  const mx = cx + (outerRadius + 25) * cos;\n  const my = cy + (outerRadius + 35.5) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n\n\n  return (\n    <text x={ex} y={ey } \n      fill=\"black\" textAnchor={x > cx? 'end' : 'start'} dominantBaseline=\"central\">\n      {/* {dataKey == \"percentCases\" ? `${(payload.percentCases).toFixed(0)}%` : `${(payload.caserate).toFixed(0)}`} */}\n      {`${(payload.percentCases).toFixed(0)}%`}\n\n    </text>\n  );\n};\n\n  const renderCustomizedLabelPop = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, payload, index, }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 0) * cos;\n    const sy = cy + (outerRadius + 0) * sin;\n    const mx = cx + (outerRadius + 25) * cos;\n    const my = cy + (outerRadius + 35.5) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n  \n  \n    return (\n      <text x={ex} y={ey } \n        fill=\"black\" textAnchor={x > cx? 'end' : 'start'} dominantBaseline=\"central\">\n        {/* {dataKey == \"percentCases\" ? `${(payload.percentCases).toFixed(0)}%` : `${(payload.caserate).toFixed(0)}`} */}\n        {`${numberWithCommas((payload.percentPop).toFixed(0))}%`}\n  \n      </text>\n    );\n\n\n  // const radius = innerRadius + (outerRadius - innerRadius) * 0.3;\n  // const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  // const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n  // return (\n  //   <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n  //     {`${(percent * 100).toFixed(0)}%`}\n  //   </text>\n  // );\n};\n\n\n\nclass Race extends PureComponent{\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/hqnrgxpj/';\n\n  state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (_, index) => {\n    this.setState({\n      activeIndex: [index],\n    });\n    // console.log(index);\n  };\n\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      dataTot: [],\n    };\n  }\n  componentDidMount(){\n    fetch('/data/nationalDemogdata.json').then(res => res.json()).then(data => this.setState({ \n      dataTot: [\n        data['race'][0]['Hispanic'][0], data['race'][0]['Asian'][0],\n        data['race'][0]['American Native'][0], data['race'][0]['African American'][0],\n        data['race'][0]['White'][0]\n      ] }));\n  }\n   \n\n  render() {\n    const { dataTot } = this.state;\n    // console.log(\"here\", this.props.rate)\n\n    return (\n      <PieChart width={300} height={280}>\n        <Pie\n          \n          activeIndex={10}\n          activeShape={renderActiveShape}\n          data={dataTot}\n          cx={150}\n          cy={150}\n          innerRadius={50}\n          outerRadius={70}\n          paddingAngle = {5}\n          fill=\"#8884d8\"\n          dataKey={this.props.pop == true? \"percentPop\" : \"percentCases\"}\n          // onMouseEnter={this.onPieEnter}\n          labelLine={true}\n          label = {this.props.pop == true? renderCustomizedLabelPop: renderCustomizedLabelCases}\n          rate = {this.props.pop}\n          \n        >\n          {dataTot.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORRace[index % COLORRace.length]} />\n          ))}\n        <Label value={this.props.pop == true? \"% of Population\" : \"% of Cases\"} position=\"center\" />\n          \n        </Pie>\n      </PieChart>\n\n   \n    );\n  }\n}\n\n\nexport default function NationalReport(props) {\n\n\n\n  \n  const characterRef = createRef();\n  const [activeCharacter, setActiveCharacter] = useState('');\n  const [data, setData] = useState();\n  const [date, setDate] = useState('');\n  const [vaccineDate, setVaccineDate] = useState('');\n  const [nationalDemogDate, setNationalDemogDate] = useState('');\n\n  const [fips, setFips] = useState('13');\n  const [nationalDemog, setNationalDemog] = useState();\n\n  const [dataTS, setDataTS] = useState();\n  const [vaccineData, setVaccineData] = useState();\n\n  const [topTen, setTopTen] = useState();\n  const [states50, setStates50] = useState();\n\n  const [dataTopCases, setDataTopCases] = useState();\n  const [dataTopMortality, setDataTopMortality] = useState();\n  // const [nationalBarChart['caserate7day'][0], setnationalBarChart['caserate7day'][0]] = useState();\n  // const [nationalBarChart['covidmortality7day'][0], setnationalBarChart['covidmortality7day'][0]] = useState();\n\n  const [nationalBarChart, setNationalBarChart] = useState();\n\n  const [percentChangeCases, setPercentChangeCases] = useState();\n\n  const [percentChangeMortality, setPercentChangeMortality] = useState();\n  const [mean7dayCases, setMean7dayCases] = useState();\n  const [mortalityMean, setMortalityMean] = useState();\n\n  const [dailyCases, setDailyCases] = useState();\n  const [dailyDeaths, setDailyDeaths] = useState();\n\n  const [bar, LoadBar] = useState(false);\n\n  const [colorScale, setColorScale] = useState();\n  const [legendMax, setLegendMax] = useState([]);\n  const [legendMin, setLegendMin] = useState([]);\n  const [legendSplit, setLegendSplit] = useState([]);\n\n  const [ccvi] = useState(\"ccvi\");\n  const [colorccvi, setColorccvi] = useState();\n  const [legendMaxccvi, setLegendMaxccvi] = useState([]);\n  const [legendMinccvi, setLegendMinccvi] = useState([]);\n  const [legendSplitccvi, setLegendSplitccvi] = useState([]);\n\n  // const [metric, setMetric] = useState(\"ccvi\");\n  // const [colorMetric, setColorMetric] = useState();\n  // const [legendMaxMetric, setLegendMaxMetric] = useState([]);\n  // const [legendMinMetric, setLegendMinMetric] = useState([]);\n  // const [legendSplitMetric, setLegendSplitMetric] = useState([]);\n\n\n  const [resSeg] = useState(\"resSeg\");\n  const [colorResSeg, setColorResSeg] = useState();\n  const [legendMaxResSeg, setLegendMaxResSeg] = useState([]);\n  const [legendMinResSeg, setLegendMinResSeg] = useState([]);\n  const [legendSplitResSeg, setLegendSplitResSeg] = useState([]);\n\n  const [black] = useState(\"black\");\n  const [colorBlack, setColorBlack] = useState();\n  const [legendMaxBlack, setLegendMaxBlack] = useState([]);\n  const [legendMinBlack, setLegendMinBlack] = useState([]);\n  const [legendSplitBlack, setLegendSplitBlack] = useState([]);\n\n  const [poverty] = useState(\"poverty\");\n  const [colorPoverty, setColorPoverty] = useState();\n  const [legendMaxPoverty, setLegendMaxPoverty] = useState([]);\n  const [legendMinPoverty, setLegendMinPoverty] = useState([]);\n  const [legendSplitPoverty, setLegendSplitPoverty] = useState([]);\n\n  const [Comorb] = useState(\"anycondition\");\n  const [colorComorb, setColorComorb] = useState();\n  const [legendMaxComorb, setLegendMaxComorb] = useState([]);\n  const [legendMinComorb, setLegendMinComorb] = useState([]);\n  const [legendSplitComorb, setLegendSplitComorb] = useState([]);\n\n  const [Copd] = useState(\"copd\");\n  const [colorCopd, setColorCopd] = useState();\n  const [legendMaxCopd, setLegendMaxCopd] = useState([]);\n  const [legendMinCopd, setLegendMinCopd] = useState([]);\n  const [legendSplitCopd, setLegendSplitCopd] = useState([]);\n\n  const [Ckd] = useState(\"ckd\");\n  const [colorCkd, setColorCkd] = useState();\n  const [legendMaxCkd, setLegendMaxCkd] = useState([]);\n  const [legendMinCkd, setLegendMinCkd] = useState([]);\n  const [legendSplitCkd, setLegendSplitCkd] = useState([]);\n\n  const [Diabetes] = useState(\"diabetes\");\n  const [colorDiabetes, setColorDiabetes] = useState();\n  const [legendMaxDiabetes, setLegendMaxDiabetes] = useState([]);\n  const [legendMinDiabetes, setLegendMinDiabetes] = useState([]);\n  const [legendSplitDiabetes, setLegendSplitDiabetes] = useState([]);\n\n  const [Heart] = useState(\"heartdisease\");\n  const [colorHeart, setColorHeart] = useState();\n  const [legendMaxHeart, setLegendMaxHeart] = useState([]);\n  const [legendMinHeart, setLegendMinHeart] = useState([]);\n  const [legendSplitHeart, setLegendSplitHeart] = useState([]);\n\n  const [Obesity] = useState(\"obesity\");\n  const [colorObesity, setColorObesity] = useState();\n  const [legendMaxObesity, setLegendMaxObesity] = useState([]);\n  const [legendMinObesity, setLegendMinObesity] = useState([]);\n  const [legendSplitObesity, setLegendSplitObesity] = useState([]);\n\n  // --------------------------\n  const [caseTicks, setCaseTicks] = useState([]);\n  const [caseYTicks, setCaseYTicks] = useState([]);\n  // --------------------------\n\n  const [urbrur] = useState(\"urbanrural\");\n  const [dataUrb, setDataUrb] = useState();\n  const {\n    isLoggedIn,\n    actions: { handleAnonymousLogin },\n  } = useStitchAuth();  \n\n\n  const [region, setRegion] = useState(\"region\");\n  const [colorRegion, setColorRegion] = useState();\n\n  const [covidMetric, setCovidMetric] = useState({cases: 'N/A', deaths: 'N/A', \n                                                  caseRate: \"N/A\", mortality: \"N/A\", \n                                                  caseRateMean: \"N/A\", mortalityMean: \"N/A\",\n                                                  caseRateMA: \"N/A\", mortalityMA: \"N/A\",\n                                                  cfr:\"N/A\", t: 'n/a'});\n  const [varMap, setVarMap] = useState({});\n  const [vaxVarMap, setVaxVarMap] = useState({});\n\n  const [metricName, setMetricName] = useState('COVID-19 Community Vulnerability Index');\n  const [metricOptions, setMetricOptions] = useState();\n\n  useEffect(()=>{\n\n\n    fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      .then(x => {\n        setVarMap(x);\n        setMetricOptions(_.filter(_.map(x, d=> {\n          return {key: d.id, value: d.variable, text: d.name, group: d.group};\n        }), d => (\n          d.value === \"ccvi\" || d.value === \"poverty\" || d.value === \"urbanrural\" || \n          d.value === \"region\" || d.value === \"black\" || d.value === \"resSeg\" \n        )));\n      });\n    fetch('/data/vaccinedate.json').then(res => res.json())\n      .then(x => {setVaccineDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10));});\n    fetch('/data/rawdata/variable_mapping_Vaccine.json').then(res => res.json())\n      .then(x => {setVaxVarMap(x);});\n    fetch('/data/vaccineData.json').then(res => res.json())\n      .then(x => {\n        setVaccineData(x);\n        const cs = scaleQuantile()\n          .domain(_.map(_.filter(_.map(x, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[\"percentVaccinatedDose1\"] >= 0 &&\n                d.fips.length === 2)),\n            d=> d[\"percentVaccinatedDose1\"]))\n          .range(colorPalette);\n\n          let scaleMap = {}\n          _.each(x, d=>{\n            if(d[\"percentVaccinatedDose1\"] >= 0){\n            scaleMap[d[\"percentVaccinatedDose1\"]] = cs(d[\"percentVaccinatedDose1\"])}});\n        \n          setColorScale(scaleMap);\n          var max = 0\n          var min = 100\n          _.each(x, d=> { \n            if (d[\"percentVaccinatedDose1\"] > max && d.fips.length === 2) {\n              max = d[\"percentVaccinatedDose1\"]\n            } else if (d.fips.length === 2 && d[\"percentVaccinatedDose1\"] < min && d[\"percentVaccinatedDose1\"] >= 0){\n              min = d[\"percentVaccinatedDose1\"]\n            }\n          });\n\n          if (max > 999999) {\n            max = (max/1000000).toFixed(0) + \"M\";\n            setLegendMax(max);\n          }else if (max > 999) {\n            max = (max/1000).toFixed(0) + \"K\";\n            setLegendMax(max);\n          }else{\n            setLegendMax(max.toFixed(0));\n\n          }\n          setLegendMin(min.toFixed(0));\n          setLegendSplit(cs.quantiles());\n        \n      });\n  }, []);\n\n\n  useEffect(()=>{\n\n      fetch('/data/contristates.json').then(res => res.json())\n        .then(x => {\n          setStates50(x);\n\n        });\n\n      fetch('/data/topten.json').then(res => res.json())\n        .then(x => {\n          setTopTen(x);\n        });\n\n      fetch('/data/nationalBarChart.json').then(res => res.json())\n        .then(x => {\n          setNationalBarChart(x);\n        });\n\n      fetch('/data/date.json').then(res => res.json())\n        .then(x => setDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n\n      fetch('/data/vaccinedate.json').then(res => res.json())\n        .then(x => {setVaccineDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4));});\n      \n      fetch('/data/nationalDemogdate.json').then(res => res.json())\n        .then(x => setNationalDemogDate(x.date.substring(5,7) + \"/\" + x.date.substring(8,10) + \"/\" + x.date.substring(0,4)));\n\n      // fetch('/data/rawdata/variable_mapping.json').then(res => res.json())\n      //   .then(x => setVarMap(x));\n      \n      fetch('/data/topTenCases.json').then(res => res.json())\n        .then(x => setDataTopCases(x));\n\n      fetch('/data/topTenMortality.json').then(res => res.json())\n        .then(x => setDataTopMortality(x));\n      \n      fetch('/data/nationalDemogdata.json').then(res => res.json())\n        .then(x => setNationalDemog(x));\n\n    },[]);\n\n    useEffect(()=>{\n      if (isLoggedIn === true){\n        // fetchData();\n      } else {\n        handleAnonymousLogin();\n      }\n    },[isLoggedIn]);\n\n    // useEffect(() => {\n    //   fetch('/data/data.json').then(res => res.json())\n    //     .then(x => {\n    //       setData(x);  \n    //     });\n\n    //   fetch('/data/timeseries_nation.json').then(res => res.json())\n    //     .then(x => {\n          \n    //     });\n    // })\n\n\n    useEffect(() => {\n\n      let seriesDict = {};\n      let newDict = {};\n      const fetchTimeSeries = async() => { \n        const mainQ = {tag: \"nationalrawfull\"};\n        const promStatic = await CHED_static.find(mainQ,{projection:{}}).toArray();\n        // console.log(promStatic[0].data);\n\n        const testQ = {full_fips: \"_nation\"};\n        const promTs = await CHED_series.find(testQ,{projection:{}}).toArray();\n                    \n        setData(promStatic[0].data);  \n\n        \n        _.map(promTs, i=> {\n            seriesDict[i[Object.keys(i)[4]]] = i[Object.keys(i)[5]];\n        });\n        \n        let t = 0;\n        \n        let percentChangeC = 0;\n        let percentChangeM = 0;\n        let cRateMean = 0;\n        let dailyC = 0;\n        let dailyD = 0;\n        let mMean = 0;\n          \n        _.each(seriesDict, (v, k)=>{\n          if(k === \"_nation\" && v.length > 0 && v[v.length-1].t > t){\n\n              percentChangeC = v[v.length-1].percent14dayDailyCases;\n              percentChangeM = v[v.length-1].percent14dayDailyDeaths;\n              cRateMean = v[v.length-1].caseRateMean;\n              mMean = v[v.length-1].mortalityMean;\n              dailyC = v[v.length-1].dailyCases;\n              dailyD = v[v.length-1].dailyMortality;\n            }\n\n        });\n\n          setPercentChangeCases(percentChangeC.toFixed(0) + \"%\");\n          setMean7dayCases(cRateMean.toFixed(0));\n          setPercentChangeMortality(percentChangeM.toFixed(0) + \"%\");\n          setMortalityMean(mMean.toFixed(0));\n\n          setDailyCases(dailyC.toFixed(0));\n          setDailyDeaths(dailyD.toFixed(0));\n          setDataTS(seriesDict);\n      };\n\n      fetchTimeSeries();\n    }, []);\n\n    // useEffect(() => {\n    //     // === \"resSeg\" ? \"RS_blackwhite\" : metric === \"urbanrural\" ? \"_013_Urbanization_Code\" : metric\n    //       if(data && metric){\n    //       //metric\n    //       const cs = scaleQuantile()\n    //       .domain(_.map(_.filter(_.map(data, (d, k) => {\n    //         d.fips = k\n    //         return d}), \n    //         d => (\n    //             d[metric] > 0 &&\n    //             d.fips.length === 5)),\n    //         d=> d[metric]))\n    //       .range(colorPalette);\n  \n    //       let scaleMap = {}\n    //       _.each(data, d=>{\n    //         if(d[metric] > 0){\n    //         scaleMap[d[metric]] = cs(d[metric])}\n    //       });\n        \n    //       setColorMetric(scaleMap);\n    //       var max = 0\n    //       var min = 100\n    //       _.each(data, d=> { \n    //         if (d[metric] > max && d.fips.length === 5) {\n    //           max = d[metric]\n    //         } else if (d.fips.length === 5 && d[metric] < min && d[metric] > 0){\n    //           min = d[metric]\n    //         }\n    //       });\n  \n    //       if (max > 999999) {\n    //         max = (max/1000000).toFixed(0) + \"M\";\n    //         setLegendMaxMetric(max);\n    //       }else if (max > 999) {\n    //         max = (max/1000).toFixed(0) + \"K\";\n    //         setLegendMaxMetric(max);\n    //       }else{\n    //         setLegendMaxMetric(max.toFixed(0));\n  \n    //       }\n    //       setLegendMinMetric(min.toFixed(0));\n  \n    //       setLegendSplitMetric(cs.quantiles());\n\n\n    //     }\n\n\n\n    // },[data, metric]);\n\n\n    useEffect(() => {\n        //ccvi\n          //metric\n          const cs = scaleQuantile()\n          .domain(_.map(_.filter(_.map(data, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[ccvi] > 0 &&\n                d.fips.length === 5)),\n            d=> d[ccvi]))\n          .range(colorPalette);\n  \n          let scaleMap = {}\n          _.each(data, d=>{\n            if(d[ccvi] > 0){\n            scaleMap[d[ccvi]] = cs(d[ccvi])}\n          });\n        \n          setColorccvi(scaleMap);\n          var max = 0\n          var min = 100\n          _.each(data, d=> { \n            if (d[ccvi] > max && d.fips.length === 5) {\n              max = d[ccvi]\n            } else if (d.fips.length === 5 && d[ccvi] < min && d[ccvi] > 0){\n              min = d[ccvi]\n            }\n          });\n  \n          if (max > 999999) {\n            max = (max/1000000).toFixed(0) + \"M\";\n            setLegendMaxccvi(max);\n          }else if (max > 999) {\n            max = (max/1000).toFixed(0) + \"K\";\n            setLegendMaxccvi(max);\n          }else{\n            setLegendMaxccvi(max.toFixed(0));\n  \n          }\n          setLegendMinccvi(min.toFixed(0));\n  \n          setLegendSplitccvi(cs.quantiles());\n\n\n        \n\n      \n\n    },[data]);\n\n    //replace\n    useEffect(() => {\n      if(data && ccvi){\n          //poverty\n          const cs_poverty = scaleQuantile()\n          .domain(_.map(_.filter(_.map(data, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[poverty] > 0 &&\n                d.fips.length === 5)),\n            d=> d[poverty]))\n          .range(colorPalette);\n  \n          let scaleMap_poverty = {}\n          _.each(data, d=>{\n            if(d[poverty] > 0){\n              scaleMap_poverty[d[poverty]] = cs_poverty(d[poverty])}\n          });\n        \n          setColorPoverty(scaleMap_poverty);\n          var max_poverty = 0\n          var min_poverty = 100\n          _.each(data, d=> { \n            if (d[poverty] > max_poverty && d.fips.length === 5) {\n              max_poverty = d[poverty]\n            } else if (d.fips.length === 5 && d[poverty] < min_poverty && d[poverty] > 0){\n              min_poverty = d[poverty]\n            }\n          });\n          if (max_poverty > 999999) {\n            max_poverty = (max_poverty/1000000).toFixed(0) + \"M\";\n            setLegendMaxPoverty(max_poverty);\n          }else if (max_poverty > 999) {\n            max_poverty = (max_poverty/1000).toFixed(0) + \"K\";\n            setLegendMaxPoverty(max_poverty);\n          }else{\n            setLegendMaxPoverty(max_poverty.toFixed(0));\n          }\n          setLegendMinPoverty(min_poverty.toFixed(0));\n          setLegendSplitPoverty(cs_poverty.quantiles());\n\n      }\n\n    },[data, ccvi]);\n\n    useEffect(() => {\n      if(data && poverty){\n        //urbrur\n        let tempDict = {};\n        _.map(_.filter(_.map(data, (d, k) => {\n          d.fips = k\n          return d}), \n          d => (\n              d[urbrur] !== \"\" &&\n              d.fips.length === 5)), i => {\n                tempDict[i.fips] = i\n                return tempDict;\n              });\n        setDataUrb(tempDict);\n      }\n\n    }, [data, poverty])\n\n//replace\n\n\n    //replace\n    // useEffect(() => {\n    //   if(data && male){\n\n    //       //age65over\n    //       const cs_age65 = scaleQuantile()\n    //       .domain(_.map(_.filter(_.map(data, (d, k) => {\n    //         d.fips = k\n    //         return d}), \n    //         d => (\n    //             d[age65] > 0 &&\n    //             d.fips.length === 5)),\n    //         d=> d[age65]))\n    //       .range(colorPalette);\n  \n    //       let scaleMap_age65 = {}\n    //       _.each(data, d=>{\n    //         if(d[age65] > 0){\n    //           scaleMap_age65[d[age65]] = cs_age65(d[age65])}\n    //       });\n        \n    //       setColorAge65(scaleMap_age65);\n    //       var max_age65 = 0\n    //       var min_age65 = 100\n    //       _.each(data, d=> { \n    //         if (d[age65] > max_age65 && d.fips.length === 5) {\n    //           max_age65 = d[age65]\n    //         } else if (d.fips.length === 5 && d[age65] < min_age65 && d[age65] > 0){\n    //           min_age65 = d[age65]\n    //         }\n    //       });\n    //       if (max_age65 > 999999) {\n    //         max_age65 = (max_age65/1000000).toFixed(0) + \"M\";\n    //         setLegendMaxAge65(max_age65);\n    //       }else if (max_age65 > 999) {\n    //         max_age65 = (max_age65/1000).toFixed(0) + \"K\";\n    //         setLegendMaxAge65(max_age65);\n    //       }else{\n    //         setLegendMaxAge65(max_age65.toFixed(0));\n    //       }\n    //       setLegendMinAge65(min_age65.toFixed(0));\n    //       setLegendSplitAge65(cs_age65.quantiles());\n\n    //   }\n\n    // },[data, male]);\n    \n\n    \n    useEffect(() => {\n      if(data && urbrur){\n          //black\n          const cs_black = scaleQuantile()\n          .domain(_.map(_.filter(_.map(data, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[black] > 0 &&\n                d.fips.length === 5)),\n            d=> d[black]))\n          .range(colorPalette);\n  \n          let scaleMap_black = {}\n          _.each(data, d=>{\n            if(d[black] > 0){\n              scaleMap_black[d[black]] = cs_black(d[black])}\n          });\n        \n          setColorBlack(scaleMap_black);\n          var max_black = 0\n          var min_black = 100\n          _.each(data, d=> { \n            if (d[black] > max_black && d.fips.length === 5) {\n              max_black = d[black]\n            } else if (d.fips.length === 5 && d[black] < min_black && d[black] > 0){\n              min_black = d[black]\n            }\n          });\n          if (max_black > 999999) {\n            max_black = (max_black/1000000).toFixed(0) + \"M\";\n            setLegendMaxBlack(max_black);\n          }else if (max_black > 999) {\n            max_black = (max_black/1000).toFixed(0) + \"K\";\n            setLegendMaxBlack(max_black);\n          }else{\n            setLegendMaxBlack(max_black.toFixed(0));\n          }\n          setLegendMinBlack(min_black.toFixed(0));\n          setLegendSplitBlack(cs_black.quantiles());\n      }\n\n    },[data, urbrur]);\n\n    useEffect(() => {\n      if(data && black){\n          //ResSeg\n          const csii = scaleQuantile()\n          .domain(_.map(_.filter(_.map(data, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[resSeg] > 0 &&\n                d.fips.length === 5)),\n            d=> d[resSeg]))\n          .range(colorPalette);\n\n          let scaleMapii = {}\n          _.each(data, d=>{\n            if(d[resSeg] > 0){\n            scaleMapii[d[resSeg]] = csii(d[resSeg])}\n          });\n        \n          setColorResSeg(scaleMapii);\n          var maxii = 0\n          var minii = 100\n          _.each(data, d=> { \n            if (d[resSeg] > maxii && d.fips.length === 5) {\n              maxii = d[resSeg]\n            } else if (d.fips.length === 5 && d[resSeg] < minii && d[resSeg] > 0){\n              minii = d[resSeg]\n            }\n          });\n          if (maxii > 999999) {\n            maxii = (maxii/1000000).toFixed(0) + \"M\";\n            setLegendMaxResSeg(maxii);\n          }else if (maxii > 999) {\n            maxii = (maxii/1000).toFixed(0) + \"K\";\n            setLegendMaxResSeg(maxii);\n          }else{\n            setLegendMaxResSeg(maxii.toFixed(0));\n          }\n          setLegendMinResSeg(minii.toFixed(0));\n          setLegendSplitResSeg(csii.quantiles());\n\n\n      }\n\n    },[data, black]);\n\n    useEffect(() => {\n      if(data && resSeg){\n          //comorb\n          const csii = scaleQuantile()\n          .domain(_.map(_.filter(_.map(data, (d, k) => {\n            d.fips = k\n            return d}), \n            d => (\n                d[Comorb] > 0 &&\n                d.fips.length === 5)),\n            d=> d[Comorb]))\n          .range(colorPalette);\n\n          let scaleMapii = {}\n          _.each(data, d=>{\n            if(d[Comorb] > 0){\n            scaleMapii[d[Comorb]] = csii(d[Comorb])}\n          });\n        \n          setColorComorb(scaleMapii);\n          var maxii = 0\n          var minii = 100\n          _.each(data, d=> { \n            if (d[Comorb] > maxii && d.fips.length === 5) {\n              maxii = d[Comorb]\n            } else if (d.fips.length === 5 && d[Comorb] < minii && d[Comorb] > 0){\n              minii = d[Comorb]\n            }\n          });\n          if (maxii > 999999) {\n            maxii = (maxii/1000000).toFixed(0) + \"M\";\n            setLegendMaxComorb(maxii);\n          }else if (maxii > 999) {\n            maxii = (maxii/1000).toFixed(0) + \"K\";\n            setLegendMaxComorb(maxii);\n          }else{\n            setLegendMaxComorb(maxii.toFixed(0));\n          }\n          setLegendMinComorb(minii.toFixed(0));\n          setLegendSplitComorb(csii.quantiles());\n\n\n      }\n\n    },[data, resSeg]);\n\n    // useEffect(() => {\n    //   if(data && Comorb){\n    //       //Copd\n    //       const csii = scaleQuantile()\n    //       .domain(_.map(_.filter(_.map(data, (d, k) => {\n    //         d.fips = k\n    //         return d}), \n    //         d => (\n    //             d[Copd] > 0 &&\n    //             d.fips.length === 5)),\n    //         d=> d[Copd]))\n    //       .range(colorPalette);\n\n    //       let scaleMapii = {}\n    //       _.each(data, d=>{\n    //         if(d[Copd] > 0){\n    //         scaleMapii[d[Copd]] = csii(d[Copd])}\n    //       });\n        \n    //       setColorCopd(scaleMapii);\n    //       var maxii = 0\n    //       var minii = 100\n    //       _.each(data, d=> { \n    //         if (d[Copd] > maxii && d.fips.length === 5) {\n    //           maxii = d[Copd]\n    //         } else if (d.fips.length === 5 && d[Copd] < minii && d[Copd] > 0){\n    //           minii = d[Copd]\n    //         }\n    //       });\n    //       if (maxii > 999999) {\n    //         maxii = (maxii/1000000).toFixed(0) + \"M\";\n    //         setLegendMaxCopd(maxii);\n    //       }else if (maxii > 999) {\n    //         maxii = (maxii/1000).toFixed(0) + \"K\";\n    //         setLegendMaxCopd(maxii);\n    //       }else{\n    //         setLegendMaxCopd(maxii.toFixed(0));\n    //       }\n    //       setLegendMinCopd(minii.toFixed(0));\n    //       setLegendSplitCopd(csii.quantiles());\n\n\n    //   }\n\n    // },[data, Comorb]);\n\n    \n\n    // useEffect(() => {\n    //   if(data && Copd){\n    //       //Ckd\n    //       const csii = scaleQuantile()\n    //       .domain(_.map(_.filter(_.map(data, (d, k) => {\n    //         d.fips = k\n    //         return d}), \n    //         d => (\n    //             d[Ckd] > 0 &&\n    //             d.fips.length === 5)),\n    //         d=> d[Ckd]))\n    //       .range(colorPalette);\n\n    //       let scaleMapii = {}\n    //       _.each(data, d=>{\n    //         if(d[Ckd] > 0){\n    //         scaleMapii[d[Ckd]] = csii(d[Ckd])}\n    //       });\n        \n    //       setColorCkd(scaleMapii);\n    //       var maxii = 0\n    //       var minii = 100\n    //       _.each(data, d=> { \n    //         if (d[Ckd] > maxii && d.fips.length === 5) {\n    //           maxii = d[Ckd]\n    //         } else if (d.fips.length === 5 && d[Ckd] < minii && d[Ckd] > 0){\n    //           minii = d[Ckd]\n    //         }\n    //       });\n    //       if (maxii > 999999) {\n    //         maxii = (maxii/1000000).toFixed(0) + \"M\";\n    //         setLegendMaxCkd(maxii);\n    //       }else if (maxii > 999) {\n    //         maxii = (maxii/1000).toFixed(0) + \"K\";\n    //         setLegendMaxCkd(maxii);\n    //       }else{\n    //         setLegendMaxCkd(maxii.toFixed(0));\n    //       }\n    //       setLegendMinCkd(minii.toFixed(0));\n    //       setLegendSplitCkd(csii.quantiles());\n\n\n    //   }\n\n    // },[data, Copd]);\n\n    // useEffect(() => {\n    //   if(data && Ckd){\n    //       //Diabetes\n    //       const csii = scaleQuantile()\n    //       .domain(_.map(_.filter(_.map(data, (d, k) => {\n    //         d.fips = k\n    //         return d}), \n    //         d => (\n    //             d[Diabetes] > 0 &&\n    //             d.fips.length === 5)),\n    //         d=> d[Diabetes]))\n    //       .range(colorPalette);\n\n    //       let scaleMapii = {}\n    //       _.each(data, d=>{\n    //         if(d[Diabetes] > 0){\n    //         scaleMapii[d[Diabetes]] = csii(d[Diabetes])}\n    //       });\n        \n    //       setColorDiabetes(scaleMapii);\n    //       var maxii = 0\n    //       var minii = 100\n    //       _.each(data, d=> { \n    //         if (d[Diabetes] > maxii && d.fips.length === 5) {\n    //           maxii = d[Diabetes]\n    //         } else if (d.fips.length === 5 && d[Diabetes] < minii && d[Diabetes] > 0){\n    //           minii = d[Diabetes]\n    //         }\n    //       });\n    //       if (maxii > 999999) {\n    //         maxii = (maxii/1000000).toFixed(0) + \"M\";\n    //         setLegendMaxDiabetes(maxii);\n    //       }else if (maxii > 999) {\n    //         maxii = (maxii/1000).toFixed(0) + \"K\";\n    //         setLegendMaxDiabetes(maxii);\n    //       }else{\n    //         setLegendMaxDiabetes(maxii.toFixed(0));\n    //       }\n    //       setLegendMinDiabetes(minii.toFixed(0));\n    //       setLegendSplitDiabetes(csii.quantiles());\n\n\n    //   }\n\n    // },[data, Ckd]);\n\n    // useEffect(() => {\n    //   if(data && Diabetes){\n    //       //Heart\n    //       const csii = scaleQuantile()\n    //       .domain(_.map(_.filter(_.map(data, (d, k) => {\n    //         d.fips = k\n    //         return d}), \n    //         d => (\n    //             d[Heart] > 0 &&\n    //             d.fips.length === 5)),\n    //         d=> d[Heart]))\n    //       .range(colorPalette);\n\n    //       let scaleMapii = {}\n    //       _.each(data, d=>{\n    //         if(d[Heart] > 0){\n    //         scaleMapii[d[Heart]] = csii(d[Heart])}\n    //       });\n        \n    //       setColorHeart(scaleMapii);\n    //       var maxii = 0\n    //       var minii = 100\n    //       _.each(data, d=> { \n    //         if (d[Heart] > maxii && d.fips.length === 5) {\n    //           maxii = d[Heart]\n    //         } else if (d.fips.length === 5 && d[Heart] < minii && d[Heart] > 0){\n    //           minii = d[Heart]\n    //         }\n    //       });\n    //       if (maxii > 999999) {\n    //         maxii = (maxii/1000000).toFixed(0) + \"M\";\n    //         setLegendMaxHeart(maxii);\n    //       }else if (maxii > 999) {\n    //         maxii = (maxii/1000).toFixed(0) + \"K\";\n    //         setLegendMaxHeart(maxii);\n    //       }else{\n    //         setLegendMaxHeart(maxii.toFixed(0));\n    //       }\n    //       setLegendMinHeart(minii.toFixed(0));\n    //       setLegendSplitHeart(csii.quantiles());\n\n\n    //   }\n\n    // },[data, Diabetes]);\n\n    // useEffect(() => {\n    //   if(data && Heart){\n    //       //Obesity\n    //       const csii = scaleQuantile()\n    //       .domain(_.map(_.filter(_.map(data, (d, k) => {\n    //         d.fips = k\n    //         return d}), \n    //         d => (\n    //             d[Obesity] > 0 &&\n    //             d.fips.length === 5)),\n    //         d=> d[Obesity]))\n    //       .range(colorPalette);\n\n    //       let scaleMapii = {}\n    //       _.each(data, d=>{\n    //         if(d[Obesity] > 0){\n    //         scaleMapii[d[Obesity]] = csii(d[Obesity])}\n    //       });\n        \n    //       setColorObesity(scaleMapii);\n    //       var maxii = 0\n    //       var minii = 100\n    //       _.each(data, d=> { \n    //         if (d[Obesity] > maxii && d.fips.length === 5) {\n    //           maxii = d[Obesity]\n    //         } else if (d.fips.length === 5 && d[Obesity] < minii && d[Obesity] > 0){\n    //           minii = d[Obesity]\n    //         }\n    //       });\n    //       if (maxii > 999999) {\n    //         maxii = (maxii/1000000).toFixed(0) + \"M\";\n    //         setLegendMaxObesity(maxii);\n    //       }else if (maxii > 999) {\n    //         maxii = (maxii/1000).toFixed(0) + \"K\";\n    //         setLegendMaxObesity(maxii);\n    //       }else{\n    //         setLegendMaxObesity(maxii.toFixed(0));\n    //       }\n    //       setLegendMinObesity(minii.toFixed(0));\n    //       setLegendSplitObesity(csii.quantiles());\n\n\n    //   }\n\n    // },[data, Heart]);\n\n    \n\n    \n\n  useEffect(() => {\n    if (dataTS){\n      setCovidMetric(_.takeRight(dataTS['_nation'])[0]);\n    }\n  }, [dataTS])\n\n  useEffect(() => {\n    if (dataTS){\n      setCovidMetric(_.takeRight(dataTS['_nation'])[0]);\n      setCaseTicks([\n          dataTS[\"_nation\"][0].t,\n          dataTS[\"_nation\"][30].t,\n          dataTS[\"_nation\"][61].t,\n          dataTS[\"_nation\"][91].t,\n          dataTS[\"_nation\"][122].t,\n          dataTS[\"_nation\"][153].t,\n          dataTS[\"_nation\"][183].t,\n          dataTS[\"_nation\"][214].t,\n          dataTS[\"_nation\"][244].t,\n          dataTS[\"_nation\"][dataTS[\"_nation\"].length-1].t]);\n          //console.log(\"dataTS\", dataTS[\"_nation\"][0].t);\n      setCaseYTicks();\n    }\n  }, [dataTS])\n\n  //console.log(caseTicks);\n\n  const caseTickFmt = (tick) => { \n    return (\n        monthNames[new Date(tick*1000).getMonth()] + \" \" +  new Date(tick*1000).getDate()\n      );\n  };\n\n\n\n  if (data && dataTS && varMap) {\n    // console.log(demog_descriptives['AgeDescription']);\n  return (\n    <HEProvider>\n      <div>\n        <AppBar menu='nationalReport' /> \n        <Container id=\"title\" style={{marginTop: '8em', minWidth: '1260px'}} >\n        <div >\n          <br/><br/><br/><br/>\n        </div>\n        <Grid >\n            <Grid.Column width={2} style={{zIndex: 10}}>\n              \n                  <Ref innerRef={createRef()} >\n                    <StickyExampleAdjacentContext activeCharacter={activeCharacter}  />\n                  </Ref>\n\n              \n            </Grid.Column>\n            <Grid.Column width={14} style={{paddingLeft:'3rem'}}>\n            <center> <Waypoint\n                                        onEnter={() => {\n                                            setActiveCharacter('COVID-19 National Health Equity Report')\n                                            console.log(activeCharacter)\n                                        }}>\n                                    </Waypoint> \n                                    </center>\n            <div>     \t\n              <Header as='h2' style={{color: mortalityColor[1],textAlign:'center', fontWeight: 400, fontSize: \"24pt\", paddingTop: 17, paddingLeft: 272, paddingRight: \"2em\"}}>\n                <Header.Content>\n                <b> COVID-19 National Health Equity Report </b> \n                <Header.Subheader style={{fontWeight:300,fontSize:\"20pt\", paddingTop:16, color: mortalityColor[1]}}> \n                <b>{monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}</b>\n                  \n                </Header.Subheader>\n                </Header.Content>\n              </Header>\n            </div>\n            <div style={{paddingTop:36,textAlign:'justify', fontSize:\"14pt\", lineHeight: \"16pt\",paddingBottom:30, paddingLeft: 238, paddingRight: \"2em\"}}>\n              <Header.Content style={{fontFamily:'lato', fontSize: \"14pt\", width: 810}}>\n              The United States has reported {numberWithCommas(data['_nation']['casesfig'])} cases, the highest number of any country in the world. \n              The number of cases and deaths differ substantially across American communities. The COVID-19 U.S. Health Equity \n              Report documents how COVID-19 cases and deaths are changing over time, across geography, and by demographics. The report will \n              be released each week to keep track of how COVID-19 is impacting U.S. communities.\n              </Header.Content>\n            </div>\n            <div id=\"tracker\" style = {{height: 45}}> </div>\n\n\n\n\n\n\n\n\n\n            <center style={{paddingLeft: 190}}><Divider style={{width: 900}}/> </center>\n\n            <div>     \t\n              <Header as='h2' style={{color: mortalityColor[1],textAlign:'center', fontSize: \"22pt\", paddingTop: 30, paddingLeft: 272, paddingRight: \"2em\"}}>\n                <Header.Content>\n                COVID-19 Vaccination Tracker\n                  {/* <a href = '/Vaccine-Tracker'>COVID-19 Vaccination Tracker</a> */}\n                \n                </Header.Content>\n              </Header>\n            </div>\n            \n\n\n\n\n              <Grid>\n                <Grid.Row columns = {5} style = {{width: 1000, paddingLeft: 205, paddingTop: 40}}>\n                  <Grid.Column style = {{width: 200, paddingLeft: 0, paddingTop: 8, paddingBottom: 0}}> \n                    <center style={{width: 200,fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\", paddingBottom: 0}}>Total doses <br/> delivered</center>\n\n                    \n                  </Grid.Column>\n                  \n                  <Grid.Column style = {{width: 200, paddingLeft: 50, paddingTop: 8}}> \n                    <center style={{width: 200, fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\"}}>Total doses <br/> administered</center>\n\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 200, paddingLeft: 100, paddingTop: 8}}> \n           \n                        <center style={{width: 200, fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\"}}>Number received <br/> at least one dose</center>\n\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 200, paddingLeft: 150, paddingTop: 8}}> \n                   \n                        <center style={{width: 200, fontSize: \"22px\", fontFamily: 'lato', color: \"#000000\", textAlign: \"center\"}}>Number fully <br/> vaccinated </center>\n  \n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row columns = {5} style = {{width: 1000, paddingLeft: 205, paddingTop: 0}}>\n                  <Grid.Column style = {{width: 200, paddingLeft: 0, paddingTop: 0}}> \n                    <div style = {{width: 200, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        <br/><br/><p style={{width: 200, fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Doses_Distributed\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  \n                  <Grid.Column style = {{width: 200, paddingLeft: 50, paddingTop: 0}}> \n                    <div style = {{width: 200, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received <br/> first dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                          \n                        <br/><br/><p style={{fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Doses_Administered\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 200, paddingLeft: 100, paddingTop: 0}}> \n                    <div style = {{width: 200, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Number received second dose <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        \n                        <br/><br/><p style={{fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Administered_Dose1\"])}</p><br/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 200, paddingLeft: 150, paddingTop: 0}}> \n                    <div style = {{width: 200, background: \"#e5f2f7\", height: 130}}>\n                      <Header style = {{textAlign: \"center\"}}>\n                        {/* <p style={{fontSize: \"24px\", fontFamily: 'lato', color: \"#004071\", textAlign: \"center\"}}> Newly distributed per 100K <br/><br/></p> */}\n                        <Header.Content style = {{paddingBottom: 5}}>\n                        \n                        <br/><br/><p style={{fontSize: \"28px\", fontFamily: 'lato', color: \"#000000\"}}>{numberWithCommas(vaccineData[\"_nation\"][\"Series_Complete_Yes\"].toFixed(0))}</p><br/>\n                        </Header.Content>\n                      </Header>\n                      </div>\n                    </Grid.Column>\n                </Grid.Row>                \n                <Grid.Row>\n                <Grid.Column style = {{width: 900, paddingLeft: 205, paddingTop: 18}}> \n                    <div style = {{width: 900}}>\n                      <Header>\n                        <div>\n                          <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 900}}>\n                            Percent of the U.S. population partially vaccinated<br/>\n                            <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                              One of two doses of Pfizer or Moderna vaccine received\n                            </Header.Content>\n                          </Header>\n                        </div>\n                        <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                          <Progress style = {{width: 900}} percent={((vaccineData[\"_nation\"][\"PercentAdministeredPartial\"]).toFixed(1))} size='large' color='green' progress/>\n                        </Header.Content>\n\n                        <div>\n                          <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 900}}>\n                            Percent of the U.S. population fully vaccinated<br/>\n                            <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                              Both doses of Pfizer or Moderna vaccine or one and only dose of Johnson and Johnson received\n                            </Header.Content>\n                          </Header>\n                        </div>\n                        <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                          <Progress style = {{width: 900}} percent={((vaccineData[\"_nation\"][\"Series_Complete_Pop_Pct\"]).toFixed(1))} size='large' color='green' progress/>\n                        </Header.Content>\n\n                        <div>\n                          <Header style={{fontSize: \"22px\", fontFamily: 'lato', color: \"#004071\", width: 900}}>\n                            Percent of the U.S. population that received at least one dose<br/>\n                            <Header.Content style={{paddingBottom: 5, fontWeight: 300, paddingTop: 0, paddingLeft: 0,fontSize: \"19px\"}}>\n                              One or more doses of any of the authorized vaccines received\n                            </Header.Content>\n                          </Header>\n                        </div>\n                        <Header.Content style = {{paddingBottom: 0, paddingTop: 0}}>\n                          <Progress style = {{width: 900}} percent={((vaccineData[\"_nation\"][\"PercentAdministeredPartial\"] + vaccineData[\"_nation\"][\"Series_Complete_Pop_Pct\"]).toFixed(1))} size='large' color='green' progress/>\n                        </Header.Content>\n                      </Header>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n              <Grid>\n\n                <Grid.Row >\n                  <Accordion style = {{paddingTop: 0, paddingLeft: 204, paddingBottom: 0}}defaultActiveIndex={1} panels={[\n                            {\n                                key: 'acquire-dog',\n                                title: {\n                                    content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                    icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n                                      <Header.Content style={{fontWeight: 300, paddingTop: 7, paddingLeft: 5,fontSize: \"19px\", width: 900}}>\n                                        Data are from the <a href = 'https://covid.cdc.gov/covid-data-tracker/#vaccinations' target=\"_blank\" rel=\"noopener noreferrer\">CDC COVID Data Tracker</a>, data as of {vaccineDate} <br/>\n                                        <b><em> {vaxVarMap[\"Doses_Distributed\"].name} </em></b> {vaxVarMap[\"Doses_Distributed\"].definition} <br/>\n                                        <b><em> {vaxVarMap[\"Doses_Administered\"].name} </em></b> {vaxVarMap[\"Doses_Administered\"].definition} <br/>\n                                        <b><em> {vaxVarMap[\"Administered_Dose1\"].name} </em></b> {vaxVarMap[\"Administered_Dose1\"].definition} <br/>\n                                        <b><em> {vaxVarMap[\"Series_Complete_Yes\"].name} </em></b> {vaxVarMap[\"Series_Complete_Yes\"].definition} <br/>\n\n\n                                      </Header.Content>\n                                    ),\n                                  },\n                              }\n                          ]\n                          } /> \n                  </Grid.Row>\n                </Grid>\n                \n\n                <div id=\"cases\" style = {{height: 45}}> </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <center style={{paddingLeft: 190}}><Divider style={{width: 900}}/> </center>\n            <div style={{paddingBottom:'0em', paddingLeft: \"12rem\", paddingRight: \"1rem\"}}>\n              {/* <Header as='h2' style={{color: mortalityColor[1], textAlign:'center',fontSize:\"22pt\", paddingTop: 30}}>\n                <Header.Content>\n                  How have cases in the U.S. changed over time?\n                </Header.Content>\n              </Header> */}\n                <Grid>\n                    <Grid.Row>\n                    {/* <Grid.Row column = {1} style={{textAlign:'center', width: 800, paddingTop: '2rem', paddingLeft: '10rem'}}>\n                    <Header.Content x={0} y={20} style={{ fontSize: '18pt', marginLeft: 0, paddingBottom: 0, fontWeight: 600}}>Average Daily COVID-19 Cases </Header.Content>\n                    </ Grid.Row> */}\n                    {/* <Grid.Row style={{textAlign:'center', paddingLeft: '22rem', paddingRight: '22rem'}}>                \n                    <Menu pointing secondary widths={3}> \n                    <Menu.Item name='All' />\n                    active={activeItem==='all'} onClick={setActiveItem('all')}\n                    <Menu.Item name='90 Days' />\n                    <Menu.Item name='14 Days' />\n                    </ Menu>\n                    </ Grid.Row>\n                    <Grid.Row columns={1}> */}\n                    <ChartSection data={dataTS[\"_nation\"]} barColor={mortalityColor[0]} lineColor={[mortalityColor[1]]} \n                               tickFormatter={caseTickFmt} chart='case' dailyCases={dailyCases} monthNames={monthNames} \n                               mean7dayCases={mean7dayCases} percentChangeCases={percentChangeCases} dailyDeaths={dailyDeaths}\n                               mortalityMean={mortalityMean} percentChangeMortality={percentChangeMortality}/>\n                    <Grid.Row>\n                          {/* <Accordion style = {{paddingLeft: '3rem'}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                  <Header as='h2' style={{fontWeight: 400, paddingTop: 0, paddingBottom: 20}}>\n                                  <Header.Content  style={{fontSize: \"14pt\"}}>\n                                    <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\", paddingLeft: '2rem', paddingRight:'4rem'}}>\n                                      This figure shows the trend of daily COVID-19 cases in U.S.. The bar height reflects the number of \n                                      new cases per day and the line depicts 7-day moving average of daily cases in U.S.. There were {numberWithCommas(dailyCases)} new COVID-19 cases reported on {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}, with \n                                      an average of {numberWithCommas(mean7dayCases)} new cases per day reported over the past 7 days. \n                                      We see a {percentChangeCases.includes(\"-\")? \"decrease of approximately \" + percentChangeCases.substring(1): \"increase of approximately \" + percentChangeCases} in \n                                      the average new cases over the past 14-day period. \n                                      <br/>\n                                      <br/>\n                                      *14-day period includes {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getFullYear()} to {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}.\n\n                                    </Header.Subheader>\n                                  </Header.Content>\n                                </Header>\n                              ),\n                            },\n                        }\n                    ]\n                  } />\n                  <Accordion style = {{paddingLeft: '3rem'}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                  <Header as='h2' style={{fontWeight: 400, paddingTop: 0, paddingBottom: 20}}>\n                                  <Header.Content  style={{fontSize: \"14pt\"}}>\n                                    <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\", paddingLeft: '2rem', paddingRight:'4rem'}}>\n                                          This figure shows the trend of daily COVID-19 deaths in U.S.. The bar height reflects the number of new deaths \n                                          per day and the line depicts 7-day moving average of daily deaths in U.S.. There were {dailyDeaths} new deaths \n                                          associated with COVID-19 reported on {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}, with \n                                          an average of {mortalityMean} new deaths per day reported over the past 7 days. \n                                          We see {percentChangeMortality.includes(\"-\")? \"a decrease of approximately \" + percentChangeMortality.substring(1): \"an increase of approximately \" + percentChangeMortality} in the average new deaths over the past 14-day period. \n                                          <br/>\n                                          <br/>\n                                          *14-day period includes {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getFullYear()} to {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}.\n                                        \n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } /> */}\n                  </Grid.Row>\n                          {/* </div> */}\n                        {/* </ Grid.Column> */}\n                    </Grid.Row>\n                </Grid>\n            </div>\n\n            \n            {/* <div id=\"deaths\" style = {{height: 45}}> </div> */}\n\n            {/* <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900}}/> </center> */}\n            {/* <div style={{paddingBottom:'0em', paddingLeft: \"12rem\", paddingRight: \"1em\"}}> */}\n            {/* <Header as='h2' style={{color: mortalityColor[1], textAlign:'center', fontSize:\"22pt\", paddingTop: 30}}>\n                <Header.Content>\n                  How have deaths in the U.S. changed over time? \n                </Header.Content>\n              </Header>  */}\n\n              {/* <Grid>\n                    <Grid.Row column = {1} >\n                      <DeathChart data={dataTS[\"_nation\"]} barColor={mortalityColor[0]} lineColor={[mortalityColor[1]]} \n                          ticks={caseTicks} tickFormatter={caseTickFmt} />\n\n                      <Accordion style = {{paddingTop: \"19px\"}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 0, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                          This figure shows the trend of daily COVID-19 deaths in the U.S.. The bar height reflects the number of new deaths \n                                          per day and the line depicts the 7-day moving average of daily deaths in the U.S.. There were {dailyDeaths} new deaths \n                                          associated with COVID-19 reported on {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}, with \n                                          an average of {mortalityMean} new deaths per day reported over the past 7 days. \n                                          We see {percentChangeMortality.includes(\"-\")? \"a decrease of approximately \" + percentChangeMortality.substring(1): \"an increase of approximately \" + percentChangeMortality} in the average new deaths over the past 14-day period. \n                                          <br/>\n                                          <br/>\n                                          *14-day period includes {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getFullYear()} to {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}.\n                                        \n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n                          <Accordion style = {{paddingTop: \"19px\"}}>\n                            <Accordion.Title\n                              active={accstate.activeIndex === 0}\n                              index={0}\n                              onClick={dealClick}\n                              style ={{color: \"#397AB9\", fontSize: 19, paddingLeft: 30}}\n                            >\n                            <Icon id=\"half\" name='dropdown' />\n                              About the data\n                            </Accordion.Title>\n                              <Accordion.Content active={accstate.activeIndex === 0}>\n                                <Header as='h2' style={{fontWeight: 400, paddingLeft: 35, paddingTop: 0, paddingBottom: 20}}>\n                                  <Header.Content  style={{fontSize: \"14pt\"}}>\n                                    <Header.Subheader style={{color: '#000000', width: 800, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                      This figure shows the trend of daily COVID-19 deaths in the U.S.. The bar height reflects the number of new deaths \n                                      per day and the line depicts the 7-day moving average of daily deaths in the U.S.. There were {dailyDeaths} new deaths \n                                      associated with COVID-19 reported on {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}, with \n                                      an average of {mortalityMean} new deaths per day reported over the past 7 days. \n                                      We see {percentChangeMortality.includes(\"-\")? \"a decrease of approximately \" + percentChangeMortality.substring(1): \"an increase of approximately \" + percentChangeMortality} in the average new deaths over the past 14-day period. \n                                      <br/>\n                                      <br/>\n                                      *14-day period includes {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 15].t*1000).getFullYear()} to {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()}.\n                                    \n                                    </Header.Subheader>\n                                  </Header.Content>\n                                </Header>\n                            </Accordion.Content>\n\n                          </Accordion> \n                          </Grid.Column> \n                    </Grid.Row>\n                </Grid> */}\n\n            {/* </div>   */}\n            <div id=\"half\" style = {{height: 45}}> </div>\n\n            <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900}}/> </center>\n            <div style={{paddingTop:'1em', paddingLeft: \"13em\", paddingRight: \"2em\"}}>\n              <Header as='h2' style={{paddingTop: 17, textAlign:'center',fontSize:\"22pt\", color: mortalityColor[1]}}>\n                <Header.Content style = {{paddingLeft: 54}}>\n                  Where are cases and deaths occurring?\n                  <Header.Subheader style={{ width: 810, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:28, paddingLeft: 2 }}>\n\n                    Cases and deaths attributed to COVID-19 are rapidly rising in some counties, and \n                    the geographic distribution of the hardest-hit counties is changing.\n                    Approximately 50% of new cases on {monthNames[new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getMonth()] + \" \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getDate() + \", \" + new Date(dataTS['_nation'][dataTS['_nation'].length - 1].t*1000).getFullYear()} in \n                    the United States were attributed to {(states50[0][\"statenames\"].split(\",\")).length} states: <br/>\n\n                    <br/>\n                  <center > <b style = {{fontSize:\"18pt\"}}>{states50[0][\"statenames\"]}</b> </center>\n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n            </div>\n            <div id=\"who\" style = {{height: 45}}> </div>\n\n\n            <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900}}/> </center>\n\n            \n            <div style={{paddingTop:'1em', paddingLeft: \"13em\", paddingRight: \"2em\"}}>\n              <Header as='h2' style={{paddingTop: 17, textAlign:'center',fontSize:\"22pt\", color: mortalityColor[1]}}>\n                <Header.Content style = {{paddingLeft: 50}}>\n                &nbsp;Who is impacted by COVID-19?\n                  \n                </Header.Content>\n              </Header>\n            </div>\n            <Grid.Row columns = {1} style = {{width: 1000, paddingTop: 15}}>\n                  <Grid.Column style = {{width: 810, paddingLeft: 180}}>\n                    <div style={{paddingTop:'0em'}}>\n                      <Header.Subheader style={{width: 850, color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: 60, paddingRight: 10, paddingBottom: 20}}>\n                        <center> <b style= {{paddingLeft: 20, fontSize: \"18pt\"}}> COVID-19 Cases and U.S. Population <br/> distribution by race & ethnicity.</b> </center> \n                        <br/><br/>\n                  While people of all races are impacted by COVID-19, some subgroups are disproportionally \n                  The {Object.keys(demog_descriptives['Race'][0][\"cases\"])[0]} population has the highest proportion, with {numberWithCommas((demog_descriptives['Race'][0][\"cases\"][Object.keys(demog_descriptives['Race'][0][\"cases\"])[0]]).toFixed(0))}% of all cases.  \n                  around {(demog_descriptives['Race'][0][\"cases\"][Object.keys(demog_descriptives['Race'][0][\"cases\"])[0]] / demog_descriptives['Race'][0][\"cases\"][Object.keys(demog_descriptives['Race'][0][\"cases\"])[1]]).toFixed(0)} times that of the {Object.keys(demog_descriptives['Race'][0][\"cases\"])[1]} population, the group that make up the fewest of total cases. \n                  \n                      </Header.Subheader>\n                      \n                    </div>\n                  </Grid.Column>\n                  \n              </Grid.Row>\n\n              {/* <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900}}/> </center> */}\n              <Grid>\n                \n                \n                <Grid.Row columns = {2} style = {{width: 1360, paddingLeft: 120}} >\n                  <Grid.Column rows = {2} >\n\n                    <Grid.Row style = {{width: 550}}>\n                      <Grid.Column style = {{width: 550, paddingLeft: 0}}>\n                        <div>\n                          <svg width=\"550\" height=\"80\">\n\n                              <rect x={80} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[0], strokeWidth:1, stroke: pieChartRace[0]}}/>                    \n                              <text x={110} y={35} style={{fontSize: '16px'}}> White </text>  \n\n                              <rect x={235} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[1], strokeWidth:1, stroke: pieChartRace[1]}}/>                    \n                              <text x={265} y={35} style={{fontSize: '16px'}}> African American </text>    \n\n                              <rect x={430} y={20} width=\"20\" height=\"20\" style={{fill: pieChartRace[2], strokeWidth:1, stroke: pieChartRace[2]}}/>                    \n                              <text x={460} y={35} style={{fontSize: '16px'}}> Hispanic </text>   \n\n                              <rect x={167.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[3], strokeWidth:1, stroke: pieChartRace[3]}}/>                    \n                              <text x={197.6} y={70} style={{fontSize: '16px'}}> Asian </text>  \n\n                              <rect x={322.5} y={55} width=\"20\" height=\"20\" style={{fill: pieChartRace[4], strokeWidth:1, stroke: pieChartRace[4]}}/>                    \n                              <text x={352.5} y={70} style={{fontSize: '16px'}}> American Native </text>                    \n\n\n                              {/* {_.map(pieChartRace, (color, i) => {\n                                return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                              })}  */}\n                          </svg>\n                        </div>\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid>\n                      <Grid.Row columns = {2} style = {{width: 900}}>\n                        <Grid.Column style = {{width: 300}}>\n                          <Race pop = {false}/>\n                        </Grid.Column>\n                        <Grid.Column style = {{width: 300, paddingLeft: 20}}>\n                          <Race pop = {true}/> \n                        </Grid.Column>\n                      </Grid.Row>\n                      {/* <Grid.Row style = {{width: 900}}>\n                        <Grid.Column style = {{width: 450, paddingLeft: 0}}>\n                            <div>\n                              <svg width=\"450\" height=\"145\">\n\n                                  <text x={280} y={15} style={{fontSize: '16px'}}> Hispanic</text>                    \n                                  <text x={280} y={35} style={{fontSize: '16px'}}> American Native</text>                    \n                                  <text x={280} y={55} style={{fontSize: '16px'}}> Asian</text>                    \n                                  <text x={280} y={75} style={{fontSize: '16px'}}> African American</text>                    \n                                  <text x={280} y={95} style={{fontSize: '16px'}}> White</text>                    \n\n\n                                  {_.map(pieChartRace, (color, i) => {\n                                    return <rect key={i} x={250} y={20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                                  })} \n                              </svg>\n                            </div>\n                          </Grid.Column>\n                      </Grid.Row> */}\n                      </Grid>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 450}}>\n                    <div style={{paddingTop: 50, paddingLeft: 80}}>\n                      <Header.Subheader style={{width: 400, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:28, paddingLeft: 6}}>\n                        {/* <center> <b style= {{fontSize: \"18pt\", paddingLeft: 0}}> Risks for COVID-19 Infection by Race/Ethnicity</b> </center>  */}\n                        <br/>\n                        <p style = {{paddingLeft: 20}}>\n                          Comparing with White Americans<br/>\n                          <ul>\n                            <li> African Americans: {(nationalDemog['race'][0]['African American'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) == 1? \"\": \n                                (nationalDemog['race'][0]['African American'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) + \" \"}\n                                {(nationalDemog['race'][0]['African American'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1)  == 1 ? \"equal\" :\n                                (nationalDemog['race'][0]['African American'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1)  < 1? \"times lower\" : \"times higher\"} risk\n                                <br/>\n                            </li>\n                            <li> Hispanic Americans: {(nationalDemog['race'][0]['Hispanic'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) == 1? \"\": \n                                (nationalDemog['race'][0]['Hispanic'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) + \" \"}\n                                {(nationalDemog['race'][0]['Hispanic'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1)  == 1 ? \"equal\" :\n                                (nationalDemog['race'][0]['Hispanic'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1)  < 1? \"times lower\" : \"times higher\"} risk\n                                <br/>\n                            </li>\n                            <li> Asian Americans: {(nationalDemog['race'][0]['Asian'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) == 1? \"\": \n                                (nationalDemog['race'][0]['Asian'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) + \" \"}\n                                {(nationalDemog['race'][0]['Asian'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1)  == 1 ? \"equal\" :\n                                (nationalDemog['race'][0]['Asian'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) < 1? \"times lower\" : \"times higher\"} risk\n                                <br/>\n                            </li>\n                            <li> Native Americans: {(nationalDemog['race'][0]['American Native'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) == 1? \"\": \n                                (nationalDemog['race'][0]['American Native'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) + \" \"}\n                                {(nationalDemog['race'][0]['American Native'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) == 1 ? \"equal\" :\n                                (nationalDemog['race'][0]['American Native'][0]['caserate']/nationalDemog['race'][0]['White'][0]['caserate']).toFixed(1) < 1? \"times lower\" : \"times higher\"} risk\n                            </li>\n                          </ul>\n                        {/* While people of all races, ages, and sex are impacted by COVID-19, some subgroups are disproportionally \n                        affected. {Object.keys(demog_descriptives['Race'][0])[0]} are seeing the largest mortality rate, with {numberWithCommas((demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[0]]).toFixed(0))} cases per 100K individuals, \n                        around {(demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[0]] / demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[1]]).toFixed(0)} times that of {Object.keys(demog_descriptives['Race'][0])[1]}, the groups with the lowest mortality rate.  */}\n                        </p>\n                          \n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n              <Grid.Row>\n                      <Accordion style = {{paddingTop: 30, paddingLeft: 190, paddingBottom: 45}}defaultActiveIndex={1} panels={[\n                            {\n                                key: 'acquire-dog',\n                                title: {\n                                    content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                    icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n\n                                      <div style = {{fontSize: \"19px\", paddingLeft: 5}}>\n                                        \n\n                                        <Grid.Row style= {{paddingTop: 0, paddingBottom: 25}}> \n                                          <Header.Content style={{fontWeight: 400, fontSize: \"14pt\", paddingTop: 7, paddingLeft: 0, lineHeight: \"18pt\", width: 900}}>\n                                            The United States reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {nationalDemog['race'][0]['Unknown'][0]['availableDeaths'] + \"%\"} of deaths in the nation.\n                                            <br/>\n                                            <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://www.cdc.gov/diabetes/data/index.html\" target = \"_blank\" rel=\"noopener noreferrer\"> The CDC </a>\n                                            <br/><b>Cases by Race & Ethnicity data as of:</b> {nationalDemogDate}.<br/>\n\n                                          </Header.Content>\n                                        </Grid.Row>\n\n                                      </div>\n                                    ),\n                                  },\n                              }\n                          ]\n\n                          } /> \n                        \n                        </Grid.Row>\n\n\n\n              {/* <center style={{paddingLeft: 190}}><Divider style={{width: 900}}/> </center> */}\n                \n\n\n\n\n              <center style={{paddingLeft: 190}}><Divider style={{width: 900}}/> </center>\n\n              \n              <Grid.Row columns = {1} style = {{width: 1000, paddingTop: 15}}>\n                  <Grid.Column style = {{width: 810, paddingLeft: 330}}>\n                    <div style={{paddingTop:0}}>\n                      <Header.Subheader style={{width: 560, color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: 61, paddingRight: \"1em\", paddingBottom: 0}}>\n                        <center> <b style= {{width: 560, fontSize: \"18pt\"}}> COVID-19 Death Rate by Race & Ethnicity</b> </center> \n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                  \n              </Grid.Row>\n            <div style={{paddingTop:0, paddingLeft: \"13em\", paddingRight: \"2em\"}}>\n              <Header as='h2' style={{paddingTop: 0, textAlign:'center',fontSize:\"22pt\", color: mortalityColor[1]}}>\n                <Header.Content style = {{paddingLeft: 50}}>\n                  <Header.Subheader style={{width: 810, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:0, paddingBottom:28, paddingLeft: 6}}>\n                  {/* <center> <b style= {{fontSize: \"18pt\", paddingLeft: -3}}>Cases and Deaths by Race </b> </center>  */}\n                  <br/><br/>\n                  While people of all races are impacted by COVID-19, some subgroups are disproportionally \n                  affected. The {Object.keys(demog_descriptives['Race'][1][\"deaths\"])[0]} population is seeing the largest mortality rate, with {numberWithCommas((demog_descriptives['Race'][1][\"deaths\"][Object.keys(demog_descriptives['Race'][1][\"deaths\"])[0]]).toFixed(0))} cases per 100K individuals, \n                  around {(demog_descriptives['Race'][1][\"deaths\"][Object.keys(demog_descriptives['Race'][1][\"deaths\"])[0]] / demog_descriptives['Race'][1][\"deaths\"][Object.keys(demog_descriptives['Race'][1][\"deaths\"])[1]]).toFixed(0)} times that of the {Object.keys(demog_descriptives['Race'][1][\"deaths\"])[1]} population, the group with the lowest mortality rate. \n                    \n                    \n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n            </div>\n            \n              \n                \n                \n                <Grid>\n                  \n\n\n                  {/* <Grid.Row columns = {2} style = {{width: 1000}}>\n                    <Grid.Column style = {{width: 450, paddingLeft: 300}}>\n                        <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: \"2em\", paddingRight: \"1em\", paddingBottom: -10}}>\n                          <center> <b style= {{fontSize: \"18pt\"}}>Deaths by Race</b> </center> \n                          <br/>\n                        </Header.Subheader>\n                    </Grid.Column>\n                    <Grid.Column style = {{width: 450, paddingLeft: 100}}>\n                          <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: \"2em\", paddingRight: \"1em\", paddingBottom: -10}}>\n                            <center> <b style= {{fontSize: \"18pt\"}}></b> </center> \n                            <br/>\n                          </Header.Subheader>\n                    </Grid.Column>\n                  </Grid.Row> */}\n                  {/* <div style={{paddingLeft: \"6em\", paddingRight: \"0em\"}}></div> */}\n                  \n                  \n                  <Grid.Row columns = {2} style = {{width: 1000}}>\n                    <Grid.Column style = {{width: 450, paddingLeft: 120}}>\n                      <div style={{paddingLeft: \"6em\", paddingRight: \"0em\"}}>\n\n                      <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={450}\n                            height={230}\n                            domainPadding={25}\n                            minDomain={{y: props.ylog?1:0}}\n                            padding={{left: 180, right: 40, top: 15, bottom: 1}}\n                            style = {{fontSize: \"14pt\"}}\n                            containerComponent={<VictoryContainer responsive={false}/>}\n                          >\n                            <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                            <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                            <VictoryGroup offset={13}>\n                            <VictoryBar\n                              horizontal\n                              barWidth={20}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0))}\n                              data={[\n                                      {key: nationalDemog['race'][0]['American Native'][0]['demogLabel'], 'value': nationalDemog['race'][0]['American Native'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['Asian'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Asian'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['Hispanic'][0]['demogLabel'], 'value': nationalDemog['race'][0]['Hispanic'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['African American'][0]['demogLabel'], 'value': nationalDemog['race'][0]['African American'][0]['deathrate']},\n                                      {key: nationalDemog['race'][0]['White'][0]['demogLabel'], 'value': nationalDemog['race'][0]['White'][0]['deathrate']},\n                                  \n\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                              style={{\n                                data: {\n                                  fill: mortalityColor[1]\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n\n                          \n\n                            </VictoryGroup>\n                          </VictoryChart>\n                          <Header.Content style = {{paddingLeft: 160, width: 450}}>\n                              <Header.Content style={{ fontWeight: 300, paddingTop: 20, paddingBottom:5, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>Deaths per 100K residents</b>\n                              </Header.Content>\n                          </Header.Content>\n                      </div>\n\n                      <Grid>\n                      <Grid.Row>\n                        <Accordion style = {{paddingTop: 50, paddingLeft: 98, paddingBottom: 45}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                      icon: 'dropdown',\n                                  },\n                                  content: {\n                                      content: (\n                                          <Header as='h2' style={{paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                            <Header.Content  style={{fontSize: \"14pt\"}}>\n                                              <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                                The United States reports deaths by combined race and ethnicity groups. The chart shows race and ethnicity groups that constitute at least 1% of the state population and have 30 or more deaths. Race and ethnicity data are known for {nationalDemog['race'][0]['Unknown'][0]['availableDeaths'] + \"%\"} of deaths in the nation.\n                                                <br/>\n                                                <br/> <i>Data source</i>: <a style ={{color: \"#397AB9\"}} href = \"https://covid.cdc.gov/covid-data-tracker/#demographics\" target = \"_blank\" rel=\"noopener noreferrer\"> The CDC </a>\n                                                <br/><b>Deaths by Race & Ethnicity data as of:</b> {nationalDemogDate}.<br/>\n                                              </Header.Subheader>\n                                            </Header.Content>\n                                          </Header>\n                                      ),\n                                    },\n                                }\n                            ]\n\n                            } />\n                      </Grid.Row>\n                    </Grid>\n                    </Grid.Column>\n                    <Grid.Column style = {{width: 450}}>\n                      {/* <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900, paddingTop: 40}}/> </center> */}\n                      \n                        <div style={{paddingLeft: 140, paddingRight: \"0em\"}}>\n                          {/* <Header.Subheader style={{width: 400, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:28, paddingLeft: 6}}>\n                            <center> <b style= {{fontSize: \"18pt\", paddingLeft: -3}}> </b> </center> \n                            <br/><br/>\n                            While people of all races, ages, and sex are impacted by COVID-19, some subgroups are disproportionally \n                            affected. {Object.keys(demog_descriptives['Race'][0])[0]} are seeing the largest mortality rate, with {numberWithCommas((demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[0]]).toFixed(0))} cases per 100K individuals, \n                            around {(demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[0]] / demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[1]]).toFixed(0)} times that of {Object.keys(demog_descriptives['Race'][0])[1]}, the groups with the lowest mortality rate. \n                            \n                              \n                          </Header.Subheader> */}\n                          <Header.Subheader style={{width: 400, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:28, paddingLeft: 6}}>\n                            {/* <center> <b style= {{fontSize: \"18pt\", paddingLeft: 0}}> Risks for COVID-19 Deaths by Race/Ethnicity</b> </center>  */}\n                            \n                            <p style = {{paddingLeft: 20}}>\n                              <b>Compared with death rates in White Americans, death rates* are: </b><br/>\n                              <ul>\n                                <li>{(nationalDemog['race'][0]['African American'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1? \"\": \n                                  (nationalDemog['race'][0]['African American'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                                  {(nationalDemog['race'][0]['African American'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1 ? \"equal\" :\n                                  (nationalDemog['race'][0]['African American'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1)  < 1? \"times lower\" : \"times higher\"} in African Americans\n                                  <br/>\n                                </li>\n                                <li>{(nationalDemog['race'][0]['Hispanic'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1? \"\": \n                                  (nationalDemog['race'][0]['Hispanic'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                                  {(nationalDemog['race'][0]['Hispanic'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1 ? \"equal\" :\n                                  (nationalDemog['race'][0]['Hispanic'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1)  < 1? \"times lower\" : \"times higher\"} in Hispanic Americans\n                                  <br/>\n                                </li>\n                                <li>{(nationalDemog['race'][0]['Asian'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1? \"\": \n                                  (nationalDemog['race'][0]['Asian'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                                  {(nationalDemog['race'][0]['Asian'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1 ? \"equal\" :\n                                  (nationalDemog['race'][0]['Asian'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1)  < 1? \"times lower\" : \"times higher\"} in Asian Americans\n                                  <br/>\n                                </li>\n                                <li>{(nationalDemog['race'][0]['American Native'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1? \"\": \n                                  (nationalDemog['race'][0]['American Native'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) + \" \"}\n                                  {(nationalDemog['race'][0]['American Native'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1) == 1 ? \"equal\" :\n                                  (nationalDemog['race'][0]['American Native'][0]['deathrate']/nationalDemog['race'][0]['White'][0]['deathrate']).toFixed(1)  < 1? \"times lower\" : \"times higher\"} in Native Americans\n                                </li>\n                              </ul>\n\n                            <text style = {{fontSize: \"13px\"}}>\n                            *The Hispanic population consists of mostly younger age groups. \n                            <br/>\n                            *These are crude death rates based on cumulative deaths since January 2020. Age differences, such as the lower average age of Hispanic Americans, are not considered due to data limitations.\n                            </text>\n                            {/* While people of all races, ages, and sex are impacted by COVID-19, some subgroups are disproportionally \n                            affected. {Object.keys(demog_descriptives['Race'][0])[0]} are seeing the largest mortality rate, with {numberWithCommas((demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[0]]).toFixed(0))} cases per 100K individuals, \n                            around {(demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[0]] / demog_descriptives['Race'][0][Object.keys(demog_descriptives['Race'][0])[1]]).toFixed(0)} times that of {Object.keys(demog_descriptives['Race'][0])[1]}, the groups with the lowest mortality rate.  */}\n                            </p>\n                              \n                          </Header.Subheader>\n                        \n                        </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                  \n\n              </Grid>\n              \n              \n\n\n              \n\n              <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900, paddingTop: 0}}/> </center>\n\n              <Grid.Row columns = {1} style = {{width: 1000, paddingTop: 15}}>\n                  <Grid.Column style = {{width: 810, paddingLeft: 430}}>\n                    <div style={{paddingTop:'0em'}}>\n                      <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: 61, paddingRight: \"1em\", paddingBottom: 0}}>\n                        <center> <b style= {{fontSize: \"18pt\"}}>Cases and Deaths by Age</b> </center> \n                        <br/>\n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                  \n              </Grid.Row>\n              <div style={{paddingTop:5, paddingLeft: \"13em\", paddingRight: \"2em\"}}>\n                <Header as='h2' style={{paddingTop: 7, textAlign:'center',fontSize:\"22pt\", color: mortalityColor[1]}}>\n                  <Header.Content style = {{paddingLeft: 50}}>\n                    <Header.Subheader style={{width: 810, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:16, paddingBottom:28, paddingLeft: 6}}>\n                      \n                      Cases are currently highest in the {Object.keys(demog_descriptives['Age'][0][\"cases\"])[0]} age group ({numberWithCommas((demog_descriptives['Age'][0][\"cases\"][Object.keys(demog_descriptives['Age'][0][\"cases\"])[0]]).toFixed(0))}% of all cases), \n                      followed by the {Object.keys(demog_descriptives['Age'][0][\"cases\"])[1]} age group ({numberWithCommas((demog_descriptives['Age'][0][\"cases\"][Object.keys(demog_descriptives['Age'][0][\"cases\"])[1]]).toFixed(0))}% of all cases). \n                      {demog_descriptives['AgeDescription'][0][\"CasesDescription\"] != \"\" ? \n                      \" They are disproportionately high in the \" + demog_descriptives['AgeDescription'][0][\"CasesDescription\"] + \", compared to those age groups' shares of the U.S. population.\":\"\"}\n                        \n                      \n                      <br/>\n                      <br/>\n                      Deaths increase in prevalence with age and are highest in the {Object.keys(demog_descriptives['Age'][1][\"deaths\"])[0]} age group ({numberWithCommas((demog_descriptives['Age'][1][\"deaths\"][Object.keys(demog_descriptives['Age'][1][\"deaths\"])[0]]).toFixed(0))}% of all deaths), \n                      {demog_descriptives['AgeDescription'][0][\"DeathsDescription\"] != \"\" ? \n                      \" Deaths are disproportionately high in the \" + demog_descriptives['AgeDescription'][1][\"DeathsDescription\"] + \", compared to those age groups' shares of the U.S. population.\":\"\"} \n\n\n                    </Header.Subheader>\n                  </Header.Content>\n                </Header>\n              </div>\n\n              <Grid style = {{paddingTop: 0, paddingBottom: 0}}>\n                <Grid.Row style = {{width: 1000, paddingLeft: 305}}>\n                  <svg width = \"1000\" height = \"40\">\n                    <rect x = {40} y = {12} width = \"20\" height = \"20\" style = {{fill: casesColor[1], strokeWidth:1, stroke: casesColor[1]}}/>\n                    <text x = {65} y = {30} style = {{ fontSize: \"19px\"}}> Percent of Cases</text>\n                    <rect x = {250} y = {12} width = \"20\" height = \"20\" style = {{fill: mortalityColor[1], strokeWidth:1, stroke: mortalityColor[1]}}/>\n                    <text x = {275} y = {30} style = {{ fontSize: \"19px\"}}> Percent of Deaths </text>\n                    <rect x = {455} y = {12} width = \"20\" height = \"20\" style = {{fill: \"#D3D3D3\", strokeWidth:1, stroke: \"#D3D3D3\"}}/>\n                    <text x = {480} y = {30} style = {{ fontSize: \"19px\"}}> Percent of Population</text>\n                  </svg>\n                </Grid.Row>\n                <Grid.Row columns = {2} style = {{width: 1000}}>\n                  <Grid.Column style = {{width: 450, paddingLeft: 300}}>\n                      <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: \"2em\", paddingRight: \"1em\", paddingBottom: -10}}>\n                        <center> <b style= {{fontSize: \"18pt\"}}>Cases by Age</b> </center> \n                        <br/>\n                      </Header.Subheader>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 450, paddingLeft: 100}}>\n                        <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: \"2em\", paddingRight: \"1em\", paddingBottom: -10}}>\n                          <center> <b style= {{fontSize: \"18pt\"}}>Deaths by Age</b> </center> \n                          <br/>\n                        </Header.Subheader>\n                  </Grid.Column>\n                </Grid.Row>\n                {/* <div style={{paddingLeft: \"6em\", paddingRight: \"0em\"}}></div> */}\n                \n                <Grid.Row columns = {2} style = {{width: 1000}}>\n                  <Grid.Column style = {{width: 450, paddingLeft: 100}}>\n                  <div style={{paddingLeft: \"6em\", paddingRight: \"0em\"}}>\n\n                  <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={450}\n                          height={550}\n                          domainPadding={25}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 180, right: 40, top: 15, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryGroup offset={23}>\n                          <VictoryBar\n                            horizontal\n                            barWidth={20}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                            data={[\n                              {key: nationalDemog['age'][0]['0 - 4'][0]['demogLabel'], 'value': nationalDemog['age'][0]['0 - 4'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['5 - 17'][0]['demogLabel'], 'value': nationalDemog['age'][0]['5 - 17'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['18 - 29'][0]['demogLabel'], 'value': nationalDemog['age'][0]['18 - 29'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['30 - 39'][0]['demogLabel'], 'value': nationalDemog['age'][0]['30 - 39'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['40 - 49'][0]['demogLabel'], 'value': nationalDemog['age'][0]['40 - 49'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['50 - 64'][0]['demogLabel'], 'value': nationalDemog['age'][0]['50 - 64'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['65 - 74'][0]['demogLabel'], 'value': nationalDemog['age'][0]['65 - 74'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['75 - 84'][0]['demogLabel'], 'value': nationalDemog['age'][0]['75 - 84'][0]['percentCases']},\n                              {key: nationalDemog['age'][0]['85+'][0]['demogLabel'], 'value': nationalDemog['age'][0]['85+'][0]['percentCases']},\n                                 \n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: casesColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n\n                          <VictoryBar\n                            horizontal\n                            barWidth={20}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                            data={[\n                              {key: nationalDemog['age'][0]['0 - 4'][0]['demogLabel'], 'value': nationalDemog['age'][0]['0 - 4'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['5 - 17'][0]['demogLabel'], 'value': nationalDemog['age'][0]['5 - 17'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['18 - 29'][0]['demogLabel'], 'value': nationalDemog['age'][0]['18 - 29'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['30 - 39'][0]['demogLabel'], 'value': nationalDemog['age'][0]['30 - 39'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['40 - 49'][0]['demogLabel'], 'value': nationalDemog['age'][0]['40 - 49'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['50 - 64'][0]['demogLabel'], 'value': nationalDemog['age'][0]['50 - 64'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['65 - 74'][0]['demogLabel'], 'value': nationalDemog['age'][0]['65 - 74'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['75 - 84'][0]['demogLabel'], 'value': nationalDemog['age'][0]['75 - 84'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['85+'][0]['demogLabel'], 'value': nationalDemog['age'][0]['85+'][0]['percentPop']},\n                                 \n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: \"#D3D3D3\"\n                              }\n                            }}\n                            x=\"key\" \n                            y=\"value\"\n                          />\n\n                          </VictoryGroup>\n                        </VictoryChart>\n                              <Header.Content style = {{paddingLeft: 50, width: 450}}>\n                                  <Header.Content style={{ fontWeight: 300, paddingTop: 20, paddingBottom:28, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                                    <b>Percentage of COVID-19 Cases and Population</b>\n                                  </Header.Content>\n                              </Header.Content>\n                      \n                    </div>\n                    <Grid.Row>\n                        <Accordion style = {{paddingTop: 50, paddingLeft: 98, paddingBottom: 45}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                      icon: 'dropdown',\n                                  },\n                                  content: {\n                                      content: (\n                                          <Header as='h2' style={{paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                            <Header.Content  style={{fontSize: \"14pt\"}}>\n                                              <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                                <br/><b>Data as of:</b> {nationalDemogDate}.<br/>\n                                              </Header.Subheader>\n                                            </Header.Content>\n                                          </Header>\n                                      ),\n                                    },\n                                }\n                            ]\n\n                            } />\n                      </Grid.Row>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 450}}>\n                    {/* <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900, paddingTop: 40}}/> </center> */}\n                    \n                      <div style={{paddingLeft: 64, paddingRight: \"0em\"}}>\n                      \n                      <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={450}\n                          height={550}\n                          domainPadding={25}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 180, right: 40, top: 15, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryGroup offset={23}>\n                          <VictoryBar\n                            horizontal\n                            barWidth={20}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                            data={[\n                              {key: nationalDemog['age'][0]['0 - 4'][0]['demogLabel'], 'value': nationalDemog['age'][0]['0 - 4'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['5 - 17'][0]['demogLabel'], 'value': nationalDemog['age'][0]['5 - 17'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['18 - 29'][0]['demogLabel'], 'value': nationalDemog['age'][0]['18 - 29'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['30 - 39'][0]['demogLabel'], 'value': nationalDemog['age'][0]['30 - 39'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['40 - 49'][0]['demogLabel'], 'value': nationalDemog['age'][0]['40 - 49'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['50 - 64'][0]['demogLabel'], 'value': nationalDemog['age'][0]['50 - 64'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['65 - 74'][0]['demogLabel'], 'value': nationalDemog['age'][0]['65 - 74'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['75 - 84'][0]['demogLabel'], 'value': nationalDemog['age'][0]['75 - 84'][0]['percentDeaths']},\n                              {key: nationalDemog['age'][0]['85+'][0]['demogLabel'], 'value': nationalDemog['age'][0]['85+'][0]['percentDeaths']},\n                                 \n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n\n                          <VictoryBar\n                            horizontal\n                            barWidth={20}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                            data={[\n                              {key: nationalDemog['age'][0]['0 - 4'][0]['demogLabel'], 'value': nationalDemog['age'][0]['0 - 4'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['5 - 17'][0]['demogLabel'], 'value': nationalDemog['age'][0]['5 - 17'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['18 - 29'][0]['demogLabel'], 'value': nationalDemog['age'][0]['18 - 29'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['30 - 39'][0]['demogLabel'], 'value': nationalDemog['age'][0]['30 - 39'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['40 - 49'][0]['demogLabel'], 'value': nationalDemog['age'][0]['40 - 49'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['50 - 64'][0]['demogLabel'], 'value': nationalDemog['age'][0]['50 - 64'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['65 - 74'][0]['demogLabel'], 'value': nationalDemog['age'][0]['65 - 74'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['75 - 84'][0]['demogLabel'], 'value': nationalDemog['age'][0]['75 - 84'][0]['percentPop']},\n                              {key: nationalDemog['age'][0]['85+'][0]['demogLabel'], 'value': nationalDemog['age'][0]['85+'][0]['percentPop']},\n                                 \n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: \"#D3D3D3\"\n                              }\n                            }}\n                            x=\"key\" \n                            y=\"value\"\n                          />\n\n                          </VictoryGroup>\n                        </VictoryChart>\n                              <Header.Content style = {{paddingLeft: 50, width: 450}}>\n                                  <Header.Content style={{ fontWeight: 300, paddingTop: 20, paddingBottom:28, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                                  <b>Percentage of COVID-19 Deaths and Population</b>\n                                  </Header.Content>\n                              </Header.Content>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n\n                <center style = {{paddingLeft: 200}}> <Divider style= {{width : 900, paddingTop: 0}}/> </center>\n\n                \n                <Grid.Row columns = {1} style = {{width: 1000}}>\n                  <Grid.Column style = {{width: 450, paddingLeft: 180}}>\n                    <div style={{paddingTop:'0em'}}>\n                      <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingLeft: 53, paddingRight: \"1em\", paddingBottom: 0}}>\n                        <center> <b style= {{fontSize: \"18pt\"}}>Cases and Deaths by sex</b> </center> \n                        <br/>\n                      </Header.Subheader>\n                    </div>\n                  </Grid.Column>\n                  \n                </Grid.Row>\n\n                <div style={{paddingTop:5, paddingLeft: \"13em\", paddingRight: \"2em\"}}>\n                  <Header as='h2' style={{paddingTop: 7, textAlign:'center',fontSize:\"22pt\", color: mortalityColor[1]}}>\n                    <Header.Content style = {{paddingLeft: 50}}>\n                      <Header.Subheader style={{width: 810, color: '#000000', textAlign:'left' , fontSize:\"14pt\", lineHeight: \"16pt\", paddingTop:5, paddingBottom:28, paddingLeft: 6}}>\n                        \n                        Males make up {(nationalDemog['sex'][0]['Male'][0]['percentPop']).toFixed(0) + \"%\"} of the population and {(nationalDemog['sex'][0]['Male'][0]['percentCases']).toFixed(0) + \"%\"} of cases, yet they account for \n                        {\" \" + (nationalDemog['sex'][0]['Male'][0]['percentDeaths']).toFixed(0) + \"%\"} of deaths.\n                          \n                      </Header.Subheader>\n                    </Header.Content>\n                  </Header>\n                </div>\n\n                <Grid.Row style = {{width: 800, paddingLeft: 320, paddingTop:'1em'}}>\n                  <svg width = \"1000\" height = \"40\">\n                    <rect x = {40} y = {12} width = \"20\" height = \"20\" style = {{fill: casesColor[1], strokeWidth:1, stroke: casesColor[1]}}/>\n                    <text x = {65} y = {30} style = {{ fontSize: \"19px\"}}> Percent of Cases</text>\n                    <rect x = {250} y = {12} width = \"20\" height = \"20\" style = {{fill: mortalityColor[1], strokeWidth:1, stroke: mortalityColor[1]}}/>\n                    <text x = {275} y = {30} style = {{ fontSize: \"19px\"}}> Percent of Deaths </text>\n                    <rect x = {455} y = {12} width = \"20\" height = \"20\" style = {{fill: \"#D3D3D3\", strokeWidth:1, stroke: \"#D3D3D3\"}}/>\n                    <text x = {480} y = {30} style = {{ fontSize: \"19px\"}}> Percent of Population</text>\n                  </svg>\n                </Grid.Row>\n\n                <Grid.Row columns = {2} style = {{width: 1000}}>\n                  <Grid.Column style = {{width: 450, paddingLeft: 100}}>\n                  <div style={{paddingLeft: \"6em\", paddingRight: \"0em\"}}>\n\n                  <VictoryChart\n                                theme={VictoryTheme.material}\n                                width={450}\n                                height={300}\n                                domainPadding={{x:80}}\n                                minDomain={{y: props.ylog?1:0}}\n                                padding={{left: 100, right: 80, top: 30, bottom: 80}}\n                                style = {{fontSize: \"14pt\"}}\n                                containerComponent={<VictoryContainer responsive={false}/>}\n                              >\n                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                <VictoryAxis dependentAxis\n                                  style={{ticks:{stroke: \"#000000\"}, \n                                    axis: {stroke: \"#000000\"}, \n                                    axisLabel: {padding: 60, fontFamily: 'lato', fontSize: \"19px\", fill: '#000000'},\n                                    grid: {stroke: \"transparent\"}, \n                                    tickLabels: {fontSize: \"20px\", \n                                    fill: '#000000', padding: 10, fontFamily: 'lato'}\n                                  }}\n                                />\n                                <VictoryGroup offset={23}>\n\n                                <VictoryBar\n                                  horizontal\n                                  barWidth={20}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                                  data={[\n                                    {key: nationalDemog['sex'][0]['Male'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Male'][0]['percentCases']},\n                                    {key: nationalDemog['sex'][0]['Female'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Female'][0]['percentCases']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: casesColor[1]\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n\n                                \n                                <VictoryBar\n                                  horizontal\n                                  barWidth={20}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                                  data={[\n                                    {key: nationalDemog['sex'][0]['Male'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Male'][0]['percentPop']},\n                                    {key: nationalDemog['sex'][0]['Female'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Female'][0]['percentPop']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: \"#D3D3D3\"\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n                                </VictoryGroup>\n                              </VictoryChart>\n\n                              <Header.Content style = {{paddingLeft: 50, width: 450}}>\n                                  <Header.Content style={{ fontWeight: 300, paddingTop: 20, paddingBottom:28, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                                    <b>Percentage of COVID-19 Cases and Population</b>\n                                  </Header.Content>\n                              </Header.Content>\n                      \n                    </div>\n                    <Grid.Row>\n                        <Accordion style = {{paddingTop: 50, paddingLeft: 98, paddingBottom: 45}} defaultActiveIndex={1} panels={[\n                              {\n                                  key: 'acquire-dog',\n                                  title: {\n                                      content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                      icon: 'dropdown',\n                                  },\n                                  content: {\n                                      content: (\n                                          <Header as='h2' style={{paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                            <Header.Content  style={{fontSize: \"14pt\"}}>\n                                              <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                                <br/><b>Data as of:</b> {nationalDemogDate}.<br/>\n                                              </Header.Subheader>\n                                            </Header.Content>\n                                          </Header>\n                                      ),\n                                    },\n                                }\n                            ]\n\n                            } />\n                      </Grid.Row>\n                  </Grid.Column>\n                  <Grid.Column style = {{width: 450}}>\n                    {/* <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900, paddingTop: 40}}/> </center> */}\n                    \n                      <div style={{paddingLeft: 64, paddingRight: \"0em\"}}>\n                      \n                      <VictoryChart\n                                theme={VictoryTheme.material}\n                                width={450}\n                                height={300}\n                                domainPadding={{x:80}}\n                                minDomain={{y: props.ylog?1:0}}\n                                padding={{left: 100, right: 80, top: 30, bottom: 80}}\n                                style = {{fontSize: \"14pt\"}}\n                                containerComponent={<VictoryContainer responsive={false}/>}\n                              >\n                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                <VictoryAxis dependentAxis\n                                  style={{ticks:{stroke: \"#000000\"}, \n                                    axis: {stroke: \"#000000\"}, \n                                    axisLabel: {padding: 60, fontFamily: 'lato', fontSize: \"19px\", fill: '#000000'},\n                                    grid: {stroke: \"transparent\"}, \n                                    tickLabels: {fontSize: \"20px\", \n                                    fill: '#000000', padding: 10, fontFamily: 'lato'}\n                                  }}\n                                />\n                                <VictoryGroup offset={23}>\n\n                                \n\n                                <VictoryBar\n                                  horizontal\n                                  barWidth={20}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                                  data={[\n                                    {key: nationalDemog['sex'][0]['Male'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Male'][0]['percentDeaths']},\n                                    {key: nationalDemog['sex'][0]['Female'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Female'][0]['percentDeaths']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: mortalityColor[1]\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n                                \n                                <VictoryBar\n                                  horizontal\n                                  barWidth={20}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                                  data={[\n                                    {key: nationalDemog['sex'][0]['Male'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Male'][0]['percentPop']},\n                                    {key: nationalDemog['sex'][0]['Female'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Female'][0]['percentPop']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: \"#D3D3D3\"\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n                                </VictoryGroup>\n                              </VictoryChart>\n\n                              <Header.Content style = {{paddingLeft: 50, width: 450}}>\n                                  <Header.Content style={{ fontWeight: 300, paddingTop: 20, paddingBottom:28, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                                  <b>Percentage of COVID-19 Deaths and Population</b>\n                                  </Header.Content>\n                              </Header.Content>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n\n              {/* <Grid.Row columns = {1} style = {{width: 1000, paddingTop: 0}}>\n                  <Grid.Column style = {{width: 1000, paddingLeft: 135}}>\n                      <div style={{paddingLeft: \"0em\", paddingRight: \"0em\"}}>\n                      <VictoryChart\n                                theme={VictoryTheme.material}\n                                width={910}\n                                height={350}\n                                domainPadding={{x:80}}\n                                minDomain={{y: props.ylog?1:0}}\n                                padding={{left: 200, right: 80, top: 30, bottom: 80}}\n                                style = {{fontSize: \"14pt\"}}\n                                containerComponent={<VictoryContainer responsive={false}/>}\n                              >\n                                <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                                <VictoryAxis dependentAxis\n                                  label=\"Percentage of COVID-19 Cases, Deaths, and Population\" \n                                  style={{ticks:{stroke: \"#000000\"}, \n                                    axis: {stroke: \"#000000\"}, \n                                    axisLabel: {padding: 60, fontFamily: 'lato', fontSize: \"19px\", fill: '#000000'},\n                                    grid: {stroke: \"transparent\"}, \n                                    tickLabels: {fontSize: \"20px\", \n                                    fill: '#000000', padding: 10, fontFamily: 'lato'}\n                                  }}\n                                />\n                                <VictoryGroup offset={23}>\n\n                                <VictoryBar\n                                  horizontal\n                                  barWidth={20}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                                  data={[\n                                    {key: nationalDemog['sex'][0]['Male'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Male'][0]['percentCases']},\n                                    {key: nationalDemog['sex'][0]['Female'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Female'][0]['percentCases']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: casesColor[1]\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n\n                                <VictoryBar\n                                  horizontal\n                                  barWidth={20}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                                  data={[\n                                    {key: nationalDemog['sex'][0]['Male'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Male'][0]['percentDeaths']},\n                                    {key: nationalDemog['sex'][0]['Female'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Female'][0]['percentDeaths']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: mortalityColor[1]\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n                                \n                                <VictoryBar\n                                  horizontal\n                                  barWidth={20}\n                                  labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0) <= 1? parseFloat(datum.value).toFixed(1) : parseFloat(datum.value).toFixed(0)) + \"%\"}\n                                  data={[\n                                    {key: nationalDemog['sex'][0]['Male'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Male'][0]['percentPop']},\n                                    {key: nationalDemog['sex'][0]['Female'][0]['demogLabel'], 'value': nationalDemog['sex'][0]['Female'][0]['percentPop']},\n                                    \n                                      \n\n\n                                  ]}\n                                  labelComponent={<VictoryLabel dx={0} style={{ fontFamily: 'lato', fontSize: \"16px\", fill: \"#000000\" }}/>}\n                                  style={{\n                                    data: {\n                                      fill: \"#D3D3D3\"\n                                    }\n                                  }}\n                                  x=\"key\"\n                                  y=\"value\"\n                                />\n                                </VictoryGroup>\n                              </VictoryChart>\n\n                              \n                    </div>\n                    <Accordion style = {{paddingTop: 20, paddingLeft: 103, paddingBottom: 28}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 0, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                          \n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n                  </Grid.Column>\n                </Grid.Row> */}\n              </Grid>\n\n              <div id=\"commu\" style = {{height: 45}}> </div>\n\n            <center style = {{paddingLeft: 190}}> <Divider style= {{width : 900, paddingTop: 0}}/> </center>\n            {true && <div style = {{ paddingLeft: \"7em\", paddingRight: \"2em\"}}>\n              <Header as='h2' style={{color: '#b2b3b3', textAlign:'center',fontSize:\"22pt\", paddingTop: 29}}>\n                <Header.Content  style={{fontSize:\"22pt\",color: mortalityColor[1], paddingLeft: 140}}>\n                  COVID-19 Across U.S. Communities\n                  <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, textAlign: \"left\", paddingRight: 15}}>\n                    <center> <b style= {{fontSize: \"18pt\", paddingLeft: 18}}>COVID-19 cases per 100K across the population characteristics of all the counties in the United States </b> </center> \n                    <br/>\n                    <br/>\n                    COVID-19 is affecting communities differently. Community-level factors such as urbanicity,  \n                    socioeconomic status, race, and underlying medical conditions make some communities more \n                    vulnerable to COVID-19 than others. The maps and figures below show COVID-19 case rates and \n                    death rates across U.S. counties grouped by these community characteristics.  \n\n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n\n    \n              {/* <div id=\"ccvi\" style = {{height: 85}}> </div> */}\n              <div id=\"ccvi\" style = {{height: 45}}> </div>\n\n              {/* <div style = {{paddingLeft: 50}}>\n                <button class=\"ui black basic button\" style = {{width: 120}} onClick={()=>\n                                                        setMetric('ccvi')}>Community Vulnerability Index</button>\n                <button class=\"ui black basic button\" style = {{width: 120}} onClick={()=>\n                                                        setMetric('poverty')}>by Percent in Poverty</button>\n                \n                                                        \n              \n\n              </div> */}\n\n\n{/* <div>\n      <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:0, textAlign: \"left\", paddingLeft: \"11em\", paddingRight: \"5em\", paddingBottom: 40}}>\n        <center> <b style= {{fontSize: \"18pt\"}}>{metricOptions[metric]}</b> </center> \n        <br/>\n        <br/>         \n\n      </Header.Subheader>\n        <div style = {{paddingLeft: 70}}>\n          <Dropdown\n\n                        style={{background: '#fff', \n                                fontSize: \"19px\",\n                                fontWeight: 400, \n                                theme: '#000000',\n                                width: '440px',\n                                top: '0px',\n                                left: '0px',\n                                text: \"Select\",\n                                borderTop: '0.5px solid #bdbfc1',\n                                borderLeft: '0.5px solid #bdbfc1',\n                                borderRight: '0.5px solid #bdbfc1', \n                                borderBottom: '0.5px solid #bdbfc1',\n                                borderRadius: 0,\n                                minHeight: '1.0em',\n                                paddingBottom: '0.5em',\n                                paddingRight: 0}}\n                        text= { \"By \" + metricName }\n                        search\n                        selection\n                        pointing = 'top'\n                        options={metricOptions}\n                        onChange={(e, { value }) => {\n                          setMetric(value);\n                          setMetricName(varMap[value]['name']);\n                        }}\n                      />\n          </div>\n      <Grid>\n        <Grid.Row columns={2} style={{paddingTop: 8}}>\n          <Grid.Column style={{paddingTop:0,paddingBottom:0}}>\n            \n\n          <div >\n            <br/>\n\n            <svg width=\"400\" height=\"80\">\n              \n              {_.map(legendSplitMetric, (splitpoint, i) => {\n                if(legendSplitMetric[i] < 1){\n                  return <text key = {i} x={90 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitMetric[i].toFixed(1)}</text>                    \n                }else if(legendSplitMetric[i] > 999999){\n                  return <text key = {i} x={90 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitMetric[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                }else if(legendSplitMetric[i] > 999){\n                  return <text key = {i} x={90 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitMetric[i]/1000).toFixed(0) + \"K\"}</text>                    \n                }\n                return <text key = {i} x={90 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitMetric[i].toFixed(0)}</text>                    \n              })} \n              <text x={70} y={35} style={{fontSize: '0.7em'}}>{legendMinMetric}</text>\n              <text x={190} y={35} style={{fontSize: '0.7em'}}>{legendMaxMetric}</text>\n\n\n              {_.map(colorPalette, (color, i) => {\n                return <rect key={i} x={70+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n              })} \n\n\n              <text x={70} y={74} style={{fontSize: '0.8em'}}>Low</text>\n              <text x={70+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n              <rect x={215} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n              <text x={237} y={50} style={{fontSize: '0.7em'}}> None </text>\n              <text x={237} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n            \n\n            </svg>\n\n            <br/><br/><br/>\n              <ComposableMap \n                projection=\"geoAlbersUsa\" \n                data-tip=\"\"\n                width={520} \n                height={300}\n                strokeWidth= {0.1}\n                stroke= 'black'\n                projectionConfig={{scale: 580}}\n                style = {{paddingLeft: 50}}\n                >\n                <Geographies geography={geoUrl} stateBoundary = {metric === \"region\" ? true : false}>\n                  {({ geographies }) => \n                    <svg>\n                      {geographies.map(geo => (\n                        <Geography\n                          key={geo.rsmKey}\n                          geography={geo}\n                          fill={\n                          ((colorMetric && data[geo.id] && (data[geo.id][metric]) > 0)?\n                          colorMetric[data[geo.id][metric]]: \n                              (colorMetric && data[geo.id] && data[geo.id][metric] === 0)?\n                                '#FFFFFF':'#FFFFFF')}                              \n                        />\n                      ))}\n                    </svg>\n                  }\n                </Geographies>\n                \n\n              </ComposableMap>\n          </div>\n          <Accordion style = {{paddingTop: 150, paddingLeft: 100}} defaultActiveIndex={1} panels={[\n                {\n                    key: 'acquire-dog',\n                    title: {\n                        content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                        icon: 'dropdown',\n                    },\n                    content: {\n                        content: (\n                            <Header as='h2' style={{fontWeight: 400, paddingLeft: 0, paddingTop: 0, paddingBottom: 20}}>\n                              <Header.Content  style={{fontSize: \"14pt\"}}>\n                                <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per 100K \n                                residents by CCVI ranking. The y-axis displays CCVI rankings based on quintiles (groups of 20%). \n                                The x-axis displays the average number of COVID-19 cases (top chart) or deaths (bottom chart) per \n                                100K that occurred in each group of counties ranked by CCVI. The ranking classified counties into \n                                five groups designed to be of equal size, so that the lowest quintile contains the counties with values \n                                in the 0%-20% range for this county characteristic, and the highest quintile contains counties with \n                                values in the 80%-100% range for this county characteristic. Q2 indicates counties in the 20%-40% \n                                range, Q3 indicates counties in the 40%-60% range, and Q4 indicates counties in the 60%-80% range.\n                                </Header.Subheader>\n                              </Header.Content>\n                            </Header>\n                        ),\n                      },\n                  }\n              ]\n\n              } />\n\n\n          </Grid.Column>\n          <Grid.Column>\n          <Header as='h2' style={{paddingLeft: 60, textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n              <Header.Content>\n                Cases by {varMap[metric]['name']}\n              </Header.Content>\n            </Header>\n                <VictoryChart\n                  theme={VictoryTheme.material}\n                  width={530}\n                  height={180}\n                  domainPadding={20}\n                  minDomain={{y: props.ylog?1:0}}\n                  padding={{left: metric !== \"urbanrural\" ? 180 : 250, right: 40, top: 5, bottom: 1}}\n                  style = {{fontSize: \"14pt\"}}\n                  containerComponent={<VictoryContainer responsive={false}/>}\n                >\n                  <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                  <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                  <VictoryBar\n                    horizontal\n                    barRatio={0.80}\n                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                    data={metric !== \"region\" ? \n                    [\n                      {key: nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['label'], 'value': (nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure']/nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0},\n                      {key: nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][1]['label'], 'value': (nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][1]['measure']/nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0},\n                      {key: nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][2]['label'], 'value': (nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][2]['measure']/nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0},\n                      {key: nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][3]['label'], 'value': (nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][3]['measure']/nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0},\n                      {key: nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][4]['label'], 'value': (nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][4]['measure']/nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0}\n                    ]\n                    :\n                    [\n                      {key: nationalBarChart['caserate7day'][0][metric][0]['label'], 'value': (nationalBarChart['caserate7day'][0][metric][0]['measure']/nationalBarChart['caserate7day'][0][metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric][0]['measure'] || 0}, \n                      {key: nationalBarChart['caserate7day'][0][metric][1]['label'], 'value': (nationalBarChart['caserate7day'][0][metric][1]['measure']/nationalBarChart['caserate7day'][0][metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric][0]['measure'] || 0},\n                      {key: nationalBarChart['caserate7day'][0][metric][2]['label'], 'value': (nationalBarChart['caserate7day'][0][metric][2]['measure']/nationalBarChart['caserate7day'][0][metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric][0]['measure'] || 0},\n                      {key: nationalBarChart['caserate7day'][0][metric][3]['label'], 'value': (nationalBarChart['caserate7day'][0][metric][3]['measure']/nationalBarChart['caserate7day'][0][metric][0]['measure'])*nationalBarChart['caserate7day'][0][metric][0]['measure'] || 0},\n                    ]}\n                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                    style={{\n                      data: {\n                        fill: casesColor[1]\n                      }\n                    }}\n                    x=\"key\"\n                    y=\"value\"\n                  />\n                </VictoryChart>\n\n                <Header.Content style = {{width: 550}}>\n                  \n                  <Header.Content style={{fontWeight: 300, paddingLeft: 175, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                    <b>COVID-19 Cases per 100K</b>\n                  </Header.Content>\n                </Header.Content>\n                  \n                  <br/>\n                  <br/>\n\n              <Header as='h2' style={{marginLeft: 80, textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                  <Header.Content>\n                    Deaths by {varMap[metric]['name']}\n                  </Header.Content>\n                </Header>\n                <VictoryChart\n                  theme={VictoryTheme.material}\n                  width={530}\n                  height={180}\n                  domainPadding={20}\n                  minDomain={{y: props.ylog?1:0}}\n                  padding={{left: metric !== \"urbanrural\" ? 180 : 250, right: 40, top: 5, bottom: 1}}\n                  style = {{fontSize: \"14pt\"}}\n                  containerComponent={<VictoryContainer responsive={false}/>}\n                >\n                  <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                  <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                  <VictoryBar\n                    horizontal\n                    barRatio={0.80}\n                    labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                    data={ metric !== \"region\" ? \n                    [\n                      {key: nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure']/nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0}, \n                      {key: nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][1]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][1]['measure']/nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0},\n                      {key: nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][2]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][2]['measure']/nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0},\n                      {key: nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][3]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][3]['measure']/nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0},\n                      {key: nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][4]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][4]['measure']/nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric === \"ccvi\"? \"CVI\" : metric][0]['measure'] || 0}\n                    ]\n                    :\n                    [\n                      {key: nationalBarChart['covidmortality7day'][0][metric][0]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric][0]['measure']/nationalBarChart['covidmortality7day'][0][metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric][0]['measure'] || 0}, \n                      {key: nationalBarChart['covidmortality7day'][0][metric][1]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric][1]['measure']/nationalBarChart['covidmortality7day'][0][metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric][0]['measure'] || 0},\n                      {key: nationalBarChart['covidmortality7day'][0][metric][2]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric][2]['measure']/nationalBarChart['covidmortality7day'][0][metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric][0]['measure'] || 0},\n                      {key: nationalBarChart['covidmortality7day'][0][metric][3]['label'], 'value': (nationalBarChart['covidmortality7day'][0][metric][3]['measure']/nationalBarChart['covidmortality7day'][0][metric][0]['measure'])*nationalBarChart['covidmortality7day'][0][metric][0]['measure'] || 0},\n                    ]\n                  \n                  }\n                    labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                    style={{\n                      data: {\n                        fill: mortalityColor[1]\n                      }\n                    }}\n                    x=\"key\"\n                    y=\"value\"\n                  />\n                </VictoryChart>\n\n                <Header.Content style = {{width: 550}}>\n                    <Header.Content style={{ paddingLeft: 175,fontWeight: 300, paddingTop: 20, paddingBottom:50, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                      <b>COVID-19 Deaths per 100K</b>\n                    </Header.Content>\n                </Header.Content>\n\n            </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div> */}\n\n\n\n\n\n\n\n\n\n\n\n\n\n              <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:0, textAlign: \"left\", paddingLeft: 234, paddingRight: \"5em\", paddingBottom: 40}}>\n                  <center> <b style= {{fontSize: \"18pt\"}}>COVID-19 by Community Vulnerability Index </b> </center> \n                  <br/>\n\n                </Header.Subheader>\n              <Grid>\n                <Grid.Row columns={2} style={{paddingTop: 8, width: 1000, paddingLeft: 60}}>\n                  <Grid.Column style={{paddingTop:10, paddingLeft:0}}>\n\n                    \n\n                  <div >\n                    <br/>\n\n                    <svg width=\"260\" height=\"80\">\n                      \n                      {_.map(legendSplitccvi, (splitpoint, i) => {\n                        if(legendSplitccvi[i] < 1){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitccvi[i].toFixed(1)}</text>                    \n                        }else if(legendSplitccvi[i] > 999999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitccvi[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                        }else if(legendSplitccvi[i] > 999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitccvi[i]/1000).toFixed(0) + \"K\"}</text>                    \n                        }\n                        return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitccvi[i].toFixed(0)}</text>                    \n                      })} \n                      <text x={50} y={35} style={{fontSize: '0.7em'}}>{legendMinccvi}</text>\n                      <text x={170} y={35} style={{fontSize: '0.7em'}}>{legendMaxccvi}</text>\n\n\n                      {_.map(colorPalette, (color, i) => {\n                        return <rect key={i} x={50+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                      })} \n\n\n                      <text x={50} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                      <text x={50+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                      <rect x={195} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                      <text x={217} y={50} style={{fontSize: '0.7em'}}> None </text>\n                      <text x={217} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n                    \n\n                    </svg>\n\n                    <br/><br/><br/>\n                     \n\n                    <Image width='520' height='386' style = {{paddingLeft: 0}} src='/NationalReportImages/ccvi.png' />            \n\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n                      <Accordion style = {{paddingTop: 100, paddingLeft: 60}} defaultActiveIndex={1} panels={[\n                            {\n                                key: 'acquire-dog',\n                                title: {\n                                    content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                    icon: 'dropdown',\n                                },\n                                content: {\n                                    content: (\n                                        <Header as='h2' style={{fontWeight: 400, paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                          <Header.Content  style={{fontSize: \"14pt\"}}>\n                                            <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                            This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) \n                                            per 100K residents by CCVI ranking. The y-axis displays CCVI rankings based on \n                                            quintiles (groups of 20%). The x-axis displays the average number of COVID-19 cases \n                                            (top chart) or deaths (bottom chart) per 100K that occurred in each group of \n                                            counties ranked by CCVI. The ranking classified counties into five groups designed \n                                            to be of equal size, so that the lowest quintile contains the counties with values \n                                            in the 0%-20% range for this county characteristic, and the very high CCVI contains \n                                            counties with values in the 80%-100% range for this county characteristic. Low CCVI \n                                            indicates counties in the 20%-40% range, moderate CCVI indicates counties in the 40%-60% \n                                            range, and high CCVI indicates counties in the 60%-80% range.\n                                            <br/>\n                                            <br/>\n                                            For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                            </Header.Subheader>\n                                          </Header.Content>\n                                        </Header>\n                                    ),\n                                  },\n                              }\n                          ]\n\n                          } />\n                    </Grid.Row>\n                  </Grid>\n\n\n                  </Grid.Column>\n                  <Grid.Column style = {{paddingLeft: 0}}>\n                  <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                      <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Cases by <br/> Community Vulnerability Index\n                      </Header.Content>\n                    </Header>\n                          <VictoryChart\n                            theme={VictoryTheme.material}\n                            width={530}\n                            height={180}\n                            domainPadding={20}\n                            minDomain={{y: props.ylog?1:0}}\n                            padding={{left: 130, right: 90, top: 5, bottom: 1}}\n                            style = {{fontSize: \"14pt\"}}\n                            containerComponent={<VictoryContainer responsive={false}/>}\n                          >\n                            <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                            <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                            <VictoryBar\n                              horizontal\n                              barRatio={0.80}\n                              labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                              data={[\n                                    {key: nationalBarChart['caserate'][0]['ccvi'][0]['label'], 'value': (nationalBarChart['caserate'][0]['ccvi'][0]['measure']/nationalBarChart['caserate'][0]['ccvi'][0]['measure'])*nationalBarChart['caserate'][0]['ccvi'][0]['measure'] || 0},\n                                    {key: nationalBarChart['caserate'][0]['ccvi'][1]['label'], 'value': (nationalBarChart['caserate'][0]['ccvi'][1]['measure']/nationalBarChart['caserate'][0]['ccvi'][0]['measure'])*nationalBarChart['caserate'][0]['ccvi'][0]['measure'] || 0},\n                                    {key: nationalBarChart['caserate'][0]['ccvi'][2]['label'], 'value': (nationalBarChart['caserate'][0]['ccvi'][2]['measure']/nationalBarChart['caserate'][0]['ccvi'][0]['measure'])*nationalBarChart['caserate'][0]['ccvi'][0]['measure'] || 0},\n                                    {key: nationalBarChart['caserate'][0]['ccvi'][3]['label'], 'value': (nationalBarChart['caserate'][0]['ccvi'][3]['measure']/nationalBarChart['caserate'][0]['ccvi'][0]['measure'])*nationalBarChart['caserate'][0]['ccvi'][0]['measure'] || 0},\n                                    {key: nationalBarChart['caserate'][0]['ccvi'][4]['label'], 'value': (nationalBarChart['caserate'][0]['ccvi'][4]['measure']/nationalBarChart['caserate'][0]['ccvi'][0]['measure'])*nationalBarChart['caserate'][0]['ccvi'][0]['measure'] || 0}\n\n\n\n                              ]}\n                              labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                              style={{\n                                data: {\n                                  fill: casesColor[1]\n                                }\n                              }}\n                              x=\"key\"\n                              y=\"value\"\n                            />\n                          </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                          \n                          <Header.Content style={{fontWeight: 300, paddingLeft: 140, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                            <b>COVID-19 Cases per 100K</b>\n                          </Header.Content>\n                        </Header.Content>\n                          \n                          <br/>\n                          <br/>\n\n                      <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                          <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                          COVID-19 Deaths by <br/> Community Vulnerability Index\n                          </Header.Content>\n                        </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 130, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['covidmortality'][0]['ccvi'][0]['label'], 'value': (nationalBarChart['covidmortality'][0]['ccvi'][0]['measure']/nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'])*nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['ccvi'][1]['label'], 'value': (nationalBarChart['covidmortality'][0]['ccvi'][1]['measure']/nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'])*nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['ccvi'][2]['label'], 'value': (nationalBarChart['covidmortality'][0]['ccvi'][2]['measure']/nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'])*nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['ccvi'][3]['label'], 'value': (nationalBarChart['covidmortality'][0]['ccvi'][3]['measure']/nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'])*nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['ccvi'][4]['label'], 'value': (nationalBarChart['covidmortality'][0]['ccvi'][4]['measure']/nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'])*nationalBarChart['covidmortality'][0]['ccvi'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                            <Header.Content style={{ paddingLeft: 140,fontWeight: 300, paddingTop: 20, paddingBottom:50, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>COVID-19 Deaths per 100K</b>\n                            </Header.Content>\n                        </Header.Content>\n\n                    </Grid.Column>\n                </Grid.Row>\n              </Grid>\n              <div id=\"poverty\" style = {{height: 45}}> </div>\n\n              <center style={{paddingLeft: 90}}><Divider style={{width: 900}}/> </center>\n\n              \n              <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, paddingLeft: 0, paddingRight: 0, paddingBottom: 60}}>\n                    <center> <b style= {{fontSize: \"18pt\", paddingLeft: 134}}>Population in poverty</b> </center> \n              </Header.Subheader>\n\n              {ccvi && <Grid>\n                <Grid.Row columns={2} style={{paddingTop: 8, width: 1000, paddingLeft: 60}}>\n                  <Grid.Column style={{paddingTop:10, paddingLeft:0}}>\n\n                    \n\n                  <div >\n                    \n                    <svg width=\"260\" height=\"80\">\n                      \n                      {_.map(legendSplitPoverty, (splitpoint, i) => {\n                        if(legendSplitPoverty[i] < 1){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitPoverty[i].toFixed(1)}</text>                    \n                        }else if(legendSplitPoverty[i] > 999999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitPoverty[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                        }else if(legendSplitPoverty[i] > 999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitPoverty[i]/1000).toFixed(0) + \"K\"}</text>                    \n                        }\n                        return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitPoverty[i].toFixed(0)}</text>                    \n                      })} \n                      <text x={50} y={35} style={{fontSize: '0.7em'}}>{legendMinPoverty}</text>\n                      <text x={170} y={35} style={{fontSize: '0.7em'}}>{legendMaxPoverty}</text>\n\n\n                      {_.map(colorPalette, (color, i) => {\n                        return <rect key={i} x={50+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                      })} \n\n\n                      <text x={50} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                      <text x={50+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                      <rect x={195} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                      <text x={217} y={50} style={{fontSize: '0.7em'}}> None </text>\n                      <text x={217} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n                    \n\n                    </svg>\n\n                    <br/><br/><br/>\n                      {/* <ComposableMap \n                        projection=\"geoAlbersUsa\" \n                        data-tip=\"\"\n                        width={520} \n                        height={300}\n                        strokeWidth= {0.1}\n                        stroke= 'black'\n                        projectionConfig={{scale: 580}}\n                        style = {{paddingLeft: 50}}\n                        >\n                        <Geographies geography={geoUrl}>\n                          {({ geographies }) => \n                            <svg>\n                              {geographies.map(geo => (\n                                <Geography\n                                  key={geo.rsmKey}\n                                  geography={geo}\n                                  fill={\n                                  ((colorPoverty && data[geo.id] && (data[geo.id][poverty]) > 0)?\n                                      colorPoverty[data[geo.id][poverty]]: \n                                      (colorPoverty && data[geo.id] && data[geo.id][poverty] === 0)?\n                                        '#FFFFFF':'#FFFFFF')}\n                                  \n                                />\n                              ))}\n                            </svg>\n                          }\n                        </Geographies>\n                        \n\n                      </ComposableMap> */}\n                      <Image width='520' height='386' style = {{paddingLeft: 0}} src='/NationalReportImages/poverty.png' />\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n                     <Accordion style = {{paddingTop: 100, paddingLeft: 60}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                        This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) \n                                        per 100K residents by county ranking on percentage of population in poverty. The \n                                        y-axis displays percentage population in poverty rankings based on quintiles (groups of 20%). \n                                        The x-axis displays the average number of COVID-19 cases (top chart) or deaths (bottom chart) \n                                        per 100K that occurred in each group of counties ranked by percentage population in poverty. \n                                        The ranking classified counties into five groups designed to be of equal size, so that the \n                                        \"very low % in poverty\" group contains the counties with values in the 0%-20% range for this county \n                                        characteristic, and the \"very high % in poverty\" group contains counties with values in the 80%-100% \n                                        range for this county characteristic. Low % in poverty indicates counties in the 20%-40% range, \n                                        moderate % in poverty indicates counties in the 40%-60% range, and high % in poverty indicates \n                                        counties in the 60%-80% range.\n                                        <br/>\n                                        <br/>\n                                        For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                            \n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n\n                    </Grid.Row>\n                  </Grid>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                      <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Cases by Percentage of <br/> Population in Poverty\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['caserate'][0]['poverty'][0]['label'], 'value': (nationalBarChart['caserate'][0]['poverty'][0]['measure']/nationalBarChart['caserate'][0]['poverty'][0]['measure'])*nationalBarChart['caserate'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['poverty'][1]['label'], 'value': (nationalBarChart['caserate'][0]['poverty'][1]['measure']/nationalBarChart['caserate'][0]['poverty'][0]['measure'])*nationalBarChart['caserate'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['poverty'][2]['label'], 'value': (nationalBarChart['caserate'][0]['poverty'][2]['measure']/nationalBarChart['caserate'][0]['poverty'][0]['measure'])*nationalBarChart['caserate'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['poverty'][3]['label'], 'value': (nationalBarChart['caserate'][0]['poverty'][3]['measure']/nationalBarChart['caserate'][0]['poverty'][0]['measure'])*nationalBarChart['caserate'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['poverty'][4]['label'], 'value': (nationalBarChart['caserate'][0]['poverty'][4]['measure']/nationalBarChart['caserate'][0]['poverty'][0]['measure'])*nationalBarChart['caserate'][0]['poverty'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: casesColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                          \n                          <Header.Content style={{fontWeight: 300, paddingLeft: 140, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                            <b>COVID-19 Cases per 100K</b>\n                          </Header.Content>\n                        </Header.Content>\n                          \n                          <br/>\n                          <br/>\n\n                      <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                          <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Deaths by Percentage of <br/> Population in Poverty\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['covidmortality'][0]['poverty'][0]['label'], 'value': (nationalBarChart['covidmortality'][0]['poverty'][0]['measure']/nationalBarChart['covidmortality'][0]['poverty'][0]['measure'])*nationalBarChart['covidmortality'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['poverty'][1]['label'], 'value': (nationalBarChart['covidmortality'][0]['poverty'][1]['measure']/nationalBarChart['covidmortality'][0]['poverty'][0]['measure'])*nationalBarChart['covidmortality'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['poverty'][2]['label'], 'value': (nationalBarChart['covidmortality'][0]['poverty'][2]['measure']/nationalBarChart['covidmortality'][0]['poverty'][0]['measure'])*nationalBarChart['covidmortality'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['poverty'][3]['label'], 'value': (nationalBarChart['covidmortality'][0]['poverty'][3]['measure']/nationalBarChart['covidmortality'][0]['poverty'][0]['measure'])*nationalBarChart['covidmortality'][0]['poverty'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['poverty'][4]['label'], 'value': (nationalBarChart['covidmortality'][0]['poverty'][4]['measure']/nationalBarChart['covidmortality'][0]['poverty'][0]['measure'])*nationalBarChart['covidmortality'][0]['poverty'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                            <Header.Content style={{ paddingLeft: 140,fontWeight: 300, paddingTop: 20, paddingBottom:50, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>COVID-19 Deaths per 100K</b>\n                            </Header.Content>\n                        </Header.Content>\n                    </Grid.Column>\n                </Grid.Row>\n              </Grid>}\n              <div id=\"metro\" style = {{height: 45}}> </div>\n\n              <center style={{paddingLeft: 90}}><Divider style={{width: 900}}/> </center>\n              <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, paddingLeft: 0, paddingRight: 0, paddingBottom: 60}}>\n                    <center> <b style= {{fontSize: \"18pt\", paddingLeft: 134}}>Metropolitan Status</b> </center> \n              </Header.Subheader>\n             \n\n              {poverty && <Grid>\n                <Grid.Row columns={2} style={{paddingTop: 8, width: 1000, paddingLeft: 60}}>\n                  <Grid.Column style={{paddingTop:10, paddingLeft:0}}>\n\n                    \n\n                  <div >\n                    \n                    <svg width=\"550\" height=\"145\">\n\n                      <text x={80} y={35} style={{fontSize: '0.8em'}}> NonCore (Nonmetro)</text>                    \n                      <text x={80} y={55} style={{fontSize: '0.8em'}}> Micropolitan (Nonmetro)</text>                    \n                      <text x={80} y={75} style={{fontSize: '0.8em'}}> Small Metro</text>                    \n                      <text x={80} y={95} style={{fontSize: '0.8em'}}> Medium Metro</text>                    \n                      <text x={80} y={115} style={{fontSize: '0.8em'}}> Large Central Metro</text>                    \n                      <text x={80} y={135} style={{fontSize: '0.8em'}}> Large Fringe Metro</text>                    \n\n\n                      {_.map(colorPalette, (color, i) => {\n                        return <rect key={i} x={50} y={20+20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                      })} \n\n\n                      <rect x={230} y={20} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                      <text x={252} y={30} style={{fontSize: '0.8em'}}> None </text>\n                      <text x={252} y={40} style={{fontSize: '0.8em'}}> Reported </text>\n                    \n\n                    </svg>\n\n                    <br/><br/><br/>\n                      {/* <ComposableMap \n                        projection=\"geoAlbersUsa\" \n                        data-tip=\"\"\n                        width={520} \n                        height={300}\n                        strokeWidth= {0.1}\n                        stroke= 'black'\n                        projectionConfig={{scale: 580}}\n                        style = {{paddingLeft: 50}}\n                        >\n                        <Geographies geography={geoUrl}>\n                          {({ geographies }) => \n                            <svg>\n                              {geographies.map(geo => (\n                                <Geography\n                                  key={geo.rsmKey}\n                                  geography={geo}\n                                  fill={\n                                  (\n                                      (dataUrb[geo.id] && (dataUrb[geo.id][urbrur]) === 1)?\n                                      colorPalette[0]: \n                                      (dataUrb[geo.id] && (dataUrb[geo.id][urbrur]) === 2)?\n                                      colorPalette[1]: \n                                      (dataUrb[geo.id] && (dataUrb[geo.id][urbrur]) === 3)?\n                                      colorPalette[2]: \n                                      (dataUrb[geo.id] && (dataUrb[geo.id][urbrur]) === 4)?\n                                      colorPalette[3]: \n                                      (dataUrb[geo.id] && (dataUrb[geo.id][urbrur]) === 5)?\n                                      colorPalette[4]: \n                                      (dataUrb[geo.id] && (dataUrb[geo.id][urbrur]) === 6)?\n                                      colorPalette[5]: \"#FFFFFF\")}\n                                  \n                                />\n                              ))}\n                            </svg>\n                          }\n                        </Geographies>\n                        \n\n                      </ComposableMap> */}\n                      <Image width='520' height='386' style = {{paddingLeft: 0}} src='/NationalReportImages/urbanrural.png' />\n                      \n                  </div>\n                  <Grid>\n                    <Grid.Row>\n                      <Accordion style = {{paddingTop: 40, paddingLeft: 60}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                        This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) \n                                        per 100K residents by metropolitan status (y-axis). Inner city counties have &#60; 1 \n                                        million population or contain the entire or large part of the population of the largest \n                                        principle city. Large suburban counties have a population &#60; 1 million, but do not qualify \n                                        as inner city. Small suburban counties have a population of 250,000-999,999. Small cities \n                                        have populations &#62; 250,000 and are near large cities. Rural areas near cities have an \n                                        urbanized area with population between 10,000-49,999. Remote rural counties have \n                                        populations less than 10,000 individuals. This urban-rural classification scheme is \n                                        from the National Center for Health Statistics.\n                                        <br/>\n                                        <br/>\n                                        For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                            \n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n\n\n                    </Grid.Row>\n                  </Grid>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                      <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Cases by <br/>  Metropolitan Status\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 250, right: 90, top: 15, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['caserate'][0]['urbanrural'][0]['label'], 'value': (nationalBarChart['caserate'][0]['urbanrural'][0]['measure']/nationalBarChart['caserate'][0]['urbanrural'][0]['measure'])*nationalBarChart['caserate'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['urbanrural'][1]['label'], 'value': (nationalBarChart['caserate'][0]['urbanrural'][1]['measure']/nationalBarChart['caserate'][0]['urbanrural'][0]['measure'])*nationalBarChart['caserate'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['urbanrural'][2]['label'], 'value': (nationalBarChart['caserate'][0]['urbanrural'][2]['measure']/nationalBarChart['caserate'][0]['urbanrural'][0]['measure'])*nationalBarChart['caserate'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['urbanrural'][3]['label'], 'value': (nationalBarChart['caserate'][0]['urbanrural'][3]['measure']/nationalBarChart['caserate'][0]['urbanrural'][0]['measure'])*nationalBarChart['caserate'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['urbanrural'][4]['label'], 'value': (nationalBarChart['caserate'][0]['urbanrural'][4]['measure']/nationalBarChart['caserate'][0]['urbanrural'][0]['measure'])*nationalBarChart['caserate'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['urbanrural'][5]['label'], 'value': (nationalBarChart['caserate'][0]['urbanrural'][5]['measure']/nationalBarChart['caserate'][0]['urbanrural'][0]['measure'])*nationalBarChart['caserate'][0]['urbanrural'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: casesColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                          \n                          <Header.Content style={{fontWeight: 300, paddingLeft: 140, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                            <b>COVID-19 Cases per 100K</b>\n                          </Header.Content>\n                        </Header.Content>\n                          \n                          <br/>\n                          <br/>\n\n                      <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                          <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Deaths by <br/> Metropolitan Status\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 250, right: 90, top: 15, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['covidmortality'][0]['urbanrural'][0]['label'], 'value': (nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure']/nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'])*nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['urbanrural'][1]['label'], 'value': (nationalBarChart['covidmortality'][0]['urbanrural'][1]['measure']/nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'])*nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['urbanrural'][2]['label'], 'value': (nationalBarChart['covidmortality'][0]['urbanrural'][2]['measure']/nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'])*nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['urbanrural'][3]['label'], 'value': (nationalBarChart['covidmortality'][0]['urbanrural'][3]['measure']/nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'])*nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['urbanrural'][4]['label'], 'value': (nationalBarChart['covidmortality'][0]['urbanrural'][4]['measure']/nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'])*nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['urbanrural'][5]['label'], 'value': (nationalBarChart['covidmortality'][0]['urbanrural'][5]['measure']/nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'])*nationalBarChart['covidmortality'][0]['urbanrural'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                            <Header.Content style={{ paddingLeft: 140,fontWeight: 300, paddingTop: 20, paddingBottom:70, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>COVID-19 Deaths per 100K</b>\n                            </Header.Content>\n                        </Header.Content>\n                    </Grid.Column>\n                </Grid.Row>\n              </Grid>}\n\n              <div id=\"region\" style = {{height: 45}}> </div>\n\n              <center style={{paddingLeft: 90}}><Divider style={{width: 900}}/> </center>\n\n              <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, paddingLeft: 0, paddingRight: 0, paddingBottom: 60}}>\n                    <center> <b style= {{fontSize: \"18pt\", paddingLeft: 134}}>Region</b> </center> \n              </Header.Subheader>\n\n\n                  {urbrur && <Grid>\n                <Grid.Row columns={2} style={{paddingTop: 8, width: 1000, paddingLeft: 60}}>\n                  <Grid.Column style={{paddingTop:10, paddingLeft:0}}>\n\n                    \n\n                  <div >\n                    \n                  <svg width=\"550\" height=\"130\">\n\n                      <text x={80} y={35} style={{fontSize: '0.8em'}}> South</text>                    \n                      <text x={80} y={55} style={{fontSize: '0.8em'}}> West</text>                    \n                      <text x={80} y={75} style={{fontSize: '0.8em'}}> Northeast</text>                    \n                      <text x={80} y={95} style={{fontSize: '0.8em'}}> Midwest</text>                    \n\n\n                      {_.map(colorPalette.slice(2), (color, i) => {\n                          return <rect key={i} x={50} y={20+20*i} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                      })} \n\n\n                      <rect x={130} y={20} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                      <text x={152} y={30} style={{fontSize: '0.8em'}}> None </text>\n                      <text x={152} y={40} style={{fontSize: '0.8em'}}> Reported </text>\n\n\n                      </svg>\n\n                      <br/><br/><br/>\n                      {/* <ComposableMap \n                        projection=\"geoAlbersUsa\" \n                        data-tip=\"\"\n                        width={520} \n                        height={300}\n                        strokeWidth= {0.1}\n                        stroke= 'black'\n                        projectionConfig={{scale: 580}}\n                        style = {{paddingLeft: 50}}\n                        >\n                        <Geographies geography={stBoundUrl} stateBoundary = {true}>\n                          {({ geographies }) => \n                            <svg>\n                              {geographies.map(geo => (\n                                <Geography\n                                  key={geo.rsmKey}\n                                  geography={geo}\n                                  fill={\n                                  ((data[geo.id] && (data[geo.id][region]) === 1)?\n                                      colorPalette[2]: \n                                      (data[geo.id] && (data[geo.id][region]) === 2)?\n                                      colorPalette[3]:\n                                      (data[geo.id] && (data[geo.id][region]) === 3)?\n                                      colorPalette[4]:\n                                      (data[geo.id] && (data[geo.id][region]) === 4)?\n                                      colorPalette[5]:'#FFFFFF')}\n                                  \n                                />\n                              ))}\n                            </svg>\n                          }\n                        </Geographies>\n                        \n\n                      </ComposableMap> */}\n                      <Image width='520' height='386' style = {{paddingLeft: 0}} src='/NationalReportImages/region.png' />\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n                      <Accordion style = {{paddingTop: 30, paddingLeft: 60}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                        This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) \n                                        per 100K residents by geographic region (y-axis).\n                                        <br/>\n                                        <br/>\n                                        For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n\n                    </Grid.Row>\n                  </Grid>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                      <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Cases by Region\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['caserate'][0]['region'][0]['label'], 'value': (nationalBarChart['caserate'][0]['region'][0]['measure']/nationalBarChart['caserate'][0]['region'][0]['measure'])*nationalBarChart['caserate'][0]['region'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['region'][1]['label'], 'value': (nationalBarChart['caserate'][0]['region'][1]['measure']/nationalBarChart['caserate'][0]['region'][0]['measure'])*nationalBarChart['caserate'][0]['region'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['region'][2]['label'], 'value': (nationalBarChart['caserate'][0]['region'][2]['measure']/nationalBarChart['caserate'][0]['region'][0]['measure'])*nationalBarChart['caserate'][0]['region'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['region'][3]['label'], 'value': (nationalBarChart['caserate'][0]['region'][3]['measure']/nationalBarChart['caserate'][0]['region'][0]['measure'])*nationalBarChart['caserate'][0]['region'][0]['measure'] || 0},\n                                  // {key: nationalBarChart['caserate'][0]['region'][4]['label'], 'value': (nationalBarChart['caserate'][0]['region'][4]['measure']/nationalBarChart['caserate'][0]['region'][0]['measure'])*nationalBarChart['caserate'][0]['region'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: casesColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                          \n                          <Header.Content style={{fontWeight: 300, paddingLeft: 140, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                            <b>COVID-19 Cases per 100K</b>\n                          </Header.Content>\n                        </Header.Content>\n                          \n                          <br/>\n                          <br/>\n\n                      <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                          <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Deaths by Region\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['covidmortality'][0]['region'][0]['label'], 'value': (nationalBarChart['covidmortality'][0]['region'][0]['measure']/nationalBarChart['covidmortality'][0]['region'][0]['measure'])*nationalBarChart['covidmortality'][0]['region'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['region'][1]['label'], 'value': (nationalBarChart['covidmortality'][0]['region'][1]['measure']/nationalBarChart['covidmortality'][0]['region'][0]['measure'])*nationalBarChart['covidmortality'][0]['region'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['region'][2]['label'], 'value': (nationalBarChart['covidmortality'][0]['region'][2]['measure']/nationalBarChart['covidmortality'][0]['region'][0]['measure'])*nationalBarChart['covidmortality'][0]['region'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['region'][3]['label'], 'value': (nationalBarChart['covidmortality'][0]['region'][3]['measure']/nationalBarChart['covidmortality'][0]['region'][0]['measure'])*nationalBarChart['covidmortality'][0]['region'][0]['measure'] || 0},\n                                  // {key: nationalBarChart['covidmortality'][0]['region'][4]['label'], 'value': (nationalBarChart['covidmortality'][0]['region'][4]['measure']/nationalBarChart['covidmortality'][0]['region'][0]['measure'])*nationalBarChart['covidmortality'][0]['region'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                            <Header.Content style={{ paddingLeft: 140,fontWeight: 300, paddingTop: 20, paddingBottom:50, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>COVID-19 Deaths per 100K</b>\n                            </Header.Content>\n                        </Header.Content>\n                    </Grid.Column>\n                </Grid.Row>\n              </Grid>}\n              <div id=\"black\" style = {{height: 45}}> </div>\n\n              <center style={{paddingLeft: 90}}><Divider style={{width: 900}}/> </center> \n\n              <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, paddingLeft: 0, paddingRight: 0, paddingBottom: 60}}>\n                    <center> <b style= {{fontSize: \"18pt\", paddingLeft: 134}}>African American population</b> </center> \n              </Header.Subheader>\n              \n\n\n              {region && <Grid>\n                <Grid.Row columns={2} style={{paddingTop: 8, width: 1000, paddingLeft: 60}}>\n                  <Grid.Column style={{paddingTop:10, paddingLeft:0}}>\n\n                    \n\n                  <div >\n                    \n                    <svg width=\"260\" height=\"80\">\n                      \n                      {_.map(legendSplitBlack, (splitpoint, i) => {\n                        if(legendSplitBlack[i] < 1){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitBlack[i].toFixed(1)}</text>                    \n                        }else if(legendSplitBlack[i] > 999999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitBlack[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                        }else if(legendSplitBlack[i] > 999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitBlack[i]/1000).toFixed(0) + \"K\"}</text>                    \n                        }\n                        return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitBlack[i].toFixed(0)}</text>                    \n                      })} \n                      <text x={50} y={35} style={{fontSize: '0.7em'}}>{legendMinBlack}</text>\n                      <text x={170} y={35} style={{fontSize: '0.7em'}}>{legendMaxBlack}</text>\n\n\n                      {_.map(colorPalette, (color, i) => {\n                        return <rect key={i} x={50+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                      })} \n\n\n                      <text x={50} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                      <text x={50+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                      <rect x={195} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                      <text x={217} y={50} style={{fontSize: '0.7em'}}> None </text>\n                      <text x={217} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n                    \n\n                    </svg>\n\n                    <br/><br/><br/>\n                      {/* <ComposableMap \n                        projection=\"geoAlbersUsa\" \n                        data-tip=\"\"\n                        width={520} \n                        height={300}\n                        strokeWidth= {0.1}\n                        stroke= 'black'\n                        projectionConfig={{scale: 580}}\n                        style = {{paddingLeft: 50}}\n                        >\n                        <Geographies geography={geoUrl}>\n                          {({ geographies }) => \n                            <svg>\n                              {geographies.map(geo => (\n                                <Geography\n                                  key={geo.rsmKey}\n                                  geography={geo}\n                                  fill={\n                                  ((colorBlack && data[geo.id] && (data[geo.id][black]) > 0)?\n                                      colorBlack[data[geo.id][black]]: \n                                      (colorBlack && data[geo.id] && data[geo.id][black] === 0)?\n                                        '#FFFFFF':'#FFFFFF')}\n                                  \n                                />\n                              ))}\n                            </svg>\n                          }\n                        </Geographies>\n                        \n\n                      </ComposableMap> */}\n                      <Image width='520' height='386' style = {{paddingLeft: 0}} src='/NationalReportImages/black.png' />\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n                      <Accordion style = {{paddingTop: 100, paddingLeft: 60}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                        This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) \n                                        per 100K residents by percentage African American population ranking. The y-axis \n                                        displays percentage African American population rankings based on quintiles (groups of 20%). \n                                        The x-axis displays the average number of COVID-19 cases (top chart) or deaths (bottom chart) \n                                        per 100K that occurred in each group of counties ranked by percentage percentage African \n                                        American. The ranking classified counties into five groups designed to be of equal size, \n                                        so that the \"very low % African American\" group contains the counties with values in the 0%-20% \n                                        range for this county characteristic, and the \"very high % African American\" group contains \n                                        counties with values in the 80%-100% range for this county characteristic. Low % \n                                        African American indicates counties in the 20%-40% range, moderate % African American \n                                        indicates counties in the 40%-60% range, and high % African American indicates counties \n                                        in the 60%-80% range.\n                                        <br/>\n                                        <br/>\n                                        For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n\n                    </Grid.Row>\n                  </Grid> \n                  </Grid.Column>\n                  <Grid.Column>\n                  <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                      <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Cases by Percentage of <br/> African American Population\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['caserate'][0]['black'][0]['label'], 'value': (nationalBarChart['caserate'][0]['black'][0]['measure']/nationalBarChart['caserate'][0]['black'][0]['measure'])*nationalBarChart['caserate'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['black'][1]['label'], 'value': (nationalBarChart['caserate'][0]['black'][1]['measure']/nationalBarChart['caserate'][0]['black'][0]['measure'])*nationalBarChart['caserate'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['black'][2]['label'], 'value': (nationalBarChart['caserate'][0]['black'][2]['measure']/nationalBarChart['caserate'][0]['black'][0]['measure'])*nationalBarChart['caserate'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['black'][3]['label'], 'value': (nationalBarChart['caserate'][0]['black'][3]['measure']/nationalBarChart['caserate'][0]['black'][0]['measure'])*nationalBarChart['caserate'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['black'][4]['label'], 'value': (nationalBarChart['caserate'][0]['black'][4]['measure']/nationalBarChart['caserate'][0]['black'][0]['measure'])*nationalBarChart['caserate'][0]['black'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: casesColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                          \n                          <Header.Content style={{fontWeight: 300, paddingLeft: 140, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                            <b>COVID-19 Cases per 100K</b>\n                          </Header.Content>\n                        </Header.Content>\n                          \n                          <br/>\n                          <br/>\n\n                      <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                          <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Deaths by Percentage of <br/> African American Population\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['covidmortality'][0]['black'][0]['label'], 'value': (nationalBarChart['covidmortality'][0]['black'][0]['measure']/nationalBarChart['covidmortality'][0]['black'][0]['measure'])*nationalBarChart['covidmortality'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['black'][1]['label'], 'value': (nationalBarChart['covidmortality'][0]['black'][1]['measure']/nationalBarChart['covidmortality'][0]['black'][0]['measure'])*nationalBarChart['covidmortality'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['black'][2]['label'], 'value': (nationalBarChart['covidmortality'][0]['black'][2]['measure']/nationalBarChart['covidmortality'][0]['black'][0]['measure'])*nationalBarChart['covidmortality'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['black'][3]['label'], 'value': (nationalBarChart['covidmortality'][0]['black'][3]['measure']/nationalBarChart['covidmortality'][0]['black'][0]['measure'])*nationalBarChart['covidmortality'][0]['black'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['black'][4]['label'], 'value': (nationalBarChart['covidmortality'][0]['black'][4]['measure']/nationalBarChart['covidmortality'][0]['black'][0]['measure'])*nationalBarChart['covidmortality'][0]['black'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                            <Header.Content style={{ paddingLeft: 140,fontWeight: 300, paddingTop: 20, paddingBottom:50, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>COVID-19 Deaths per 100K</b>\n                            </Header.Content>\n                        </Header.Content>\n                    </Grid.Column>\n                </Grid.Row>\n              </Grid>}\n              <div id=\"resseg\" style = {{height: 45}}> </div>\n\n              <center style={{paddingLeft: 90}}><Divider style={{width: 900}}/> </center> \n              \n              <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, paddingLeft: 0, paddingRight: 0, paddingBottom: 60}}>\n                    <center> <b style= {{fontSize: \"18pt\", paddingLeft: 134}}>Residential Segregation Index</b> </center> \n              </Header.Subheader>\n\n              {black && <Grid>\n                <Grid.Row columns={2} style={{paddingTop: 8, width: 1000, paddingLeft: 60}}>\n                  <Grid.Column style={{paddingTop:10, paddingLeft:0}}>\n\n                    \n\n                  <div >\n                    \n                    <svg width=\"260\" height=\"80\">\n                      \n                      {_.map(legendSplitResSeg, (splitpoint, i) => {\n                        if(legendSplitResSeg[i] < 1){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitResSeg[i].toFixed(1)}</text>                    \n                        }else if(legendSplitResSeg[i] > 999999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitResSeg[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                        }else if(legendSplitResSeg[i] > 999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitResSeg[i]/1000).toFixed(0) + \"K\"}</text>                    \n                        }\n                        return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitResSeg[i].toFixed(0)}</text>                    \n                      })} \n                      <text x={50} y={35} style={{fontSize: '0.7em'}}>{legendMinResSeg}</text>\n                      <text x={170} y={35} style={{fontSize: '0.7em'}}>{legendMaxResSeg}</text>\n\n\n                      {_.map(colorPalette, (color, i) => {\n                        return <rect key={i} x={50+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                      })} \n\n\n                      <text x={50} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                      <text x={50+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                      <rect x={195} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                      <text x={217} y={50} style={{fontSize: '0.7em'}}> None </text>\n                      <text x={217} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n                    \n\n                    </svg>\n\n                    <br/><br/><br/>\n                      {/* <ComposableMap \n                        projection=\"geoAlbersUsa\" \n                        data-tip=\"\"\n                        width={520} \n                        height={300}\n                        strokeWidth= {0.1}\n                        stroke= 'black'\n                        projectionConfig={{scale: 580}}\n                        style = {{paddingLeft: 50}}\n                        >\n                        <Geographies geography={geoUrl}>\n                          {({ geographies }) => \n                            <svg>\n                              {geographies.map(geo => (\n                                <Geography\n                                  key={geo.rsmKey}\n                                  geography={geo}\n                                  fill={\n                                  ((colorResSeg && data[geo.id] && (data[geo.id][resSeg]) > 0)?\n                                      colorResSeg[data[geo.id][resSeg]]: \n                                      (colorResSeg && data[geo.id] && data[geo.id][resSeg] === 0)?\n                                        '#FFFFFF':'#FFFFFF')}\n                                  \n                                />\n                              ))}\n                            </svg>\n                          }\n                        </Geographies>\n                        \n\n                      </ComposableMap> */}\n                      <Image width='520' height='386' style = {{paddingLeft: 0}} src='/NationalReportImages/resSeg.png' />\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n                      <Accordion style = {{paddingTop: 100, paddingLeft: 60}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                        This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per \n                                        100K residents by residential segregation index. The y-axis displays residential \n                                        segregation rankings based on quintiles (groups of 20%). The x-axis displays the \n                                        average number of COVID-19 cases (top chart) or deaths (bottom chart) per 100K \n                                        that occurred in each group of counties ranked by residential segregation. The ranking \n                                        classified counties into five groups designed to be of equal size, so that the \"very \n                                        low segregation\" group contains the counties with values in the 0%-20% range for this county \n                                        characteristic, and the \"very high segregation\" group contains counties with values in the \n                                        80%-100% range for this county characteristic. Low segregation indicates counties in \n                                        the 20%-40% range, moderate segregation indicates counties in the 40%-60% range, and \n                                        high segregation indicates counties in the 60%-80% range.\n                                        <br/>\n                                        <br/>\n                                        For a complete table of definitions, click <a style ={{color: \"#397AB9\"}} href=\"https://covid19.emory.edu/data-sources\" target=\"_blank\" rel=\"noopener noreferrer\"> here. </a>\n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n\n                    </Grid.Row>\n                  </Grid>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                      <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Cases by <br/> Residential Segregation Index\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['caserate'][0]['resSeg'][0]['label'], 'value': (nationalBarChart['caserate'][0]['resSeg'][0]['measure']/nationalBarChart['caserate'][0]['resSeg'][0]['measure'])*nationalBarChart['caserate'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['resSeg'][1]['label'], 'value': (nationalBarChart['caserate'][0]['resSeg'][1]['measure']/nationalBarChart['caserate'][0]['resSeg'][0]['measure'])*nationalBarChart['caserate'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['resSeg'][2]['label'], 'value': (nationalBarChart['caserate'][0]['resSeg'][2]['measure']/nationalBarChart['caserate'][0]['resSeg'][0]['measure'])*nationalBarChart['caserate'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['resSeg'][3]['label'], 'value': (nationalBarChart['caserate'][0]['resSeg'][3]['measure']/nationalBarChart['caserate'][0]['resSeg'][0]['measure'])*nationalBarChart['caserate'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['resSeg'][4]['label'], 'value': (nationalBarChart['caserate'][0]['resSeg'][4]['measure']/nationalBarChart['caserate'][0]['resSeg'][0]['measure'])*nationalBarChart['caserate'][0]['resSeg'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: casesColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                          \n                          <Header.Content style={{fontWeight: 300, paddingLeft: 140, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                            <b>COVID-19 Cases per 100K</b>\n                          </Header.Content>\n                        </Header.Content>\n                          \n                          <br/>\n                          <br/>\n\n                      <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                          <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                          COVID-19 Deaths by  <br/> Residential Segregation Index\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['covidmortality'][0]['resSeg'][0]['label'], 'value': (nationalBarChart['covidmortality'][0]['resSeg'][0]['measure']/nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'])*nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['resSeg'][1]['label'], 'value': (nationalBarChart['covidmortality'][0]['resSeg'][1]['measure']/nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'])*nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['resSeg'][2]['label'], 'value': (nationalBarChart['covidmortality'][0]['resSeg'][2]['measure']/nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'])*nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['resSeg'][3]['label'], 'value': (nationalBarChart['covidmortality'][0]['resSeg'][3]['measure']/nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'])*nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['resSeg'][4]['label'], 'value': (nationalBarChart['covidmortality'][0]['resSeg'][4]['measure']/nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'])*nationalBarChart['covidmortality'][0]['resSeg'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                            <Header.Content style={{ paddingLeft: 140,fontWeight: 300, paddingTop: 20, paddingBottom:50, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>COVID-19 Deaths per 100K</b>\n                            </Header.Content>\n                        </Header.Content>\n                    </Grid.Column>\n                </Grid.Row> \n              </Grid>}\n\n              <div id=\"comorb\" style = {{height: 45}}> </div>\n\n              <center style={{paddingLeft: 90}}><Divider style={{width: 900}}/> </center> \n\n              <Header.Subheader style={{color:'#000000', fontSize:\"14pt\", paddingTop:19, paddingLeft: 0, paddingRight: 0, paddingBottom: 60}}>\n                    <center> <b style= {{fontSize: \"18pt\", paddingLeft: 134}}>Any Underlying Comorbidity</b> </center> \n              </Header.Subheader>\n\n              {Comorb && <Grid>\n                <Grid.Row columns={2} style={{paddingTop: 8, width: 1000, paddingLeft: 60}}>\n                  <Grid.Column style={{paddingTop:10, paddingLeft:0}}>\n\n                    \n\n                  <div >\n                    \n                    <svg width=\"260\" height=\"80\">\n                      \n                      {_.map(legendSplitResSeg, (splitpoint, i) => {\n                        if(legendSplitComorb[i] < 1){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitComorb[i].toFixed(1)}</text>                    \n                        }else if(legendSplitComorb[i] > 999999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitComorb[i]/1000000).toFixed(0) + \"M\"}</text>                    \n                        }else if(legendSplitComorb[i] > 999){\n                          return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {(legendSplitComorb[i]/1000).toFixed(0) + \"K\"}</text>                    \n                        }\n                        return <text key = {i} x={70 + 20 * (i)} y={35} style={{fontSize: '0.7em'}}> {legendSplitComorb[i].toFixed(0)}</text>                    \n                      })} \n                      <text x={50} y={35} style={{fontSize: '0.7em'}}>{legendMinComorb}</text>\n                      <text x={170} y={35} style={{fontSize: '0.7em'}}>{legendMaxComorb}</text>\n\n\n                      {_.map(colorPalette, (color, i) => {\n                        return <rect key={i} x={50+20*i} y={40} width=\"20\" height=\"20\" style={{fill: color, strokeWidth:1, stroke: color}}/>                    \n                      })} \n\n\n                      <text x={50} y={74} style={{fontSize: '0.8em'}}>Low</text>\n                      <text x={50+20 * (colorPalette.length - 1)} y={74} style={{fontSize: '0.8em'}}>High</text>\n\n\n                      <rect x={195} y={40} width=\"20\" height=\"20\" style={{fill: \"#FFFFFF\", strokeWidth:0.5, stroke: \"#000000\"}}/>                    \n                      <text x={217} y={50} style={{fontSize: '0.7em'}}> None </text>\n                      <text x={217} y={59} style={{fontSize: '0.7em'}}> Reported </text>\n                    \n\n                    </svg>\n\n                    <br/><br/><br/>\n                      {/* <ComposableMap \n                        projection=\"geoAlbersUsa\" \n                        data-tip=\"\"\n                        width={520} \n                        height={300}\n                        strokeWidth= {0.1}\n                        stroke= 'black'\n                        projectionConfig={{scale: 580}}\n                        style = {{paddingLeft: 50}}\n                        >\n                        <Geographies geography={geoUrl}>\n                          {({ geographies }) => \n                            <svg>\n                              {geographies.map(geo => (\n                                <Geography\n                                  key={geo.rsmKey}\n                                  geography={geo}\n                                  fill={\n                                  ((colorComorb && data[geo.id] && (data[geo.id][Comorb]) > 0)?\n                                      colorComorb[data[geo.id][Comorb]]: \n                                      (colorComorb && data[geo.id] && data[geo.id][Comorb] === 0)?\n                                        '#FFFFFF':'#FFFFFF')}\n                                  \n                                />\n                              ))}\n                            </svg>\n                          }\n                        </Geographies>\n                        \n\n                      </ComposableMap> */}\n                      <Image width='520' height='386' style = {{paddingLeft: 0}} src='/NationalReportImages/anycondition.png' />\n                  </div>\n                  <Grid>\n                    <Grid.Row>\n                      <Accordion style = {{paddingTop: 100, paddingLeft: 60}} defaultActiveIndex={1} panels={[\n                        {\n                            key: 'acquire-dog',\n                            title: {\n                                content: <u style={{ fontFamily: 'lato', fontSize: \"19px\", color: \"#397AB9\"}}>About the data</u>,\n                                icon: 'dropdown',\n                            },\n                            content: {\n                                content: (\n                                    <Header as='h2' style={{fontWeight: 400, paddingLeft: 5, paddingTop: 0, paddingBottom: 20}}>\n                                      <Header.Content  style={{fontSize: \"14pt\"}}>\n                                        <Header.Subheader style={{color: '#000000', width: 900, fontSize: \"14pt\", textAlign:'justify', lineHeight: \"16pt\"}}>\n                                        This chart shows the number of COVID-19 cases (top chart) and deaths (bottom chart) per \n                                        100K residents by percent of population with any underlying comorbidity. The y-axis \n                                        displays percent of population with any underlying comorbidity rankings based on quintiles (groups of 20%). The x-axis displays the \n                                        average number of COVID-19 cases (top chart) or deaths (bottom chart) per 100K \n                                        that occurred in each group of counties ranked by percent of population with any underlying comorbidity. The ranking \n                                        classified counties into five groups designed to be of equal size, so that the population with \"very \n                                        low percentage of any underlying comorbidity\" group contains the counties with values in the 0%-20% range for this county \n                                        characteristic, and the population with \"very high percentage of any underlying comorbidity\" group contains counties with values in the \n                                        80%-100% range for this county characteristic. Low percentage of population with any underlying comorbidity indicates counties in \n                                        the 20%-40% range, moderate percentage of population with any underlying comorbidity indicates counties in the 40%-60% range, and \n                                        high percentage of population with any underlying comorbidity indicates counties in the 60%-80% range.\n                                        </Header.Subheader>\n                                      </Header.Content>\n                                    </Header>\n                                ),\n                              },\n                          }\n                      ]\n\n                      } />\n\n                    </Grid.Row>\n                  </Grid>\n                  </Grid.Column>\n                  <Grid.Column>\n                  <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                      <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                      COVID-19 Cases by <br/> Any Underlying Comorbidity\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['caserate'][0]['anycondition'][0]['label'], 'value': (nationalBarChart['caserate'][0]['anycondition'][0]['measure']/nationalBarChart['caserate'][0]['anycondition'][0]['measure'])*nationalBarChart['caserate'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['anycondition'][1]['label'], 'value': (nationalBarChart['caserate'][0]['anycondition'][1]['measure']/nationalBarChart['caserate'][0]['anycondition'][0]['measure'])*nationalBarChart['caserate'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['anycondition'][2]['label'], 'value': (nationalBarChart['caserate'][0]['anycondition'][2]['measure']/nationalBarChart['caserate'][0]['anycondition'][0]['measure'])*nationalBarChart['caserate'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['anycondition'][3]['label'], 'value': (nationalBarChart['caserate'][0]['anycondition'][3]['measure']/nationalBarChart['caserate'][0]['anycondition'][0]['measure'])*nationalBarChart['caserate'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['caserate'][0]['anycondition'][4]['label'], 'value': (nationalBarChart['caserate'][0]['anycondition'][4]['measure']/nationalBarChart['caserate'][0]['anycondition'][0]['measure'])*nationalBarChart['caserate'][0]['anycondition'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: casesColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                          \n                          <Header.Content style={{fontWeight: 300, paddingLeft: 140, paddingTop: 20, paddingBottom:0, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                            <b>COVID-19 Cases per 100K</b>\n                          </Header.Content>\n                        </Header.Content>\n                          \n                          <br/>\n                          <br/>\n\n                      <Header as='h2' style={{textAlign:'center',fontSize:\"18pt\", lineHeight: \"16pt\"}}>\n                          <Header.Content style = {{paddingLeft: 0, width: 500}}>\n                          COVID-19 Deaths by <br/> Any Underlying Comorbidity\n                      </Header.Content>\n                    </Header>\n                        <VictoryChart\n                          theme={VictoryTheme.material}\n                          width={530}\n                          height={180}\n                          domainPadding={20}\n                          minDomain={{y: props.ylog?1:0}}\n                          padding={{left: 120, right: 90, top: 5, bottom: 1}}\n                          style = {{fontSize: \"14pt\"}}\n                          containerComponent={<VictoryContainer responsive={false}/>}\n                        >\n                          <VictoryAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, labels: {fill: '#000000', fontSize: \"20px\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', fontFamily: 'lato'}}} />\n                          <VictoryAxis dependentAxis style={{ticks:{stroke: \"#000000\"}, axis: {stroke: \"#000000\"}, grid: {stroke: \"transparent\"}, tickLabels: {fontSize: \"20px\", fill: '#000000', padding: 10,  fontFamily: 'lato'}}}/>\n                          <VictoryBar\n                            horizontal\n                            barRatio={0.80}\n                            labels={({ datum }) => numberWithCommas(parseFloat(datum.value).toFixed(0))}\n                            data={[\n                                  {key: nationalBarChart['covidmortality'][0]['anycondition'][0]['label'], 'value': (nationalBarChart['covidmortality'][0]['anycondition'][0]['measure']/nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'])*nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['anycondition'][1]['label'], 'value': (nationalBarChart['covidmortality'][0]['anycondition'][1]['measure']/nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'])*nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['anycondition'][2]['label'], 'value': (nationalBarChart['covidmortality'][0]['anycondition'][2]['measure']/nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'])*nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['anycondition'][3]['label'], 'value': (nationalBarChart['covidmortality'][0]['anycondition'][3]['measure']/nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'])*nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'] || 0},\n                                  {key: nationalBarChart['covidmortality'][0]['anycondition'][4]['label'], 'value': (nationalBarChart['covidmortality'][0]['anycondition'][4]['measure']/nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'])*nationalBarChart['covidmortality'][0]['anycondition'][0]['measure'] || 0}\n\n\n\n                            ]}\n                            labelComponent={<VictoryLabel dx={5} style={{ fontFamily: 'lato', fontSize: \"20px\", fill: \"#000000\" }}/>}\n                            style={{\n                              data: {\n                                fill: mortalityColor[1]\n                              }\n                            }}\n                            x=\"key\"\n                            y=\"value\"\n                          />\n                        </VictoryChart>\n\n                        <Header.Content style = {{width: 550}}>\n                            <Header.Content style={{ paddingLeft: 140,fontWeight: 300, paddingTop: 20, paddingBottom:50, fontSize: \"14pt\", lineHeight: \"18pt\"}}>\n                              <b>COVID-19 Deaths per 100K</b>\n                            </Header.Content>\n                        </Header.Content>\n                    </Grid.Column>\n                </Grid.Row> \n              </Grid>}\n\n\n              \n\n\n              \n\n\n              \n            </div>}\n            \n            \n            </Grid.Column> \n        </Grid>\n        \n        </Container> \n        <Container style={{marginTop: '8em', minWidth: '1260px'}}>\n\n          <Notes />\n        </Container> \n        \n    </div>\n  </HEProvider>\n\n\n\n    );\n  } else{\n    return <Loader active inline='centered' />\n  }\n\n\n}\n\n\n","// React\nimport React, {useEffect}from \"react\";\n// Components & Hooks\nimport USMap from \"./USMap\";\nimport StateMap from \"./StateMap\";\nimport CountyReport from \"./CountyReport\";\nimport MapYourState from \"./MapState\";\nimport AboutUs from \"./AboutUs\";\nimport MediaHub from \"./MediaHub\";\nimport DataSources from \"./DataSources\";\nimport Privacy from \"./Privacy\";\nimport Blog from \"./Blog\";\nimport Podcast from \"./Podcast\";\nimport 'semantic-ui-css/semantic.min.css'\nimport {HEProvider} from './HEProvider';\nimport USVaccineTracker from \"./USVaccineTracker\";\nimport USVaccineTrackerPilot from \"./USVaccineTrackerPilot\";\nimport VaccineFAQ from \"./VaccineFAQ\";\nimport VaccineMap from \"./VaccineMap\";\nimport GDPHStateMap from \"./GDPH/StateMap\";\nimport GDPHCountyReport from \"./GDPH/CountyReport\";\nimport GDPHAboutUs from \"./GDPH/AboutUs\";\nimport GDPHDataSources from \"./GDPH/DataSources\";\nimport { StitchAuthProvider, useStitchAuth} from \"./StitchAuth\";\n\n// import USMapPilot from \"./USMapPilot\";\nimport NationalReportPilot from \"./NationalReportPilot\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n\nApp.propTypes = {};\nexport default function App() {\n\n  return (\n    <StitchAuthProvider>\n      <AppUI />\n    </StitchAuthProvider>\n  );\n}\n\nAppUI.propTypes = {};\nfunction AppUI() {\n  const {\n    isLoggedIn,\n    actions: { handleLogout, handleAnonymousLogin },\n  } = useStitchAuth();\n\n  useEffect(()=>{\n    handleAnonymousLogin();\n  });\n\n  return (\n    <HEProvider>\n      <Router>\n        <Switch>\n          {/* GDPH urls */}\n          <Route path='/Georgia/data-sources'>\n            <GDPHDataSources />\n          </Route>\n          <Route path='/Georgia/about-team'>\n            <GDPHAboutUs />\n          </Route>\n          <Route path='/Georgia/:countyFips'>\n            <GDPHCountyReport />\n          </Route>\n          <Route path='/Georgia' component={GDPHStateMap} />\n\n\n          {/* Main urls */}\n          <Route path='/pilot-09-01-2020/national-report'>\n            <NationalReportPilot />\n          </Route>\n          \n          <Route path='/Vaccine-Tracker-Pilot03022021'>\n            <USVaccineTrackerPilot />\n          </Route>\n          <Route path='/Vaccine-Tracker'>\n            <USVaccineTracker />\n          </Route>\n          <Route path='/vaccine-map'>\n            <VaccineMap />\n          </Route>\n          <Route path='/map-state'>\n            <MapYourState />\n          </Route>\n          <Route path='/media-hub/blog/:blogTitle'>\n            <Blog />\n          </Route>\n          <Route path='/media-hub/podcast/:podcastTitle'>\n            <Podcast />\n          </Route>\n          <Route path='/media-hub'>\n            <MediaHub />\n          </Route>\n          <Route path='/about-team'>\n            <AboutUs />\n          </Route>\n          <Route path='/privacy'>\n            <Privacy />\n          </Route>\n          <Route path='/data-sources'>\n            <DataSources />\n          </Route>       \n          \n          <Route path='/:stateFips/:countyFips'>\n            <CountyReport />\n          </Route>  \n          <Route path='/:stateFips'>\n            <StateMap />\n          </Route>\n          <Route path='/'>\n            <USMap />\n          </Route>\n          <Route path=\"*\">\n            <Redirect to='/'/>\n          </Route>\n        </Switch>\n      </Router>\n      </HEProvider>\n  );\n}\n\n","import 'react-app-polyfill/ie9';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}